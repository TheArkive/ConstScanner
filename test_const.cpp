#include <iostream>
#include <windows.h>

int main() {
    std::cout << "ABE_BOTTOM=" << ABE_BOTTOM << std::endl;
    std::cout << "ABE_LEFT=" << ABE_LEFT << std::endl;
    std::cout << "ABE_RIGHT=" << ABE_RIGHT << std::endl;
    std::cout << "ABE_TOP=" << ABE_TOP << std::endl;
    std::cout << "ABM_ACTIVATE=" << ABM_ACTIVATE << std::endl;
    std::cout << "ABM_GETAUTOHIDEBAR=" << ABM_GETAUTOHIDEBAR << std::endl;
    std::cout << "ABM_GETSTATE=" << ABM_GETSTATE << std::endl;
    std::cout << "ABM_GETTASKBARPOS=" << ABM_GETTASKBARPOS << std::endl;
    std::cout << "ABM_NEW=" << ABM_NEW << std::endl;
    std::cout << "ABM_QUERYPOS=" << ABM_QUERYPOS << std::endl;
    std::cout << "ABM_REMOVE=" << ABM_REMOVE << std::endl;
    std::cout << "ABM_SETAUTOHIDEBAR=" << ABM_SETAUTOHIDEBAR << std::endl;
    std::cout << "ABM_SETPOS=" << ABM_SETPOS << std::endl;
    std::cout << "ABM_WINDOWPOSCHANGED=" << ABM_WINDOWPOSCHANGED << std::endl;
    std::cout << "ABN_FULLSCREENAPP=" << ABN_FULLSCREENAPP << std::endl;
    std::cout << "ABN_POSCHANGED=" << ABN_POSCHANGED << std::endl;
    std::cout << "ABN_STATECHANGE=" << ABN_STATECHANGE << std::endl;
    std::cout << "ABN_WINDOWARRANGE=" << ABN_WINDOWARRANGE << std::endl;
    std::cout << "ABORTDOC=" << ABORTDOC << std::endl;
    std::cout << "ABOVE_NORMAL_PRIORITY_CLASS=" << ABOVE_NORMAL_PRIORITY_CLASS << std::endl;
    std::cout << "ABSOLUTE=" << ABSOLUTE << std::endl;
    std::cout << "ABS_ALWAYSONTOP=" << ABS_ALWAYSONTOP << std::endl;
    std::cout << "ABS_AUTOHIDE=" << ABS_AUTOHIDE << std::endl;
    std::cout << "ACCESS_ALLOWED_ACE_TYPE=" << ACCESS_ALLOWED_ACE_TYPE << std::endl;
    std::cout << "ACCESS_ALLOWED_CALLBACK_ACE_TYPE=" << ACCESS_ALLOWED_CALLBACK_ACE_TYPE << std::endl;
    std::cout << "ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE=" << ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_ALLOWED_COMPOUND_ACE_TYPE=" << ACCESS_ALLOWED_COMPOUND_ACE_TYPE << std::endl;
    std::cout << "ACCESS_ALLOWED_OBJECT_ACE_TYPE=" << ACCESS_ALLOWED_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_DENIED_ACE_TYPE=" << ACCESS_DENIED_ACE_TYPE << std::endl;
    std::cout << "ACCESS_DENIED_CALLBACK_ACE_TYPE=" << ACCESS_DENIED_CALLBACK_ACE_TYPE << std::endl;
    std::cout << "ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE=" << ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_DENIED_OBJECT_ACE_TYPE=" << ACCESS_DENIED_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_FILTERKEYS=" << ACCESS_FILTERKEYS << std::endl;
    std::cout << "ACCESS_MAX_LEVEL=" << ACCESS_MAX_LEVEL << std::endl;
    std::cout << "ACCESS_MAX_MS_ACE_TYPE=" << ACCESS_MAX_MS_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MAX_MS_OBJECT_ACE_TYPE=" << ACCESS_MAX_MS_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MAX_MS_V2_ACE_TYPE=" << ACCESS_MAX_MS_V2_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MAX_MS_V3_ACE_TYPE=" << ACCESS_MAX_MS_V3_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MAX_MS_V4_ACE_TYPE=" << ACCESS_MAX_MS_V4_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MAX_MS_V5_ACE_TYPE=" << ACCESS_MAX_MS_V5_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MIN_MS_ACE_TYPE=" << ACCESS_MIN_MS_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MIN_MS_OBJECT_ACE_TYPE=" << ACCESS_MIN_MS_OBJECT_ACE_TYPE << std::endl;
    std::cout << "ACCESS_MOUSEKEYS=" << ACCESS_MOUSEKEYS << std::endl;
    std::cout << "ACCESS_OBJECT_GUID=" << ACCESS_OBJECT_GUID << std::endl;
    std::cout << "ACCESS_PROPERTY_GUID=" << ACCESS_PROPERTY_GUID << std::endl;
    std::cout << "ACCESS_PROPERTY_SET_GUID=" << ACCESS_PROPERTY_SET_GUID << std::endl;
    std::cout << "ACCESS_REASON_STAGING_MASK=" << ACCESS_REASON_STAGING_MASK << std::endl;
    std::cout << "ACCESS_STICKYKEYS=" << ACCESS_STICKYKEYS << std::endl;
    std::cout << "ACE_INHERITED_OBJECT_TYPE_PRESENT=" << ACE_INHERITED_OBJECT_TYPE_PRESENT << std::endl;
    std::cout << "ACE_OBJECT_TYPE_PRESENT=" << ACE_OBJECT_TYPE_PRESENT << std::endl;
    std::cout << "ACL_REVISION=" << ACL_REVISION << std::endl;
    std::cout << "ACL_REVISION1=" << ACL_REVISION1 << std::endl;
    std::cout << "ACL_REVISION2=" << ACL_REVISION2 << std::endl;
    std::cout << "ACL_REVISION3=" << ACL_REVISION3 << std::endl;
    std::cout << "ACL_REVISION4=" << ACL_REVISION4 << std::endl;
    std::cout << "ACL_REVISION_DS=" << ACL_REVISION_DS << std::endl;
    std::cout << "ACS_AUTOPLAY=" << ACS_AUTOPLAY << std::endl;
    std::cout << "ACS_CENTER=" << ACS_CENTER << std::endl;
    std::cout << "ACS_TIMER=" << ACS_TIMER << std::endl;
    std::cout << "ACS_TRANSPARENT=" << ACS_TRANSPARENT << std::endl;
    std::cout << "ACTCTX_FLAG_APPLICATION_NAME_VALID=" << ACTCTX_FLAG_APPLICATION_NAME_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID=" << ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_HMODULE_VALID=" << ACTCTX_FLAG_HMODULE_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_LANGID_VALID=" << ACTCTX_FLAG_LANGID_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID=" << ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_RESOURCE_NAME_VALID=" << ACTCTX_FLAG_RESOURCE_NAME_VALID << std::endl;
    std::cout << "ACTCTX_FLAG_SET_PROCESS_DEFAULT=" << ACTCTX_FLAG_SET_PROCESS_DEFAULT << std::endl;
    std::cout << "ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF=" << ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF << std::endl;
    std::cout << "ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED=" << ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED << std::endl;
    std::cout << "ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF=" << ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF << std::endl;
    std::cout << "ACTIVATION_CONTEXT_PATH_TYPE_NONE=" << ACTIVATION_CONTEXT_PATH_TYPE_NONE << std::endl;
    std::cout << "ACTIVATION_CONTEXT_PATH_TYPE_URL=" << ACTIVATION_CONTEXT_PATH_TYPE_URL << std::endl;
    std::cout << "ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE=" << ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS=" << ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION=" << ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES=" << ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO=" << ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE=" << ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE << std::endl;
    std::cout << "ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION=" << ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION << std::endl;
    std::cout << "ACTIVEOBJECT_STRONG=" << ACTIVEOBJECT_STRONG << std::endl;
    std::cout << "ACTIVEOBJECT_WEAK=" << ACTIVEOBJECT_WEAK << std::endl;
    std::cout << "AC_LINE_BACKUP_POWER=" << AC_LINE_BACKUP_POWER << std::endl;
    std::cout << "AC_LINE_OFFLINE=" << AC_LINE_OFFLINE << std::endl;
    std::cout << "AC_LINE_ONLINE=" << AC_LINE_ONLINE << std::endl;
    std::cout << "AC_SRC_ALPHA=" << AC_SRC_ALPHA << std::endl;
    std::cout << "AC_SRC_OVER=" << AC_SRC_OVER << std::endl;
    std::cout << "AD_CLOCKWISE=" << AD_CLOCKWISE << std::endl;
    std::cout << "AD_COUNTERCLOCKWISE=" << AD_COUNTERCLOCKWISE << std::endl;
    std::cout << "AF_APPLETALK=" << AF_APPLETALK << std::endl;
    std::cout << "AF_BAN=" << AF_BAN << std::endl;
    std::cout << "AF_CCITT=" << AF_CCITT << std::endl;
    std::cout << "AF_CHAOS=" << AF_CHAOS << std::endl;
    std::cout << "AF_DATAKIT=" << AF_DATAKIT << std::endl;
    std::cout << "AF_DLI=" << AF_DLI << std::endl;
    std::cout << "AF_ECMA=" << AF_ECMA << std::endl;
    std::cout << "AF_FIREFOX=" << AF_FIREFOX << std::endl;
    std::cout << "AF_HYLINK=" << AF_HYLINK << std::endl;
    std::cout << "AF_IMPLINK=" << AF_IMPLINK << std::endl;
    std::cout << "AF_INET=" << AF_INET << std::endl;
    std::cout << "AF_IPX=" << AF_IPX << std::endl;
    std::cout << "AF_ISO=" << AF_ISO << std::endl;
    std::cout << "AF_LAT=" << AF_LAT << std::endl;
    std::cout << "AF_MAX=" << AF_MAX << std::endl;
    std::cout << "AF_NETBIOS=" << AF_NETBIOS << std::endl;
    std::cout << "AF_NS=" << AF_NS << std::endl;
    std::cout << "AF_OSI=" << AF_OSI << std::endl;
    std::cout << "AF_PUP=" << AF_PUP << std::endl;
    std::cout << "AF_SNA=" << AF_SNA << std::endl;
    std::cout << "AF_UNIX=" << AF_UNIX << std::endl;
    std::cout << "AF_UNKNOWN1=" << AF_UNKNOWN1 << std::endl;
    std::cout << "AF_UNSPEC=" << AF_UNSPEC << std::endl;
    std::cout << "AF_VOICEVIEW=" << AF_VOICEVIEW << std::endl;
    std::cout << "ALERT_SYSTEM_CRITICAL=" << ALERT_SYSTEM_CRITICAL << std::endl;
    std::cout << "ALERT_SYSTEM_ERROR=" << ALERT_SYSTEM_ERROR << std::endl;
    std::cout << "ALERT_SYSTEM_INFORMATIONAL=" << ALERT_SYSTEM_INFORMATIONAL << std::endl;
    std::cout << "ALERT_SYSTEM_QUERY=" << ALERT_SYSTEM_QUERY << std::endl;
    std::cout << "ALERT_SYSTEM_WARNING=" << ALERT_SYSTEM_WARNING << std::endl;
    std::cout << "ALG_CLASS_ALL=" << ALG_CLASS_ALL << std::endl;
    std::cout << "ALG_CLASS_ANY=" << ALG_CLASS_ANY << std::endl;
    std::cout << "ALG_CLASS_DATA_ENCRYPT=" << ALG_CLASS_DATA_ENCRYPT << std::endl;
    std::cout << "ALG_CLASS_HASH=" << ALG_CLASS_HASH << std::endl;
    std::cout << "ALG_CLASS_KEY_EXCHANGE=" << ALG_CLASS_KEY_EXCHANGE << std::endl;
    std::cout << "ALG_CLASS_MSG_ENCRYPT=" << ALG_CLASS_MSG_ENCRYPT << std::endl;
    std::cout << "ALG_CLASS_SIGNATURE=" << ALG_CLASS_SIGNATURE << std::endl;
    std::cout << "ALG_SID_3DES=" << ALG_SID_3DES << std::endl;
    std::cout << "ALG_SID_3DES_112=" << ALG_SID_3DES_112 << std::endl;
    std::cout << "ALG_SID_AES=" << ALG_SID_AES << std::endl;
    std::cout << "ALG_SID_AES_128=" << ALG_SID_AES_128 << std::endl;
    std::cout << "ALG_SID_AES_192=" << ALG_SID_AES_192 << std::endl;
    std::cout << "ALG_SID_AES_256=" << ALG_SID_AES_256 << std::endl;
    std::cout << "ALG_SID_AGREED_KEY_ANY=" << ALG_SID_AGREED_KEY_ANY << std::endl;
    std::cout << "ALG_SID_ANY=" << ALG_SID_ANY << std::endl;
    std::cout << "ALG_SID_CAST=" << ALG_SID_CAST << std::endl;
    std::cout << "ALG_SID_CYLINK_MEK=" << ALG_SID_CYLINK_MEK << std::endl;
    std::cout << "ALG_SID_DES=" << ALG_SID_DES << std::endl;
    std::cout << "ALG_SID_DESX=" << ALG_SID_DESX << std::endl;
    std::cout << "ALG_SID_DH_EPHEM=" << ALG_SID_DH_EPHEM << std::endl;
    std::cout << "ALG_SID_DH_SANDF=" << ALG_SID_DH_SANDF << std::endl;
    std::cout << "ALG_SID_DSS_ANY=" << ALG_SID_DSS_ANY << std::endl;
    std::cout << "ALG_SID_DSS_DMS=" << ALG_SID_DSS_DMS << std::endl;
    std::cout << "ALG_SID_DSS_PKCS=" << ALG_SID_DSS_PKCS << std::endl;
    std::cout << "ALG_SID_ECDH=" << ALG_SID_ECDH << std::endl;
    std::cout << "ALG_SID_ECDH_EPHEM=" << ALG_SID_ECDH_EPHEM << std::endl;
    std::cout << "ALG_SID_ECDSA=" << ALG_SID_ECDSA << std::endl;
    std::cout << "ALG_SID_ECMQV=" << ALG_SID_ECMQV << std::endl;
    std::cout << "ALG_SID_EXAMPLE=" << ALG_SID_EXAMPLE << std::endl;
    std::cout << "ALG_SID_HASH_REPLACE_OWF=" << ALG_SID_HASH_REPLACE_OWF << std::endl;
    std::cout << "ALG_SID_HMAC=" << ALG_SID_HMAC << std::endl;
    std::cout << "ALG_SID_IDEA=" << ALG_SID_IDEA << std::endl;
    std::cout << "ALG_SID_KEA=" << ALG_SID_KEA << std::endl;
    std::cout << "ALG_SID_MAC=" << ALG_SID_MAC << std::endl;
    std::cout << "ALG_SID_MD2=" << ALG_SID_MD2 << std::endl;
    std::cout << "ALG_SID_MD4=" << ALG_SID_MD4 << std::endl;
    std::cout << "ALG_SID_MD5=" << ALG_SID_MD5 << std::endl;
    std::cout << "ALG_SID_PCT1_MASTER=" << ALG_SID_PCT1_MASTER << std::endl;
    std::cout << "ALG_SID_RC2=" << ALG_SID_RC2 << std::endl;
    std::cout << "ALG_SID_RC4=" << ALG_SID_RC4 << std::endl;
    std::cout << "ALG_SID_RC5=" << ALG_SID_RC5 << std::endl;
    std::cout << "ALG_SID_RIPEMD=" << ALG_SID_RIPEMD << std::endl;
    std::cout << "ALG_SID_RIPEMD160=" << ALG_SID_RIPEMD160 << std::endl;
    std::cout << "ALG_SID_RSA_ANY=" << ALG_SID_RSA_ANY << std::endl;
    std::cout << "ALG_SID_RSA_ENTRUST=" << ALG_SID_RSA_ENTRUST << std::endl;
    std::cout << "ALG_SID_RSA_MSATWORK=" << ALG_SID_RSA_MSATWORK << std::endl;
    std::cout << "ALG_SID_RSA_PGP=" << ALG_SID_RSA_PGP << std::endl;
    std::cout << "ALG_SID_RSA_PKCS=" << ALG_SID_RSA_PKCS << std::endl;
    std::cout << "ALG_SID_SAFERSK128=" << ALG_SID_SAFERSK128 << std::endl;
    std::cout << "ALG_SID_SAFERSK64=" << ALG_SID_SAFERSK64 << std::endl;
    std::cout << "ALG_SID_SCHANNEL_ENC_KEY=" << ALG_SID_SCHANNEL_ENC_KEY << std::endl;
    std::cout << "ALG_SID_SCHANNEL_MAC_KEY=" << ALG_SID_SCHANNEL_MAC_KEY << std::endl;
    std::cout << "ALG_SID_SCHANNEL_MASTER_HASH=" << ALG_SID_SCHANNEL_MASTER_HASH << std::endl;
    std::cout << "ALG_SID_SEAL=" << ALG_SID_SEAL << std::endl;
    std::cout << "ALG_SID_SHA=" << ALG_SID_SHA << std::endl;
    std::cout << "ALG_SID_SHA1=" << ALG_SID_SHA1 << std::endl;
    std::cout << "ALG_SID_SHA_256=" << ALG_SID_SHA_256 << std::endl;
    std::cout << "ALG_SID_SHA_384=" << ALG_SID_SHA_384 << std::endl;
    std::cout << "ALG_SID_SHA_512=" << ALG_SID_SHA_512 << std::endl;
    std::cout << "ALG_SID_SKIPJACK=" << ALG_SID_SKIPJACK << std::endl;
    std::cout << "ALG_SID_SSL2_MASTER=" << ALG_SID_SSL2_MASTER << std::endl;
    std::cout << "ALG_SID_SSL3SHAMD5=" << ALG_SID_SSL3SHAMD5 << std::endl;
    std::cout << "ALG_SID_SSL3_MASTER=" << ALG_SID_SSL3_MASTER << std::endl;
    std::cout << "ALG_SID_TEK=" << ALG_SID_TEK << std::endl;
    std::cout << "ALG_SID_THIRDPARTY_ANY=" << ALG_SID_THIRDPARTY_ANY << std::endl;
    std::cout << "ALG_SID_TLS1PRF=" << ALG_SID_TLS1PRF << std::endl;
    std::cout << "ALG_SID_TLS1_MASTER=" << ALG_SID_TLS1_MASTER << std::endl;
    std::cout << "ALG_TYPE_ANY=" << ALG_TYPE_ANY << std::endl;
    std::cout << "ALG_TYPE_BLOCK=" << ALG_TYPE_BLOCK << std::endl;
    std::cout << "ALG_TYPE_DH=" << ALG_TYPE_DH << std::endl;
    std::cout << "ALG_TYPE_DSS=" << ALG_TYPE_DSS << std::endl;
    std::cout << "ALG_TYPE_ECDH=" << ALG_TYPE_ECDH << std::endl;
    std::cout << "ALG_TYPE_RSA=" << ALG_TYPE_RSA << std::endl;
    std::cout << "ALG_TYPE_SECURECHANNEL=" << ALG_TYPE_SECURECHANNEL << std::endl;
    std::cout << "ALG_TYPE_STREAM=" << ALG_TYPE_STREAM << std::endl;
    std::cout << "ALG_TYPE_THIRDPARTY=" << ALG_TYPE_THIRDPARTY << std::endl;
    std::cout << "ALTERNATE=" << ALTERNATE << std::endl;
    std::cout << "ALTNUMPAD_BIT=" << ALTNUMPAD_BIT << std::endl;
    std::cout << "ANSI_CHARSET=" << ANSI_CHARSET << std::endl;
    std::cout << "ANSI_FIXED_FONT=" << ANSI_FIXED_FONT << std::endl;
    std::cout << "ANSI_VAR_FONT=" << ANSI_VAR_FONT << std::endl;
    std::cout << "ANTIALIASED_QUALITY=" << ANTIALIASED_QUALITY << std::endl;
    std::cout << "ANYSIZE_ARRAY=" << ANYSIZE_ARRAY << std::endl;
    std::cout << "APD_COPY_ALL_FILES=" << APD_COPY_ALL_FILES << std::endl;
    std::cout << "APD_COPY_FROM_DIRECTORY=" << APD_COPY_FROM_DIRECTORY << std::endl;
    std::cout << "APD_COPY_NEW_FILES=" << APD_COPY_NEW_FILES << std::endl;
    std::cout << "APD_STRICT_DOWNGRADE=" << APD_STRICT_DOWNGRADE << std::endl;
    std::cout << "APD_STRICT_UPGRADE=" << APD_STRICT_UPGRADE << std::endl;
    std::cout << "APIENTRY=" << APIENTRY << std::endl;
    std::cout << "API_SET_LOAD_SCHEMA_ORDINAL=" << API_SET_LOAD_SCHEMA_ORDINAL << std::endl;
    std::cout << "API_SET_LOOKUP_ORDINAL=" << API_SET_LOOKUP_ORDINAL << std::endl;
    std::cout << "API_SET_RELEASE_SCHEMA_ORDINAL=" << API_SET_RELEASE_SCHEMA_ORDINAL << std::endl;
    std::cout << "APPCOMMAND_BASS_BOOST=" << APPCOMMAND_BASS_BOOST << std::endl;
    std::cout << "APPCOMMAND_BASS_DOWN=" << APPCOMMAND_BASS_DOWN << std::endl;
    std::cout << "APPCOMMAND_BASS_UP=" << APPCOMMAND_BASS_UP << std::endl;
    std::cout << "APPCOMMAND_BROWSER_BACKWARD=" << APPCOMMAND_BROWSER_BACKWARD << std::endl;
    std::cout << "APPCOMMAND_BROWSER_FAVORITES=" << APPCOMMAND_BROWSER_FAVORITES << std::endl;
    std::cout << "APPCOMMAND_BROWSER_FORWARD=" << APPCOMMAND_BROWSER_FORWARD << std::endl;
    std::cout << "APPCOMMAND_BROWSER_HOME=" << APPCOMMAND_BROWSER_HOME << std::endl;
    std::cout << "APPCOMMAND_BROWSER_REFRESH=" << APPCOMMAND_BROWSER_REFRESH << std::endl;
    std::cout << "APPCOMMAND_BROWSER_SEARCH=" << APPCOMMAND_BROWSER_SEARCH << std::endl;
    std::cout << "APPCOMMAND_BROWSER_STOP=" << APPCOMMAND_BROWSER_STOP << std::endl;
    std::cout << "APPCOMMAND_CLOSE=" << APPCOMMAND_CLOSE << std::endl;
    std::cout << "APPCOMMAND_COPY=" << APPCOMMAND_COPY << std::endl;
    std::cout << "APPCOMMAND_CORRECTION_LIST=" << APPCOMMAND_CORRECTION_LIST << std::endl;
    std::cout << "APPCOMMAND_CUT=" << APPCOMMAND_CUT << std::endl;
    std::cout << "APPCOMMAND_DELETE=" << APPCOMMAND_DELETE << std::endl;
    std::cout << "APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE=" << APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE << std::endl;
    std::cout << "APPCOMMAND_DWM_FLIP3D=" << APPCOMMAND_DWM_FLIP3D << std::endl;
    std::cout << "APPCOMMAND_FIND=" << APPCOMMAND_FIND << std::endl;
    std::cout << "APPCOMMAND_FORWARD_MAIL=" << APPCOMMAND_FORWARD_MAIL << std::endl;
    std::cout << "APPCOMMAND_HELP=" << APPCOMMAND_HELP << std::endl;
    std::cout << "APPCOMMAND_LAUNCH_APP1=" << APPCOMMAND_LAUNCH_APP1 << std::endl;
    std::cout << "APPCOMMAND_LAUNCH_APP2=" << APPCOMMAND_LAUNCH_APP2 << std::endl;
    std::cout << "APPCOMMAND_LAUNCH_MAIL=" << APPCOMMAND_LAUNCH_MAIL << std::endl;
    std::cout << "APPCOMMAND_LAUNCH_MEDIA_SELECT=" << APPCOMMAND_LAUNCH_MEDIA_SELECT << std::endl;
    std::cout << "APPCOMMAND_MEDIA_CHANNEL_DOWN=" << APPCOMMAND_MEDIA_CHANNEL_DOWN << std::endl;
    std::cout << "APPCOMMAND_MEDIA_CHANNEL_UP=" << APPCOMMAND_MEDIA_CHANNEL_UP << std::endl;
    std::cout << "APPCOMMAND_MEDIA_FAST_FORWARD=" << APPCOMMAND_MEDIA_FAST_FORWARD << std::endl;
    std::cout << "APPCOMMAND_MEDIA_NEXTTRACK=" << APPCOMMAND_MEDIA_NEXTTRACK << std::endl;
    std::cout << "APPCOMMAND_MEDIA_PAUSE=" << APPCOMMAND_MEDIA_PAUSE << std::endl;
    std::cout << "APPCOMMAND_MEDIA_PLAY=" << APPCOMMAND_MEDIA_PLAY << std::endl;
    std::cout << "APPCOMMAND_MEDIA_PLAY_PAUSE=" << APPCOMMAND_MEDIA_PLAY_PAUSE << std::endl;
    std::cout << "APPCOMMAND_MEDIA_PREVIOUSTRACK=" << APPCOMMAND_MEDIA_PREVIOUSTRACK << std::endl;
    std::cout << "APPCOMMAND_MEDIA_RECORD=" << APPCOMMAND_MEDIA_RECORD << std::endl;
    std::cout << "APPCOMMAND_MEDIA_REWIND=" << APPCOMMAND_MEDIA_REWIND << std::endl;
    std::cout << "APPCOMMAND_MEDIA_STOP=" << APPCOMMAND_MEDIA_STOP << std::endl;
    std::cout << "APPCOMMAND_MICROPHONE_VOLUME_DOWN=" << APPCOMMAND_MICROPHONE_VOLUME_DOWN << std::endl;
    std::cout << "APPCOMMAND_MICROPHONE_VOLUME_MUTE=" << APPCOMMAND_MICROPHONE_VOLUME_MUTE << std::endl;
    std::cout << "APPCOMMAND_MICROPHONE_VOLUME_UP=" << APPCOMMAND_MICROPHONE_VOLUME_UP << std::endl;
    std::cout << "APPCOMMAND_MIC_ON_OFF_TOGGLE=" << APPCOMMAND_MIC_ON_OFF_TOGGLE << std::endl;
    std::cout << "APPCOMMAND_NEW=" << APPCOMMAND_NEW << std::endl;
    std::cout << "APPCOMMAND_OPEN=" << APPCOMMAND_OPEN << std::endl;
    std::cout << "APPCOMMAND_PASTE=" << APPCOMMAND_PASTE << std::endl;
    std::cout << "APPCOMMAND_PRINT=" << APPCOMMAND_PRINT << std::endl;
    std::cout << "APPCOMMAND_REDO=" << APPCOMMAND_REDO << std::endl;
    std::cout << "APPCOMMAND_REPLY_TO_MAIL=" << APPCOMMAND_REPLY_TO_MAIL << std::endl;
    std::cout << "APPCOMMAND_SAVE=" << APPCOMMAND_SAVE << std::endl;
    std::cout << "APPCOMMAND_SEND_MAIL=" << APPCOMMAND_SEND_MAIL << std::endl;
    std::cout << "APPCOMMAND_SPELL_CHECK=" << APPCOMMAND_SPELL_CHECK << std::endl;
    std::cout << "APPCOMMAND_TREBLE_DOWN=" << APPCOMMAND_TREBLE_DOWN << std::endl;
    std::cout << "APPCOMMAND_TREBLE_UP=" << APPCOMMAND_TREBLE_UP << std::endl;
    std::cout << "APPCOMMAND_UNDO=" << APPCOMMAND_UNDO << std::endl;
    std::cout << "APPCOMMAND_VOLUME_DOWN=" << APPCOMMAND_VOLUME_DOWN << std::endl;
    std::cout << "APPCOMMAND_VOLUME_MUTE=" << APPCOMMAND_VOLUME_MUTE << std::endl;
    std::cout << "APPCOMMAND_VOLUME_UP=" << APPCOMMAND_VOLUME_UP << std::endl;
    std::cout << "APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP=" << APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP << std::endl;
    std::cout << "APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY=" << APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY << std::endl;
    std::cout << "APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY=" << APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY << std::endl;
    std::cout << "APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION=" << APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION << std::endl;
    std::cout << "APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN=" << APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN << std::endl;
    std::cout << "APPIDREGFLAGS_RESERVED1=" << APPIDREGFLAGS_RESERVED1 << std::endl;
    std::cout << "APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND=" << APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND << std::endl;
    std::cout << "APPLICATION_ERROR_MASK=" << APPLICATION_ERROR_MASK << std::endl;
    std::cout << "APPLICATION_VERIFIER_ACCESS_VIOLATION=" << APPLICATION_VERIFIER_ACCESS_VIOLATION << std::endl;
    std::cout << "APPLICATION_VERIFIER_BAD_HEAP_HANDLE=" << APPLICATION_VERIFIER_BAD_HEAP_HANDLE << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_API_IN_DLLMAIN=" << APPLICATION_VERIFIER_COM_API_IN_DLLMAIN << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_CF_SUCCESS_WITH_NULL=" << APPLICATION_VERIFIER_COM_CF_SUCCESS_WITH_NULL << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_ERROR=" << APPLICATION_VERIFIER_COM_ERROR << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_GCO_SUCCESS_WITH_NULL=" << APPLICATION_VERIFIER_COM_GCO_SUCCESS_WITH_NULL << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_HOLDING_LOCKS_ON_CALL=" << APPLICATION_VERIFIER_COM_HOLDING_LOCKS_ON_CALL << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_NULL_DACL=" << APPLICATION_VERIFIER_COM_NULL_DACL << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_OBJECT_IN_FREED_MEMORY=" << APPLICATION_VERIFIER_COM_OBJECT_IN_FREED_MEMORY << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_OBJECT_IN_UNLOADED_DLL=" << APPLICATION_VERIFIER_COM_OBJECT_IN_UNLOADED_DLL << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_SMUGGLED_PROXY=" << APPLICATION_VERIFIER_COM_SMUGGLED_PROXY << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_SMUGGLED_WRAPPER=" << APPLICATION_VERIFIER_COM_SMUGGLED_WRAPPER << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_UNBALANCED_COINIT=" << APPLICATION_VERIFIER_COM_UNBALANCED_COINIT << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_UNBALANCED_OLEINIT=" << APPLICATION_VERIFIER_COM_UNBALANCED_OLEINIT << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_UNBALANCED_SWC=" << APPLICATION_VERIFIER_COM_UNBALANCED_SWC << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_UNHANDLED_EXCEPTION=" << APPLICATION_VERIFIER_COM_UNHANDLED_EXCEPTION << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_UNSAFE_IMPERSONATION=" << APPLICATION_VERIFIER_COM_UNSAFE_IMPERSONATION << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_VTBL_IN_FREED_MEMORY=" << APPLICATION_VERIFIER_COM_VTBL_IN_FREED_MEMORY << std::endl;
    std::cout << "APPLICATION_VERIFIER_COM_VTBL_IN_UNLOADED_DLL=" << APPLICATION_VERIFIER_COM_VTBL_IN_UNLOADED_DLL << std::endl;
    std::cout << "APPLICATION_VERIFIER_CONTINUABLE_BREAK=" << APPLICATION_VERIFIER_CONTINUABLE_BREAK << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_FREED_HEAP_BLOCK=" << APPLICATION_VERIFIER_CORRUPTED_FREED_HEAP_BLOCK << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_END_STAMP=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_END_STAMP << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_HEADER=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_HEADER << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_PROBING=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_PROBING << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_HEADER=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_HEADER << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_PREFIX=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_PREFIX << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_START_STAMP=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_START_STAMP << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_SUFFIX=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_SUFFIX << std::endl;
    std::cout << "APPLICATION_VERIFIER_CORRUPTED_HEAP_LIST=" << APPLICATION_VERIFIER_CORRUPTED_HEAP_LIST << std::endl;
    std::cout << "APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP=" << APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP << std::endl;
    std::cout << "APPLICATION_VERIFIER_DOUBLE_FREE=" << APPLICATION_VERIFIER_DOUBLE_FREE << std::endl;
    std::cout << "APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK=" << APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK << std::endl;
    std::cout << "APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST=" << APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST << std::endl;
    std::cout << "APPLICATION_VERIFIER_FIRST_CHANCE_ACCESS_VIOLATION=" << APPLICATION_VERIFIER_FIRST_CHANCE_ACCESS_VIOLATION << std::endl;
    std::cout << "APPLICATION_VERIFIER_INCORRECT_WAIT_CALL=" << APPLICATION_VERIFIER_INCORRECT_WAIT_CALL << std::endl;
    std::cout << "APPLICATION_VERIFIER_INTERNAL_ERROR=" << APPLICATION_VERIFIER_INTERNAL_ERROR << std::endl;
    std::cout << "APPLICATION_VERIFIER_INTERNAL_WARNING=" << APPLICATION_VERIFIER_INTERNAL_WARNING << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_ALLOCMEM=" << APPLICATION_VERIFIER_INVALID_ALLOCMEM << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_EXIT_PROCESS_CALL=" << APPLICATION_VERIFIER_INVALID_EXIT_PROCESS_CALL << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_FREEMEM=" << APPLICATION_VERIFIER_INVALID_FREEMEM << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_HANDLE=" << APPLICATION_VERIFIER_INVALID_HANDLE << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_MAPVIEW=" << APPLICATION_VERIFIER_INVALID_MAPVIEW << std::endl;
    std::cout << "APPLICATION_VERIFIER_INVALID_TLS_VALUE=" << APPLICATION_VERIFIER_INVALID_TLS_VALUE << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_ALREADY_INITIALIZED=" << APPLICATION_VERIFIER_LOCK_ALREADY_INITIALIZED << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_CORRUPTED=" << APPLICATION_VERIFIER_LOCK_CORRUPTED << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE=" << APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT=" << APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_INVALID_OWNER=" << APPLICATION_VERIFIER_LOCK_INVALID_OWNER << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT=" << APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP=" << APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY=" << APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_IN_FREED_VMEM=" << APPLICATION_VERIFIER_LOCK_IN_FREED_VMEM << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL=" << APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_IN_UNMAPPED_MEM=" << APPLICATION_VERIFIER_LOCK_IN_UNMAPPED_MEM << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED=" << APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED << std::endl;
    std::cout << "APPLICATION_VERIFIER_LOCK_OVER_RELEASED=" << APPLICATION_VERIFIER_LOCK_OVER_RELEASED << std::endl;
    std::cout << "APPLICATION_VERIFIER_NO_BREAK=" << APPLICATION_VERIFIER_NO_BREAK << std::endl;
    std::cout << "APPLICATION_VERIFIER_NULL_HANDLE=" << APPLICATION_VERIFIER_NULL_HANDLE << std::endl;
    std::cout << "APPLICATION_VERIFIER_PROBE_FREE_MEM=" << APPLICATION_VERIFIER_PROBE_FREE_MEM << std::endl;
    std::cout << "APPLICATION_VERIFIER_PROBE_GUARD_PAGE=" << APPLICATION_VERIFIER_PROBE_GUARD_PAGE << std::endl;
    std::cout << "APPLICATION_VERIFIER_PROBE_INVALID_ADDRESS=" << APPLICATION_VERIFIER_PROBE_INVALID_ADDRESS << std::endl;
    std::cout << "APPLICATION_VERIFIER_PROBE_INVALID_START_OR_SIZE=" << APPLICATION_VERIFIER_PROBE_INVALID_START_OR_SIZE << std::endl;
    std::cout << "APPLICATION_VERIFIER_PROBE_NULL=" << APPLICATION_VERIFIER_PROBE_NULL << std::endl;
    std::cout << "APPLICATION_VERIFIER_RPC_ERROR=" << APPLICATION_VERIFIER_RPC_ERROR << std::endl;
    std::cout << "APPLICATION_VERIFIER_SIZE_HEAP_UNEXPECTED_EXCEPTION=" << APPLICATION_VERIFIER_SIZE_HEAP_UNEXPECTED_EXCEPTION << std::endl;
    std::cout << "APPLICATION_VERIFIER_STACK_OVERFLOW=" << APPLICATION_VERIFIER_STACK_OVERFLOW << std::endl;
    std::cout << "APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE=" << APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE << std::endl;
    std::cout << "APPLICATION_VERIFIER_TERMINATE_THREAD_CALL=" << APPLICATION_VERIFIER_TERMINATE_THREAD_CALL << std::endl;
    std::cout << "APPLICATION_VERIFIER_THREAD_NOT_LOCK_OWNER=" << APPLICATION_VERIFIER_THREAD_NOT_LOCK_OWNER << std::endl;
    std::cout << "APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION=" << APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION << std::endl;
    std::cout << "APPLICATION_VERIFIER_UNKNOWN_ERROR=" << APPLICATION_VERIFIER_UNKNOWN_ERROR << std::endl;
    std::cout << "APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS=" << APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS << std::endl;
    std::cout << "APPLICATION_VERIFIER_WAIT_IN_DLLMAIN=" << APPLICATION_VERIFIER_WAIT_IN_DLLMAIN << std::endl;
    std::cout << "APP_LOCAL_DEVICE_ID_SIZE=" << APP_LOCAL_DEVICE_ID_SIZE << std::endl;
    std::cout << "ARABIC_CHARSET=" << ARABIC_CHARSET << std::endl;
    std::cout << "ARG_MAX=" << ARG_MAX << std::endl;
    std::cout << "ARM64_MAX_BREAKPOINTS=" << ARM64_MAX_BREAKPOINTS << std::endl;
    std::cout << "ARM64_MAX_WATCHPOINTS=" << ARM64_MAX_WATCHPOINTS << std::endl;
    std::cout << "ARM_MAX_BREAKPOINTS=" << ARM_MAX_BREAKPOINTS << std::endl;
    std::cout << "ARM_MAX_WATCHPOINTS=" << ARM_MAX_WATCHPOINTS << std::endl;
    std::cout << "ASPECTX=" << ASPECTX << std::endl;
    std::cout << "ASPECTXY=" << ASPECTXY << std::endl;
    std::cout << "ASPECTY=" << ASPECTY << std::endl;
    std::cout << "ASPECT_FILTERING=" << ASPECT_FILTERING << std::endl;
    std::cout << "ASSERT_ALTERNATE=" << ASSERT_ALTERNATE << std::endl;
    std::cout << "ASSERT_PRIMARY=" << ASSERT_PRIMARY << std::endl;
    std::cout << "ASYNCH=" << ASYNCH << std::endl;
    std::cout << "ATAPI_ID_CMD=" << ATAPI_ID_CMD << std::endl;
    std::cout << "ATF_ONOFFFEEDBACK=" << ATF_ONOFFFEEDBACK << std::endl;
    std::cout << "ATF_TIMEOUTON=" << ATF_TIMEOUTON << std::endl;
    std::cout << "ATOM_FLAG_GLOBAL=" << ATOM_FLAG_GLOBAL << std::endl;
    std::cout << "ATTR_CONVERTED=" << ATTR_CONVERTED << std::endl;
    std::cout << "ATTR_FIXEDCONVERTED=" << ATTR_FIXEDCONVERTED << std::endl;
    std::cout << "ATTR_INPUT=" << ATTR_INPUT << std::endl;
    std::cout << "ATTR_INPUT_ERROR=" << ATTR_INPUT_ERROR << std::endl;
    std::cout << "ATTR_TARGET_CONVERTED=" << ATTR_TARGET_CONVERTED << std::endl;
    std::cout << "ATTR_TARGET_NOTCONVERTED=" << ATTR_TARGET_NOTCONVERTED << std::endl;
    std::cout << "AT_KEYEXCHANGE=" << AT_KEYEXCHANGE << std::endl;
    std::cout << "AT_SIGNATURE=" << AT_SIGNATURE << std::endl;
    std::cout << "AUDIT_ALLOW_NO_PRIVILEGE=" << AUDIT_ALLOW_NO_PRIVILEGE << std::endl;
    std::cout << "AUTHTYPE_CLIENT=" << AUTHTYPE_CLIENT << std::endl;
    std::cout << "AUTHTYPE_SERVER=" << AUTHTYPE_SERVER << std::endl;
    std::cout << "AUXCAPS_AUXIN=" << AUXCAPS_AUXIN << std::endl;
    std::cout << "AUXCAPS_CDAUDIO=" << AUXCAPS_CDAUDIO << std::endl;
    std::cout << "AUXCAPS_LRVOLUME=" << AUXCAPS_LRVOLUME << std::endl;
    std::cout << "AUXCAPS_VOLUME=" << AUXCAPS_VOLUME << std::endl;
    std::cout << "AW_ACTIVATE=" << AW_ACTIVATE << std::endl;
    std::cout << "AW_BLEND=" << AW_BLEND << std::endl;
    std::cout << "AW_CENTER=" << AW_CENTER << std::endl;
    std::cout << "AW_HIDE=" << AW_HIDE << std::endl;
    std::cout << "AW_HOR_NEGATIVE=" << AW_HOR_NEGATIVE << std::endl;
    std::cout << "AW_HOR_POSITIVE=" << AW_HOR_POSITIVE << std::endl;
    std::cout << "AW_SLIDE=" << AW_SLIDE << std::endl;
    std::cout << "AW_VER_NEGATIVE=" << AW_VER_NEGATIVE << std::endl;
    std::cout << "AW_VER_POSITIVE=" << AW_VER_POSITIVE << std::endl;
    std::cout << "BACKGROUND_BLUE=" << BACKGROUND_BLUE << std::endl;
    std::cout << "BACKGROUND_GREEN=" << BACKGROUND_GREEN << std::endl;
    std::cout << "BACKGROUND_INTENSITY=" << BACKGROUND_INTENSITY << std::endl;
    std::cout << "BACKGROUND_RED=" << BACKGROUND_RED << std::endl;
    std::cout << "BACKUP_ALTERNATE_DATA=" << BACKUP_ALTERNATE_DATA << std::endl;
    std::cout << "BACKUP_DATA=" << BACKUP_DATA << std::endl;
    std::cout << "BACKUP_EA_DATA=" << BACKUP_EA_DATA << std::endl;
    std::cout << "BACKUP_INVALID=" << BACKUP_INVALID << std::endl;
    std::cout << "BACKUP_LINK=" << BACKUP_LINK << std::endl;
    std::cout << "BACKUP_OBJECT_ID=" << BACKUP_OBJECT_ID << std::endl;
    std::cout << "BACKUP_PROPERTY_DATA=" << BACKUP_PROPERTY_DATA << std::endl;
    std::cout << "BACKUP_REPARSE_DATA=" << BACKUP_REPARSE_DATA << std::endl;
    std::cout << "BACKUP_SECURITY_DATA=" << BACKUP_SECURITY_DATA << std::endl;
    std::cout << "BACKUP_SPARSE_BLOCK=" << BACKUP_SPARSE_BLOCK << std::endl;
    std::cout << "BALTIC_CHARSET=" << BALTIC_CHARSET << std::endl;
    std::cout << "BANDINFO=" << BANDINFO << std::endl;
    std::cout << "BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE=" << BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE << std::endl;
    std::cout << "BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE=" << BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE << std::endl;
    std::cout << "BASE_SEARCH_PATH_INVALID_FLAGS=" << BASE_SEARCH_PATH_INVALID_FLAGS << std::endl;
    std::cout << "BASE_SEARCH_PATH_PERMANENT=" << BASE_SEARCH_PATH_PERMANENT << std::endl;
    std::cout << "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG=" << BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG << std::endl;
    std::cout << "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG=" << BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG << std::endl;
    std::cout << "BATTERY_DISCHARGE_FLAGS_ENABLE=" << BATTERY_DISCHARGE_FLAGS_ENABLE << std::endl;
    std::cout << "BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK=" << BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK << std::endl;
    std::cout << "BATTERY_FLAG_CHARGING=" << BATTERY_FLAG_CHARGING << std::endl;
    std::cout << "BATTERY_FLAG_CRITICAL=" << BATTERY_FLAG_CRITICAL << std::endl;
    std::cout << "BATTERY_FLAG_HIGH=" << BATTERY_FLAG_HIGH << std::endl;
    std::cout << "BATTERY_FLAG_LOW=" << BATTERY_FLAG_LOW << std::endl;
    std::cout << "BATTERY_FLAG_NO_BATTERY=" << BATTERY_FLAG_NO_BATTERY << std::endl;
    std::cout << "BCRYPTBUFFER_VERSION=" << BCRYPTBUFFER_VERSION << std::endl;
    std::cout << "BCRYPT_ALG_HANDLE_HMAC_FLAG=" << BCRYPT_ALG_HANDLE_HMAC_FLAG << std::endl;
    std::cout << "BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE=" << BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE << std::endl;
    std::cout << "BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION=" << BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION << std::endl;
    std::cout << "BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION=" << BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION << std::endl;
    std::cout << "BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG=" << BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG << std::endl;
    std::cout << "BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG=" << BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG << std::endl;
    std::cout << "BCRYPT_BLOCK_PADDING=" << BCRYPT_BLOCK_PADDING << std::endl;
    std::cout << "BCRYPT_BUFFERS_LOCKED_FLAG=" << BCRYPT_BUFFERS_LOCKED_FLAG << std::endl;
    std::cout << "BCRYPT_CAPI_AES_FLAG=" << BCRYPT_CAPI_AES_FLAG << std::endl;
    std::cout << "BCRYPT_CIPHER_INTERFACE=" << BCRYPT_CIPHER_INTERFACE << std::endl;
    std::cout << "BCRYPT_CIPHER_OPERATION=" << BCRYPT_CIPHER_OPERATION << std::endl;
    std::cout << "BCRYPT_DH_PRIVATE_MAGIC=" << BCRYPT_DH_PRIVATE_MAGIC << std::endl;
    std::cout << "BCRYPT_DH_PUBLIC_MAGIC=" << BCRYPT_DH_PUBLIC_MAGIC << std::endl;
    std::cout << "BCRYPT_DSA_PRIVATE_MAGIC=" << BCRYPT_DSA_PRIVATE_MAGIC << std::endl;
    std::cout << "BCRYPT_DSA_PRIVATE_MAGIC_V2=" << BCRYPT_DSA_PRIVATE_MAGIC_V2 << std::endl;
    std::cout << "BCRYPT_DSA_PUBLIC_MAGIC=" << BCRYPT_DSA_PUBLIC_MAGIC << std::endl;
    std::cout << "BCRYPT_DSA_PUBLIC_MAGIC_V2=" << BCRYPT_DSA_PUBLIC_MAGIC_V2 << std::endl;
    std::cout << "BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC=" << BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC=" << BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC=" << BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PRIVATE_P256_MAGIC=" << BCRYPT_ECDSA_PRIVATE_P256_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PRIVATE_P384_MAGIC=" << BCRYPT_ECDSA_PRIVATE_P384_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PRIVATE_P521_MAGIC=" << BCRYPT_ECDSA_PRIVATE_P521_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC=" << BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PUBLIC_P256_MAGIC=" << BCRYPT_ECDSA_PUBLIC_P256_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PUBLIC_P384_MAGIC=" << BCRYPT_ECDSA_PUBLIC_P384_MAGIC << std::endl;
    std::cout << "BCRYPT_ECDSA_PUBLIC_P521_MAGIC=" << BCRYPT_ECDSA_PUBLIC_P521_MAGIC << std::endl;
    std::cout << "BCRYPT_HASH_INTERFACE=" << BCRYPT_HASH_INTERFACE << std::endl;
    std::cout << "BCRYPT_HASH_OPERATION=" << BCRYPT_HASH_OPERATION << std::endl;
    std::cout << "BCRYPT_HASH_REUSABLE_FLAG=" << BCRYPT_HASH_REUSABLE_FLAG << std::endl;
    std::cout << "BCRYPT_KEY_DATA_BLOB_VERSION1=" << BCRYPT_KEY_DATA_BLOB_VERSION1 << std::endl;
    std::cout << "BCRYPT_KEY_DERIVATION_INTERFACE=" << BCRYPT_KEY_DERIVATION_INTERFACE << std::endl;
    std::cout << "BCRYPT_KEY_DERIVATION_OPERATION=" << BCRYPT_KEY_DERIVATION_OPERATION << std::endl;
    std::cout << "BCRYPT_NO_KEY_VALIDATION=" << BCRYPT_NO_KEY_VALIDATION << std::endl;
    std::cout << "BCRYPT_OBJECT_ALIGNMENT=" << BCRYPT_OBJECT_ALIGNMENT << std::endl;
    std::cout << "BCRYPT_PAD_NONE=" << BCRYPT_PAD_NONE << std::endl;
    std::cout << "BCRYPT_PAD_OAEP=" << BCRYPT_PAD_OAEP << std::endl;
    std::cout << "BCRYPT_PAD_PKCS1=" << BCRYPT_PAD_PKCS1 << std::endl;
    std::cout << "BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID=" << BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID << std::endl;
    std::cout << "BCRYPT_PAD_PSS=" << BCRYPT_PAD_PSS << std::endl;
    std::cout << "BCRYPT_PRIVATE_KEY_FLAG=" << BCRYPT_PRIVATE_KEY_FLAG << std::endl;
    std::cout << "BCRYPT_PROV_DISPATCH=" << BCRYPT_PROV_DISPATCH << std::endl;
    std::cout << "BCRYPT_PUBLIC_KEY_FLAG=" << BCRYPT_PUBLIC_KEY_FLAG << std::endl;
    std::cout << "BCRYPT_RNG_INTERFACE=" << BCRYPT_RNG_INTERFACE << std::endl;
    std::cout << "BCRYPT_RNG_OPERATION=" << BCRYPT_RNG_OPERATION << std::endl;
    std::cout << "BCRYPT_RNG_USE_ENTROPY_IN_BUFFER=" << BCRYPT_RNG_USE_ENTROPY_IN_BUFFER << std::endl;
    std::cout << "BCRYPT_RSAFULLPRIVATE_MAGIC=" << BCRYPT_RSAFULLPRIVATE_MAGIC << std::endl;
    std::cout << "BCRYPT_RSAPRIVATE_MAGIC=" << BCRYPT_RSAPRIVATE_MAGIC << std::endl;
    std::cout << "BCRYPT_RSAPUBLIC_MAGIC=" << BCRYPT_RSAPUBLIC_MAGIC << std::endl;
    std::cout << "BCRYPT_SECRET_AGREEMENT_INTERFACE=" << BCRYPT_SECRET_AGREEMENT_INTERFACE << std::endl;
    std::cout << "BCRYPT_SECRET_AGREEMENT_OPERATION=" << BCRYPT_SECRET_AGREEMENT_OPERATION << std::endl;
    std::cout << "BCRYPT_SIGNATURE_INTERFACE=" << BCRYPT_SIGNATURE_INTERFACE << std::endl;
    std::cout << "BCRYPT_SIGNATURE_OPERATION=" << BCRYPT_SIGNATURE_OPERATION << std::endl;
    std::cout << "BCRYPT_SUPPORTED_PAD_OAEP=" << BCRYPT_SUPPORTED_PAD_OAEP << std::endl;
    std::cout << "BCRYPT_SUPPORTED_PAD_PKCS1_ENC=" << BCRYPT_SUPPORTED_PAD_PKCS1_ENC << std::endl;
    std::cout << "BCRYPT_SUPPORTED_PAD_PKCS1_SIG=" << BCRYPT_SUPPORTED_PAD_PKCS1_SIG << std::endl;
    std::cout << "BCRYPT_SUPPORTED_PAD_PSS=" << BCRYPT_SUPPORTED_PAD_PSS << std::endl;
    std::cout << "BCRYPT_SUPPORTED_PAD_ROUTER=" << BCRYPT_SUPPORTED_PAD_ROUTER << std::endl;
    std::cout << "BCRYPT_USE_SYSTEM_PREFERRED_RNG=" << BCRYPT_USE_SYSTEM_PREFERRED_RNG << std::endl;
    std::cout << "BCSIF_GLYPH=" << BCSIF_GLYPH << std::endl;
    std::cout << "BCSIF_IMAGE=" << BCSIF_IMAGE << std::endl;
    std::cout << "BCSIF_SIZE=" << BCSIF_SIZE << std::endl;
    std::cout << "BCSIF_STYLE=" << BCSIF_STYLE << std::endl;
    std::cout << "BCSS_ALIGNLEFT=" << BCSS_ALIGNLEFT << std::endl;
    std::cout << "BCSS_IMAGE=" << BCSS_IMAGE << std::endl;
    std::cout << "BCSS_NOSPLIT=" << BCSS_NOSPLIT << std::endl;
    std::cout << "BCSS_STRETCH=" << BCSS_STRETCH << std::endl;
    std::cout << "BDR_INNER=" << BDR_INNER << std::endl;
    std::cout << "BDR_OUTER=" << BDR_OUTER << std::endl;
    std::cout << "BDR_RAISED=" << BDR_RAISED << std::endl;
    std::cout << "BDR_RAISEDINNER=" << BDR_RAISEDINNER << std::endl;
    std::cout << "BDR_RAISEDOUTER=" << BDR_RAISEDOUTER << std::endl;
    std::cout << "BDR_SUNKEN=" << BDR_SUNKEN << std::endl;
    std::cout << "BDR_SUNKENINNER=" << BDR_SUNKENINNER << std::endl;
    std::cout << "BDR_SUNKENOUTER=" << BDR_SUNKENOUTER << std::endl;
    std::cout << "BEGIN_PATH=" << BEGIN_PATH << std::endl;
    std::cout << "BELOW_NORMAL_PRIORITY_CLASS=" << BELOW_NORMAL_PRIORITY_CLASS << std::endl;
    std::cout << "BF_ADJUST=" << BF_ADJUST << std::endl;
    std::cout << "BF_BOTTOM=" << BF_BOTTOM << std::endl;
    std::cout << "BF_BOTTOMLEFT=" << BF_BOTTOMLEFT << std::endl;
    std::cout << "BF_BOTTOMRIGHT=" << BF_BOTTOMRIGHT << std::endl;
    std::cout << "BF_DIAGONAL=" << BF_DIAGONAL << std::endl;
    std::cout << "BF_DIAGONAL_ENDBOTTOMLEFT=" << BF_DIAGONAL_ENDBOTTOMLEFT << std::endl;
    std::cout << "BF_DIAGONAL_ENDBOTTOMRIGHT=" << BF_DIAGONAL_ENDBOTTOMRIGHT << std::endl;
    std::cout << "BF_DIAGONAL_ENDTOPLEFT=" << BF_DIAGONAL_ENDTOPLEFT << std::endl;
    std::cout << "BF_DIAGONAL_ENDTOPRIGHT=" << BF_DIAGONAL_ENDTOPRIGHT << std::endl;
    std::cout << "BF_FLAT=" << BF_FLAT << std::endl;
    std::cout << "BF_LEFT=" << BF_LEFT << std::endl;
    std::cout << "BF_MIDDLE=" << BF_MIDDLE << std::endl;
    std::cout << "BF_MONO=" << BF_MONO << std::endl;
    std::cout << "BF_RECT=" << BF_RECT << std::endl;
    std::cout << "BF_RIGHT=" << BF_RIGHT << std::endl;
    std::cout << "BF_SOFT=" << BF_SOFT << std::endl;
    std::cout << "BF_TOP=" << BF_TOP << std::endl;
    std::cout << "BF_TOPLEFT=" << BF_TOPLEFT << std::endl;
    std::cout << "BF_TOPRIGHT=" << BF_TOPRIGHT << std::endl;
    std::cout << "BIDI_ACCESS_ADMINISTRATOR=" << BIDI_ACCESS_ADMINISTRATOR << std::endl;
    std::cout << "BIDI_ACCESS_USER=" << BIDI_ACCESS_USER << std::endl;
    std::cout << "BITSPIXEL=" << BITSPIXEL << std::endl;
    std::cout << "BKMODE_LAST=" << BKMODE_LAST << std::endl;
    std::cout << "BLACKONWHITE=" << BLACKONWHITE << std::endl;
    std::cout << "BLACK_BRUSH=" << BLACK_BRUSH << std::endl;
    std::cout << "BLACK_PEN=" << BLACK_PEN << std::endl;
    std::cout << "BLTALIGNMENT=" << BLTALIGNMENT << std::endl;
    std::cout << "BM_CLICK=" << BM_CLICK << std::endl;
    std::cout << "BM_GETCHECK=" << BM_GETCHECK << std::endl;
    std::cout << "BM_GETIMAGE=" << BM_GETIMAGE << std::endl;
    std::cout << "BM_GETSTATE=" << BM_GETSTATE << std::endl;
    std::cout << "BM_SETCHECK=" << BM_SETCHECK << std::endl;
    std::cout << "BM_SETIMAGE=" << BM_SETIMAGE << std::endl;
    std::cout << "BM_SETSTATE=" << BM_SETSTATE << std::endl;
    std::cout << "BM_SETSTYLE=" << BM_SETSTYLE << std::endl;
    std::cout << "BN_CLICKED=" << BN_CLICKED << std::endl;
    std::cout << "BN_DBLCLK=" << BN_DBLCLK << std::endl;
    std::cout << "BN_DISABLE=" << BN_DISABLE << std::endl;
    std::cout << "BN_DOUBLECLICKED=" << BN_DOUBLECLICKED << std::endl;
    std::cout << "BN_HILITE=" << BN_HILITE << std::endl;
    std::cout << "BN_KILLFOCUS=" << BN_KILLFOCUS << std::endl;
    std::cout << "BN_PAINT=" << BN_PAINT << std::endl;
    std::cout << "BN_PUSHED=" << BN_PUSHED << std::endl;
    std::cout << "BN_SETFOCUS=" << BN_SETFOCUS << std::endl;
    std::cout << "BN_UNHILITE=" << BN_UNHILITE << std::endl;
    std::cout << "BN_UNPUSHED=" << BN_UNPUSHED << std::endl;
    std::cout << "BOLD_FONTTYPE=" << BOLD_FONTTYPE << std::endl;
    std::cout << "BROADCAST_QUERY_DENY=" << BROADCAST_QUERY_DENY << std::endl;
    std::cout << "BSF_ALLOWSFW=" << BSF_ALLOWSFW << std::endl;
    std::cout << "BSF_FLUSHDISK=" << BSF_FLUSHDISK << std::endl;
    std::cout << "BSF_FORCEIFHUNG=" << BSF_FORCEIFHUNG << std::endl;
    std::cout << "BSF_IGNORECURRENTTASK=" << BSF_IGNORECURRENTTASK << std::endl;
    std::cout << "BSF_LUID=" << BSF_LUID << std::endl;
    std::cout << "BSF_NOHANG=" << BSF_NOHANG << std::endl;
    std::cout << "BSF_NOTIMEOUTIFNOTHUNG=" << BSF_NOTIMEOUTIFNOTHUNG << std::endl;
    std::cout << "BSF_POSTMESSAGE=" << BSF_POSTMESSAGE << std::endl;
    std::cout << "BSF_QUERY=" << BSF_QUERY << std::endl;
    std::cout << "BSF_RETURNHDESK=" << BSF_RETURNHDESK << std::endl;
    std::cout << "BSF_SENDNOTIFYMESSAGE=" << BSF_SENDNOTIFYMESSAGE << std::endl;
    std::cout << "BSM_ALLCOMPONENTS=" << BSM_ALLCOMPONENTS << std::endl;
    std::cout << "BSM_ALLDESKTOPS=" << BSM_ALLDESKTOPS << std::endl;
    std::cout << "BSM_APPLICATIONS=" << BSM_APPLICATIONS << std::endl;
    std::cout << "BSM_INSTALLABLEDRIVERS=" << BSM_INSTALLABLEDRIVERS << std::endl;
    std::cout << "BSM_NETDRIVER=" << BSM_NETDRIVER << std::endl;
    std::cout << "BSM_VXDS=" << BSM_VXDS << std::endl;
    std::cout << "BST_CHECKED=" << BST_CHECKED << std::endl;
    std::cout << "BST_FOCUS=" << BST_FOCUS << std::endl;
    std::cout << "BST_INDETERMINATE=" << BST_INDETERMINATE << std::endl;
    std::cout << "BST_PUSHED=" << BST_PUSHED << std::endl;
    std::cout << "BST_UNCHECKED=" << BST_UNCHECKED << std::endl;
    std::cout << "BS_DIBPATTERN=" << BS_DIBPATTERN << std::endl;
    std::cout << "BS_DIBPATTERN8X8=" << BS_DIBPATTERN8X8 << std::endl;
    std::cout << "BS_DIBPATTERNPT=" << BS_DIBPATTERNPT << std::endl;
    std::cout << "BS_HATCHED=" << BS_HATCHED << std::endl;
    std::cout << "BS_HOLLOW=" << BS_HOLLOW << std::endl;
    std::cout << "BS_INDEXED=" << BS_INDEXED << std::endl;
    std::cout << "BS_MONOPATTERN=" << BS_MONOPATTERN << std::endl;
    std::cout << "BS_NULL=" << BS_NULL << std::endl;
    std::cout << "BS_PATTERN=" << BS_PATTERN << std::endl;
    std::cout << "BS_PATTERN8X8=" << BS_PATTERN8X8 << std::endl;
    std::cout << "BS_RIGHTBUTTON=" << BS_RIGHTBUTTON << std::endl;
    std::cout << "BS_SOLID=" << BS_SOLID << std::endl;
    std::cout << "BTNS_AUTOSIZE=" << BTNS_AUTOSIZE << std::endl;
    std::cout << "BTNS_BUTTON=" << BTNS_BUTTON << std::endl;
    std::cout << "BTNS_CHECK=" << BTNS_CHECK << std::endl;
    std::cout << "BTNS_CHECKGROUP=" << BTNS_CHECKGROUP << std::endl;
    std::cout << "BTNS_DROPDOWN=" << BTNS_DROPDOWN << std::endl;
    std::cout << "BTNS_GROUP=" << BTNS_GROUP << std::endl;
    std::cout << "BTNS_NOPREFIX=" << BTNS_NOPREFIX << std::endl;
    std::cout << "BTNS_SEP=" << BTNS_SEP << std::endl;
    std::cout << "BTNS_SHOWTEXT=" << BTNS_SHOWTEXT << std::endl;
    std::cout << "BTNS_WHOLEDROPDOWN=" << BTNS_WHOLEDROPDOWN << std::endl;
    std::cout << "C1_ALPHA=" << C1_ALPHA << std::endl;
    std::cout << "C1_BLANK=" << C1_BLANK << std::endl;
    std::cout << "C1_CNTRL=" << C1_CNTRL << std::endl;
    std::cout << "C1_DEFINED=" << C1_DEFINED << std::endl;
    std::cout << "C1_DIGIT=" << C1_DIGIT << std::endl;
    std::cout << "C1_LOWER=" << C1_LOWER << std::endl;
    std::cout << "C1_PUNCT=" << C1_PUNCT << std::endl;
    std::cout << "C1_SPACE=" << C1_SPACE << std::endl;
    std::cout << "C1_UPPER=" << C1_UPPER << std::endl;
    std::cout << "C1_XDIGIT=" << C1_XDIGIT << std::endl;
    std::cout << "C2_ARABICNUMBER=" << C2_ARABICNUMBER << std::endl;
    std::cout << "C2_BLOCKSEPARATOR=" << C2_BLOCKSEPARATOR << std::endl;
    std::cout << "C2_COMMONSEPARATOR=" << C2_COMMONSEPARATOR << std::endl;
    std::cout << "C2_EUROPENUMBER=" << C2_EUROPENUMBER << std::endl;
    std::cout << "C2_EUROPESEPARATOR=" << C2_EUROPESEPARATOR << std::endl;
    std::cout << "C2_EUROPETERMINATOR=" << C2_EUROPETERMINATOR << std::endl;
    std::cout << "C2_LEFTTORIGHT=" << C2_LEFTTORIGHT << std::endl;
    std::cout << "C2_NOTAPPLICABLE=" << C2_NOTAPPLICABLE << std::endl;
    std::cout << "C2_RIGHTTOLEFT=" << C2_RIGHTTOLEFT << std::endl;
    std::cout << "C2_SEGMENTSEPARATOR=" << C2_SEGMENTSEPARATOR << std::endl;
    std::cout << "C3_ALPHA=" << C3_ALPHA << std::endl;
    std::cout << "C3_DIACRITIC=" << C3_DIACRITIC << std::endl;
    std::cout << "C3_FULLWIDTH=" << C3_FULLWIDTH << std::endl;
    std::cout << "C3_HALFWIDTH=" << C3_HALFWIDTH << std::endl;
    std::cout << "C3_HIGHSURROGATE=" << C3_HIGHSURROGATE << std::endl;
    std::cout << "C3_HIRAGANA=" << C3_HIRAGANA << std::endl;
    std::cout << "C3_IDEOGRAPH=" << C3_IDEOGRAPH << std::endl;
    std::cout << "C3_KASHIDA=" << C3_KASHIDA << std::endl;
    std::cout << "C3_KATAKANA=" << C3_KATAKANA << std::endl;
    std::cout << "C3_LEXICAL=" << C3_LEXICAL << std::endl;
    std::cout << "C3_LOWSURROGATE=" << C3_LOWSURROGATE << std::endl;
    std::cout << "C3_NONSPACING=" << C3_NONSPACING << std::endl;
    std::cout << "C3_NOTAPPLICABLE=" << C3_NOTAPPLICABLE << std::endl;
    std::cout << "C3_SYMBOL=" << C3_SYMBOL << std::endl;
    std::cout << "C3_VOWELMARK=" << C3_VOWELMARK << std::endl;
    std::cout << "CACHE_FULLY_ASSOCIATIVE=" << CACHE_FULLY_ASSOCIATIVE << std::endl;
    std::cout << "CADV_LATEACK=" << CADV_LATEACK << std::endl;
    std::cout << "CALERT_SYSTEM=" << CALERT_SYSTEM << std::endl;
    std::cout << "CALG_3DES=" << CALG_3DES << std::endl;
    std::cout << "CALG_3DES_112=" << CALG_3DES_112 << std::endl;
    std::cout << "CALG_AES=" << CALG_AES << std::endl;
    std::cout << "CALG_AES_128=" << CALG_AES_128 << std::endl;
    std::cout << "CALG_AES_192=" << CALG_AES_192 << std::endl;
    std::cout << "CALG_AES_256=" << CALG_AES_256 << std::endl;
    std::cout << "CALG_AGREEDKEY_ANY=" << CALG_AGREEDKEY_ANY << std::endl;
    std::cout << "CALG_CYLINK_MEK=" << CALG_CYLINK_MEK << std::endl;
    std::cout << "CALG_DES=" << CALG_DES << std::endl;
    std::cout << "CALG_DESX=" << CALG_DESX << std::endl;
    std::cout << "CALG_DH_EPHEM=" << CALG_DH_EPHEM << std::endl;
    std::cout << "CALG_DH_SF=" << CALG_DH_SF << std::endl;
    std::cout << "CALG_DSS_SIGN=" << CALG_DSS_SIGN << std::endl;
    std::cout << "CALG_ECDH=" << CALG_ECDH << std::endl;
    std::cout << "CALG_ECDH_EPHEM=" << CALG_ECDH_EPHEM << std::endl;
    std::cout << "CALG_ECDSA=" << CALG_ECDSA << std::endl;
    std::cout << "CALG_ECMQV=" << CALG_ECMQV << std::endl;
    std::cout << "CALG_HASH_REPLACE_OWF=" << CALG_HASH_REPLACE_OWF << std::endl;
    std::cout << "CALG_HMAC=" << CALG_HMAC << std::endl;
    std::cout << "CALG_HUGHES_MD5=" << CALG_HUGHES_MD5 << std::endl;
    std::cout << "CALG_KEA_KEYX=" << CALG_KEA_KEYX << std::endl;
    std::cout << "CALG_MAC=" << CALG_MAC << std::endl;
    std::cout << "CALG_MD2=" << CALG_MD2 << std::endl;
    std::cout << "CALG_MD4=" << CALG_MD4 << std::endl;
    std::cout << "CALG_MD5=" << CALG_MD5 << std::endl;
    std::cout << "CALG_NO_SIGN=" << CALG_NO_SIGN << std::endl;
    std::cout << "CALG_NULLCIPHER=" << CALG_NULLCIPHER << std::endl;
    std::cout << "CALG_PCT1_MASTER=" << CALG_PCT1_MASTER << std::endl;
    std::cout << "CALG_RC2=" << CALG_RC2 << std::endl;
    std::cout << "CALG_RC4=" << CALG_RC4 << std::endl;
    std::cout << "CALG_RC5=" << CALG_RC5 << std::endl;
    std::cout << "CALG_RSA_KEYX=" << CALG_RSA_KEYX << std::endl;
    std::cout << "CALG_RSA_SIGN=" << CALG_RSA_SIGN << std::endl;
    std::cout << "CALG_SCHANNEL_ENC_KEY=" << CALG_SCHANNEL_ENC_KEY << std::endl;
    std::cout << "CALG_SCHANNEL_MAC_KEY=" << CALG_SCHANNEL_MAC_KEY << std::endl;
    std::cout << "CALG_SCHANNEL_MASTER_HASH=" << CALG_SCHANNEL_MASTER_HASH << std::endl;
    std::cout << "CALG_SEAL=" << CALG_SEAL << std::endl;
    std::cout << "CALG_SHA=" << CALG_SHA << std::endl;
    std::cout << "CALG_SHA1=" << CALG_SHA1 << std::endl;
    std::cout << "CALG_SHA_256=" << CALG_SHA_256 << std::endl;
    std::cout << "CALG_SHA_384=" << CALG_SHA_384 << std::endl;
    std::cout << "CALG_SHA_512=" << CALG_SHA_512 << std::endl;
    std::cout << "CALG_SKIPJACK=" << CALG_SKIPJACK << std::endl;
    std::cout << "CALG_SSL2_MASTER=" << CALG_SSL2_MASTER << std::endl;
    std::cout << "CALG_SSL3_MASTER=" << CALG_SSL3_MASTER << std::endl;
    std::cout << "CALG_SSL3_SHAMD5=" << CALG_SSL3_SHAMD5 << std::endl;
    std::cout << "CALG_TEK=" << CALG_TEK << std::endl;
    std::cout << "CALG_THIRDPARTY_CIPHER=" << CALG_THIRDPARTY_CIPHER << std::endl;
    std::cout << "CALG_THIRDPARTY_HASH=" << CALG_THIRDPARTY_HASH << std::endl;
    std::cout << "CALG_THIRDPARTY_KEY_EXCHANGE=" << CALG_THIRDPARTY_KEY_EXCHANGE << std::endl;
    std::cout << "CALG_THIRDPARTY_SIGNATURE=" << CALG_THIRDPARTY_SIGNATURE << std::endl;
    std::cout << "CALG_TLS1PRF=" << CALG_TLS1PRF << std::endl;
    std::cout << "CALG_TLS1_MASTER=" << CALG_TLS1_MASTER << std::endl;
    std::cout << "CALLBACK_CHUNK_FINISHED=" << CALLBACK_CHUNK_FINISHED << std::endl;
    std::cout << "CALLBACK_STREAM_SWITCH=" << CALLBACK_STREAM_SWITCH << std::endl;
    std::cout << "CALL_PENDING=" << CALL_PENDING << std::endl;
    std::cout << "CAL_GREGORIAN=" << CAL_GREGORIAN << std::endl;
    std::cout << "CAL_GREGORIAN_ARABIC=" << CAL_GREGORIAN_ARABIC << std::endl;
    std::cout << "CAL_GREGORIAN_ME_FRENCH=" << CAL_GREGORIAN_ME_FRENCH << std::endl;
    std::cout << "CAL_GREGORIAN_US=" << CAL_GREGORIAN_US << std::endl;
    std::cout << "CAL_GREGORIAN_XLIT_ENGLISH=" << CAL_GREGORIAN_XLIT_ENGLISH << std::endl;
    std::cout << "CAL_GREGORIAN_XLIT_FRENCH=" << CAL_GREGORIAN_XLIT_FRENCH << std::endl;
    std::cout << "CAL_HEBREW=" << CAL_HEBREW << std::endl;
    std::cout << "CAL_HIJRI=" << CAL_HIJRI << std::endl;
    std::cout << "CAL_ICALINTVALUE=" << CAL_ICALINTVALUE << std::endl;
    std::cout << "CAL_ITWODIGITYEARMAX=" << CAL_ITWODIGITYEARMAX << std::endl;
    std::cout << "CAL_IYEAROFFSETRANGE=" << CAL_IYEAROFFSETRANGE << std::endl;
    std::cout << "CAL_JAPAN=" << CAL_JAPAN << std::endl;
    std::cout << "CAL_KOREA=" << CAL_KOREA << std::endl;
    std::cout << "CAL_NOUSEROVERRIDE=" << CAL_NOUSEROVERRIDE << std::endl;
    std::cout << "CAL_RETURN_GENITIVE_NAMES=" << CAL_RETURN_GENITIVE_NAMES << std::endl;
    std::cout << "CAL_RETURN_NUMBER=" << CAL_RETURN_NUMBER << std::endl;
    std::cout << "CAL_SABBREVDAYNAME3=" << CAL_SABBREVDAYNAME3 << std::endl;
    std::cout << "CAL_SABBREVDAYNAME4=" << CAL_SABBREVDAYNAME4 << std::endl;
    std::cout << "CAL_SABBREVDAYNAME5=" << CAL_SABBREVDAYNAME5 << std::endl;
    std::cout << "CAL_SABBREVDAYNAME6=" << CAL_SABBREVDAYNAME6 << std::endl;
    std::cout << "CAL_SABBREVDAYNAME7=" << CAL_SABBREVDAYNAME7 << std::endl;
    std::cout << "CAL_SABBREVERASTRING=" << CAL_SABBREVERASTRING << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME1=" << CAL_SABBREVMONTHNAME1 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME2=" << CAL_SABBREVMONTHNAME2 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME3=" << CAL_SABBREVMONTHNAME3 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME4=" << CAL_SABBREVMONTHNAME4 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME5=" << CAL_SABBREVMONTHNAME5 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME6=" << CAL_SABBREVMONTHNAME6 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME7=" << CAL_SABBREVMONTHNAME7 << std::endl;
    std::cout << "CAL_SABBREVMONTHNAME8=" << CAL_SABBREVMONTHNAME8 << std::endl;
    std::cout << "CAL_SCALNAME=" << CAL_SCALNAME << std::endl;
    std::cout << "CAL_SDAYNAME1=" << CAL_SDAYNAME1 << std::endl;
    std::cout << "CAL_SDAYNAME2=" << CAL_SDAYNAME2 << std::endl;
    std::cout << "CAL_SDAYNAME3=" << CAL_SDAYNAME3 << std::endl;
    std::cout << "CAL_SERASTRING=" << CAL_SERASTRING << std::endl;
    std::cout << "CAL_SLONGDATE=" << CAL_SLONGDATE << std::endl;
    std::cout << "CAL_SMONTHDAY=" << CAL_SMONTHDAY << std::endl;
    std::cout << "CAL_SMONTHNAME1=" << CAL_SMONTHNAME1 << std::endl;
    std::cout << "CAL_SMONTHNAME12=" << CAL_SMONTHNAME12 << std::endl;
    std::cout << "CAL_SMONTHNAME13=" << CAL_SMONTHNAME13 << std::endl;
    std::cout << "CAL_SMONTHNAME2=" << CAL_SMONTHNAME2 << std::endl;
    std::cout << "CAL_SMONTHNAME3=" << CAL_SMONTHNAME3 << std::endl;
    std::cout << "CAL_SMONTHNAME4=" << CAL_SMONTHNAME4 << std::endl;
    std::cout << "CAL_SMONTHNAME5=" << CAL_SMONTHNAME5 << std::endl;
    std::cout << "CAL_SSHORTDATE=" << CAL_SSHORTDATE << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME1=" << CAL_SSHORTESTDAYNAME1 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME2=" << CAL_SSHORTESTDAYNAME2 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME3=" << CAL_SSHORTESTDAYNAME3 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME4=" << CAL_SSHORTESTDAYNAME4 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME5=" << CAL_SSHORTESTDAYNAME5 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME6=" << CAL_SSHORTESTDAYNAME6 << std::endl;
    std::cout << "CAL_SSHORTESTDAYNAME7=" << CAL_SSHORTESTDAYNAME7 << std::endl;
    std::cout << "CAL_TAIWAN=" << CAL_TAIWAN << std::endl;
    std::cout << "CAL_THAI=" << CAL_THAI << std::endl;
    std::cout << "CAL_UMALQURA=" << CAL_UMALQURA << std::endl;
    std::cout << "CAL_USE_CP_ACP=" << CAL_USE_CP_ACP << std::endl;
    std::cout << "CAPSLOCK_ON=" << CAPSLOCK_ON << std::endl;
    std::cout << "CAP_ATAPI_ID_CMD=" << CAP_ATAPI_ID_CMD << std::endl;
    std::cout << "CAP_ATA_ID_CMD=" << CAP_ATA_ID_CMD << std::endl;
    std::cout << "CAP_SMART_CMD=" << CAP_SMART_CMD << std::endl;
    std::cout << "CA_LOG_FILTER=" << CA_LOG_FILTER << std::endl;
    std::cout << "CA_NEGATIVE=" << CA_NEGATIVE << std::endl;
    std::cout << "CBF_FAIL_ADVISES=" << CBF_FAIL_ADVISES << std::endl;
    std::cout << "CBF_FAIL_CONNECTIONS=" << CBF_FAIL_CONNECTIONS << std::endl;
    std::cout << "CBF_FAIL_EXECUTES=" << CBF_FAIL_EXECUTES << std::endl;
    std::cout << "CBF_FAIL_POKES=" << CBF_FAIL_POKES << std::endl;
    std::cout << "CBF_FAIL_REQUESTS=" << CBF_FAIL_REQUESTS << std::endl;
    std::cout << "CBF_FAIL_SELFCONNECTIONS=" << CBF_FAIL_SELFCONNECTIONS << std::endl;
    std::cout << "CBF_SKIP_CONNECT_CONFIRMS=" << CBF_SKIP_CONNECT_CONFIRMS << std::endl;
    std::cout << "CBF_SKIP_DISCONNECTS=" << CBF_SKIP_DISCONNECTS << std::endl;
    std::cout << "CBF_SKIP_REGISTRATIONS=" << CBF_SKIP_REGISTRATIONS << std::endl;
    std::cout << "CBF_SKIP_UNREGISTRATIONS=" << CBF_SKIP_UNREGISTRATIONS << std::endl;
    std::cout << "CBN_CLOSEUP=" << CBN_CLOSEUP << std::endl;
    std::cout << "CBN_DBLCLK=" << CBN_DBLCLK << std::endl;
    std::cout << "CBN_DROPDOWN=" << CBN_DROPDOWN << std::endl;
    std::cout << "CBN_EDITCHANGE=" << CBN_EDITCHANGE << std::endl;
    std::cout << "CBN_EDITUPDATE=" << CBN_EDITUPDATE << std::endl;
    std::cout << "CBN_ERRSPACE=" << CBN_ERRSPACE << std::endl;
    std::cout << "CBN_KILLFOCUS=" << CBN_KILLFOCUS << std::endl;
    std::cout << "CBN_SELCHANGE=" << CBN_SELCHANGE << std::endl;
    std::cout << "CBN_SELENDCANCEL=" << CBN_SELENDCANCEL << std::endl;
    std::cout << "CBN_SELENDOK=" << CBN_SELENDOK << std::endl;
    std::cout << "CBN_SETFOCUS=" << CBN_SETFOCUS << std::endl;
    std::cout << "CBR_110=" << CBR_110 << std::endl;
    std::cout << "CBR_115200=" << CBR_115200 << std::endl;
    std::cout << "CBR_1200=" << CBR_1200 << std::endl;
    std::cout << "CBR_128000=" << CBR_128000 << std::endl;
    std::cout << "CBR_14400=" << CBR_14400 << std::endl;
    std::cout << "CBR_19200=" << CBR_19200 << std::endl;
    std::cout << "CBR_2400=" << CBR_2400 << std::endl;
    std::cout << "CBR_256000=" << CBR_256000 << std::endl;
    std::cout << "CBR_300=" << CBR_300 << std::endl;
    std::cout << "CBR_38400=" << CBR_38400 << std::endl;
    std::cout << "CBR_4800=" << CBR_4800 << std::endl;
    std::cout << "CBR_56000=" << CBR_56000 << std::endl;
    std::cout << "CBR_57600=" << CBR_57600 << std::endl;
    std::cout << "CBR_600=" << CBR_600 << std::endl;
    std::cout << "CBR_9600=" << CBR_9600 << std::endl;
    std::cout << "CB_ADDSTRING=" << CB_ADDSTRING << std::endl;
    std::cout << "CB_DELETESTRING=" << CB_DELETESTRING << std::endl;
    std::cout << "CB_DIR=" << CB_DIR << std::endl;
    std::cout << "CB_ERR=" << CB_ERR << std::endl;
    std::cout << "CB_ERRSPACE=" << CB_ERRSPACE << std::endl;
    std::cout << "CB_FINDSTRING=" << CB_FINDSTRING << std::endl;
    std::cout << "CB_FINDSTRINGEXACT=" << CB_FINDSTRINGEXACT << std::endl;
    std::cout << "CB_GETCOMBOBOXINFO=" << CB_GETCOMBOBOXINFO << std::endl;
    std::cout << "CB_GETCOUNT=" << CB_GETCOUNT << std::endl;
    std::cout << "CB_GETCURSEL=" << CB_GETCURSEL << std::endl;
    std::cout << "CB_GETDROPPEDCONTROLRECT=" << CB_GETDROPPEDCONTROLRECT << std::endl;
    std::cout << "CB_GETDROPPEDSTATE=" << CB_GETDROPPEDSTATE << std::endl;
    std::cout << "CB_GETEDITSEL=" << CB_GETEDITSEL << std::endl;
    std::cout << "CB_GETEXTENDEDUI=" << CB_GETEXTENDEDUI << std::endl;
    std::cout << "CB_GETITEMDATA=" << CB_GETITEMDATA << std::endl;
    std::cout << "CB_GETITEMHEIGHT=" << CB_GETITEMHEIGHT << std::endl;
    std::cout << "CB_GETLBTEXT=" << CB_GETLBTEXT << std::endl;
    std::cout << "CB_GETLBTEXTLEN=" << CB_GETLBTEXTLEN << std::endl;
    std::cout << "CB_GETLOCALE=" << CB_GETLOCALE << std::endl;
    std::cout << "CB_INITSTORAGE=" << CB_INITSTORAGE << std::endl;
    std::cout << "CB_INSERTSTRING=" << CB_INSERTSTRING << std::endl;
    std::cout << "CB_LIMITTEXT=" << CB_LIMITTEXT << std::endl;
    std::cout << "CB_MSGMAX=" << CB_MSGMAX << std::endl;
    std::cout << "CB_MULTIPLEADDSTRING=" << CB_MULTIPLEADDSTRING << std::endl;
    std::cout << "CB_OKAY=" << CB_OKAY << std::endl;
    std::cout << "CB_RESETCONTENT=" << CB_RESETCONTENT << std::endl;
    std::cout << "CB_SELECTSTRING=" << CB_SELECTSTRING << std::endl;
    std::cout << "CB_SETCURSEL=" << CB_SETCURSEL << std::endl;
    std::cout << "CB_SETDROPPEDWIDTH=" << CB_SETDROPPEDWIDTH << std::endl;
    std::cout << "CB_SETEDITSEL=" << CB_SETEDITSEL << std::endl;
    std::cout << "CB_SETEXTENDEDUI=" << CB_SETEXTENDEDUI << std::endl;
    std::cout << "CB_SETITEMDATA=" << CB_SETITEMDATA << std::endl;
    std::cout << "CB_SETITEMHEIGHT=" << CB_SETITEMHEIGHT << std::endl;
    std::cout << "CB_SETLOCALE=" << CB_SETLOCALE << std::endl;
    std::cout << "CB_SHOWDROPDOWN=" << CB_SHOWDROPDOWN << std::endl;
    std::cout << "CCERR_CHOOSECOLORCODES=" << CCERR_CHOOSECOLORCODES << std::endl;
    std::cout << "CCHDEVICENAME=" << CCHDEVICENAME << std::endl;
    std::cout << "CCHFORMNAME=" << CCHFORMNAME << std::endl;
    std::cout << "CCHILDREN_SCROLLBAR=" << CCHILDREN_SCROLLBAR << std::endl;
    std::cout << "CCHILDREN_TITLEBAR=" << CCHILDREN_TITLEBAR << std::endl;
    std::cout << "CCH_MAX_PROPSTG_NAME=" << CCH_MAX_PROPSTG_NAME << std::endl;
    std::cout << "CCS_LEFT=" << CCS_LEFT << std::endl;
    std::cout << "CCS_NOMOVEX=" << CCS_NOMOVEX << std::endl;
    std::cout << "CCS_RIGHT=" << CCS_RIGHT << std::endl;
    std::cout << "CC_ANYCOLOR=" << CC_ANYCOLOR << std::endl;
    std::cout << "CC_CHORD=" << CC_CHORD << std::endl;
    std::cout << "CC_CIRCLES=" << CC_CIRCLES << std::endl;
    std::cout << "CC_ELLIPSES=" << CC_ELLIPSES << std::endl;
    std::cout << "CC_ENABLEHOOK=" << CC_ENABLEHOOK << std::endl;
    std::cout << "CC_ENABLETEMPLATE=" << CC_ENABLETEMPLATE << std::endl;
    std::cout << "CC_ENABLETEMPLATEHANDLE=" << CC_ENABLETEMPLATEHANDLE << std::endl;
    std::cout << "CC_FULLOPEN=" << CC_FULLOPEN << std::endl;
    std::cout << "CC_INTERIORS=" << CC_INTERIORS << std::endl;
    std::cout << "CC_NONE=" << CC_NONE << std::endl;
    std::cout << "CC_PIE=" << CC_PIE << std::endl;
    std::cout << "CC_PREVENTFULLOPEN=" << CC_PREVENTFULLOPEN << std::endl;
    std::cout << "CC_RGBINIT=" << CC_RGBINIT << std::endl;
    std::cout << "CC_ROUNDRECT=" << CC_ROUNDRECT << std::endl;
    std::cout << "CC_SHOWHELP=" << CC_SHOWHELP << std::endl;
    std::cout << "CC_SOLIDCOLOR=" << CC_SOLIDCOLOR << std::endl;
    std::cout << "CC_STYLED=" << CC_STYLED << std::endl;
    std::cout << "CC_WIDE=" << CC_WIDE << std::endl;
    std::cout << "CC_WIDESTYLED=" << CC_WIDESTYLED << std::endl;
    std::cout << "CDERR_DIALOGFAILURE=" << CDERR_DIALOGFAILURE << std::endl;
    std::cout << "CDERR_FINDRESFAILURE=" << CDERR_FINDRESFAILURE << std::endl;
    std::cout << "CDERR_GENERALCODES=" << CDERR_GENERALCODES << std::endl;
    std::cout << "CDERR_INITIALIZATION=" << CDERR_INITIALIZATION << std::endl;
    std::cout << "CDERR_LOADRESFAILURE=" << CDERR_LOADRESFAILURE << std::endl;
    std::cout << "CDERR_LOADSTRFAILURE=" << CDERR_LOADSTRFAILURE << std::endl;
    std::cout << "CDERR_LOCKRESFAILURE=" << CDERR_LOCKRESFAILURE << std::endl;
    std::cout << "CDERR_MEMALLOCFAILURE=" << CDERR_MEMALLOCFAILURE << std::endl;
    std::cout << "CDERR_MEMLOCKFAILURE=" << CDERR_MEMLOCKFAILURE << std::endl;
    std::cout << "CDERR_NOHINSTANCE=" << CDERR_NOHINSTANCE << std::endl;
    std::cout << "CDERR_NOHOOK=" << CDERR_NOHOOK << std::endl;
    std::cout << "CDERR_NOTEMPLATE=" << CDERR_NOTEMPLATE << std::endl;
    std::cout << "CDERR_REGISTERMSGFAIL=" << CDERR_REGISTERMSGFAIL << std::endl;
    std::cout << "CDERR_STRUCTSIZE=" << CDERR_STRUCTSIZE << std::endl;
    std::cout << "CDM_FIRST=" << CDM_FIRST << std::endl;
    std::cout << "CDM_GETFILEPATH=" << CDM_GETFILEPATH << std::endl;
    std::cout << "CDM_GETFOLDERIDLIST=" << CDM_GETFOLDERIDLIST << std::endl;
    std::cout << "CDM_GETFOLDERPATH=" << CDM_GETFOLDERPATH << std::endl;
    std::cout << "CDM_GETSPEC=" << CDM_GETSPEC << std::endl;
    std::cout << "CDM_HIDECONTROL=" << CDM_HIDECONTROL << std::endl;
    std::cout << "CDM_LAST=" << CDM_LAST << std::endl;
    std::cout << "CDM_SETCONTROLTEXT=" << CDM_SETCONTROLTEXT << std::endl;
    std::cout << "CDM_SETDEFEXT=" << CDM_SETDEFEXT << std::endl;
    std::cout << "CDN_FILEOK=" << CDN_FILEOK << std::endl;
    std::cout << "CDN_FOLDERCHANGE=" << CDN_FOLDERCHANGE << std::endl;
    std::cout << "CDN_HELP=" << CDN_HELP << std::endl;
    std::cout << "CDN_INCLUDEITEM=" << CDN_INCLUDEITEM << std::endl;
    std::cout << "CDN_INITDONE=" << CDN_INITDONE << std::endl;
    std::cout << "CDN_SELCHANGE=" << CDN_SELCHANGE << std::endl;
    std::cout << "CDN_SHAREVIOLATION=" << CDN_SHAREVIOLATION << std::endl;
    std::cout << "CDN_TYPECHANGE=" << CDN_TYPECHANGE << std::endl;
    std::cout << "CDS_DISABLE_UNSAFE_MODES=" << CDS_DISABLE_UNSAFE_MODES << std::endl;
    std::cout << "CDS_ENABLE_UNSAFE_MODES=" << CDS_ENABLE_UNSAFE_MODES << std::endl;
    std::cout << "CDS_FULLSCREEN=" << CDS_FULLSCREEN << std::endl;
    std::cout << "CDS_GLOBAL=" << CDS_GLOBAL << std::endl;
    std::cout << "CDS_NORESET=" << CDS_NORESET << std::endl;
    std::cout << "CDS_RESET=" << CDS_RESET << std::endl;
    std::cout << "CDS_RESET_EX=" << CDS_RESET_EX << std::endl;
    std::cout << "CDS_SET_PRIMARY=" << CDS_SET_PRIMARY << std::endl;
    std::cout << "CDS_TEST=" << CDS_TEST << std::endl;
    std::cout << "CDS_UPDATEREGISTRY=" << CDS_UPDATEREGISTRY << std::endl;
    std::cout << "CDS_VIDEOPARAMETERS=" << CDS_VIDEOPARAMETERS << std::endl;
    std::cout << "CD_LBSELADD=" << CD_LBSELADD << std::endl;
    std::cout << "CD_LBSELCHANGE=" << CD_LBSELCHANGE << std::endl;
    std::cout << "CD_LBSELNOITEMS=" << CD_LBSELNOITEMS << std::endl;
    std::cout << "CD_LBSELSUB=" << CD_LBSELSUB << std::endl;
    std::cout << "CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG=" << CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG=" << CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_ACCESS_STATE_PROP_ID=" << CERT_ACCESS_STATE_PROP_ID << std::endl;
    std::cout << "CERT_ACCESS_STATE_SHARED_USER_FLAG=" << CERT_ACCESS_STATE_SHARED_USER_FLAG << std::endl;
    std::cout << "CERT_ACCESS_STATE_SYSTEM_STORE_FLAG=" << CERT_ACCESS_STATE_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_ACCESS_STATE_WRITE_PERSIST_FLAG=" << CERT_ACCESS_STATE_WRITE_PERSIST_FLAG << std::endl;
    std::cout << "CERT_AIA_URL_RETRIEVED_PROP_ID=" << CERT_AIA_URL_RETRIEVED_PROP_ID << std::endl;
    std::cout << "CERT_ALT_NAME_DIRECTORY_NAME=" << CERT_ALT_NAME_DIRECTORY_NAME << std::endl;
    std::cout << "CERT_ALT_NAME_DNS_NAME=" << CERT_ALT_NAME_DNS_NAME << std::endl;
    std::cout << "CERT_ALT_NAME_EDI_PARTY_NAME=" << CERT_ALT_NAME_EDI_PARTY_NAME << std::endl;
    std::cout << "CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT=" << CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CERT_ALT_NAME_IP_ADDRESS=" << CERT_ALT_NAME_IP_ADDRESS << std::endl;
    std::cout << "CERT_ALT_NAME_OTHER_NAME=" << CERT_ALT_NAME_OTHER_NAME << std::endl;
    std::cout << "CERT_ALT_NAME_REGISTERED_ID=" << CERT_ALT_NAME_REGISTERED_ID << std::endl;
    std::cout << "CERT_ALT_NAME_RFC822_NAME=" << CERT_ALT_NAME_RFC822_NAME << std::endl;
    std::cout << "CERT_ALT_NAME_URL=" << CERT_ALT_NAME_URL << std::endl;
    std::cout << "CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT=" << CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CERT_ALT_NAME_X400_ADDRESS=" << CERT_ALT_NAME_X400_ADDRESS << std::endl;
    std::cout << "CERT_ARCHIVED_KEY_HASH_PROP_ID=" << CERT_ARCHIVED_KEY_HASH_PROP_ID << std::endl;
    std::cout << "CERT_ARCHIVED_PROP_ID=" << CERT_ARCHIVED_PROP_ID << std::endl;
    std::cout << "CERT_AUTHORITY_INFO_ACCESS_PROP_ID=" << CERT_AUTHORITY_INFO_ACCESS_PROP_ID << std::endl;
    std::cout << "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG=" << CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG << std::endl;
    std::cout << "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG=" << CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG << std::endl;
    std::cout << "CERT_AUTH_ROOT_SHA256_HASH_PROP_ID=" << CERT_AUTH_ROOT_SHA256_HASH_PROP_ID << std::endl;
    std::cout << "CERT_AUTO_ENROLL_PROP_ID=" << CERT_AUTO_ENROLL_PROP_ID << std::endl;
    std::cout << "CERT_AUTO_ENROLL_RETRY_PROP_ID=" << CERT_AUTO_ENROLL_RETRY_PROP_ID << std::endl;
    std::cout << "CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG=" << CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG << std::endl;
    std::cout << "CERT_BACKED_UP_PROP_ID=" << CERT_BACKED_UP_PROP_ID << std::endl;
    std::cout << "CERT_BIOMETRIC_OID_DATA_CHOICE=" << CERT_BIOMETRIC_OID_DATA_CHOICE << std::endl;
    std::cout << "CERT_BIOMETRIC_PICTURE_TYPE=" << CERT_BIOMETRIC_PICTURE_TYPE << std::endl;
    std::cout << "CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE=" << CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE << std::endl;
    std::cout << "CERT_BIOMETRIC_SIGNATURE_TYPE=" << CERT_BIOMETRIC_SIGNATURE_TYPE << std::endl;
    std::cout << "CERT_BUNDLE_CERTIFICATE=" << CERT_BUNDLE_CERTIFICATE << std::endl;
    std::cout << "CERT_BUNDLE_CRL=" << CERT_BUNDLE_CRL << std::endl;
    std::cout << "CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG=" << CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG << std::endl;
    std::cout << "CERT_CA_DISABLE_CRL_PROP_ID=" << CERT_CA_DISABLE_CRL_PROP_ID << std::endl;
    std::cout << "CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID=" << CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID << std::endl;
    std::cout << "CERT_CA_SUBJECT_FLAG=" << CERT_CA_SUBJECT_FLAG << std::endl;
    std::cout << "CERT_CEP_PROP_ID=" << CERT_CEP_PROP_ID << std::endl;
    std::cout << "CERT_CHAIN_AUTO_CURRENT_USER=" << CERT_CHAIN_AUTO_CURRENT_USER << std::endl;
    std::cout << "CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG=" << CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_DEFAULT=" << CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_DEFAULT=" << CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_AUTO_HPKP_RULE_INFO=" << CERT_CHAIN_AUTO_HPKP_RULE_INFO << std::endl;
    std::cout << "CERT_CHAIN_AUTO_IMPERSONATED=" << CERT_CHAIN_AUTO_IMPERSONATED << std::endl;
    std::cout << "CERT_CHAIN_AUTO_LOCAL_MACHINE=" << CERT_CHAIN_AUTO_LOCAL_MACHINE << std::endl;
    std::cout << "CERT_CHAIN_AUTO_LOG_CREATE_FLAG=" << CERT_CHAIN_AUTO_LOG_CREATE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_AUTO_LOG_FLAGS=" << CERT_CHAIN_AUTO_LOG_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_AUTO_LOG_FLUSH_FLAG=" << CERT_CHAIN_AUTO_LOG_FLUSH_FLAG << std::endl;
    std::cout << "CERT_CHAIN_AUTO_LOG_FREE_FLAG=" << CERT_CHAIN_AUTO_LOG_FREE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_AUTO_NETWORK_INFO=" << CERT_CHAIN_AUTO_NETWORK_INFO << std::endl;
    std::cout << "CERT_CHAIN_AUTO_PINRULE_INFO=" << CERT_CHAIN_AUTO_PINRULE_INFO << std::endl;
    std::cout << "CERT_CHAIN_AUTO_PROCESS_INFO=" << CERT_CHAIN_AUTO_PROCESS_INFO << std::endl;
    std::cout << "CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE=" << CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE << std::endl;
    std::cout << "CERT_CHAIN_CACHE_END_CERT=" << CERT_CHAIN_CACHE_END_CERT << std::endl;
    std::cout << "CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL=" << CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL << std::endl;
    std::cout << "CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT=" << CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT=" << CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_AIA=" << CERT_CHAIN_DISABLE_AIA << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG=" << CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE=" << CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG=" << CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAGS=" << CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MD2_MD4=" << CERT_CHAIN_DISABLE_MD2_MD4 << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG=" << CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG=" << CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_MY_PEER_TRUST=" << CERT_CHAIN_DISABLE_MY_PEER_TRUST << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING=" << CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG=" << CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAGS=" << CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG=" << CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_DISABLE_WEAK_FLAGS=" << CERT_CHAIN_DISABLE_WEAK_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE=" << CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_HYGIENE_FLAGS=" << CERT_CHAIN_ENABLE_HYGIENE_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_MD2_MD4_FLAG=" << CERT_CHAIN_ENABLE_MD2_MD4_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG=" << CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_PEER_TRUST=" << CERT_CHAIN_ENABLE_PEER_TRUST << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_SHARE_STORE=" << CERT_CHAIN_ENABLE_SHARE_STORE << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG=" << CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG=" << CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG=" << CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG << std::endl;
    std::cout << "CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG=" << CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG << std::endl;
    std::cout << "CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG=" << CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER=" << CERT_CHAIN_FIND_BY_ISSUER << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG=" << CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG << std::endl;
    std::cout << "CERT_CHAIN_HAS_MOTW=" << CERT_CHAIN_HAS_MOTW << std::endl;
    std::cout << "CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT=" << CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT=" << CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT=" << CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT=" << CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT=" << CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE=" << CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE << std::endl;
    std::cout << "CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT=" << CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE=" << CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE << std::endl;
    std::cout << "CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT=" << CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG=" << CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_MOTW_WEAK_FLAGS=" << CERT_CHAIN_MOTW_WEAK_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT=" << CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT=" << CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT << std::endl;
    std::cout << "CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL=" << CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL << std::endl;
    std::cout << "CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL=" << CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL << std::endl;
    std::cout << "CERT_CHAIN_OPT_IN_WEAK_FLAGS=" << CERT_CHAIN_OPT_IN_WEAK_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_OPT_IN_WEAK_SIGNATURE=" << CERT_CHAIN_OPT_IN_WEAK_SIGNATURE << std::endl;
    std::cout << "CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG=" << CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG=" << CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_AUTHENTICODE=" << CERT_CHAIN_POLICY_AUTHENTICODE << std::endl;
    std::cout << "CERT_CHAIN_POLICY_AUTHENTICODE_TS=" << CERT_CHAIN_POLICY_AUTHENTICODE_TS << std::endl;
    std::cout << "CERT_CHAIN_POLICY_BASE=" << CERT_CHAIN_POLICY_BASE << std::endl;
    std::cout << "CERT_CHAIN_POLICY_BASIC_CONSTRAINTS=" << CERT_CHAIN_POLICY_BASIC_CONSTRAINTS << std::endl;
    std::cout << "CERT_CHAIN_POLICY_EV=" << CERT_CHAIN_POLICY_EV << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS=" << CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS=" << CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG=" << CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG=" << CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG=" << CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG=" << CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG=" << CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG=" << CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG=" << CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG=" << CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG=" << CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG=" << CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG=" << CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG=" << CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG=" << CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG << std::endl;
    std::cout << "CERT_CHAIN_POLICY_MICROSOFT_ROOT=" << CERT_CHAIN_POLICY_MICROSOFT_ROOT << std::endl;
    std::cout << "CERT_CHAIN_POLICY_NT_AUTH=" << CERT_CHAIN_POLICY_NT_AUTH << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL=" << CERT_CHAIN_POLICY_SSL << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12=" << CERT_CHAIN_POLICY_SSL_F12 << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL=" << CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY=" << CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY=" << CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL=" << CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL=" << CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY=" << CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_HPKP_HEADER=" << CERT_CHAIN_POLICY_SSL_HPKP_HEADER << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN=" << CERT_CHAIN_POLICY_SSL_KEY_PIN << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR=" << CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING=" << CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR=" << CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING=" << CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING << std::endl;
    std::cout << "CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS=" << CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS << std::endl;
    std::cout << "CERT_CHAIN_POLICY_THIRD_PARTY_ROOT=" << CERT_CHAIN_POLICY_THIRD_PARTY_ROOT << std::endl;
    std::cout << "CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG=" << CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG << std::endl;
    std::cout << "CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS=" << CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT=" << CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY=" << CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_CHECK_CHAIN=" << CERT_CHAIN_REVOCATION_CHECK_CHAIN << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT=" << CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_CHECK_END_CERT=" << CERT_CHAIN_REVOCATION_CHECK_END_CERT << std::endl;
    std::cout << "CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT=" << CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT << std::endl;
    std::cout << "CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT=" << CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG=" << CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG << std::endl;
    std::cout << "CERT_CHAIN_THREAD_STORE_SYNC=" << CERT_CHAIN_THREAD_STORE_SYNC << std::endl;
    std::cout << "CERT_CHAIN_TIMESTAMP_TIME=" << CERT_CHAIN_TIMESTAMP_TIME << std::endl;
    std::cout << "CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT=" << CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT << std::endl;
    std::cout << "CERT_CHAIN_USE_LOCAL_MACHINE_STORE=" << CERT_CHAIN_USE_LOCAL_MACHINE_STORE << std::endl;
    std::cout << "CERT_CLOSE_STORE_CHECK_FLAG=" << CERT_CLOSE_STORE_CHECK_FLAG << std::endl;
    std::cout << "CERT_CLOSE_STORE_FORCE_FLAG=" << CERT_CLOSE_STORE_FORCE_FLAG << std::endl;
    std::cout << "CERT_CLR_DELETE_KEY_PROP_ID=" << CERT_CLR_DELETE_KEY_PROP_ID << std::endl;
    std::cout << "CERT_COMPARE_ANY=" << CERT_COMPARE_ANY << std::endl;
    std::cout << "CERT_COMPARE_ATTR=" << CERT_COMPARE_ATTR << std::endl;
    std::cout << "CERT_COMPARE_CERT_ID=" << CERT_COMPARE_CERT_ID << std::endl;
    std::cout << "CERT_COMPARE_CROSS_CERT_DIST_POINTS=" << CERT_COMPARE_CROSS_CERT_DIST_POINTS << std::endl;
    std::cout << "CERT_COMPARE_CTL_USAGE=" << CERT_COMPARE_CTL_USAGE << std::endl;
    std::cout << "CERT_COMPARE_ENHKEY_USAGE=" << CERT_COMPARE_ENHKEY_USAGE << std::endl;
    std::cout << "CERT_COMPARE_EXISTING=" << CERT_COMPARE_EXISTING << std::endl;
    std::cout << "CERT_COMPARE_HASH=" << CERT_COMPARE_HASH << std::endl;
    std::cout << "CERT_COMPARE_HASH_STR=" << CERT_COMPARE_HASH_STR << std::endl;
    std::cout << "CERT_COMPARE_HAS_PRIVATE_KEY=" << CERT_COMPARE_HAS_PRIVATE_KEY << std::endl;
    std::cout << "CERT_COMPARE_ISSUER_OF=" << CERT_COMPARE_ISSUER_OF << std::endl;
    std::cout << "CERT_COMPARE_KEY_IDENTIFIER=" << CERT_COMPARE_KEY_IDENTIFIER << std::endl;
    std::cout << "CERT_COMPARE_KEY_SPEC=" << CERT_COMPARE_KEY_SPEC << std::endl;
    std::cout << "CERT_COMPARE_MD5_HASH=" << CERT_COMPARE_MD5_HASH << std::endl;
    std::cout << "CERT_COMPARE_NAME=" << CERT_COMPARE_NAME << std::endl;
    std::cout << "CERT_COMPARE_NAME_STR_A=" << CERT_COMPARE_NAME_STR_A << std::endl;
    std::cout << "CERT_COMPARE_NAME_STR_W=" << CERT_COMPARE_NAME_STR_W << std::endl;
    std::cout << "CERT_COMPARE_PROPERTY=" << CERT_COMPARE_PROPERTY << std::endl;
    std::cout << "CERT_COMPARE_PUBKEY_MD5_HASH=" << CERT_COMPARE_PUBKEY_MD5_HASH << std::endl;
    std::cout << "CERT_COMPARE_PUBLIC_KEY=" << CERT_COMPARE_PUBLIC_KEY << std::endl;
    std::cout << "CERT_COMPARE_SHA1_HASH=" << CERT_COMPARE_SHA1_HASH << std::endl;
    std::cout << "CERT_COMPARE_SHIFT=" << CERT_COMPARE_SHIFT << std::endl;
    std::cout << "CERT_COMPARE_SIGNATURE_HASH=" << CERT_COMPARE_SIGNATURE_HASH << std::endl;
    std::cout << "CERT_COMPARE_SUBJECT_CERT=" << CERT_COMPARE_SUBJECT_CERT << std::endl;
    std::cout << "CERT_COMPARE_SUBJECT_INFO_ACCESS=" << CERT_COMPARE_SUBJECT_INFO_ACCESS << std::endl;
    std::cout << "CERT_CONTEXT_REVOCATION_TYPE=" << CERT_CONTEXT_REVOCATION_TYPE << std::endl;
    std::cout << "CERT_CREATE_CONTEXT_NOCOPY_FLAG=" << CERT_CREATE_CONTEXT_NOCOPY_FLAG << std::endl;
    std::cout << "CERT_CREATE_CONTEXT_NO_ENTRY_FLAG=" << CERT_CREATE_CONTEXT_NO_ENTRY_FLAG << std::endl;
    std::cout << "CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG=" << CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG << std::endl;
    std::cout << "CERT_CREATE_CONTEXT_SORTED_FLAG=" << CERT_CREATE_CONTEXT_SORTED_FLAG << std::endl;
    std::cout << "CERT_CREATE_SELFSIGN_NO_KEY_INFO=" << CERT_CREATE_SELFSIGN_NO_KEY_INFO << std::endl;
    std::cout << "CERT_CREATE_SELFSIGN_NO_SIGN=" << CERT_CREATE_SELFSIGN_NO_SIGN << std::endl;
    std::cout << "CERT_CRL_SIGN_KEY_USAGE=" << CERT_CRL_SIGN_KEY_USAGE << std::endl;
    std::cout << "CERT_CROSS_CERT_DIST_POINTS_PROP_ID=" << CERT_CROSS_CERT_DIST_POINTS_PROP_ID << std::endl;
    std::cout << "CERT_CTL_USAGE_PROP_ID=" << CERT_CTL_USAGE_PROP_ID << std::endl;
    std::cout << "CERT_DATA_ENCIPHERMENT_KEY_USAGE=" << CERT_DATA_ENCIPHERMENT_KEY_USAGE << std::endl;
    std::cout << "CERT_DATE_STAMP_PROP_ID=" << CERT_DATE_STAMP_PROP_ID << std::endl;
    std::cout << "CERT_DECIPHER_ONLY_KEY_USAGE=" << CERT_DECIPHER_ONLY_KEY_USAGE << std::endl;
    std::cout << "CERT_DESCRIPTION_PROP_ID=" << CERT_DESCRIPTION_PROP_ID << std::endl;
    std::cout << "CERT_DIGITAL_SIGNATURE_KEY_USAGE=" << CERT_DIGITAL_SIGNATURE_KEY_USAGE << std::endl;
    std::cout << "CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID=" << CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID << std::endl;
    std::cout << "CERT_DISALLOWED_FILETIME_PROP_ID=" << CERT_DISALLOWED_FILETIME_PROP_ID << std::endl;
    std::cout << "CERT_DSS_R_LEN=" << CERT_DSS_R_LEN << std::endl;
    std::cout << "CERT_DSS_SIGNATURE_LEN=" << CERT_DSS_SIGNATURE_LEN << std::endl;
    std::cout << "CERT_DSS_S_LEN=" << CERT_DSS_S_LEN << std::endl;
    std::cout << "CERT_EFS_PROP_ID=" << CERT_EFS_PROP_ID << std::endl;
    std::cout << "CERT_ENCIPHER_ONLY_KEY_USAGE=" << CERT_ENCIPHER_ONLY_KEY_USAGE << std::endl;
    std::cout << "CERT_END_ENTITY_SUBJECT_FLAG=" << CERT_END_ENTITY_SUBJECT_FLAG << std::endl;
    std::cout << "CERT_ENHKEY_USAGE_PROP_ID=" << CERT_ENHKEY_USAGE_PROP_ID << std::endl;
    std::cout << "CERT_ENROLLMENT_PROP_ID=" << CERT_ENROLLMENT_PROP_ID << std::endl;
    std::cout << "CERT_EXTENDED_ERROR_INFO_PROP_ID=" << CERT_EXTENDED_ERROR_INFO_PROP_ID << std::endl;
    std::cout << "CERT_FILE_HASH_USE_TYPE=" << CERT_FILE_HASH_USE_TYPE << std::endl;
    std::cout << "CERT_FILE_STORE_COMMIT_ENABLE_FLAG=" << CERT_FILE_STORE_COMMIT_ENABLE_FLAG << std::endl;
    std::cout << "CERT_FIND_ANY=" << CERT_FIND_ANY << std::endl;
    std::cout << "CERT_FIND_CERT_ID=" << CERT_FIND_CERT_ID << std::endl;
    std::cout << "CERT_FIND_CROSS_CERT_DIST_POINTS=" << CERT_FIND_CROSS_CERT_DIST_POINTS << std::endl;
    std::cout << "CERT_FIND_CTL_USAGE=" << CERT_FIND_CTL_USAGE << std::endl;
    std::cout << "CERT_FIND_ENHKEY_USAGE=" << CERT_FIND_ENHKEY_USAGE << std::endl;
    std::cout << "CERT_FIND_EXISTING=" << CERT_FIND_EXISTING << std::endl;
    std::cout << "CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG=" << CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG=" << CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_HASH=" << CERT_FIND_HASH << std::endl;
    std::cout << "CERT_FIND_HASH_STR=" << CERT_FIND_HASH_STR << std::endl;
    std::cout << "CERT_FIND_HAS_PRIVATE_KEY=" << CERT_FIND_HAS_PRIVATE_KEY << std::endl;
    std::cout << "CERT_FIND_ISSUER_ATTR=" << CERT_FIND_ISSUER_ATTR << std::endl;
    std::cout << "CERT_FIND_ISSUER_NAME=" << CERT_FIND_ISSUER_NAME << std::endl;
    std::cout << "CERT_FIND_ISSUER_OF=" << CERT_FIND_ISSUER_OF << std::endl;
    std::cout << "CERT_FIND_ISSUER_STR=" << CERT_FIND_ISSUER_STR << std::endl;
    std::cout << "CERT_FIND_ISSUER_STR_A=" << CERT_FIND_ISSUER_STR_A << std::endl;
    std::cout << "CERT_FIND_ISSUER_STR_W=" << CERT_FIND_ISSUER_STR_W << std::endl;
    std::cout << "CERT_FIND_KEY_IDENTIFIER=" << CERT_FIND_KEY_IDENTIFIER << std::endl;
    std::cout << "CERT_FIND_KEY_SPEC=" << CERT_FIND_KEY_SPEC << std::endl;
    std::cout << "CERT_FIND_MD5_HASH=" << CERT_FIND_MD5_HASH << std::endl;
    std::cout << "CERT_FIND_NO_CTL_USAGE_FLAG=" << CERT_FIND_NO_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_NO_ENHKEY_USAGE_FLAG=" << CERT_FIND_NO_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_OPTIONAL_CTL_USAGE_FLAG=" << CERT_FIND_OPTIONAL_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG=" << CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_OR_CTL_USAGE_FLAG=" << CERT_FIND_OR_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_OR_ENHKEY_USAGE_FLAG=" << CERT_FIND_OR_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_PROPERTY=" << CERT_FIND_PROPERTY << std::endl;
    std::cout << "CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG=" << CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG=" << CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_PUBKEY_MD5_HASH=" << CERT_FIND_PUBKEY_MD5_HASH << std::endl;
    std::cout << "CERT_FIND_PUBLIC_KEY=" << CERT_FIND_PUBLIC_KEY << std::endl;
    std::cout << "CERT_FIND_SHA1_HASH=" << CERT_FIND_SHA1_HASH << std::endl;
    std::cout << "CERT_FIND_SIGNATURE_HASH=" << CERT_FIND_SIGNATURE_HASH << std::endl;
    std::cout << "CERT_FIND_SUBJECT_ATTR=" << CERT_FIND_SUBJECT_ATTR << std::endl;
    std::cout << "CERT_FIND_SUBJECT_CERT=" << CERT_FIND_SUBJECT_CERT << std::endl;
    std::cout << "CERT_FIND_SUBJECT_INFO_ACCESS=" << CERT_FIND_SUBJECT_INFO_ACCESS << std::endl;
    std::cout << "CERT_FIND_SUBJECT_NAME=" << CERT_FIND_SUBJECT_NAME << std::endl;
    std::cout << "CERT_FIND_SUBJECT_STR=" << CERT_FIND_SUBJECT_STR << std::endl;
    std::cout << "CERT_FIND_SUBJECT_STR_A=" << CERT_FIND_SUBJECT_STR_A << std::endl;
    std::cout << "CERT_FIND_SUBJECT_STR_W=" << CERT_FIND_SUBJECT_STR_W << std::endl;
    std::cout << "CERT_FIND_VALID_CTL_USAGE_FLAG=" << CERT_FIND_VALID_CTL_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIND_VALID_ENHKEY_USAGE_FLAG=" << CERT_FIND_VALID_ENHKEY_USAGE_FLAG << std::endl;
    std::cout << "CERT_FIRST_RESERVED_PROP_ID=" << CERT_FIRST_RESERVED_PROP_ID << std::endl;
    std::cout << "CERT_FIRST_USER_PROP_ID=" << CERT_FIRST_USER_PROP_ID << std::endl;
    std::cout << "CERT_FORTEZZA_DATA_PROP_ID=" << CERT_FORTEZZA_DATA_PROP_ID << std::endl;
    std::cout << "CERT_FRIENDLY_NAME_PROP_ID=" << CERT_FRIENDLY_NAME_PROP_ID << std::endl;
    std::cout << "CERT_HASH_PROP_ID=" << CERT_HASH_PROP_ID << std::endl;
    std::cout << "CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID=" << CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID << std::endl;
    std::cout << "CERT_HCRYPTPROV_TRANSFER_PROP_ID=" << CERT_HCRYPTPROV_TRANSFER_PROP_ID << std::endl;
    std::cout << "CERT_ID_ISSUER_SERIAL_NUMBER=" << CERT_ID_ISSUER_SERIAL_NUMBER << std::endl;
    std::cout << "CERT_ID_KEY_IDENTIFIER=" << CERT_ID_KEY_IDENTIFIER << std::endl;
    std::cout << "CERT_ID_SHA1_HASH=" << CERT_ID_SHA1_HASH << std::endl;
    std::cout << "CERT_IE30_RESERVED_PROP_ID=" << CERT_IE30_RESERVED_PROP_ID << std::endl;
    std::cout << "CERT_INFO_EXTENSION_FLAG=" << CERT_INFO_EXTENSION_FLAG << std::endl;
    std::cout << "CERT_INFO_ISSUER_FLAG=" << CERT_INFO_ISSUER_FLAG << std::endl;
    std::cout << "CERT_INFO_ISSUER_UNIQUE_ID_FLAG=" << CERT_INFO_ISSUER_UNIQUE_ID_FLAG << std::endl;
    std::cout << "CERT_INFO_NOT_AFTER_FLAG=" << CERT_INFO_NOT_AFTER_FLAG << std::endl;
    std::cout << "CERT_INFO_NOT_BEFORE_FLAG=" << CERT_INFO_NOT_BEFORE_FLAG << std::endl;
    std::cout << "CERT_INFO_SERIAL_NUMBER_FLAG=" << CERT_INFO_SERIAL_NUMBER_FLAG << std::endl;
    std::cout << "CERT_INFO_SIGNATURE_ALGORITHM_FLAG=" << CERT_INFO_SIGNATURE_ALGORITHM_FLAG << std::endl;
    std::cout << "CERT_INFO_SUBJECT_FLAG=" << CERT_INFO_SUBJECT_FLAG << std::endl;
    std::cout << "CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG=" << CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG << std::endl;
    std::cout << "CERT_INFO_SUBJECT_UNIQUE_ID_FLAG=" << CERT_INFO_SUBJECT_UNIQUE_ID_FLAG << std::endl;
    std::cout << "CERT_INFO_VERSION_FLAG=" << CERT_INFO_VERSION_FLAG << std::endl;
    std::cout << "CERT_ISOLATED_KEY_PROP_ID=" << CERT_ISOLATED_KEY_PROP_ID << std::endl;
    std::cout << "CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID=" << CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID << std::endl;
    std::cout << "CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID=" << CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID << std::endl;
    std::cout << "CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID=" << CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID << std::endl;
    std::cout << "CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID=" << CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID << std::endl;
    std::cout << "CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID=" << CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID << std::endl;
    std::cout << "CERT_KEYGEN_REQUEST_V1=" << CERT_KEYGEN_REQUEST_V1 << std::endl;
    std::cout << "CERT_KEY_AGREEMENT_KEY_USAGE=" << CERT_KEY_AGREEMENT_KEY_USAGE << std::endl;
    std::cout << "CERT_KEY_CERT_SIGN_KEY_USAGE=" << CERT_KEY_CERT_SIGN_KEY_USAGE << std::endl;
    std::cout << "CERT_KEY_CLASSIFICATION_PROP_ID=" << CERT_KEY_CLASSIFICATION_PROP_ID << std::endl;
    std::cout << "CERT_KEY_CONTEXT_PROP_ID=" << CERT_KEY_CONTEXT_PROP_ID << std::endl;
    std::cout << "CERT_KEY_ENCIPHERMENT_KEY_USAGE=" << CERT_KEY_ENCIPHERMENT_KEY_USAGE << std::endl;
    std::cout << "CERT_KEY_IDENTIFIER_PROP_ID=" << CERT_KEY_IDENTIFIER_PROP_ID << std::endl;
    std::cout << "CERT_KEY_PROV_HANDLE_PROP_ID=" << CERT_KEY_PROV_HANDLE_PROP_ID << std::endl;
    std::cout << "CERT_KEY_PROV_INFO_PROP_ID=" << CERT_KEY_PROV_INFO_PROP_ID << std::endl;
    std::cout << "CERT_KEY_REPAIR_ATTEMPTED_PROP_ID=" << CERT_KEY_REPAIR_ATTEMPTED_PROP_ID << std::endl;
    std::cout << "CERT_KEY_SPEC_PROP_ID=" << CERT_KEY_SPEC_PROP_ID << std::endl;
    std::cout << "CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG=" << CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG << std::endl;
    std::cout << "CERT_LDAP_STORE_OPENED_FLAG=" << CERT_LDAP_STORE_OPENED_FLAG << std::endl;
    std::cout << "CERT_LDAP_STORE_SIGN_FLAG=" << CERT_LDAP_STORE_SIGN_FLAG << std::endl;
    std::cout << "CERT_LDAP_STORE_UNBIND_FLAG=" << CERT_LDAP_STORE_UNBIND_FLAG << std::endl;
    std::cout << "CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE=" << CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE=" << CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_DIRECT_INFO_CHOICE=" << CERT_LOGOTYPE_DIRECT_INFO_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE=" << CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_INDIRECT_INFO_CHOICE=" << CERT_LOGOTYPE_INDIRECT_INFO_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE=" << CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE << std::endl;
    std::cout << "CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE=" << CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE << std::endl;
    std::cout << "CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN=" << CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN << std::endl;
    std::cout << "CERT_MD5_HASH_PROP_ID=" << CERT_MD5_HASH_PROP_ID << std::endl;
    std::cout << "CERT_NAME_ATTR_TYPE=" << CERT_NAME_ATTR_TYPE << std::endl;
    std::cout << "CERT_NAME_DISABLE_IE4_UTF8_FLAG=" << CERT_NAME_DISABLE_IE4_UTF8_FLAG << std::endl;
    std::cout << "CERT_NAME_DNS_TYPE=" << CERT_NAME_DNS_TYPE << std::endl;
    std::cout << "CERT_NAME_EMAIL_TYPE=" << CERT_NAME_EMAIL_TYPE << std::endl;
    std::cout << "CERT_NAME_FRIENDLY_DISPLAY_TYPE=" << CERT_NAME_FRIENDLY_DISPLAY_TYPE << std::endl;
    std::cout << "CERT_NAME_ISSUER_FLAG=" << CERT_NAME_ISSUER_FLAG << std::endl;
    std::cout << "CERT_NAME_RDN_TYPE=" << CERT_NAME_RDN_TYPE << std::endl;
    std::cout << "CERT_NAME_SEARCH_ALL_NAMES_FLAG=" << CERT_NAME_SEARCH_ALL_NAMES_FLAG << std::endl;
    std::cout << "CERT_NAME_SIMPLE_DISPLAY_TYPE=" << CERT_NAME_SIMPLE_DISPLAY_TYPE << std::endl;
    std::cout << "CERT_NAME_STR_COMMA_FLAG=" << CERT_NAME_STR_COMMA_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_CRLF_FLAG=" << CERT_NAME_STR_CRLF_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG=" << CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG=" << CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_ENABLE_PUNYCODE_FLAG=" << CERT_NAME_STR_ENABLE_PUNYCODE_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG=" << CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG=" << CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG=" << CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_FORWARD_FLAG=" << CERT_NAME_STR_FORWARD_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_NO_PLUS_FLAG=" << CERT_NAME_STR_NO_PLUS_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_NO_QUOTING_FLAG=" << CERT_NAME_STR_NO_QUOTING_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_REVERSE_FLAG=" << CERT_NAME_STR_REVERSE_FLAG << std::endl;
    std::cout << "CERT_NAME_STR_SEMICOLON_FLAG=" << CERT_NAME_STR_SEMICOLON_FLAG << std::endl;
    std::cout << "CERT_NAME_UPN_TYPE=" << CERT_NAME_UPN_TYPE << std::endl;
    std::cout << "CERT_NAME_URL_TYPE=" << CERT_NAME_URL_TYPE << std::endl;
    std::cout << "CERT_NCRYPT_KEY_HANDLE_PROP_ID=" << CERT_NCRYPT_KEY_HANDLE_PROP_ID << std::endl;
    std::cout << "CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID=" << CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID << std::endl;
    std::cout << "CERT_NEW_KEY_PROP_ID=" << CERT_NEW_KEY_PROP_ID << std::endl;
    std::cout << "CERT_NEXT_UPDATE_LOCATION_PROP_ID=" << CERT_NEXT_UPDATE_LOCATION_PROP_ID << std::endl;
    std::cout << "CERT_NONCOMPLIANT_ROOT_URL_PROP_ID=" << CERT_NONCOMPLIANT_ROOT_URL_PROP_ID << std::endl;
    std::cout << "CERT_NON_REPUDIATION_KEY_USAGE=" << CERT_NON_REPUDIATION_KEY_USAGE << std::endl;
    std::cout << "CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID=" << CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID << std::endl;
    std::cout << "CERT_NOT_BEFORE_FILETIME_PROP_ID=" << CERT_NOT_BEFORE_FILETIME_PROP_ID << std::endl;
    std::cout << "CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID=" << CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID << std::endl;
    std::cout << "CERT_NO_EXPIRE_NOTIFICATION_PROP_ID=" << CERT_NO_EXPIRE_NOTIFICATION_PROP_ID << std::endl;
    std::cout << "CERT_OCSP_CACHE_PREFIX_PROP_ID=" << CERT_OCSP_CACHE_PREFIX_PROP_ID << std::endl;
    std::cout << "CERT_OCSP_MUST_STAPLE_PROP_ID=" << CERT_OCSP_MUST_STAPLE_PROP_ID << std::endl;
    std::cout << "CERT_OCSP_RESPONSE_PROP_ID=" << CERT_OCSP_RESPONSE_PROP_ID << std::endl;
    std::cout << "CERT_OFFLINE_CRL_SIGN_KEY_USAGE=" << CERT_OFFLINE_CRL_SIGN_KEY_USAGE << std::endl;
    std::cout << "CERT_OID_NAME_STR=" << CERT_OID_NAME_STR << std::endl;
    std::cout << "CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG=" << CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG << std::endl;
    std::cout << "CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG=" << CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG << std::endl;
    std::cout << "CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG=" << CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG << std::endl;
    std::cout << "CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG=" << CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG << std::endl;
    std::cout << "CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG=" << CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG << std::endl;
    std::cout << "CERT_PIN_SHA256_HASH_PROP_ID=" << CERT_PIN_SHA256_HASH_PROP_ID << std::endl;
    std::cout << "CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG=" << CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG=" << CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG=" << CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG=" << CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_DISABLE_PEER_TRUST=" << CERT_PROT_ROOT_DISABLE_PEER_TRUST << std::endl;
    std::cout << "CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG=" << CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG=" << CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG << std::endl;
    std::cout << "CERT_PROT_ROOT_ONLY_LM_GPT_FLAG=" << CERT_PROT_ROOT_ONLY_LM_GPT_FLAG << std::endl;
    std::cout << "CERT_PUBKEY_ALG_PARA_PROP_ID=" << CERT_PUBKEY_ALG_PARA_PROP_ID << std::endl;
    std::cout << "CERT_PUBKEY_HASH_RESERVED_PROP_ID=" << CERT_PUBKEY_HASH_RESERVED_PROP_ID << std::endl;
    std::cout << "CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID=" << CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID << std::endl;
    std::cout << "CERT_PVK_FILE_PROP_ID=" << CERT_PVK_FILE_PROP_ID << std::endl;
    std::cout << "CERT_QUERY_CONTENT_CERT=" << CERT_QUERY_CONTENT_CERT << std::endl;
    std::cout << "CERT_QUERY_CONTENT_CERT_PAIR=" << CERT_QUERY_CONTENT_CERT_PAIR << std::endl;
    std::cout << "CERT_QUERY_CONTENT_CRL=" << CERT_QUERY_CONTENT_CRL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_CTL=" << CERT_QUERY_CONTENT_CTL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_ALL=" << CERT_QUERY_CONTENT_FLAG_ALL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT=" << CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_CERT=" << CERT_QUERY_CONTENT_FLAG_CERT << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_CERT_PAIR=" << CERT_QUERY_CONTENT_FLAG_CERT_PAIR << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_CRL=" << CERT_QUERY_CONTENT_FLAG_CRL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_CTL=" << CERT_QUERY_CONTENT_FLAG_CTL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PFX=" << CERT_QUERY_CONTENT_FLAG_PFX << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD=" << CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PKCS10=" << CERT_QUERY_CONTENT_FLAG_PKCS10 << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED=" << CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED=" << CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED=" << CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT=" << CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL=" << CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL=" << CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE=" << CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PFX=" << CERT_QUERY_CONTENT_PFX << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PFX_AND_LOAD=" << CERT_QUERY_CONTENT_PFX_AND_LOAD << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PKCS10=" << CERT_QUERY_CONTENT_PKCS10 << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PKCS7_SIGNED=" << CERT_QUERY_CONTENT_PKCS7_SIGNED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED=" << CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_PKCS7_UNSIGNED=" << CERT_QUERY_CONTENT_PKCS7_UNSIGNED << std::endl;
    std::cout << "CERT_QUERY_CONTENT_SERIALIZED_CERT=" << CERT_QUERY_CONTENT_SERIALIZED_CERT << std::endl;
    std::cout << "CERT_QUERY_CONTENT_SERIALIZED_CRL=" << CERT_QUERY_CONTENT_SERIALIZED_CRL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_SERIALIZED_CTL=" << CERT_QUERY_CONTENT_SERIALIZED_CTL << std::endl;
    std::cout << "CERT_QUERY_CONTENT_SERIALIZED_STORE=" << CERT_QUERY_CONTENT_SERIALIZED_STORE << std::endl;
    std::cout << "CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED=" << CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED << std::endl;
    std::cout << "CERT_QUERY_FORMAT_BASE64_ENCODED=" << CERT_QUERY_FORMAT_BASE64_ENCODED << std::endl;
    std::cout << "CERT_QUERY_FORMAT_BINARY=" << CERT_QUERY_FORMAT_BINARY << std::endl;
    std::cout << "CERT_QUERY_FORMAT_FLAG_ALL=" << CERT_QUERY_FORMAT_FLAG_ALL << std::endl;
    std::cout << "CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED=" << CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED << std::endl;
    std::cout << "CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED=" << CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED << std::endl;
    std::cout << "CERT_QUERY_FORMAT_FLAG_BINARY=" << CERT_QUERY_FORMAT_FLAG_BINARY << std::endl;
    std::cout << "CERT_QUERY_OBJECT_BLOB=" << CERT_QUERY_OBJECT_BLOB << std::endl;
    std::cout << "CERT_QUERY_OBJECT_FILE=" << CERT_QUERY_OBJECT_FILE << std::endl;
    std::cout << "CERT_RDN_ANY_TYPE=" << CERT_RDN_ANY_TYPE << std::endl;
    std::cout << "CERT_RDN_BMP_STRING=" << CERT_RDN_BMP_STRING << std::endl;
    std::cout << "CERT_RDN_DISABLE_CHECK_TYPE_FLAG=" << CERT_RDN_DISABLE_CHECK_TYPE_FLAG << std::endl;
    std::cout << "CERT_RDN_DISABLE_IE4_UTF8_FLAG=" << CERT_RDN_DISABLE_IE4_UTF8_FLAG << std::endl;
    std::cout << "CERT_RDN_ENABLE_PUNYCODE_FLAG=" << CERT_RDN_ENABLE_PUNYCODE_FLAG << std::endl;
    std::cout << "CERT_RDN_ENABLE_T61_UNICODE_FLAG=" << CERT_RDN_ENABLE_T61_UNICODE_FLAG << std::endl;
    std::cout << "CERT_RDN_ENABLE_UTF8_UNICODE_FLAG=" << CERT_RDN_ENABLE_UTF8_UNICODE_FLAG << std::endl;
    std::cout << "CERT_RDN_ENCODED_BLOB=" << CERT_RDN_ENCODED_BLOB << std::endl;
    std::cout << "CERT_RDN_FORCE_UTF8_UNICODE_FLAG=" << CERT_RDN_FORCE_UTF8_UNICODE_FLAG << std::endl;
    std::cout << "CERT_RDN_GENERAL_STRING=" << CERT_RDN_GENERAL_STRING << std::endl;
    std::cout << "CERT_RDN_GRAPHIC_STRING=" << CERT_RDN_GRAPHIC_STRING << std::endl;
    std::cout << "CERT_RDN_IA5_STRING=" << CERT_RDN_IA5_STRING << std::endl;
    std::cout << "CERT_RDN_INT4_STRING=" << CERT_RDN_INT4_STRING << std::endl;
    std::cout << "CERT_RDN_ISO646_STRING=" << CERT_RDN_ISO646_STRING << std::endl;
    std::cout << "CERT_RDN_NUMERIC_STRING=" << CERT_RDN_NUMERIC_STRING << std::endl;
    std::cout << "CERT_RDN_OCTET_STRING=" << CERT_RDN_OCTET_STRING << std::endl;
    std::cout << "CERT_RDN_PRINTABLE_STRING=" << CERT_RDN_PRINTABLE_STRING << std::endl;
    std::cout << "CERT_RDN_T61_STRING=" << CERT_RDN_T61_STRING << std::endl;
    std::cout << "CERT_RDN_TELETEX_STRING=" << CERT_RDN_TELETEX_STRING << std::endl;
    std::cout << "CERT_RDN_UNICODE_STRING=" << CERT_RDN_UNICODE_STRING << std::endl;
    std::cout << "CERT_RDN_UNIVERSAL_STRING=" << CERT_RDN_UNIVERSAL_STRING << std::endl;
    std::cout << "CERT_RDN_UTF8_STRING=" << CERT_RDN_UTF8_STRING << std::endl;
    std::cout << "CERT_RDN_VIDEOTEX_STRING=" << CERT_RDN_VIDEOTEX_STRING << std::endl;
    std::cout << "CERT_RDN_VISIBLE_STRING=" << CERT_RDN_VISIBLE_STRING << std::endl;
    std::cout << "CERT_REGISTRY_STORE_CLIENT_GPT_FLAG=" << CERT_REGISTRY_STORE_CLIENT_GPT_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_EXTERNAL_FLAG=" << CERT_REGISTRY_STORE_EXTERNAL_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_LM_GPT_FLAG=" << CERT_REGISTRY_STORE_LM_GPT_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG=" << CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_REMOTE_FLAG=" << CERT_REGISTRY_STORE_REMOTE_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_ROAMING_FLAG=" << CERT_REGISTRY_STORE_ROAMING_FLAG << std::endl;
    std::cout << "CERT_REGISTRY_STORE_SERIALIZED_FLAG=" << CERT_REGISTRY_STORE_SERIALIZED_FLAG << std::endl;
    std::cout << "CERT_RENEWAL_PROP_ID=" << CERT_RENEWAL_PROP_ID << std::endl;
    std::cout << "CERT_REQUEST_ORIGINATOR_PROP_ID=" << CERT_REQUEST_ORIGINATOR_PROP_ID << std::endl;
    std::cout << "CERT_REQUEST_V1=" << CERT_REQUEST_V1 << std::endl;
    std::cout << "CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE=" << CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE << std::endl;
    std::cout << "CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE=" << CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE << std::endl;
    std::cout << "CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE=" << CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE << std::endl;
    std::cout << "CERT_RETRIEVE_COMMUNITY_LOGO=" << CERT_RETRIEVE_COMMUNITY_LOGO << std::endl;
    std::cout << "CERT_RETRIEVE_ISSUER_LOGO=" << CERT_RETRIEVE_ISSUER_LOGO << std::endl;
    std::cout << "CERT_RETRIEVE_SUBJECT_LOGO=" << CERT_RETRIEVE_SUBJECT_LOGO << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID=" << CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID=" << CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_FLAG_ADDRESS=" << CERT_ROOT_PROGRAM_FLAG_ADDRESS << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_FLAG_LSC=" << CERT_ROOT_PROGRAM_FLAG_LSC << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_FLAG_ORG=" << CERT_ROOT_PROGRAM_FLAG_ORG << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_FLAG_OU=" << CERT_ROOT_PROGRAM_FLAG_OU << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO=" << CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO << std::endl;
    std::cout << "CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID=" << CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID << std::endl;
    std::cout << "CERT_SCARD_PIN_ID_PROP_ID=" << CERT_SCARD_PIN_ID_PROP_ID << std::endl;
    std::cout << "CERT_SCARD_PIN_INFO_PROP_ID=" << CERT_SCARD_PIN_INFO_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_CA_CERT_PROP_ID=" << CERT_SCEP_CA_CERT_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID=" << CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_FLAGS_PROP_ID=" << CERT_SCEP_FLAGS_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_GUID_PROP_ID=" << CERT_SCEP_GUID_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_NONCE_PROP_ID=" << CERT_SCEP_NONCE_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID=" << CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID=" << CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_SERVER_CERTS_PROP_ID=" << CERT_SCEP_SERVER_CERTS_PROP_ID << std::endl;
    std::cout << "CERT_SCEP_SIGNER_CERT_PROP_ID=" << CERT_SCEP_SIGNER_CERT_PROP_ID << std::endl;
    std::cout << "CERT_SELECT_ALLOW_DUPLICATES=" << CERT_SELECT_ALLOW_DUPLICATES << std::endl;
    std::cout << "CERT_SELECT_ALLOW_EXPIRED=" << CERT_SELECT_ALLOW_EXPIRED << std::endl;
    std::cout << "CERT_SELECT_BY_ENHKEY_USAGE=" << CERT_SELECT_BY_ENHKEY_USAGE << std::endl;
    std::cout << "CERT_SELECT_BY_EXTENSION=" << CERT_SELECT_BY_EXTENSION << std::endl;
    std::cout << "CERT_SELECT_BY_FRIENDLYNAME=" << CERT_SELECT_BY_FRIENDLYNAME << std::endl;
    std::cout << "CERT_SELECT_BY_ISSUER_ATTR=" << CERT_SELECT_BY_ISSUER_ATTR << std::endl;
    std::cout << "CERT_SELECT_BY_ISSUER_DISPLAYNAME=" << CERT_SELECT_BY_ISSUER_DISPLAYNAME << std::endl;
    std::cout << "CERT_SELECT_BY_ISSUER_NAME=" << CERT_SELECT_BY_ISSUER_NAME << std::endl;
    std::cout << "CERT_SELECT_BY_KEY_USAGE=" << CERT_SELECT_BY_KEY_USAGE << std::endl;
    std::cout << "CERT_SELECT_BY_POLICY_OID=" << CERT_SELECT_BY_POLICY_OID << std::endl;
    std::cout << "CERT_SELECT_BY_PROV_NAME=" << CERT_SELECT_BY_PROV_NAME << std::endl;
    std::cout << "CERT_SELECT_BY_PUBLIC_KEY=" << CERT_SELECT_BY_PUBLIC_KEY << std::endl;
    std::cout << "CERT_SELECT_BY_SUBJECT_ATTR=" << CERT_SELECT_BY_SUBJECT_ATTR << std::endl;
    std::cout << "CERT_SELECT_BY_SUBJECT_HOST_NAME=" << CERT_SELECT_BY_SUBJECT_HOST_NAME << std::endl;
    std::cout << "CERT_SELECT_BY_THUMBPRINT=" << CERT_SELECT_BY_THUMBPRINT << std::endl;
    std::cout << "CERT_SELECT_BY_TLS_SIGNATURES=" << CERT_SELECT_BY_TLS_SIGNATURES << std::endl;
    std::cout << "CERT_SELECT_DISALLOW_SELFSIGNED=" << CERT_SELECT_DISALLOW_SELFSIGNED << std::endl;
    std::cout << "CERT_SELECT_HARDWARE_ONLY=" << CERT_SELECT_HARDWARE_ONLY << std::endl;
    std::cout << "CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE=" << CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE << std::endl;
    std::cout << "CERT_SELECT_HAS_KEY_FOR_SIGNATURE=" << CERT_SELECT_HAS_KEY_FOR_SIGNATURE << std::endl;
    std::cout << "CERT_SELECT_HAS_PRIVATE_KEY=" << CERT_SELECT_HAS_PRIVATE_KEY << std::endl;
    std::cout << "CERT_SELECT_IGNORE_AUTOSELECT=" << CERT_SELECT_IGNORE_AUTOSELECT << std::endl;
    std::cout << "CERT_SELECT_LAST=" << CERT_SELECT_LAST << std::endl;
    std::cout << "CERT_SELECT_MAX=" << CERT_SELECT_MAX << std::endl;
    std::cout << "CERT_SELECT_MAX_PARA=" << CERT_SELECT_MAX_PARA << std::endl;
    std::cout << "CERT_SELECT_TRUSTED_ROOT=" << CERT_SELECT_TRUSTED_ROOT << std::endl;
    std::cout << "CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID=" << CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID << std::endl;
    std::cout << "CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID=" << CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID << std::endl;
    std::cout << "CERT_SERIAL_CHAIN_PROP_ID=" << CERT_SERIAL_CHAIN_PROP_ID << std::endl;
    std::cout << "CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG=" << CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG << std::endl;
    std::cout << "CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG=" << CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG << std::endl;
    std::cout << "CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG=" << CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG << std::endl;
    std::cout << "CERT_SET_KEY_CONTEXT_PROP_ID=" << CERT_SET_KEY_CONTEXT_PROP_ID << std::endl;
    std::cout << "CERT_SET_KEY_PROV_HANDLE_PROP_ID=" << CERT_SET_KEY_PROV_HANDLE_PROP_ID << std::endl;
    std::cout << "CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG=" << CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG << std::endl;
    std::cout << "CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG=" << CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG << std::endl;
    std::cout << "CERT_SHA1_HASH_PROP_ID=" << CERT_SHA1_HASH_PROP_ID << std::endl;
    std::cout << "CERT_SHA256_HASH_PROP_ID=" << CERT_SHA256_HASH_PROP_ID << std::endl;
    std::cout << "CERT_SIGNATURE_HASH_PROP_ID=" << CERT_SIGNATURE_HASH_PROP_ID << std::endl;
    std::cout << "CERT_SIGN_HASH_CNG_ALG_PROP_ID=" << CERT_SIGN_HASH_CNG_ALG_PROP_ID << std::endl;
    std::cout << "CERT_SIMPLE_NAME_STR=" << CERT_SIMPLE_NAME_STR << std::endl;
    std::cout << "CERT_SMART_CARD_DATA_PROP_ID=" << CERT_SMART_CARD_DATA_PROP_ID << std::endl;
    std::cout << "CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID=" << CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID << std::endl;
    std::cout << "CERT_SMART_CARD_READER_PROP_ID=" << CERT_SMART_CARD_READER_PROP_ID << std::endl;
    std::cout << "CERT_SMART_CARD_ROOT_INFO_PROP_ID=" << CERT_SMART_CARD_ROOT_INFO_PROP_ID << std::endl;
    std::cout << "CERT_SOURCE_LOCATION_PROP_ID=" << CERT_SOURCE_LOCATION_PROP_ID << std::endl;
    std::cout << "CERT_SOURCE_URL_PROP_ID=" << CERT_SOURCE_URL_PROP_ID << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT << std::endl;
    std::cout << "CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT=" << CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT << std::endl;
    std::cout << "CERT_STORE_ADD_ALWAYS=" << CERT_STORE_ADD_ALWAYS << std::endl;
    std::cout << "CERT_STORE_ADD_NEW=" << CERT_STORE_ADD_NEW << std::endl;
    std::cout << "CERT_STORE_ADD_NEWER=" << CERT_STORE_ADD_NEWER << std::endl;
    std::cout << "CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES=" << CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES << std::endl;
    std::cout << "CERT_STORE_ADD_REPLACE_EXISTING=" << CERT_STORE_ADD_REPLACE_EXISTING << std::endl;
    std::cout << "CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES=" << CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES << std::endl;
    std::cout << "CERT_STORE_ADD_USE_EXISTING=" << CERT_STORE_ADD_USE_EXISTING << std::endl;
    std::cout << "CERT_STORE_BACKUP_RESTORE_FLAG=" << CERT_STORE_BACKUP_RESTORE_FLAG << std::endl;
    std::cout << "CERT_STORE_BASE_CRL_FLAG=" << CERT_STORE_BASE_CRL_FLAG << std::endl;
    std::cout << "CERT_STORE_CERTIFICATE_CONTEXT=" << CERT_STORE_CERTIFICATE_CONTEXT << std::endl;
    std::cout << "CERT_STORE_CERTIFICATE_CONTEXT_FLAG=" << CERT_STORE_CERTIFICATE_CONTEXT_FLAG << std::endl;
    std::cout << "CERT_STORE_CREATE_NEW_FLAG=" << CERT_STORE_CREATE_NEW_FLAG << std::endl;
    std::cout << "CERT_STORE_CRL_CONTEXT=" << CERT_STORE_CRL_CONTEXT << std::endl;
    std::cout << "CERT_STORE_CRL_CONTEXT_FLAG=" << CERT_STORE_CRL_CONTEXT_FLAG << std::endl;
    std::cout << "CERT_STORE_CTL_CONTEXT=" << CERT_STORE_CTL_CONTEXT << std::endl;
    std::cout << "CERT_STORE_CTL_CONTEXT_FLAG=" << CERT_STORE_CTL_CONTEXT_FLAG << std::endl;
    std::cout << "CERT_STORE_CTRL_AUTO_RESYNC=" << CERT_STORE_CTRL_AUTO_RESYNC << std::endl;
    std::cout << "CERT_STORE_CTRL_CANCEL_NOTIFY=" << CERT_STORE_CTRL_CANCEL_NOTIFY << std::endl;
    std::cout << "CERT_STORE_CTRL_COMMIT=" << CERT_STORE_CTRL_COMMIT << std::endl;
    std::cout << "CERT_STORE_CTRL_COMMIT_CLEAR_FLAG=" << CERT_STORE_CTRL_COMMIT_CLEAR_FLAG << std::endl;
    std::cout << "CERT_STORE_CTRL_COMMIT_FORCE_FLAG=" << CERT_STORE_CTRL_COMMIT_FORCE_FLAG << std::endl;
    std::cout << "CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG=" << CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG << std::endl;
    std::cout << "CERT_STORE_CTRL_NOTIFY_CHANGE=" << CERT_STORE_CTRL_NOTIFY_CHANGE << std::endl;
    std::cout << "CERT_STORE_CTRL_RESYNC=" << CERT_STORE_CTRL_RESYNC << std::endl;
    std::cout << "CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG=" << CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG << std::endl;
    std::cout << "CERT_STORE_DELETE_FLAG=" << CERT_STORE_DELETE_FLAG << std::endl;
    std::cout << "CERT_STORE_DELTA_CRL_FLAG=" << CERT_STORE_DELTA_CRL_FLAG << std::endl;
    std::cout << "CERT_STORE_ENUM_ARCHIVED_FLAG=" << CERT_STORE_ENUM_ARCHIVED_FLAG << std::endl;
    std::cout << "CERT_STORE_LOCALIZED_NAME_PROP_ID=" << CERT_STORE_LOCALIZED_NAME_PROP_ID << std::endl;
    std::cout << "CERT_STORE_MANIFOLD_FLAG=" << CERT_STORE_MANIFOLD_FLAG << std::endl;
    std::cout << "CERT_STORE_MAXIMUM_ALLOWED_FLAG=" << CERT_STORE_MAXIMUM_ALLOWED_FLAG << std::endl;
    std::cout << "CERT_STORE_NO_CRL_FLAG=" << CERT_STORE_NO_CRL_FLAG << std::endl;
    std::cout << "CERT_STORE_NO_CRYPT_RELEASE_FLAG=" << CERT_STORE_NO_CRYPT_RELEASE_FLAG << std::endl;
    std::cout << "CERT_STORE_NO_ISSUER_FLAG=" << CERT_STORE_NO_ISSUER_FLAG << std::endl;
    std::cout << "CERT_STORE_OPEN_EXISTING_FLAG=" << CERT_STORE_OPEN_EXISTING_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_CLOSE_FUNC=" << CERT_STORE_PROV_CLOSE_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_COLLECTION=" << CERT_STORE_PROV_COLLECTION << std::endl;
    std::cout << "CERT_STORE_PROV_CONTROL_FUNC=" << CERT_STORE_PROV_CONTROL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_DELETED_FLAG=" << CERT_STORE_PROV_DELETED_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_DELETE_CERT_FUNC=" << CERT_STORE_PROV_DELETE_CERT_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_DELETE_CRL_FUNC=" << CERT_STORE_PROV_DELETE_CRL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_DELETE_CTL_FUNC=" << CERT_STORE_PROV_DELETE_CTL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_EXTERNAL_FLAG=" << CERT_STORE_PROV_EXTERNAL_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_FILE=" << CERT_STORE_PROV_FILE << std::endl;
    std::cout << "CERT_STORE_PROV_FILENAME=" << CERT_STORE_PROV_FILENAME << std::endl;
    std::cout << "CERT_STORE_PROV_FILENAME_A=" << CERT_STORE_PROV_FILENAME_A << std::endl;
    std::cout << "CERT_STORE_PROV_FILENAME_W=" << CERT_STORE_PROV_FILENAME_W << std::endl;
    std::cout << "CERT_STORE_PROV_FIND_CERT_FUNC=" << CERT_STORE_PROV_FIND_CERT_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_FIND_CRL_FUNC=" << CERT_STORE_PROV_FIND_CRL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_FIND_CTL_FUNC=" << CERT_STORE_PROV_FIND_CTL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_FREE_FIND_CERT_FUNC=" << CERT_STORE_PROV_FREE_FIND_CERT_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_FREE_FIND_CRL_FUNC=" << CERT_STORE_PROV_FREE_FIND_CRL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_FREE_FIND_CTL_FUNC=" << CERT_STORE_PROV_FREE_FIND_CTL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC=" << CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC=" << CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC=" << CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG=" << CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_LDAP=" << CERT_STORE_PROV_LDAP << std::endl;
    std::cout << "CERT_STORE_PROV_LDAP_W=" << CERT_STORE_PROV_LDAP_W << std::endl;
    std::cout << "CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG=" << CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_MEMORY=" << CERT_STORE_PROV_MEMORY << std::endl;
    std::cout << "CERT_STORE_PROV_MSG=" << CERT_STORE_PROV_MSG << std::endl;
    std::cout << "CERT_STORE_PROV_NO_PERSIST_FLAG=" << CERT_STORE_PROV_NO_PERSIST_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_PHYSICAL=" << CERT_STORE_PROV_PHYSICAL << std::endl;
    std::cout << "CERT_STORE_PROV_PHYSICAL_W=" << CERT_STORE_PROV_PHYSICAL_W << std::endl;
    std::cout << "CERT_STORE_PROV_PKCS12=" << CERT_STORE_PROV_PKCS12 << std::endl;
    std::cout << "CERT_STORE_PROV_PKCS7=" << CERT_STORE_PROV_PKCS7 << std::endl;
    std::cout << "CERT_STORE_PROV_READ_CERT_FUNC=" << CERT_STORE_PROV_READ_CERT_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_READ_CRL_FUNC=" << CERT_STORE_PROV_READ_CRL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_READ_CTL_FUNC=" << CERT_STORE_PROV_READ_CTL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_REG=" << CERT_STORE_PROV_REG << std::endl;
    std::cout << "CERT_STORE_PROV_SERIALIZED=" << CERT_STORE_PROV_SERIALIZED << std::endl;
    std::cout << "CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC=" << CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC=" << CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC=" << CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_SHARED_USER_FLAG=" << CERT_STORE_PROV_SHARED_USER_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_SMART_CARD=" << CERT_STORE_PROV_SMART_CARD << std::endl;
    std::cout << "CERT_STORE_PROV_SMART_CARD_W=" << CERT_STORE_PROV_SMART_CARD_W << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM=" << CERT_STORE_PROV_SYSTEM << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_A=" << CERT_STORE_PROV_SYSTEM_A << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_REGISTRY=" << CERT_STORE_PROV_SYSTEM_REGISTRY << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_REGISTRY_A=" << CERT_STORE_PROV_SYSTEM_REGISTRY_A << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_REGISTRY_W=" << CERT_STORE_PROV_SYSTEM_REGISTRY_W << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_STORE_FLAG=" << CERT_STORE_PROV_SYSTEM_STORE_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_SYSTEM_W=" << CERT_STORE_PROV_SYSTEM_W << std::endl;
    std::cout << "CERT_STORE_PROV_WRITE_ADD_FLAG=" << CERT_STORE_PROV_WRITE_ADD_FLAG << std::endl;
    std::cout << "CERT_STORE_PROV_WRITE_CERT_FUNC=" << CERT_STORE_PROV_WRITE_CERT_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_WRITE_CRL_FUNC=" << CERT_STORE_PROV_WRITE_CRL_FUNC << std::endl;
    std::cout << "CERT_STORE_PROV_WRITE_CTL_FUNC=" << CERT_STORE_PROV_WRITE_CTL_FUNC << std::endl;
    std::cout << "CERT_STORE_READONLY_FLAG=" << CERT_STORE_READONLY_FLAG << std::endl;
    std::cout << "CERT_STORE_REVOCATION_FLAG=" << CERT_STORE_REVOCATION_FLAG << std::endl;
    std::cout << "CERT_STORE_SAVE_AS_PKCS12=" << CERT_STORE_SAVE_AS_PKCS12 << std::endl;
    std::cout << "CERT_STORE_SAVE_AS_PKCS7=" << CERT_STORE_SAVE_AS_PKCS7 << std::endl;
    std::cout << "CERT_STORE_SAVE_AS_STORE=" << CERT_STORE_SAVE_AS_STORE << std::endl;
    std::cout << "CERT_STORE_SAVE_TO_FILE=" << CERT_STORE_SAVE_TO_FILE << std::endl;
    std::cout << "CERT_STORE_SAVE_TO_FILENAME=" << CERT_STORE_SAVE_TO_FILENAME << std::endl;
    std::cout << "CERT_STORE_SAVE_TO_FILENAME_A=" << CERT_STORE_SAVE_TO_FILENAME_A << std::endl;
    std::cout << "CERT_STORE_SAVE_TO_FILENAME_W=" << CERT_STORE_SAVE_TO_FILENAME_W << std::endl;
    std::cout << "CERT_STORE_SAVE_TO_MEMORY=" << CERT_STORE_SAVE_TO_MEMORY << std::endl;
    std::cout << "CERT_STORE_SET_LOCALIZED_NAME_FLAG=" << CERT_STORE_SET_LOCALIZED_NAME_FLAG << std::endl;
    std::cout << "CERT_STORE_SHARE_CONTEXT_FLAG=" << CERT_STORE_SHARE_CONTEXT_FLAG << std::endl;
    std::cout << "CERT_STORE_SHARE_STORE_FLAG=" << CERT_STORE_SHARE_STORE_FLAG << std::endl;
    std::cout << "CERT_STORE_SIGNATURE_FLAG=" << CERT_STORE_SIGNATURE_FLAG << std::endl;
    std::cout << "CERT_STORE_TIME_VALIDITY_FLAG=" << CERT_STORE_TIME_VALIDITY_FLAG << std::endl;
    std::cout << "CERT_STORE_UNSAFE_PHYSICAL_FLAG=" << CERT_STORE_UNSAFE_PHYSICAL_FLAG << std::endl;
    std::cout << "CERT_STORE_UPDATE_KEYID_FLAG=" << CERT_STORE_UPDATE_KEYID_FLAG << std::endl;
    std::cout << "CERT_STRONG_SIGN_ENABLE_CRL_CHECK=" << CERT_STRONG_SIGN_ENABLE_CRL_CHECK << std::endl;
    std::cout << "CERT_STRONG_SIGN_ENABLE_OCSP_CHECK=" << CERT_STRONG_SIGN_ENABLE_OCSP_CHECK << std::endl;
    std::cout << "CERT_STRONG_SIGN_OID_INFO_CHOICE=" << CERT_STRONG_SIGN_OID_INFO_CHOICE << std::endl;
    std::cout << "CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE=" << CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE << std::endl;
    std::cout << "CERT_SUBJECT_DISABLE_CRL_PROP_ID=" << CERT_SUBJECT_DISABLE_CRL_PROP_ID << std::endl;
    std::cout << "CERT_SUBJECT_INFO_ACCESS_PROP_ID=" << CERT_SUBJECT_INFO_ACCESS_PROP_ID << std::endl;
    std::cout << "CERT_SUBJECT_NAME_MD5_HASH_PROP_ID=" << CERT_SUBJECT_NAME_MD5_HASH_PROP_ID << std::endl;
    std::cout << "CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID=" << CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID << std::endl;
    std::cout << "CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID=" << CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID << std::endl;
    std::cout << "CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID=" << CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_SERVICE=" << CERT_SYSTEM_STORE_CURRENT_SERVICE << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_SERVICE_ID=" << CERT_SYSTEM_STORE_CURRENT_SERVICE_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_USER=" << CERT_SYSTEM_STORE_CURRENT_USER << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY=" << CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID=" << CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_CURRENT_USER_ID=" << CERT_SYSTEM_STORE_CURRENT_USER_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_DEFER_READ_FLAG=" << CERT_SYSTEM_STORE_DEFER_READ_FLAG << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE=" << CERT_SYSTEM_STORE_LOCAL_MACHINE << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_ID=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID=" << CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_LOCATION_SHIFT=" << CERT_SYSTEM_STORE_LOCATION_SHIFT << std::endl;
    std::cout << "CERT_SYSTEM_STORE_RELOCATE_FLAG=" << CERT_SYSTEM_STORE_RELOCATE_FLAG << std::endl;
    std::cout << "CERT_SYSTEM_STORE_SERVICES=" << CERT_SYSTEM_STORE_SERVICES << std::endl;
    std::cout << "CERT_SYSTEM_STORE_SERVICES_ID=" << CERT_SYSTEM_STORE_SERVICES_ID << std::endl;
    std::cout << "CERT_SYSTEM_STORE_UNPROTECTED_FLAG=" << CERT_SYSTEM_STORE_UNPROTECTED_FLAG << std::endl;
    std::cout << "CERT_SYSTEM_STORE_USERS=" << CERT_SYSTEM_STORE_USERS << std::endl;
    std::cout << "CERT_SYSTEM_STORE_USERS_ID=" << CERT_SYSTEM_STORE_USERS_ID << std::endl;
    std::cout << "CERT_TIMESTAMP_HASH_USE_TYPE=" << CERT_TIMESTAMP_HASH_USE_TYPE << std::endl;
    std::cout << "CERT_TRUST_AUTO_UPDATE_CA_REVOCATION=" << CERT_TRUST_AUTO_UPDATE_CA_REVOCATION << std::endl;
    std::cout << "CERT_TRUST_AUTO_UPDATE_END_REVOCATION=" << CERT_TRUST_AUTO_UPDATE_END_REVOCATION << std::endl;
    std::cout << "CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID=" << CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID << std::endl;
    std::cout << "CERT_TRUST_CTL_IS_NOT_TIME_VALID=" << CERT_TRUST_CTL_IS_NOT_TIME_VALID << std::endl;
    std::cout << "CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE=" << CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE << std::endl;
    std::cout << "CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE=" << CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE << std::endl;
    std::cout << "CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE=" << CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE << std::endl;
    std::cout << "CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED=" << CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED << std::endl;
    std::cout << "CERT_TRUST_HAS_EXACT_MATCH_ISSUER=" << CERT_TRUST_HAS_EXACT_MATCH_ISSUER << std::endl;
    std::cout << "CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT=" << CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT << std::endl;
    std::cout << "CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY=" << CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY << std::endl;
    std::cout << "CERT_TRUST_HAS_KEY_MATCH_ISSUER=" << CERT_TRUST_HAS_KEY_MATCH_ISSUER << std::endl;
    std::cout << "CERT_TRUST_HAS_NAME_MATCH_ISSUER=" << CERT_TRUST_HAS_NAME_MATCH_ISSUER << std::endl;
    std::cout << "CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT=" << CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT << std::endl;
    std::cout << "CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT=" << CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT << std::endl;
    std::cout << "CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT=" << CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT << std::endl;
    std::cout << "CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT=" << CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT << std::endl;
    std::cout << "CERT_TRUST_HAS_PREFERRED_ISSUER=" << CERT_TRUST_HAS_PREFERRED_ISSUER << std::endl;
    std::cout << "CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS=" << CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS << std::endl;
    std::cout << "CERT_TRUST_HAS_WEAK_SIGNATURE=" << CERT_TRUST_HAS_WEAK_SIGNATURE << std::endl;
    std::cout << "CERT_TRUST_INVALID_BASIC_CONSTRAINTS=" << CERT_TRUST_INVALID_BASIC_CONSTRAINTS << std::endl;
    std::cout << "CERT_TRUST_INVALID_EXTENSION=" << CERT_TRUST_INVALID_EXTENSION << std::endl;
    std::cout << "CERT_TRUST_INVALID_NAME_CONSTRAINTS=" << CERT_TRUST_INVALID_NAME_CONSTRAINTS << std::endl;
    std::cout << "CERT_TRUST_INVALID_POLICY_CONSTRAINTS=" << CERT_TRUST_INVALID_POLICY_CONSTRAINTS << std::endl;
    std::cout << "CERT_TRUST_IS_CA_TRUSTED=" << CERT_TRUST_IS_CA_TRUSTED << std::endl;
    std::cout << "CERT_TRUST_IS_COMPLEX_CHAIN=" << CERT_TRUST_IS_COMPLEX_CHAIN << std::endl;
    std::cout << "CERT_TRUST_IS_CYCLIC=" << CERT_TRUST_IS_CYCLIC << std::endl;
    std::cout << "CERT_TRUST_IS_EXPLICIT_DISTRUST=" << CERT_TRUST_IS_EXPLICIT_DISTRUST << std::endl;
    std::cout << "CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE=" << CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE << std::endl;
    std::cout << "CERT_TRUST_IS_KEY_ROLLOVER=" << CERT_TRUST_IS_KEY_ROLLOVER << std::endl;
    std::cout << "CERT_TRUST_IS_NOT_SIGNATURE_VALID=" << CERT_TRUST_IS_NOT_SIGNATURE_VALID << std::endl;
    std::cout << "CERT_TRUST_IS_NOT_TIME_NESTED=" << CERT_TRUST_IS_NOT_TIME_NESTED << std::endl;
    std::cout << "CERT_TRUST_IS_NOT_TIME_VALID=" << CERT_TRUST_IS_NOT_TIME_VALID << std::endl;
    std::cout << "CERT_TRUST_IS_NOT_VALID_FOR_USAGE=" << CERT_TRUST_IS_NOT_VALID_FOR_USAGE << std::endl;
    std::cout << "CERT_TRUST_IS_OFFLINE_REVOCATION=" << CERT_TRUST_IS_OFFLINE_REVOCATION << std::endl;
    std::cout << "CERT_TRUST_IS_PARTIAL_CHAIN=" << CERT_TRUST_IS_PARTIAL_CHAIN << std::endl;
    std::cout << "CERT_TRUST_IS_PEER_TRUSTED=" << CERT_TRUST_IS_PEER_TRUSTED << std::endl;
    std::cout << "CERT_TRUST_IS_REVOKED=" << CERT_TRUST_IS_REVOKED << std::endl;
    std::cout << "CERT_TRUST_IS_SELF_SIGNED=" << CERT_TRUST_IS_SELF_SIGNED << std::endl;
    std::cout << "CERT_TRUST_IS_UNTRUSTED_ROOT=" << CERT_TRUST_IS_UNTRUSTED_ROOT << std::endl;
    std::cout << "CERT_TRUST_NO_ERROR=" << CERT_TRUST_NO_ERROR << std::endl;
    std::cout << "CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY=" << CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY << std::endl;
    std::cout << "CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL=" << CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL << std::endl;
    std::cout << "CERT_TRUST_NO_TIME_CHECK=" << CERT_TRUST_NO_TIME_CHECK << std::endl;
    std::cout << "CERT_TRUST_PUB_ALLOW_END_USER_TRUST=" << CERT_TRUST_PUB_ALLOW_END_USER_TRUST << std::endl;
    std::cout << "CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST=" << CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST << std::endl;
    std::cout << "CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST=" << CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST << std::endl;
    std::cout << "CERT_TRUST_PUB_ALLOW_TRUST_MASK=" << CERT_TRUST_PUB_ALLOW_TRUST_MASK << std::endl;
    std::cout << "CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG=" << CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG << std::endl;
    std::cout << "CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG=" << CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG << std::endl;
    std::cout << "CERT_TRUST_REVOCATION_STATUS_UNKNOWN=" << CERT_TRUST_REVOCATION_STATUS_UNKNOWN << std::endl;
    std::cout << "CERT_TRUST_SSL_HANDSHAKE_OCSP=" << CERT_TRUST_SSL_HANDSHAKE_OCSP << std::endl;
    std::cout << "CERT_TRUST_SSL_RECONNECT_OCSP=" << CERT_TRUST_SSL_RECONNECT_OCSP << std::endl;
    std::cout << "CERT_TRUST_SSL_TIME_VALID=" << CERT_TRUST_SSL_TIME_VALID << std::endl;
    std::cout << "CERT_TRUST_SSL_TIME_VALID_OCSP=" << CERT_TRUST_SSL_TIME_VALID_OCSP << std::endl;
    std::cout << "CERT_UNICODE_ATTR_ERR_INDEX_SHIFT=" << CERT_UNICODE_ATTR_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CERT_UNICODE_IS_RDN_ATTRS_FLAG=" << CERT_UNICODE_IS_RDN_ATTRS_FLAG << std::endl;
    std::cout << "CERT_UNICODE_RDN_ERR_INDEX_SHIFT=" << CERT_UNICODE_RDN_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CERT_UNICODE_VALUE_ERR_INDEX_SHIFT=" << CERT_UNICODE_VALUE_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CERT_V1=" << CERT_V1 << std::endl;
    std::cout << "CERT_V2=" << CERT_V2 << std::endl;
    std::cout << "CERT_V3=" << CERT_V3 << std::endl;
    std::cout << "CERT_VERIFY_ALLOW_MORE_USAGE_FLAG=" << CERT_VERIFY_ALLOW_MORE_USAGE_FLAG << std::endl;
    std::cout << "CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION=" << CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION << std::endl;
    std::cout << "CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG=" << CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG << std::endl;
    std::cout << "CERT_VERIFY_NO_TIME_CHECK_FLAG=" << CERT_VERIFY_NO_TIME_CHECK_FLAG << std::endl;
    std::cout << "CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG=" << CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG << std::endl;
    std::cout << "CERT_VERIFY_REV_CHAIN_FLAG=" << CERT_VERIFY_REV_CHAIN_FLAG << std::endl;
    std::cout << "CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG=" << CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG << std::endl;
    std::cout << "CERT_VERIFY_REV_SERVER_OCSP_FLAG=" << CERT_VERIFY_REV_SERVER_OCSP_FLAG << std::endl;
    std::cout << "CERT_VERIFY_TRUSTED_SIGNERS_FLAG=" << CERT_VERIFY_TRUSTED_SIGNERS_FLAG << std::endl;
    std::cout << "CERT_VERIFY_UPDATED_CTL_FLAG=" << CERT_VERIFY_UPDATED_CTL_FLAG << std::endl;
    std::cout << "CERT_X500_NAME_STR=" << CERT_X500_NAME_STR << std::endl;
    std::cout << "CERT_XML_NAME_STR=" << CERT_XML_NAME_STR << std::endl;
    std::cout << "CE_BREAK=" << CE_BREAK << std::endl;
    std::cout << "CE_DNS=" << CE_DNS << std::endl;
    std::cout << "CE_FRAME=" << CE_FRAME << std::endl;
    std::cout << "CE_IOE=" << CE_IOE << std::endl;
    std::cout << "CE_MODE=" << CE_MODE << std::endl;
    std::cout << "CE_OOP=" << CE_OOP << std::endl;
    std::cout << "CE_OVERRUN=" << CE_OVERRUN << std::endl;
    std::cout << "CE_PTO=" << CE_PTO << std::endl;
    std::cout << "CE_RXOVER=" << CE_RXOVER << std::endl;
    std::cout << "CE_RXPARITY=" << CE_RXPARITY << std::endl;
    std::cout << "CE_TXFULL=" << CE_TXFULL << std::endl;
    std::cout << "CFERR_CHOOSEFONTCODES=" << CFERR_CHOOSEFONTCODES << std::endl;
    std::cout << "CFERR_MAXLESSTHANMIN=" << CFERR_MAXLESSTHANMIN << std::endl;
    std::cout << "CFERR_NOFONTS=" << CFERR_NOFONTS << std::endl;
    std::cout << "CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID=" << CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID << std::endl;
    std::cout << "CFG_CALL_TARGET_PROCESSED=" << CFG_CALL_TARGET_PROCESSED << std::endl;
    std::cout << "CFG_CALL_TARGET_VALID=" << CFG_CALL_TARGET_VALID << std::endl;
    std::cout << "CFSTR_MIME_NULL=" << CFSTR_MIME_NULL << std::endl;
    std::cout << "CFS_CANDIDATEPOS=" << CFS_CANDIDATEPOS << std::endl;
    std::cout << "CFS_DEFAULT=" << CFS_DEFAULT << std::endl;
    std::cout << "CFS_EXCLUDE=" << CFS_EXCLUDE << std::endl;
    std::cout << "CFS_FORCE_POSITION=" << CFS_FORCE_POSITION << std::endl;
    std::cout << "CFS_POINT=" << CFS_POINT << std::endl;
    std::cout << "CFS_RECT=" << CFS_RECT << std::endl;
    std::cout << "CF_BITMAP=" << CF_BITMAP << std::endl;
    std::cout << "CF_BOTH=" << CF_BOTH << std::endl;
    std::cout << "CF_DIB=" << CF_DIB << std::endl;
    std::cout << "CF_DIBV5=" << CF_DIBV5 << std::endl;
    std::cout << "CF_DIF=" << CF_DIF << std::endl;
    std::cout << "CF_DSPBITMAP=" << CF_DSPBITMAP << std::endl;
    std::cout << "CF_DSPENHMETAFILE=" << CF_DSPENHMETAFILE << std::endl;
    std::cout << "CF_DSPMETAFILEPICT=" << CF_DSPMETAFILEPICT << std::endl;
    std::cout << "CF_DSPTEXT=" << CF_DSPTEXT << std::endl;
    std::cout << "CF_ENHMETAFILE=" << CF_ENHMETAFILE << std::endl;
    std::cout << "CF_GDIOBJFIRST=" << CF_GDIOBJFIRST << std::endl;
    std::cout << "CF_GDIOBJLAST=" << CF_GDIOBJLAST << std::endl;
    std::cout << "CF_HDROP=" << CF_HDROP << std::endl;
    std::cout << "CF_LOCALE=" << CF_LOCALE << std::endl;
    std::cout << "CF_MAX=" << CF_MAX << std::endl;
    std::cout << "CF_METAFILEPICT=" << CF_METAFILEPICT << std::endl;
    std::cout << "CF_NULL=" << CF_NULL << std::endl;
    std::cout << "CF_OEMTEXT=" << CF_OEMTEXT << std::endl;
    std::cout << "CF_OWNERDISPLAY=" << CF_OWNERDISPLAY << std::endl;
    std::cout << "CF_PALETTE=" << CF_PALETTE << std::endl;
    std::cout << "CF_PENDATA=" << CF_PENDATA << std::endl;
    std::cout << "CF_PRINTERFONTS=" << CF_PRINTERFONTS << std::endl;
    std::cout << "CF_PRIVATEFIRST=" << CF_PRIVATEFIRST << std::endl;
    std::cout << "CF_PRIVATELAST=" << CF_PRIVATELAST << std::endl;
    std::cout << "CF_RIFF=" << CF_RIFF << std::endl;
    std::cout << "CF_SCREENFONTS=" << CF_SCREENFONTS << std::endl;
    std::cout << "CF_SYLK=" << CF_SYLK << std::endl;
    std::cout << "CF_TEXT=" << CF_TEXT << std::endl;
    std::cout << "CF_TIFF=" << CF_TIFF << std::endl;
    std::cout << "CF_UNICODETEXT=" << CF_UNICODETEXT << std::endl;
    std::cout << "CF_WAVE=" << CF_WAVE << std::endl;
    std::cout << "CHANGER_BAR_CODE_SCANNER_INSTALLED=" << CHANGER_BAR_CODE_SCANNER_INSTALLED << std::endl;
    std::cout << "CHANGER_CARTRIDGE_MAGAZINE=" << CHANGER_CARTRIDGE_MAGAZINE << std::endl;
    std::cout << "CHANGER_CLEANER_ACCESS_NOT_VALID=" << CHANGER_CLEANER_ACCESS_NOT_VALID << std::endl;
    std::cout << "CHANGER_CLEANER_AUTODISMOUNT=" << CHANGER_CLEANER_AUTODISMOUNT << std::endl;
    std::cout << "CHANGER_CLEANER_OPS_NOT_SUPPORTED=" << CHANGER_CLEANER_OPS_NOT_SUPPORTED << std::endl;
    std::cout << "CHANGER_CLEANER_SLOT=" << CHANGER_CLEANER_SLOT << std::endl;
    std::cout << "CHANGER_CLOSE_IEPORT=" << CHANGER_CLOSE_IEPORT << std::endl;
    std::cout << "CHANGER_DEVICE_REINITIALIZE_CAPABLE=" << CHANGER_DEVICE_REINITIALIZE_CAPABLE << std::endl;
    std::cout << "CHANGER_DRIVE_CLEANING_REQUIRED=" << CHANGER_DRIVE_CLEANING_REQUIRED << std::endl;
    std::cout << "CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS=" << CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS << std::endl;
    std::cout << "CHANGER_EXCHANGE_MEDIA=" << CHANGER_EXCHANGE_MEDIA << std::endl;
    std::cout << "CHANGER_IEPORT_USER_CONTROL_CLOSE=" << CHANGER_IEPORT_USER_CONTROL_CLOSE << std::endl;
    std::cout << "CHANGER_IEPORT_USER_CONTROL_OPEN=" << CHANGER_IEPORT_USER_CONTROL_OPEN << std::endl;
    std::cout << "CHANGER_INIT_ELEM_STAT_WITH_RANGE=" << CHANGER_INIT_ELEM_STAT_WITH_RANGE << std::endl;
    std::cout << "CHANGER_KEYPAD_ENABLE_DISABLE=" << CHANGER_KEYPAD_ENABLE_DISABLE << std::endl;
    std::cout << "CHANGER_LOCK_UNLOCK=" << CHANGER_LOCK_UNLOCK << std::endl;
    std::cout << "CHANGER_MEDIUM_FLIP=" << CHANGER_MEDIUM_FLIP << std::endl;
    std::cout << "CHANGER_MOVE_EXTENDS_IEPORT=" << CHANGER_MOVE_EXTENDS_IEPORT << std::endl;
    std::cout << "CHANGER_MOVE_RETRACTS_IEPORT=" << CHANGER_MOVE_RETRACTS_IEPORT << std::endl;
    std::cout << "CHANGER_OPEN_IEPORT=" << CHANGER_OPEN_IEPORT << std::endl;
    std::cout << "CHANGER_POSITION_TO_ELEMENT=" << CHANGER_POSITION_TO_ELEMENT << std::endl;
    std::cout << "CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE=" << CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE << std::endl;
    std::cout << "CHANGER_PREDISMOUNT_ALIGN_TO_SLOT=" << CHANGER_PREDISMOUNT_ALIGN_TO_SLOT << std::endl;
    std::cout << "CHANGER_PREDISMOUNT_EJECT_REQUIRED=" << CHANGER_PREDISMOUNT_EJECT_REQUIRED << std::endl;
    std::cout << "CHANGER_PREMOUNT_EJECT_REQUIRED=" << CHANGER_PREMOUNT_EJECT_REQUIRED << std::endl;
    std::cout << "CHANGER_REPORT_IEPORT_STATE=" << CHANGER_REPORT_IEPORT_STATE << std::endl;
    std::cout << "CHANGER_RESERVED_BIT=" << CHANGER_RESERVED_BIT << std::endl;
    std::cout << "CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR=" << CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR << std::endl;
    std::cout << "CHANGER_SERIAL_NUMBER_VALID=" << CHANGER_SERIAL_NUMBER_VALID << std::endl;
    std::cout << "CHANGER_SLOTS_USE_TRAYS=" << CHANGER_SLOTS_USE_TRAYS << std::endl;
    std::cout << "CHANGER_STATUS_NON_VOLATILE=" << CHANGER_STATUS_NON_VOLATILE << std::endl;
    std::cout << "CHANGER_STORAGE_DRIVE=" << CHANGER_STORAGE_DRIVE << std::endl;
    std::cout << "CHANGER_STORAGE_IEPORT=" << CHANGER_STORAGE_IEPORT << std::endl;
    std::cout << "CHANGER_STORAGE_SLOT=" << CHANGER_STORAGE_SLOT << std::endl;
    std::cout << "CHANGER_STORAGE_TRANSPORT=" << CHANGER_STORAGE_TRANSPORT << std::endl;
    std::cout << "CHANGER_TO_DRIVE=" << CHANGER_TO_DRIVE << std::endl;
    std::cout << "CHANGER_TO_IEPORT=" << CHANGER_TO_IEPORT << std::endl;
    std::cout << "CHANGER_TO_SLOT=" << CHANGER_TO_SLOT << std::endl;
    std::cout << "CHANGER_TO_TRANSPORT=" << CHANGER_TO_TRANSPORT << std::endl;
    std::cout << "CHANGER_TRUE_EXCHANGE_CAPABLE=" << CHANGER_TRUE_EXCHANGE_CAPABLE << std::endl;
    std::cout << "CHANGER_VOLUME_ASSERT=" << CHANGER_VOLUME_ASSERT << std::endl;
    std::cout << "CHANGER_VOLUME_IDENTIFICATION=" << CHANGER_VOLUME_IDENTIFICATION << std::endl;
    std::cout << "CHANGER_VOLUME_REPLACE=" << CHANGER_VOLUME_REPLACE << std::endl;
    std::cout << "CHANGER_VOLUME_SEARCH=" << CHANGER_VOLUME_SEARCH << std::endl;
    std::cout << "CHANGER_VOLUME_UNDEFINE=" << CHANGER_VOLUME_UNDEFINE << std::endl;
    std::cout << "CHAR_BIT=" << CHAR_BIT << std::endl;
    std::cout << "CHAR_MIN=" << CHAR_MIN << std::endl;
    std::cout << "CHECKJPEGFORMAT=" << CHECKJPEGFORMAT << std::endl;
    std::cout << "CHECKPNGFORMAT=" << CHECKPNGFORMAT << std::endl;
    std::cout << "CHILDID_SELF=" << CHILDID_SELF << std::endl;
    std::cout << "CHINESEBIG5_CHARSET=" << CHINESEBIG5_CHARSET << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION=" << CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1=" << CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_DISABLED=" << CLAIM_SECURITY_ATTRIBUTE_DISABLED << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT=" << CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_MANDATORY=" << CLAIM_SECURITY_ATTRIBUTE_MANDATORY << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE=" << CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_SID=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_SID << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64=" << CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY=" << CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS=" << CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS << std::endl;
    std::cout << "CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE=" << CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE << std::endl;
    std::cout << "CLEARTYPE_NATURAL_QUALITY=" << CLEARTYPE_NATURAL_QUALITY << std::endl;
    std::cout << "CLEARTYPE_QUALITY=" << CLEARTYPE_QUALITY << std::endl;
    std::cout << "CLIPCAPS=" << CLIPCAPS << std::endl;
    std::cout << "CLIP_CHARACTER_PRECIS=" << CLIP_CHARACTER_PRECIS << std::endl;
    std::cout << "CLIP_DEFAULT_PRECIS=" << CLIP_DEFAULT_PRECIS << std::endl;
    std::cout << "CLIP_DFA_DISABLE=" << CLIP_DFA_DISABLE << std::endl;
    std::cout << "CLIP_EMBEDDED=" << CLIP_EMBEDDED << std::endl;
    std::cout << "CLIP_LH_ANGLES=" << CLIP_LH_ANGLES << std::endl;
    std::cout << "CLIP_STROKE_PRECIS=" << CLIP_STROKE_PRECIS << std::endl;
    std::cout << "CLIP_TO_PATH=" << CLIP_TO_PATH << std::endl;
    std::cout << "CLIP_TT_ALWAYS=" << CLIP_TT_ALWAYS << std::endl;
    std::cout << "CLOSECHANNEL=" << CLOSECHANNEL << std::endl;
    std::cout << "CLRBREAK=" << CLRBREAK << std::endl;
    std::cout << "CLRDTR=" << CLRDTR << std::endl;
    std::cout << "CLRRTS=" << CLRRTS << std::endl;
    std::cout << "CLR_INVALID=" << CLR_INVALID << std::endl;
    std::cout << "CMC_ADD_ATTRIBUTES=" << CMC_ADD_ATTRIBUTES << std::endl;
    std::cout << "CMC_ADD_EXTENSIONS=" << CMC_ADD_EXTENSIONS << std::endl;
    std::cout << "CMC_DATA=" << CMC_DATA << std::endl;
    std::cout << "CMC_FAIL_BAD_ALG=" << CMC_FAIL_BAD_ALG << std::endl;
    std::cout << "CMC_FAIL_BAD_CERT_ID=" << CMC_FAIL_BAD_CERT_ID << std::endl;
    std::cout << "CMC_FAIL_BAD_IDENTITY=" << CMC_FAIL_BAD_IDENTITY << std::endl;
    std::cout << "CMC_FAIL_BAD_MESSAGE_CHECK=" << CMC_FAIL_BAD_MESSAGE_CHECK << std::endl;
    std::cout << "CMC_FAIL_BAD_REQUEST=" << CMC_FAIL_BAD_REQUEST << std::endl;
    std::cout << "CMC_FAIL_BAD_TIME=" << CMC_FAIL_BAD_TIME << std::endl;
    std::cout << "CMC_FAIL_INTERNAL_CA_ERROR=" << CMC_FAIL_INTERNAL_CA_ERROR << std::endl;
    std::cout << "CMC_FAIL_MUST_ARCHIVE_KEYS=" << CMC_FAIL_MUST_ARCHIVE_KEYS << std::endl;
    std::cout << "CMC_FAIL_NO_KEY_REUSE=" << CMC_FAIL_NO_KEY_REUSE << std::endl;
    std::cout << "CMC_FAIL_POP_FAILED=" << CMC_FAIL_POP_FAILED << std::endl;
    std::cout << "CMC_FAIL_POP_REQUIRED=" << CMC_FAIL_POP_REQUIRED << std::endl;
    std::cout << "CMC_FAIL_TRY_LATER=" << CMC_FAIL_TRY_LATER << std::endl;
    std::cout << "CMC_FAIL_UNSUPORTED_EXT=" << CMC_FAIL_UNSUPORTED_EXT << std::endl;
    std::cout << "CMC_OTHER_INFO_FAIL_CHOICE=" << CMC_OTHER_INFO_FAIL_CHOICE << std::endl;
    std::cout << "CMC_OTHER_INFO_NO_CHOICE=" << CMC_OTHER_INFO_NO_CHOICE << std::endl;
    std::cout << "CMC_OTHER_INFO_PEND_CHOICE=" << CMC_OTHER_INFO_PEND_CHOICE << std::endl;
    std::cout << "CMC_RESPONSE=" << CMC_RESPONSE << std::endl;
    std::cout << "CMC_STATUS=" << CMC_STATUS << std::endl;
    std::cout << "CMC_STATUS_CONFIRM_REQUIRED=" << CMC_STATUS_CONFIRM_REQUIRED << std::endl;
    std::cout << "CMC_STATUS_FAILED=" << CMC_STATUS_FAILED << std::endl;
    std::cout << "CMC_STATUS_NO_SUPPORT=" << CMC_STATUS_NO_SUPPORT << std::endl;
    std::cout << "CMC_STATUS_PENDING=" << CMC_STATUS_PENDING << std::endl;
    std::cout << "CMC_STATUS_SUCCESS=" << CMC_STATUS_SUCCESS << std::endl;
    std::cout << "CMC_TAGGED_CERT_REQUEST_CHOICE=" << CMC_TAGGED_CERT_REQUEST_CHOICE << std::endl;
    std::cout << "CMSG_ATTR_CERT_COUNT_PARAM=" << CMSG_ATTR_CERT_COUNT_PARAM << std::endl;
    std::cout << "CMSG_ATTR_CERT_PARAM=" << CMSG_ATTR_CERT_PARAM << std::endl;
    std::cout << "CMSG_AUTHENTICATED_ATTRIBUTES_FLAG=" << CMSG_AUTHENTICATED_ATTRIBUTES_FLAG << std::endl;
    std::cout << "CMSG_BARE_CONTENT_FLAG=" << CMSG_BARE_CONTENT_FLAG << std::endl;
    std::cout << "CMSG_BARE_CONTENT_PARAM=" << CMSG_BARE_CONTENT_PARAM << std::endl;
    std::cout << "CMSG_CERT_COUNT_PARAM=" << CMSG_CERT_COUNT_PARAM << std::endl;
    std::cout << "CMSG_CERT_PARAM=" << CMSG_CERT_PARAM << std::endl;
    std::cout << "CMSG_CMS_ENCAPSULATED_CONTENT_FLAG=" << CMSG_CMS_ENCAPSULATED_CONTENT_FLAG << std::endl;
    std::cout << "CMSG_CMS_ENCAPSULATED_CTL_FLAG=" << CMSG_CMS_ENCAPSULATED_CTL_FLAG << std::endl;
    std::cout << "CMSG_CMS_RECIPIENT_COUNT_PARAM=" << CMSG_CMS_RECIPIENT_COUNT_PARAM << std::endl;
    std::cout << "CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM=" << CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM << std::endl;
    std::cout << "CMSG_CMS_RECIPIENT_INDEX_PARAM=" << CMSG_CMS_RECIPIENT_INDEX_PARAM << std::endl;
    std::cout << "CMSG_CMS_RECIPIENT_INFO_PARAM=" << CMSG_CMS_RECIPIENT_INFO_PARAM << std::endl;
    std::cout << "CMSG_CMS_SIGNER_INFO_PARAM=" << CMSG_CMS_SIGNER_INFO_PARAM << std::endl;
    std::cout << "CMSG_COMPUTED_HASH_PARAM=" << CMSG_COMPUTED_HASH_PARAM << std::endl;
    std::cout << "CMSG_CONTENTS_OCTETS_FLAG=" << CMSG_CONTENTS_OCTETS_FLAG << std::endl;
    std::cout << "CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG=" << CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG << std::endl;
    std::cout << "CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG=" << CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG << std::endl;
    std::cout << "CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG=" << CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG << std::endl;
    std::cout << "CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG=" << CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG << std::endl;
    std::cout << "CMSG_CONTENT_PARAM=" << CMSG_CONTENT_PARAM << std::endl;
    std::cout << "CMSG_CRL_COUNT_PARAM=" << CMSG_CRL_COUNT_PARAM << std::endl;
    std::cout << "CMSG_CRL_PARAM=" << CMSG_CRL_PARAM << std::endl;
    std::cout << "CMSG_CRYPT_RELEASE_CONTEXT_FLAG=" << CMSG_CRYPT_RELEASE_CONTEXT_FLAG << std::endl;
    std::cout << "CMSG_CTRL_ADD_ATTR_CERT=" << CMSG_CTRL_ADD_ATTR_CERT << std::endl;
    std::cout << "CMSG_CTRL_ADD_CERT=" << CMSG_CTRL_ADD_CERT << std::endl;
    std::cout << "CMSG_CTRL_ADD_CMS_SIGNER_INFO=" << CMSG_CTRL_ADD_CMS_SIGNER_INFO << std::endl;
    std::cout << "CMSG_CTRL_ADD_CRL=" << CMSG_CTRL_ADD_CRL << std::endl;
    std::cout << "CMSG_CTRL_ADD_SIGNER=" << CMSG_CTRL_ADD_SIGNER << std::endl;
    std::cout << "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR=" << CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR << std::endl;
    std::cout << "CMSG_CTRL_DECRYPT=" << CMSG_CTRL_DECRYPT << std::endl;
    std::cout << "CMSG_CTRL_DEL_ATTR_CERT=" << CMSG_CTRL_DEL_ATTR_CERT << std::endl;
    std::cout << "CMSG_CTRL_DEL_CERT=" << CMSG_CTRL_DEL_CERT << std::endl;
    std::cout << "CMSG_CTRL_DEL_CRL=" << CMSG_CTRL_DEL_CRL << std::endl;
    std::cout << "CMSG_CTRL_DEL_SIGNER=" << CMSG_CTRL_DEL_SIGNER << std::endl;
    std::cout << "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR=" << CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR << std::endl;
    std::cout << "CMSG_CTRL_ENABLE_STRONG_SIGNATURE=" << CMSG_CTRL_ENABLE_STRONG_SIGNATURE << std::endl;
    std::cout << "CMSG_CTRL_KEY_AGREE_DECRYPT=" << CMSG_CTRL_KEY_AGREE_DECRYPT << std::endl;
    std::cout << "CMSG_CTRL_KEY_TRANS_DECRYPT=" << CMSG_CTRL_KEY_TRANS_DECRYPT << std::endl;
    std::cout << "CMSG_CTRL_MAIL_LIST_DECRYPT=" << CMSG_CTRL_MAIL_LIST_DECRYPT << std::endl;
    std::cout << "CMSG_CTRL_VERIFY_HASH=" << CMSG_CTRL_VERIFY_HASH << std::endl;
    std::cout << "CMSG_CTRL_VERIFY_SIGNATURE=" << CMSG_CTRL_VERIFY_SIGNATURE << std::endl;
    std::cout << "CMSG_CTRL_VERIFY_SIGNATURE_EX=" << CMSG_CTRL_VERIFY_SIGNATURE_EX << std::endl;
    std::cout << "CMSG_DATA=" << CMSG_DATA << std::endl;
    std::cout << "CMSG_DATA_FLAG=" << CMSG_DATA_FLAG << std::endl;
    std::cout << "CMSG_DEFAULT_INSTALLABLE_FUNC_OID=" << CMSG_DEFAULT_INSTALLABLE_FUNC_OID << std::endl;
    std::cout << "CMSG_DETACHED_FLAG=" << CMSG_DETACHED_FLAG << std::endl;
    std::cout << "CMSG_ENCODED_MESSAGE=" << CMSG_ENCODED_MESSAGE << std::endl;
    std::cout << "CMSG_ENCODED_SIGNER=" << CMSG_ENCODED_SIGNER << std::endl;
    std::cout << "CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG=" << CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG << std::endl;
    std::cout << "CMSG_ENCODE_SORTED_CTL_FLAG=" << CMSG_ENCODE_SORTED_CTL_FLAG << std::endl;
    std::cout << "CMSG_ENCRYPTED=" << CMSG_ENCRYPTED << std::endl;
    std::cout << "CMSG_ENCRYPTED_DIGEST=" << CMSG_ENCRYPTED_DIGEST << std::endl;
    std::cout << "CMSG_ENCRYPTED_FLAG=" << CMSG_ENCRYPTED_FLAG << std::endl;
    std::cout << "CMSG_ENCRYPT_PARAM=" << CMSG_ENCRYPT_PARAM << std::endl;
    std::cout << "CMSG_ENVELOPED=" << CMSG_ENVELOPED << std::endl;
    std::cout << "CMSG_ENVELOPED_DATA_CMS_VERSION=" << CMSG_ENVELOPED_DATA_CMS_VERSION << std::endl;
    std::cout << "CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION=" << CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION << std::endl;
    std::cout << "CMSG_ENVELOPED_DATA_V0=" << CMSG_ENVELOPED_DATA_V0 << std::endl;
    std::cout << "CMSG_ENVELOPED_DATA_V2=" << CMSG_ENVELOPED_DATA_V2 << std::endl;
    std::cout << "CMSG_ENVELOPED_FLAG=" << CMSG_ENVELOPED_FLAG << std::endl;
    std::cout << "CMSG_ENVELOPED_RECIPIENT_V0=" << CMSG_ENVELOPED_RECIPIENT_V0 << std::endl;
    std::cout << "CMSG_ENVELOPED_RECIPIENT_V2=" << CMSG_ENVELOPED_RECIPIENT_V2 << std::endl;
    std::cout << "CMSG_ENVELOPED_RECIPIENT_V3=" << CMSG_ENVELOPED_RECIPIENT_V3 << std::endl;
    std::cout << "CMSG_ENVELOPED_RECIPIENT_V4=" << CMSG_ENVELOPED_RECIPIENT_V4 << std::endl;
    std::cout << "CMSG_ENVELOPE_ALGORITHM_PARAM=" << CMSG_ENVELOPE_ALGORITHM_PARAM << std::endl;
    std::cout << "CMSG_HASHED=" << CMSG_HASHED << std::endl;
    std::cout << "CMSG_HASHED_DATA_CMS_VERSION=" << CMSG_HASHED_DATA_CMS_VERSION << std::endl;
    std::cout << "CMSG_HASHED_DATA_PKCS_1_5_VERSION=" << CMSG_HASHED_DATA_PKCS_1_5_VERSION << std::endl;
    std::cout << "CMSG_HASHED_DATA_V0=" << CMSG_HASHED_DATA_V0 << std::endl;
    std::cout << "CMSG_HASHED_DATA_V2=" << CMSG_HASHED_DATA_V2 << std::endl;
    std::cout << "CMSG_HASHED_FLAG=" << CMSG_HASHED_FLAG << std::endl;
    std::cout << "CMSG_HASH_ALGORITHM_PARAM=" << CMSG_HASH_ALGORITHM_PARAM << std::endl;
    std::cout << "CMSG_HASH_DATA_PARAM=" << CMSG_HASH_DATA_PARAM << std::endl;
    std::cout << "CMSG_INNER_CONTENT_TYPE_PARAM=" << CMSG_INNER_CONTENT_TYPE_PARAM << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG=" << CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG << std::endl;
    std::cout << "CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE=" << CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE << std::endl;
    std::cout << "CMSG_KEY_AGREE_ORIGINATOR_CERT=" << CMSG_KEY_AGREE_ORIGINATOR_CERT << std::endl;
    std::cout << "CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY=" << CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY << std::endl;
    std::cout << "CMSG_KEY_AGREE_RECIPIENT=" << CMSG_KEY_AGREE_RECIPIENT << std::endl;
    std::cout << "CMSG_KEY_AGREE_STATIC_KEY_CHOICE=" << CMSG_KEY_AGREE_STATIC_KEY_CHOICE << std::endl;
    std::cout << "CMSG_KEY_AGREE_VERSION=" << CMSG_KEY_AGREE_VERSION << std::endl;
    std::cout << "CMSG_KEY_TRANS_CMS_VERSION=" << CMSG_KEY_TRANS_CMS_VERSION << std::endl;
    std::cout << "CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG=" << CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG << std::endl;
    std::cout << "CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG=" << CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG << std::endl;
    std::cout << "CMSG_KEY_TRANS_PKCS_1_5_VERSION=" << CMSG_KEY_TRANS_PKCS_1_5_VERSION << std::endl;
    std::cout << "CMSG_KEY_TRANS_RECIPIENT=" << CMSG_KEY_TRANS_RECIPIENT << std::endl;
    std::cout << "CMSG_LENGTH_ONLY_FLAG=" << CMSG_LENGTH_ONLY_FLAG << std::endl;
    std::cout << "CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG=" << CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG << std::endl;
    std::cout << "CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG=" << CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG << std::endl;
    std::cout << "CMSG_MAIL_LIST_HANDLE_KEY_CHOICE=" << CMSG_MAIL_LIST_HANDLE_KEY_CHOICE << std::endl;
    std::cout << "CMSG_MAIL_LIST_RECIPIENT=" << CMSG_MAIL_LIST_RECIPIENT << std::endl;
    std::cout << "CMSG_MAIL_LIST_VERSION=" << CMSG_MAIL_LIST_VERSION << std::endl;
    std::cout << "CMSG_MAX_LENGTH_FLAG=" << CMSG_MAX_LENGTH_FLAG << std::endl;
    std::cout << "CMSG_RC4_NO_SALT_FLAG=" << CMSG_RC4_NO_SALT_FLAG << std::endl;
    std::cout << "CMSG_RECIPIENT_COUNT_PARAM=" << CMSG_RECIPIENT_COUNT_PARAM << std::endl;
    std::cout << "CMSG_RECIPIENT_INDEX_PARAM=" << CMSG_RECIPIENT_INDEX_PARAM << std::endl;
    std::cout << "CMSG_RECIPIENT_INFO_PARAM=" << CMSG_RECIPIENT_INFO_PARAM << std::endl;
    std::cout << "CMSG_SIGNED=" << CMSG_SIGNED << std::endl;
    std::cout << "CMSG_SIGNED_AND_ENVELOPED=" << CMSG_SIGNED_AND_ENVELOPED << std::endl;
    std::cout << "CMSG_SIGNED_AND_ENVELOPED_FLAG=" << CMSG_SIGNED_AND_ENVELOPED_FLAG << std::endl;
    std::cout << "CMSG_SIGNED_DATA_CMS_VERSION=" << CMSG_SIGNED_DATA_CMS_VERSION << std::endl;
    std::cout << "CMSG_SIGNED_DATA_NO_SIGN_FLAG=" << CMSG_SIGNED_DATA_NO_SIGN_FLAG << std::endl;
    std::cout << "CMSG_SIGNED_DATA_PKCS_1_5_VERSION=" << CMSG_SIGNED_DATA_PKCS_1_5_VERSION << std::endl;
    std::cout << "CMSG_SIGNED_DATA_V1=" << CMSG_SIGNED_DATA_V1 << std::endl;
    std::cout << "CMSG_SIGNED_DATA_V3=" << CMSG_SIGNED_DATA_V3 << std::endl;
    std::cout << "CMSG_SIGNED_FLAG=" << CMSG_SIGNED_FLAG << std::endl;
    std::cout << "CMSG_SIGNER_AUTH_ATTR_PARAM=" << CMSG_SIGNER_AUTH_ATTR_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_CERT_ID_PARAM=" << CMSG_SIGNER_CERT_ID_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_CERT_INFO_PARAM=" << CMSG_SIGNER_CERT_INFO_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_COUNT_PARAM=" << CMSG_SIGNER_COUNT_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_HASH_ALGORITHM_PARAM=" << CMSG_SIGNER_HASH_ALGORITHM_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_INFO_CMS_VERSION=" << CMSG_SIGNER_INFO_CMS_VERSION << std::endl;
    std::cout << "CMSG_SIGNER_INFO_PARAM=" << CMSG_SIGNER_INFO_PARAM << std::endl;
    std::cout << "CMSG_SIGNER_INFO_PKCS_1_5_VERSION=" << CMSG_SIGNER_INFO_PKCS_1_5_VERSION << std::endl;
    std::cout << "CMSG_SIGNER_INFO_V1=" << CMSG_SIGNER_INFO_V1 << std::endl;
    std::cout << "CMSG_SIGNER_INFO_V3=" << CMSG_SIGNER_INFO_V3 << std::endl;
    std::cout << "CMSG_SIGNER_ONLY_FLAG=" << CMSG_SIGNER_ONLY_FLAG << std::endl;
    std::cout << "CMSG_SIGNER_UNAUTH_ATTR_PARAM=" << CMSG_SIGNER_UNAUTH_ATTR_PARAM << std::endl;
    std::cout << "CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG=" << CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG << std::endl;
    std::cout << "CMSG_TRUSTED_SIGNER_FLAG=" << CMSG_TRUSTED_SIGNER_FLAG << std::endl;
    std::cout << "CMSG_TYPE_PARAM=" << CMSG_TYPE_PARAM << std::endl;
    std::cout << "CMSG_UNPROTECTED_ATTR_PARAM=" << CMSG_UNPROTECTED_ATTR_PARAM << std::endl;
    std::cout << "CMSG_USE_SIGNER_INDEX_FLAG=" << CMSG_USE_SIGNER_INDEX_FLAG << std::endl;
    std::cout << "CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG=" << CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG << std::endl;
    std::cout << "CMSG_VERIFY_SIGNER_CERT=" << CMSG_VERIFY_SIGNER_CERT << std::endl;
    std::cout << "CMSG_VERIFY_SIGNER_CHAIN=" << CMSG_VERIFY_SIGNER_CHAIN << std::endl;
    std::cout << "CMSG_VERIFY_SIGNER_NULL=" << CMSG_VERIFY_SIGNER_NULL << std::endl;
    std::cout << "CMSG_VERIFY_SIGNER_PUBKEY=" << CMSG_VERIFY_SIGNER_PUBKEY << std::endl;
    std::cout << "CMSG_VERSION_PARAM=" << CMSG_VERSION_PARAM << std::endl;
    std::cout << "CMS_SIGNER_INFO=" << CMS_SIGNER_INFO << std::endl;
    std::cout << "CM_CMYK_COLOR=" << CM_CMYK_COLOR << std::endl;
    std::cout << "CM_DEVICE_ICM=" << CM_DEVICE_ICM << std::endl;
    std::cout << "CM_GAMMA_RAMP=" << CM_GAMMA_RAMP << std::endl;
    std::cout << "CM_IN_GAMUT=" << CM_IN_GAMUT << std::endl;
    std::cout << "CM_NONE=" << CM_NONE << std::endl;
    std::cout << "CM_OUT_OF_GAMUT=" << CM_OUT_OF_GAMUT << std::endl;
    std::cout << "CM_SERVICE_MEASURED_BOOT_LOAD=" << CM_SERVICE_MEASURED_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_NETWORK_BOOT_LOAD=" << CM_SERVICE_NETWORK_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_SD_DISK_BOOT_LOAD=" << CM_SERVICE_SD_DISK_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_USB3_DISK_BOOT_LOAD=" << CM_SERVICE_USB3_DISK_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_USB_DISK_BOOT_LOAD=" << CM_SERVICE_USB_DISK_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_VALID_PROMOTION_MASK=" << CM_SERVICE_VALID_PROMOTION_MASK << std::endl;
    std::cout << "CM_SERVICE_VERIFIER_BOOT_LOAD=" << CM_SERVICE_VERIFIER_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD=" << CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD << std::endl;
    std::cout << "CM_SERVICE_WINPE_BOOT_LOAD=" << CM_SERVICE_WINPE_BOOT_LOAD << std::endl;
    std::cout << "CNG_RSA_PRIVATE_KEY_BLOB=" << CNG_RSA_PRIVATE_KEY_BLOB << std::endl;
    std::cout << "CNG_RSA_PUBLIC_KEY_BLOB=" << CNG_RSA_PUBLIC_KEY_BLOB << std::endl;
    std::cout << "COLORMATCHTOTARGET_EMBEDED=" << COLORMATCHTOTARGET_EMBEDED << std::endl;
    std::cout << "COLORMGMTCAPS=" << COLORMGMTCAPS << std::endl;
    std::cout << "COLORMGMTDLGORD=" << COLORMGMTDLGORD << std::endl;
    std::cout << "COLORONCOLOR=" << COLORONCOLOR << std::endl;
    std::cout << "COLORRES=" << COLORRES << std::endl;
    std::cout << "COLOR_3DDKSHADOW=" << COLOR_3DDKSHADOW << std::endl;
    std::cout << "COLOR_3DFACE=" << COLOR_3DFACE << std::endl;
    std::cout << "COLOR_3DHIGHLIGHT=" << COLOR_3DHIGHLIGHT << std::endl;
    std::cout << "COLOR_3DHILIGHT=" << COLOR_3DHILIGHT << std::endl;
    std::cout << "COLOR_3DLIGHT=" << COLOR_3DLIGHT << std::endl;
    std::cout << "COLOR_3DSHADOW=" << COLOR_3DSHADOW << std::endl;
    std::cout << "COLOR_ACTIVEBORDER=" << COLOR_ACTIVEBORDER << std::endl;
    std::cout << "COLOR_ACTIVECAPTION=" << COLOR_ACTIVECAPTION << std::endl;
    std::cout << "COLOR_APPWORKSPACE=" << COLOR_APPWORKSPACE << std::endl;
    std::cout << "COLOR_BACKGROUND=" << COLOR_BACKGROUND << std::endl;
    std::cout << "COLOR_BTNFACE=" << COLOR_BTNFACE << std::endl;
    std::cout << "COLOR_BTNHIGHLIGHT=" << COLOR_BTNHIGHLIGHT << std::endl;
    std::cout << "COLOR_BTNHILIGHT=" << COLOR_BTNHILIGHT << std::endl;
    std::cout << "COLOR_BTNSHADOW=" << COLOR_BTNSHADOW << std::endl;
    std::cout << "COLOR_BTNTEXT=" << COLOR_BTNTEXT << std::endl;
    std::cout << "COLOR_CAPTIONTEXT=" << COLOR_CAPTIONTEXT << std::endl;
    std::cout << "COLOR_DESKTOP=" << COLOR_DESKTOP << std::endl;
    std::cout << "COLOR_GRADIENTACTIVECAPTION=" << COLOR_GRADIENTACTIVECAPTION << std::endl;
    std::cout << "COLOR_GRADIENTINACTIVECAPTION=" << COLOR_GRADIENTINACTIVECAPTION << std::endl;
    std::cout << "COLOR_GRAYTEXT=" << COLOR_GRAYTEXT << std::endl;
    std::cout << "COLOR_HIGHLIGHT=" << COLOR_HIGHLIGHT << std::endl;
    std::cout << "COLOR_HIGHLIGHTTEXT=" << COLOR_HIGHLIGHTTEXT << std::endl;
    std::cout << "COLOR_HOTLIGHT=" << COLOR_HOTLIGHT << std::endl;
    std::cout << "COLOR_INACTIVEBORDER=" << COLOR_INACTIVEBORDER << std::endl;
    std::cout << "COLOR_INACTIVECAPTION=" << COLOR_INACTIVECAPTION << std::endl;
    std::cout << "COLOR_INACTIVECAPTIONTEXT=" << COLOR_INACTIVECAPTIONTEXT << std::endl;
    std::cout << "COLOR_INFOBK=" << COLOR_INFOBK << std::endl;
    std::cout << "COLOR_INFOTEXT=" << COLOR_INFOTEXT << std::endl;
    std::cout << "COLOR_MENU=" << COLOR_MENU << std::endl;
    std::cout << "COLOR_MENUBAR=" << COLOR_MENUBAR << std::endl;
    std::cout << "COLOR_MENUHILIGHT=" << COLOR_MENUHILIGHT << std::endl;
    std::cout << "COLOR_MENUTEXT=" << COLOR_MENUTEXT << std::endl;
    std::cout << "COLOR_SCROLLBAR=" << COLOR_SCROLLBAR << std::endl;
    std::cout << "COLOR_WINDOW=" << COLOR_WINDOW << std::endl;
    std::cout << "COLOR_WINDOWFRAME=" << COLOR_WINDOWFRAME << std::endl;
    std::cout << "COLOR_WINDOWTEXT=" << COLOR_WINDOWTEXT << std::endl;
    std::cout << "COMMON_LVB_GRID_HORIZONTAL=" << COMMON_LVB_GRID_HORIZONTAL << std::endl;
    std::cout << "COMMON_LVB_GRID_LVERTICAL=" << COMMON_LVB_GRID_LVERTICAL << std::endl;
    std::cout << "COMMON_LVB_GRID_RVERTICAL=" << COMMON_LVB_GRID_RVERTICAL << std::endl;
    std::cout << "COMMON_LVB_LEADING_BYTE=" << COMMON_LVB_LEADING_BYTE << std::endl;
    std::cout << "COMMON_LVB_REVERSE_VIDEO=" << COMMON_LVB_REVERSE_VIDEO << std::endl;
    std::cout << "COMMON_LVB_SBCSDBCS=" << COMMON_LVB_SBCSDBCS << std::endl;
    std::cout << "COMMON_LVB_TRAILING_BYTE=" << COMMON_LVB_TRAILING_BYTE << std::endl;
    std::cout << "COMMON_LVB_UNDERSCORE=" << COMMON_LVB_UNDERSCORE << std::endl;
    std::cout << "COMPLEXREGION=" << COMPLEXREGION << std::endl;
    std::cout << "COMPRESSION_ENGINE_HIBER=" << COMPRESSION_ENGINE_HIBER << std::endl;
    std::cout << "COMPRESSION_ENGINE_MAXIMUM=" << COMPRESSION_ENGINE_MAXIMUM << std::endl;
    std::cout << "COMPRESSION_ENGINE_STANDARD=" << COMPRESSION_ENGINE_STANDARD << std::endl;
    std::cout << "COMPRESSION_FORMAT_DEFAULT=" << COMPRESSION_FORMAT_DEFAULT << std::endl;
    std::cout << "COMPRESSION_FORMAT_LZNT1=" << COMPRESSION_FORMAT_LZNT1 << std::endl;
    std::cout << "COMPRESSION_FORMAT_NONE=" << COMPRESSION_FORMAT_NONE << std::endl;
    std::cout << "COMPRESSION_FORMAT_SPARSE=" << COMPRESSION_FORMAT_SPARSE << std::endl;
    std::cout << "COMPRESSION_FORMAT_XPRESS=" << COMPRESSION_FORMAT_XPRESS << std::endl;
    std::cout << "COMPRESSION_FORMAT_XPRESS_HUFF=" << COMPRESSION_FORMAT_XPRESS_HUFF << std::endl;
    std::cout << "COM_RIGHTS_ACTIVATE_LOCAL=" << COM_RIGHTS_ACTIVATE_LOCAL << std::endl;
    std::cout << "COM_RIGHTS_ACTIVATE_REMOTE=" << COM_RIGHTS_ACTIVATE_REMOTE << std::endl;
    std::cout << "COM_RIGHTS_EXECUTE=" << COM_RIGHTS_EXECUTE << std::endl;
    std::cout << "COM_RIGHTS_EXECUTE_LOCAL=" << COM_RIGHTS_EXECUTE_LOCAL << std::endl;
    std::cout << "COM_RIGHTS_EXECUTE_REMOTE=" << COM_RIGHTS_EXECUTE_REMOTE << std::endl;
    std::cout << "CONDITION_VARIABLE_LOCKMODE_SHARED=" << CONDITION_VARIABLE_LOCKMODE_SHARED << std::endl;
    std::cout << "CONFIRMSAFETYACTION_LOADOBJECT=" << CONFIRMSAFETYACTION_LOADOBJECT << std::endl;
    std::cout << "CONNDLG_CONN_POINT=" << CONNDLG_CONN_POINT << std::endl;
    std::cout << "CONNDLG_HIDE_BOX=" << CONNDLG_HIDE_BOX << std::endl;
    std::cout << "CONNDLG_NOT_PERSIST=" << CONNDLG_NOT_PERSIST << std::endl;
    std::cout << "CONNDLG_PERSIST=" << CONNDLG_PERSIST << std::endl;
    std::cout << "CONNDLG_RO_PATH=" << CONNDLG_RO_PATH << std::endl;
    std::cout << "CONNDLG_USE_MRU=" << CONNDLG_USE_MRU << std::endl;
    std::cout << "CONNECT_CMD_SAVECRED=" << CONNECT_CMD_SAVECRED << std::endl;
    std::cout << "CONNECT_COMMANDLINE=" << CONNECT_COMMANDLINE << std::endl;
    std::cout << "CONNECT_CRED_RESET=" << CONNECT_CRED_RESET << std::endl;
    std::cout << "CONNECT_CURRENT_MEDIA=" << CONNECT_CURRENT_MEDIA << std::endl;
    std::cout << "CONNECT_DEFERRED=" << CONNECT_DEFERRED << std::endl;
    std::cout << "CONNECT_INTERACTIVE=" << CONNECT_INTERACTIVE << std::endl;
    std::cout << "CONNECT_LOCALDRIVE=" << CONNECT_LOCALDRIVE << std::endl;
    std::cout << "CONNECT_NEED_DRIVE=" << CONNECT_NEED_DRIVE << std::endl;
    std::cout << "CONNECT_PROMPT=" << CONNECT_PROMPT << std::endl;
    std::cout << "CONNECT_REDIRECT=" << CONNECT_REDIRECT << std::endl;
    std::cout << "CONNECT_REFCOUNT=" << CONNECT_REFCOUNT << std::endl;
    std::cout << "CONNECT_RESERVED=" << CONNECT_RESERVED << std::endl;
    std::cout << "CONNECT_TEMPORARY=" << CONNECT_TEMPORARY << std::endl;
    std::cout << "CONNECT_UPDATE_PROFILE=" << CONNECT_UPDATE_PROFILE << std::endl;
    std::cout << "CONNECT_UPDATE_RECENT=" << CONNECT_UPDATE_RECENT << std::endl;
    std::cout << "CONSOLE_APPLICATION_16BIT=" << CONSOLE_APPLICATION_16BIT << std::endl;
    std::cout << "CONSOLE_CARET_SELECTION=" << CONSOLE_CARET_SELECTION << std::endl;
    std::cout << "CONSOLE_CARET_VISIBLE=" << CONSOLE_CARET_VISIBLE << std::endl;
    std::cout << "CONSOLE_FULLSCREEN=" << CONSOLE_FULLSCREEN << std::endl;
    std::cout << "CONSOLE_FULLSCREEN_HARDWARE=" << CONSOLE_FULLSCREEN_HARDWARE << std::endl;
    std::cout << "CONSOLE_FULLSCREEN_MODE=" << CONSOLE_FULLSCREEN_MODE << std::endl;
    std::cout << "CONSOLE_MOUSE_DOWN=" << CONSOLE_MOUSE_DOWN << std::endl;
    std::cout << "CONSOLE_MOUSE_SELECTION=" << CONSOLE_MOUSE_SELECTION << std::endl;
    std::cout << "CONSOLE_NO_SELECTION=" << CONSOLE_NO_SELECTION << std::endl;
    std::cout << "CONSOLE_SELECTION_IN_PROGRESS=" << CONSOLE_SELECTION_IN_PROGRESS << std::endl;
    std::cout << "CONSOLE_SELECTION_NOT_EMPTY=" << CONSOLE_SELECTION_NOT_EMPTY << std::endl;
    std::cout << "CONSOLE_TEXTMODE_BUFFER=" << CONSOLE_TEXTMODE_BUFFER << std::endl;
    std::cout << "CONSOLE_WINDOWED_MODE=" << CONSOLE_WINDOWED_MODE << std::endl;
    std::cout << "CONTACTVISUALIZATION_OFF=" << CONTACTVISUALIZATION_OFF << std::endl;
    std::cout << "CONTACTVISUALIZATION_ON=" << CONTACTVISUALIZATION_ON << std::endl;
    std::cout << "CONTACTVISUALIZATION_PRESENTATIONMODE=" << CONTACTVISUALIZATION_PRESENTATIONMODE << std::endl;
    std::cout << "CONTAINER_INHERIT_ACE=" << CONTAINER_INHERIT_ACE << std::endl;
    std::cout << "CONTEXT_ALL=" << CONTEXT_ALL << std::endl;
    std::cout << "CONTEXT_AMD64=" << CONTEXT_AMD64 << std::endl;
    std::cout << "CONTEXT_ARM=" << CONTEXT_ARM << std::endl;
    std::cout << "CONTEXT_ARM64=" << CONTEXT_ARM64 << std::endl;
    std::cout << "CONTEXT_EXCEPTION_ACTIVE=" << CONTEXT_EXCEPTION_ACTIVE << std::endl;
    std::cout << "CONTEXT_EXCEPTION_REPORTING=" << CONTEXT_EXCEPTION_REPORTING << std::endl;
    std::cout << "CONTEXT_EXCEPTION_REQUEST=" << CONTEXT_EXCEPTION_REQUEST << std::endl;
    std::cout << "CONTEXT_FULL=" << CONTEXT_FULL << std::endl;
    std::cout << "CONTEXT_IA64=" << CONTEXT_IA64 << std::endl;
    std::cout << "CONTEXT_OID_CAPI2_ANY=" << CONTEXT_OID_CAPI2_ANY << std::endl;
    std::cout << "CONTEXT_OID_CERTIFICATE=" << CONTEXT_OID_CERTIFICATE << std::endl;
    std::cout << "CONTEXT_OID_CRL=" << CONTEXT_OID_CRL << std::endl;
    std::cout << "CONTEXT_OID_CTL=" << CONTEXT_OID_CTL << std::endl;
    std::cout << "CONTEXT_OID_OCSP_RESP=" << CONTEXT_OID_OCSP_RESP << std::endl;
    std::cout << "CONTEXT_OID_PKCS7=" << CONTEXT_OID_PKCS7 << std::endl;
    std::cout << "CONTEXT_SERVICE_ACTIVE=" << CONTEXT_SERVICE_ACTIVE << std::endl;
    std::cout << "CONTEXT_UNWOUND_TO_CALL=" << CONTEXT_UNWOUND_TO_CALL << std::endl;
    std::cout << "CONTROL_C_EXIT=" << CONTROL_C_EXIT << std::endl;
    std::cout << "COPYFILE_SIS_FLAGS=" << COPYFILE_SIS_FLAGS << std::endl;
    std::cout << "COPYFILE_SIS_LINK=" << COPYFILE_SIS_LINK << std::endl;
    std::cout << "COPYFILE_SIS_REPLACE=" << COPYFILE_SIS_REPLACE << std::endl;
    std::cout << "COPY_FILE_ALLOW_DECRYPTED_DESTINATION=" << COPY_FILE_ALLOW_DECRYPTED_DESTINATION << std::endl;
    std::cout << "COPY_FILE_COPY_SYMLINK=" << COPY_FILE_COPY_SYMLINK << std::endl;
    std::cout << "COPY_FILE_FAIL_IF_EXISTS=" << COPY_FILE_FAIL_IF_EXISTS << std::endl;
    std::cout << "COPY_FILE_NO_BUFFERING=" << COPY_FILE_NO_BUFFERING << std::endl;
    std::cout << "COPY_FILE_NO_OFFLOAD=" << COPY_FILE_NO_OFFLOAD << std::endl;
    std::cout << "COPY_FILE_OPEN_SOURCE_FOR_WRITE=" << COPY_FILE_OPEN_SOURCE_FOR_WRITE << std::endl;
    std::cout << "COPY_FILE_REQUEST_SECURITY_PRIVILEGES=" << COPY_FILE_REQUEST_SECURITY_PRIVILEGES << std::endl;
    std::cout << "COPY_FILE_RESTARTABLE=" << COPY_FILE_RESTARTABLE << std::endl;
    std::cout << "COPY_FILE_RESUME_FROM_PAUSE=" << COPY_FILE_RESUME_FROM_PAUSE << std::endl;
    std::cout << "CORE_PARKING_POLICY_CHANGE_IDEAL=" << CORE_PARKING_POLICY_CHANGE_IDEAL << std::endl;
    std::cout << "CORE_PARKING_POLICY_CHANGE_MAX=" << CORE_PARKING_POLICY_CHANGE_MAX << std::endl;
    std::cout << "CORE_PARKING_POLICY_CHANGE_MULTISTEP=" << CORE_PARKING_POLICY_CHANGE_MULTISTEP << std::endl;
    std::cout << "CORE_PARKING_POLICY_CHANGE_ROCKET=" << CORE_PARKING_POLICY_CHANGE_ROCKET << std::endl;
    std::cout << "CORE_PARKING_POLICY_CHANGE_SINGLE=" << CORE_PARKING_POLICY_CHANGE_SINGLE << std::endl;
    std::cout << "CPS_CANCEL=" << CPS_CANCEL << std::endl;
    std::cout << "CPS_COMPLETE=" << CPS_COMPLETE << std::endl;
    std::cout << "CPS_CONVERT=" << CPS_CONVERT << std::endl;
    std::cout << "CPS_REVERT=" << CPS_REVERT << std::endl;
    std::cout << "CP_ACP=" << CP_ACP << std::endl;
    std::cout << "CP_INSTALLED=" << CP_INSTALLED << std::endl;
    std::cout << "CP_MACCP=" << CP_MACCP << std::endl;
    std::cout << "CP_NONE=" << CP_NONE << std::endl;
    std::cout << "CP_OEMCP=" << CP_OEMCP << std::endl;
    std::cout << "CP_RECTANGLE=" << CP_RECTANGLE << std::endl;
    std::cout << "CP_REGION=" << CP_REGION << std::endl;
    std::cout << "CP_SUPPORTED=" << CP_SUPPORTED << std::endl;
    std::cout << "CP_SYMBOL=" << CP_SYMBOL << std::endl;
    std::cout << "CP_THREAD_ACP=" << CP_THREAD_ACP << std::endl;
    std::cout << "CP_UTF7=" << CP_UTF7 << std::endl;
    std::cout << "CP_UTF8=" << CP_UTF8 << std::endl;
    std::cout << "CP_WINANSI=" << CP_WINANSI << std::endl;
    std::cout << "CP_WINNEUTRAL=" << CP_WINNEUTRAL << std::endl;
    std::cout << "CP_WINUNICODE=" << CP_WINUNICODE << std::endl;
    std::cout << "CREATECOLORSPACE_EMBEDED=" << CREATECOLORSPACE_EMBEDED << std::endl;
    std::cout << "CREATEPROCESS_MANIFEST_RESOURCE_ID=" << CREATEPROCESS_MANIFEST_RESOURCE_ID << std::endl;
    std::cout << "CREATE_ALWAYS=" << CREATE_ALWAYS << std::endl;
    std::cout << "CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID=" << CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID << std::endl;
    std::cout << "CREATE_BREAKAWAY_FROM_JOB=" << CREATE_BREAKAWAY_FROM_JOB << std::endl;
    std::cout << "CREATE_DEFAULT_ERROR_MODE=" << CREATE_DEFAULT_ERROR_MODE << std::endl;
    std::cout << "CREATE_EVENT_INITIAL_SET=" << CREATE_EVENT_INITIAL_SET << std::endl;
    std::cout << "CREATE_EVENT_MANUAL_RESET=" << CREATE_EVENT_MANUAL_RESET << std::endl;
    std::cout << "CREATE_FORCEDOS=" << CREATE_FORCEDOS << std::endl;
    std::cout << "CREATE_FOR_DIR=" << CREATE_FOR_DIR << std::endl;
    std::cout << "CREATE_FOR_IMPORT=" << CREATE_FOR_IMPORT << std::endl;
    std::cout << "CREATE_IGNORE_SYSTEM_DEFAULT=" << CREATE_IGNORE_SYSTEM_DEFAULT << std::endl;
    std::cout << "CREATE_MUTEX_INITIAL_OWNER=" << CREATE_MUTEX_INITIAL_OWNER << std::endl;
    std::cout << "CREATE_NEW=" << CREATE_NEW << std::endl;
    std::cout << "CREATE_NEW_CONSOLE=" << CREATE_NEW_CONSOLE << std::endl;
    std::cout << "CREATE_NEW_PROCESS_GROUP=" << CREATE_NEW_PROCESS_GROUP << std::endl;
    std::cout << "CREATE_NO_WINDOW=" << CREATE_NO_WINDOW << std::endl;
    std::cout << "CREATE_PRESERVE_CODE_AUTHZ_LEVEL=" << CREATE_PRESERVE_CODE_AUTHZ_LEVEL << std::endl;
    std::cout << "CREATE_PROCESS_DEBUG_EVENT=" << CREATE_PROCESS_DEBUG_EVENT << std::endl;
    std::cout << "CREATE_PROTECTED_PROCESS=" << CREATE_PROTECTED_PROCESS << std::endl;
    std::cout << "CREATE_SEPARATE_WOW_VDM=" << CREATE_SEPARATE_WOW_VDM << std::endl;
    std::cout << "CREATE_SHARED_WOW_VDM=" << CREATE_SHARED_WOW_VDM << std::endl;
    std::cout << "CREATE_SUSPENDED=" << CREATE_SUSPENDED << std::endl;
    std::cout << "CREATE_THREAD_DEBUG_EVENT=" << CREATE_THREAD_DEBUG_EVENT << std::endl;
    std::cout << "CREATE_UNICODE_ENVIRONMENT=" << CREATE_UNICODE_ENVIRONMENT << std::endl;
    std::cout << "CREATE_WAITABLE_TIMER_MANUAL_RESET=" << CREATE_WAITABLE_TIMER_MANUAL_RESET << std::endl;
    std::cout << "CREDENTIAL_OID_PASSWORD_CREDENTIALS_A=" << CREDENTIAL_OID_PASSWORD_CREDENTIALS_A << std::endl;
    std::cout << "CREDENTIAL_OID_PASSWORD_CREDENTIALS_W=" << CREDENTIAL_OID_PASSWORD_CREDENTIALS_W << std::endl;
    std::cout << "CRITICAL_SECTION_NO_DEBUG_INFO=" << CRITICAL_SECTION_NO_DEBUG_INFO << std::endl;
    std::cout << "CRL_DIST_POINT_ERR_INDEX_SHIFT=" << CRL_DIST_POINT_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CRL_DIST_POINT_FULL_NAME=" << CRL_DIST_POINT_FULL_NAME << std::endl;
    std::cout << "CRL_DIST_POINT_ISSUER_RDN_NAME=" << CRL_DIST_POINT_ISSUER_RDN_NAME << std::endl;
    std::cout << "CRL_DIST_POINT_NO_NAME=" << CRL_DIST_POINT_NO_NAME << std::endl;
    std::cout << "CRL_FIND_ANY=" << CRL_FIND_ANY << std::endl;
    std::cout << "CRL_FIND_EXISTING=" << CRL_FIND_EXISTING << std::endl;
    std::cout << "CRL_FIND_ISSUED_BY=" << CRL_FIND_ISSUED_BY << std::endl;
    std::cout << "CRL_FIND_ISSUED_BY_AKI_FLAG=" << CRL_FIND_ISSUED_BY_AKI_FLAG << std::endl;
    std::cout << "CRL_FIND_ISSUED_BY_BASE_FLAG=" << CRL_FIND_ISSUED_BY_BASE_FLAG << std::endl;
    std::cout << "CRL_FIND_ISSUED_BY_DELTA_FLAG=" << CRL_FIND_ISSUED_BY_DELTA_FLAG << std::endl;
    std::cout << "CRL_FIND_ISSUED_BY_SIGNATURE_FLAG=" << CRL_FIND_ISSUED_BY_SIGNATURE_FLAG << std::endl;
    std::cout << "CRL_FIND_ISSUED_FOR=" << CRL_FIND_ISSUED_FOR << std::endl;
    std::cout << "CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG=" << CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG << std::endl;
    std::cout << "CRL_REASON_AA_COMPROMISE=" << CRL_REASON_AA_COMPROMISE << std::endl;
    std::cout << "CRL_REASON_AA_COMPROMISE_FLAG=" << CRL_REASON_AA_COMPROMISE_FLAG << std::endl;
    std::cout << "CRL_REASON_AFFILIATION_CHANGED=" << CRL_REASON_AFFILIATION_CHANGED << std::endl;
    std::cout << "CRL_REASON_AFFILIATION_CHANGED_FLAG=" << CRL_REASON_AFFILIATION_CHANGED_FLAG << std::endl;
    std::cout << "CRL_REASON_CA_COMPROMISE=" << CRL_REASON_CA_COMPROMISE << std::endl;
    std::cout << "CRL_REASON_CA_COMPROMISE_FLAG=" << CRL_REASON_CA_COMPROMISE_FLAG << std::endl;
    std::cout << "CRL_REASON_CERTIFICATE_HOLD=" << CRL_REASON_CERTIFICATE_HOLD << std::endl;
    std::cout << "CRL_REASON_CERTIFICATE_HOLD_FLAG=" << CRL_REASON_CERTIFICATE_HOLD_FLAG << std::endl;
    std::cout << "CRL_REASON_CESSATION_OF_OPERATION=" << CRL_REASON_CESSATION_OF_OPERATION << std::endl;
    std::cout << "CRL_REASON_CESSATION_OF_OPERATION_FLAG=" << CRL_REASON_CESSATION_OF_OPERATION_FLAG << std::endl;
    std::cout << "CRL_REASON_KEY_COMPROMISE=" << CRL_REASON_KEY_COMPROMISE << std::endl;
    std::cout << "CRL_REASON_KEY_COMPROMISE_FLAG=" << CRL_REASON_KEY_COMPROMISE_FLAG << std::endl;
    std::cout << "CRL_REASON_PRIVILEGE_WITHDRAWN=" << CRL_REASON_PRIVILEGE_WITHDRAWN << std::endl;
    std::cout << "CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG=" << CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG << std::endl;
    std::cout << "CRL_REASON_REMOVE_FROM_CRL=" << CRL_REASON_REMOVE_FROM_CRL << std::endl;
    std::cout << "CRL_REASON_SUPERSEDED=" << CRL_REASON_SUPERSEDED << std::endl;
    std::cout << "CRL_REASON_SUPERSEDED_FLAG=" << CRL_REASON_SUPERSEDED_FLAG << std::endl;
    std::cout << "CRL_REASON_UNSPECIFIED=" << CRL_REASON_UNSPECIFIED << std::endl;
    std::cout << "CRL_REASON_UNUSED_FLAG=" << CRL_REASON_UNUSED_FLAG << std::endl;
    std::cout << "CRL_V1=" << CRL_V1 << std::endl;
    std::cout << "CRL_V2=" << CRL_V2 << std::endl;
    std::cout << "CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO=" << CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO << std::endl;
    std::cout << "CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY=" << CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY << std::endl;
    std::cout << "CRM_PROTOCOL_MAXIMUM_OPTION=" << CRM_PROTOCOL_MAXIMUM_OPTION << std::endl;
    std::cout << "CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT=" << CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT << std::endl;
    std::cout << "CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT=" << CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_MIN=" << CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_MIN << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_DEFAULT=" << CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT=" << CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT=" << CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT=" << CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT=" << CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT=" << CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_DEFAULT_FLUSH=" << CRYPTNET_URL_CACHE_DEFAULT_FLUSH << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT=" << CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB=" << CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_BLOB=" << CRYPTNET_URL_CACHE_PRE_FETCH_BLOB << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_CRL=" << CRYPTNET_URL_CACHE_PRE_FETCH_CRL << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB=" << CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_NONE=" << CRYPTNET_URL_CACHE_PRE_FETCH_NONE << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_OCSP=" << CRYPTNET_URL_CACHE_PRE_FETCH_OCSP << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB=" << CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_RESPONSE_HTTP=" << CRYPTNET_URL_CACHE_RESPONSE_HTTP << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_RESPONSE_NONE=" << CRYPTNET_URL_CACHE_RESPONSE_NONE << std::endl;
    std::cout << "CRYPTNET_URL_CACHE_RESPONSE_VALIDATED=" << CRYPTNET_URL_CACHE_RESPONSE_VALIDATED << std::endl;
    std::cout << "CRYPTPROTECTMEMORY_BLOCK_SIZE=" << CRYPTPROTECTMEMORY_BLOCK_SIZE << std::endl;
    std::cout << "CRYPTPROTECTMEMORY_CROSS_PROCESS=" << CRYPTPROTECTMEMORY_CROSS_PROCESS << std::endl;
    std::cout << "CRYPTPROTECTMEMORY_SAME_LOGON=" << CRYPTPROTECTMEMORY_SAME_LOGON << std::endl;
    std::cout << "CRYPTPROTECTMEMORY_SAME_PROCESS=" << CRYPTPROTECTMEMORY_SAME_PROCESS << std::endl;
    std::cout << "CRYPTPROTECT_AUDIT=" << CRYPTPROTECT_AUDIT << std::endl;
    std::cout << "CRYPTPROTECT_CRED_REGENERATE=" << CRYPTPROTECT_CRED_REGENERATE << std::endl;
    std::cout << "CRYPTPROTECT_CRED_SYNC=" << CRYPTPROTECT_CRED_SYNC << std::endl;
    std::cout << "CRYPTPROTECT_LOCAL_MACHINE=" << CRYPTPROTECT_LOCAL_MACHINE << std::endl;
    std::cout << "CRYPTPROTECT_NO_RECOVERY=" << CRYPTPROTECT_NO_RECOVERY << std::endl;
    std::cout << "CRYPTPROTECT_PROMPT_ON_PROTECT=" << CRYPTPROTECT_PROMPT_ON_PROTECT << std::endl;
    std::cout << "CRYPTPROTECT_PROMPT_ON_UNPROTECT=" << CRYPTPROTECT_PROMPT_ON_UNPROTECT << std::endl;
    std::cout << "CRYPTPROTECT_PROMPT_REQUIRE_STRONG=" << CRYPTPROTECT_PROMPT_REQUIRE_STRONG << std::endl;
    std::cout << "CRYPTPROTECT_PROMPT_RESERVED=" << CRYPTPROTECT_PROMPT_RESERVED << std::endl;
    std::cout << "CRYPTPROTECT_PROMPT_STRONG=" << CRYPTPROTECT_PROMPT_STRONG << std::endl;
    std::cout << "CRYPTPROTECT_UI_FORBIDDEN=" << CRYPTPROTECT_UI_FORBIDDEN << std::endl;
    std::cout << "CRYPTPROTECT_VERIFY_PROTECTION=" << CRYPTPROTECT_VERIFY_PROTECTION << std::endl;
    std::cout << "CRYPT_ACCUMULATIVE_TIMEOUT=" << CRYPT_ACCUMULATIVE_TIMEOUT << std::endl;
    std::cout << "CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG=" << CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_CACHE_FLAG=" << CRYPT_ACQUIRE_CACHE_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_COMPARE_KEY_FLAG=" << CRYPT_ACQUIRE_COMPARE_KEY_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK=" << CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK << std::endl;
    std::cout << "CRYPT_ACQUIRE_NO_HEALING=" << CRYPT_ACQUIRE_NO_HEALING << std::endl;
    std::cout << "CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG=" << CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG=" << CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_SILENT_FLAG=" << CRYPT_ACQUIRE_SILENT_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_USE_PROV_INFO_FLAG=" << CRYPT_ACQUIRE_USE_PROV_INFO_FLAG << std::endl;
    std::cout << "CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG=" << CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG << std::endl;
    std::cout << "CRYPT_AIA_RETRIEVAL=" << CRYPT_AIA_RETRIEVAL << std::endl;
    std::cout << "CRYPT_ALL_FUNCTIONS=" << CRYPT_ALL_FUNCTIONS << std::endl;
    std::cout << "CRYPT_ALL_PROVIDERS=" << CRYPT_ALL_PROVIDERS << std::endl;
    std::cout << "CRYPT_ANY=" << CRYPT_ANY << std::endl;
    std::cout << "CRYPT_ARCHIVABLE=" << CRYPT_ARCHIVABLE << std::endl;
    std::cout << "CRYPT_ARCHIVE=" << CRYPT_ARCHIVE << std::endl;
    std::cout << "CRYPT_ASN_ENCODING=" << CRYPT_ASN_ENCODING << std::endl;
    std::cout << "CRYPT_ASYNC_RETRIEVAL=" << CRYPT_ASYNC_RETRIEVAL << std::endl;
    std::cout << "CRYPT_BLOB_VER3=" << CRYPT_BLOB_VER3 << std::endl;
    std::cout << "CRYPT_CACHE_ONLY_RETRIEVAL=" << CRYPT_CACHE_ONLY_RETRIEVAL << std::endl;
    std::cout << "CRYPT_CHECK_FRESHNESS_TIME_VALIDITY=" << CRYPT_CHECK_FRESHNESS_TIME_VALIDITY << std::endl;
    std::cout << "CRYPT_CREATE_IV=" << CRYPT_CREATE_IV << std::endl;
    std::cout << "CRYPT_CREATE_NEW_FLUSH_ENTRY=" << CRYPT_CREATE_NEW_FLUSH_ENTRY << std::endl;
    std::cout << "CRYPT_CREATE_SALT=" << CRYPT_CREATE_SALT << std::endl;
    std::cout << "CRYPT_DATA_KEY=" << CRYPT_DATA_KEY << std::endl;
    std::cout << "CRYPT_DECODE_ALLOC_FLAG=" << CRYPT_DECODE_ALLOC_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG=" << CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_ENABLE_PUNYCODE_FLAG=" << CRYPT_DECODE_ENABLE_PUNYCODE_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG=" << CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_NOCOPY_FLAG=" << CRYPT_DECODE_NOCOPY_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG=" << CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_SHARE_OID_STRING_FLAG=" << CRYPT_DECODE_SHARE_OID_STRING_FLAG << std::endl;
    std::cout << "CRYPT_DECODE_TO_BE_SIGNED_FLAG=" << CRYPT_DECODE_TO_BE_SIGNED_FLAG << std::endl;
    std::cout << "CRYPT_DECRYPT=" << CRYPT_DECRYPT << std::endl;
    std::cout << "CRYPT_DECRYPT_RSA_NO_PADDING_CHECK=" << CRYPT_DECRYPT_RSA_NO_PADDING_CHECK << std::endl;
    std::cout << "CRYPT_DEFAULT_CONTAINER_OPTIONAL=" << CRYPT_DEFAULT_CONTAINER_OPTIONAL << std::endl;
    std::cout << "CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG=" << CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG << std::endl;
    std::cout << "CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID=" << CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID << std::endl;
    std::cout << "CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID=" << CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID << std::endl;
    std::cout << "CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG=" << CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG << std::endl;
    std::cout << "CRYPT_DELETEKEYSET=" << CRYPT_DELETEKEYSET << std::endl;
    std::cout << "CRYPT_DELETE_DEFAULT=" << CRYPT_DELETE_DEFAULT << std::endl;
    std::cout << "CRYPT_DELETE_KEYSET=" << CRYPT_DELETE_KEYSET << std::endl;
    std::cout << "CRYPT_DESTROYKEY=" << CRYPT_DESTROYKEY << std::endl;
    std::cout << "CRYPT_DOMAIN=" << CRYPT_DOMAIN << std::endl;
    std::cout << "CRYPT_DONT_CACHE_RESULT=" << CRYPT_DONT_CACHE_RESULT << std::endl;
    std::cout << "CRYPT_DONT_CHECK_TIME_VALIDITY=" << CRYPT_DONT_CHECK_TIME_VALIDITY << std::endl;
    std::cout << "CRYPT_DONT_VERIFY_SIGNATURE=" << CRYPT_DONT_VERIFY_SIGNATURE << std::endl;
    std::cout << "CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH=" << CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH << std::endl;
    std::cout << "CRYPT_ENABLE_FILE_RETRIEVAL=" << CRYPT_ENABLE_FILE_RETRIEVAL << std::endl;
    std::cout << "CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL=" << CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL << std::endl;
    std::cout << "CRYPT_ENCODE_ALLOC_FLAG=" << CRYPT_ENCODE_ALLOC_FLAG << std::endl;
    std::cout << "CRYPT_ENCODE_DECODE_NONE=" << CRYPT_ENCODE_DECODE_NONE << std::endl;
    std::cout << "CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG=" << CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG << std::endl;
    std::cout << "CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG=" << CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG << std::endl;
    std::cout << "CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG=" << CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG << std::endl;
    std::cout << "CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG=" << CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG << std::endl;
    std::cout << "CRYPT_ENCRYPT=" << CRYPT_ENCRYPT << std::endl;
    std::cout << "CRYPT_ENCRYPT_ALG_OID_GROUP_ID=" << CRYPT_ENCRYPT_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_ENHKEY_USAGE_OID_GROUP_ID=" << CRYPT_ENHKEY_USAGE_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_EXCLUSIVE=" << CRYPT_EXCLUSIVE << std::endl;
    std::cout << "CRYPT_EXPORT=" << CRYPT_EXPORT << std::endl;
    std::cout << "CRYPT_EXPORTABLE=" << CRYPT_EXPORTABLE << std::endl;
    std::cout << "CRYPT_EXPORT_KEY=" << CRYPT_EXPORT_KEY << std::endl;
    std::cout << "CRYPT_EXT_OR_ATTR_OID_GROUP_ID=" << CRYPT_EXT_OR_ATTR_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_FAILED=" << CRYPT_FAILED << std::endl;
    std::cout << "CRYPT_FASTSGC=" << CRYPT_FASTSGC << std::endl;
    std::cout << "CRYPT_FIND_MACHINE_KEYSET_FLAG=" << CRYPT_FIND_MACHINE_KEYSET_FLAG << std::endl;
    std::cout << "CRYPT_FIND_SILENT_KEYSET_FLAG=" << CRYPT_FIND_SILENT_KEYSET_FLAG << std::endl;
    std::cout << "CRYPT_FIND_USER_KEYSET_FLAG=" << CRYPT_FIND_USER_KEYSET_FLAG << std::endl;
    std::cout << "CRYPT_FIRST=" << CRYPT_FIRST << std::endl;
    std::cout << "CRYPT_FIRST_ALG_OID_GROUP_ID=" << CRYPT_FIRST_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_FLAG_IPSEC=" << CRYPT_FLAG_IPSEC << std::endl;
    std::cout << "CRYPT_FLAG_PCT1=" << CRYPT_FLAG_PCT1 << std::endl;
    std::cout << "CRYPT_FLAG_SIGNING=" << CRYPT_FLAG_SIGNING << std::endl;
    std::cout << "CRYPT_FLAG_SSL2=" << CRYPT_FLAG_SSL2 << std::endl;
    std::cout << "CRYPT_FLAG_SSL3=" << CRYPT_FLAG_SSL3 << std::endl;
    std::cout << "CRYPT_FLAG_TLS1=" << CRYPT_FLAG_TLS1 << std::endl;
    std::cout << "CRYPT_FORCE_KEY_PROTECTION_HIGH=" << CRYPT_FORCE_KEY_PROTECTION_HIGH << std::endl;
    std::cout << "CRYPT_FORMAT_COMMA=" << CRYPT_FORMAT_COMMA << std::endl;
    std::cout << "CRYPT_FORMAT_CRLF=" << CRYPT_FORMAT_CRLF << std::endl;
    std::cout << "CRYPT_FORMAT_OID=" << CRYPT_FORMAT_OID << std::endl;
    std::cout << "CRYPT_FORMAT_RDN_CRLF=" << CRYPT_FORMAT_RDN_CRLF << std::endl;
    std::cout << "CRYPT_FORMAT_RDN_REVERSE=" << CRYPT_FORMAT_RDN_REVERSE << std::endl;
    std::cout << "CRYPT_FORMAT_RDN_SEMICOLON=" << CRYPT_FORMAT_RDN_SEMICOLON << std::endl;
    std::cout << "CRYPT_FORMAT_RDN_UNQUOTE=" << CRYPT_FORMAT_RDN_UNQUOTE << std::endl;
    std::cout << "CRYPT_FORMAT_SEMICOLON=" << CRYPT_FORMAT_SEMICOLON << std::endl;
    std::cout << "CRYPT_FORMAT_SIMPLE=" << CRYPT_FORMAT_SIMPLE << std::endl;
    std::cout << "CRYPT_FORMAT_STR_MULTI_LINE=" << CRYPT_FORMAT_STR_MULTI_LINE << std::endl;
    std::cout << "CRYPT_FORMAT_STR_NO_HEX=" << CRYPT_FORMAT_STR_NO_HEX << std::endl;
    std::cout << "CRYPT_FORMAT_X509=" << CRYPT_FORMAT_X509 << std::endl;
    std::cout << "CRYPT_GET_INSTALLED_OID_FUNC_FLAG=" << CRYPT_GET_INSTALLED_OID_FUNC_FLAG << std::endl;
    std::cout << "CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE=" << CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE << std::endl;
    std::cout << "CRYPT_GET_URL_FROM_EXTENSION=" << CRYPT_GET_URL_FROM_EXTENSION << std::endl;
    std::cout << "CRYPT_GET_URL_FROM_PROPERTY=" << CRYPT_GET_URL_FROM_PROPERTY << std::endl;
    std::cout << "CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE=" << CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE << std::endl;
    std::cout << "CRYPT_HASH_ALG_OID_GROUP_ID=" << CRYPT_HASH_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_HTTP_POST_RETRIEVAL=" << CRYPT_HTTP_POST_RETRIEVAL << std::endl;
    std::cout << "CRYPT_IMPL_HARDWARE=" << CRYPT_IMPL_HARDWARE << std::endl;
    std::cout << "CRYPT_IMPL_MIXED=" << CRYPT_IMPL_MIXED << std::endl;
    std::cout << "CRYPT_IMPL_REMOVABLE=" << CRYPT_IMPL_REMOVABLE << std::endl;
    std::cout << "CRYPT_IMPL_SOFTWARE=" << CRYPT_IMPL_SOFTWARE << std::endl;
    std::cout << "CRYPT_IMPL_UNKNOWN=" << CRYPT_IMPL_UNKNOWN << std::endl;
    std::cout << "CRYPT_IMPORT_KEY=" << CRYPT_IMPORT_KEY << std::endl;
    std::cout << "CRYPT_INITIATOR=" << CRYPT_INITIATOR << std::endl;
    std::cout << "CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG=" << CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG << std::endl;
    std::cout << "CRYPT_INSTALL_OID_INFO_BEFORE_FLAG=" << CRYPT_INSTALL_OID_INFO_BEFORE_FLAG << std::endl;
    std::cout << "CRYPT_IPSEC_HMAC_KEY=" << CRYPT_IPSEC_HMAC_KEY << std::endl;
    std::cout << "CRYPT_KDF_OID_GROUP_ID=" << CRYPT_KDF_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_KEEP_TIME_VALID=" << CRYPT_KEEP_TIME_VALID << std::endl;
    std::cout << "CRYPT_KEK=" << CRYPT_KEK << std::endl;
    std::cout << "CRYPT_KEYID_ALLOC_FLAG=" << CRYPT_KEYID_ALLOC_FLAG << std::endl;
    std::cout << "CRYPT_KEYID_DELETE_FLAG=" << CRYPT_KEYID_DELETE_FLAG << std::endl;
    std::cout << "CRYPT_KEYID_MACHINE_FLAG=" << CRYPT_KEYID_MACHINE_FLAG << std::endl;
    std::cout << "CRYPT_KEYID_SET_NEW_FLAG=" << CRYPT_KEYID_SET_NEW_FLAG << std::endl;
    std::cout << "CRYPT_KM=" << CRYPT_KM << std::endl;
    std::cout << "CRYPT_LAST_ALG_OID_GROUP_ID=" << CRYPT_LAST_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_LAST_OID_GROUP_ID=" << CRYPT_LAST_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL=" << CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL << std::endl;
    std::cout << "CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE=" << CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE << std::endl;
    std::cout << "CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL=" << CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL << std::endl;
    std::cout << "CRYPT_LDAP_SIGN_RETRIEVAL=" << CRYPT_LDAP_SIGN_RETRIEVAL << std::endl;
    std::cout << "CRYPT_LITTLE_ENDIAN=" << CRYPT_LITTLE_ENDIAN << std::endl;
    std::cout << "CRYPT_LOCAL=" << CRYPT_LOCAL << std::endl;
    std::cout << "CRYPT_LOCALIZED_NAME_ENCODING_TYPE=" << CRYPT_LOCALIZED_NAME_ENCODING_TYPE << std::endl;
    std::cout << "CRYPT_MAC=" << CRYPT_MAC << std::endl;
    std::cout << "CRYPT_MACHINE_DEFAULT=" << CRYPT_MACHINE_DEFAULT << std::endl;
    std::cout << "CRYPT_MACHINE_KEYSET=" << CRYPT_MACHINE_KEYSET << std::endl;
    std::cout << "CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG=" << CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG << std::endl;
    std::cout << "CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG=" << CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG << std::endl;
    std::cout << "CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG=" << CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG << std::endl;
    std::cout << "CRYPT_MESSAGE_KEYID_SIGNER_FLAG=" << CRYPT_MESSAGE_KEYID_SIGNER_FLAG << std::endl;
    std::cout << "CRYPT_MESSAGE_SILENT_KEYSET_FLAG=" << CRYPT_MESSAGE_SILENT_KEYSET_FLAG << std::endl;
    std::cout << "CRYPT_MIN_DEPENDENCIES=" << CRYPT_MIN_DEPENDENCIES << std::endl;
    std::cout << "CRYPT_MM=" << CRYPT_MM << std::endl;
    std::cout << "CRYPT_MODE_CBC=" << CRYPT_MODE_CBC << std::endl;
    std::cout << "CRYPT_MODE_CBCI=" << CRYPT_MODE_CBCI << std::endl;
    std::cout << "CRYPT_MODE_CBCOFM=" << CRYPT_MODE_CBCOFM << std::endl;
    std::cout << "CRYPT_MODE_CBCOFMI=" << CRYPT_MODE_CBCOFMI << std::endl;
    std::cout << "CRYPT_MODE_CFB=" << CRYPT_MODE_CFB << std::endl;
    std::cout << "CRYPT_MODE_CFBP=" << CRYPT_MODE_CFBP << std::endl;
    std::cout << "CRYPT_MODE_CTS=" << CRYPT_MODE_CTS << std::endl;
    std::cout << "CRYPT_MODE_ECB=" << CRYPT_MODE_ECB << std::endl;
    std::cout << "CRYPT_MODE_OFB=" << CRYPT_MODE_OFB << std::endl;
    std::cout << "CRYPT_MODE_OFBP=" << CRYPT_MODE_OFBP << std::endl;
    std::cout << "CRYPT_NDR_ENCODING=" << CRYPT_NDR_ENCODING << std::endl;
    std::cout << "CRYPT_NEWKEYSET=" << CRYPT_NEWKEYSET << std::endl;
    std::cout << "CRYPT_NEXT=" << CRYPT_NEXT << std::endl;
    std::cout << "CRYPT_NOHASHOID=" << CRYPT_NOHASHOID << std::endl;
    std::cout << "CRYPT_NOT_MODIFIED_RETRIEVAL=" << CRYPT_NOT_MODIFIED_RETRIEVAL << std::endl;
    std::cout << "CRYPT_NO_AUTH_RETRIEVAL=" << CRYPT_NO_AUTH_RETRIEVAL << std::endl;
    std::cout << "CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL=" << CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL << std::endl;
    std::cout << "CRYPT_NO_SALT=" << CRYPT_NO_SALT << std::endl;
    std::cout << "CRYPT_OAEP=" << CRYPT_OAEP << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE=" << CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE=" << CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD=" << CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT=" << CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP=" << CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN=" << CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN << std::endl;
    std::cout << "CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE=" << CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE << std::endl;
    std::cout << "CRYPT_OCSP_ONLY_RETRIEVAL=" << CRYPT_OCSP_ONLY_RETRIEVAL << std::endl;
    std::cout << "CRYPT_OFFLINE_CHECK_RETRIEVAL=" << CRYPT_OFFLINE_CHECK_RETRIEVAL << std::endl;
    std::cout << "CRYPT_OID_DISABLE_SEARCH_DS_FLAG=" << CRYPT_OID_DISABLE_SEARCH_DS_FLAG << std::endl;
    std::cout << "CRYPT_OID_INFO_ALGID_KEY=" << CRYPT_OID_INFO_ALGID_KEY << std::endl;
    std::cout << "CRYPT_OID_INFO_CNG_ALGID_KEY=" << CRYPT_OID_INFO_CNG_ALGID_KEY << std::endl;
    std::cout << "CRYPT_OID_INFO_CNG_SIGN_KEY=" << CRYPT_OID_INFO_CNG_SIGN_KEY << std::endl;
    std::cout << "CRYPT_OID_INFO_NAME_KEY=" << CRYPT_OID_INFO_NAME_KEY << std::endl;
    std::cout << "CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT=" << CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT << std::endl;
    std::cout << "CRYPT_OID_INFO_OID_KEY=" << CRYPT_OID_INFO_OID_KEY << std::endl;
    std::cout << "CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG=" << CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG << std::endl;
    std::cout << "CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG=" << CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG << std::endl;
    std::cout << "CRYPT_OID_INFO_SIGN_KEY=" << CRYPT_OID_INFO_SIGN_KEY << std::endl;
    std::cout << "CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG=" << CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG << std::endl;
    std::cout << "CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG=" << CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG << std::endl;
    std::cout << "CRYPT_OID_PREFER_CNG_ALGID_FLAG=" << CRYPT_OID_PREFER_CNG_ALGID_FLAG << std::endl;
    std::cout << "CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG=" << CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG << std::endl;
    std::cout << "CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG=" << CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG << std::endl;
    std::cout << "CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG=" << CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG << std::endl;
    std::cout << "CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG=" << CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG << std::endl;
    std::cout << "CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG=" << CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG << std::endl;
    std::cout << "CRYPT_ONLINE=" << CRYPT_ONLINE << std::endl;
    std::cout << "CRYPT_OVERRIDE=" << CRYPT_OVERRIDE << std::endl;
    std::cout << "CRYPT_OVERWRITE=" << CRYPT_OVERWRITE << std::endl;
    std::cout << "CRYPT_OWF_REPL_LM_HASH=" << CRYPT_OWF_REPL_LM_HASH << std::endl;
    std::cout << "CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION=" << CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION << std::endl;
    std::cout << "CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL=" << CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL << std::endl;
    std::cout << "CRYPT_POLICY_OID_GROUP_ID=" << CRYPT_POLICY_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_PREGEN=" << CRYPT_PREGEN << std::endl;
    std::cout << "CRYPT_PRIORITY_TOP=" << CRYPT_PRIORITY_TOP << std::endl;
    std::cout << "CRYPT_PROCESS_ISOLATE=" << CRYPT_PROCESS_ISOLATE << std::endl;
    std::cout << "CRYPT_PROXY_CACHE_RETRIEVAL=" << CRYPT_PROXY_CACHE_RETRIEVAL << std::endl;
    std::cout << "CRYPT_PSTORE=" << CRYPT_PSTORE << std::endl;
    std::cout << "CRYPT_PUBKEY_ALG_OID_GROUP_ID=" << CRYPT_PUBKEY_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_RANDOM_QUERY_STRING_RETRIEVAL=" << CRYPT_RANDOM_QUERY_STRING_RETRIEVAL << std::endl;
    std::cout << "CRYPT_RC2_128BIT_VERSION=" << CRYPT_RC2_128BIT_VERSION << std::endl;
    std::cout << "CRYPT_RC2_40BIT_VERSION=" << CRYPT_RC2_40BIT_VERSION << std::endl;
    std::cout << "CRYPT_RC2_56BIT_VERSION=" << CRYPT_RC2_56BIT_VERSION << std::endl;
    std::cout << "CRYPT_RC2_64BIT_VERSION=" << CRYPT_RC2_64BIT_VERSION << std::endl;
    std::cout << "CRYPT_RDN_ATTR_OID_GROUP_ID=" << CRYPT_RDN_ATTR_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_READ=" << CRYPT_READ << std::endl;
    std::cout << "CRYPT_RECIPIENT=" << CRYPT_RECIPIENT << std::endl;
    std::cout << "CRYPT_REGISTER_FIRST_INDEX=" << CRYPT_REGISTER_FIRST_INDEX << std::endl;
    std::cout << "CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH=" << CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH << std::endl;
    std::cout << "CRYPT_RETRIEVE_MULTIPLE_OBJECTS=" << CRYPT_RETRIEVE_MULTIPLE_OBJECTS << std::endl;
    std::cout << "CRYPT_SECRETDIGEST=" << CRYPT_SECRETDIGEST << std::endl;
    std::cout << "CRYPT_SEC_DESCR=" << CRYPT_SEC_DESCR << std::endl;
    std::cout << "CRYPT_SERVER=" << CRYPT_SERVER << std::endl;
    std::cout << "CRYPT_SF=" << CRYPT_SF << std::endl;
    std::cout << "CRYPT_SGC=" << CRYPT_SGC << std::endl;
    std::cout << "CRYPT_SGCKEY=" << CRYPT_SGCKEY << std::endl;
    std::cout << "CRYPT_SGC_ENUM=" << CRYPT_SGC_ENUM << std::endl;
    std::cout << "CRYPT_SIGN_ALG_OID_GROUP_ID=" << CRYPT_SIGN_ALG_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_SILENT=" << CRYPT_SILENT << std::endl;
    std::cout << "CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG=" << CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG << std::endl;
    std::cout << "CRYPT_SSL2_FALLBACK=" << CRYPT_SSL2_FALLBACK << std::endl;
    std::cout << "CRYPT_STICKY_CACHE_RETRIEVAL=" << CRYPT_STICKY_CACHE_RETRIEVAL << std::endl;
    std::cout << "CRYPT_STRING_ANY=" << CRYPT_STRING_ANY << std::endl;
    std::cout << "CRYPT_STRING_BASE64=" << CRYPT_STRING_BASE64 << std::endl;
    std::cout << "CRYPT_STRING_BASE64HEADER=" << CRYPT_STRING_BASE64HEADER << std::endl;
    std::cout << "CRYPT_STRING_BASE64REQUESTHEADER=" << CRYPT_STRING_BASE64REQUESTHEADER << std::endl;
    std::cout << "CRYPT_STRING_BASE64X509CRLHEADER=" << CRYPT_STRING_BASE64X509CRLHEADER << std::endl;
    std::cout << "CRYPT_STRING_BASE64_ANY=" << CRYPT_STRING_BASE64_ANY << std::endl;
    std::cout << "CRYPT_STRING_BINARY=" << CRYPT_STRING_BINARY << std::endl;
    std::cout << "CRYPT_STRING_HASHDATA=" << CRYPT_STRING_HASHDATA << std::endl;
    std::cout << "CRYPT_STRING_HEX=" << CRYPT_STRING_HEX << std::endl;
    std::cout << "CRYPT_STRING_HEXASCII=" << CRYPT_STRING_HEXASCII << std::endl;
    std::cout << "CRYPT_STRING_HEX_ANY=" << CRYPT_STRING_HEX_ANY << std::endl;
    std::cout << "CRYPT_STRING_NOCR=" << CRYPT_STRING_NOCR << std::endl;
    std::cout << "CRYPT_STRING_NOCRLF=" << CRYPT_STRING_NOCRLF << std::endl;
    std::cout << "CRYPT_STRING_PERCENTESCAPE=" << CRYPT_STRING_PERCENTESCAPE << std::endl;
    std::cout << "CRYPT_STRING_RESERVED100=" << CRYPT_STRING_RESERVED100 << std::endl;
    std::cout << "CRYPT_STRING_RESERVED200=" << CRYPT_STRING_RESERVED200 << std::endl;
    std::cout << "CRYPT_STRING_STRICT=" << CRYPT_STRING_STRICT << std::endl;
    std::cout << "CRYPT_SUCCEED=" << CRYPT_SUCCEED << std::endl;
    std::cout << "CRYPT_TEMPLATE_OID_GROUP_ID=" << CRYPT_TEMPLATE_OID_GROUP_ID << std::endl;
    std::cout << "CRYPT_TYPE2_FORMAT=" << CRYPT_TYPE2_FORMAT << std::endl;
    std::cout << "CRYPT_UI_PROMPT=" << CRYPT_UI_PROMPT << std::endl;
    std::cout << "CRYPT_UM=" << CRYPT_UM << std::endl;
    std::cout << "CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG=" << CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG << std::endl;
    std::cout << "CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG=" << CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG << std::endl;
    std::cout << "CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG=" << CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG << std::endl;
    std::cout << "CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG=" << CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG << std::endl;
    std::cout << "CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG=" << CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG << std::endl;
    std::cout << "CRYPT_UPDATE_KEY=" << CRYPT_UPDATE_KEY << std::endl;
    std::cout << "CRYPT_USERDATA=" << CRYPT_USERDATA << std::endl;
    std::cout << "CRYPT_USER_DEFAULT=" << CRYPT_USER_DEFAULT << std::endl;
    std::cout << "CRYPT_USER_KEYSET=" << CRYPT_USER_KEYSET << std::endl;
    std::cout << "CRYPT_USER_PROTECTED=" << CRYPT_USER_PROTECTED << std::endl;
    std::cout << "CRYPT_USER_PROTECTED_STRONG=" << CRYPT_USER_PROTECTED_STRONG << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG=" << CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT=" << CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN=" << CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL=" << CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY=" << CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG=" << CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG=" << CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB=" << CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT=" << CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL=" << CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL << std::endl;
    std::cout << "CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE=" << CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE << std::endl;
    std::cout << "CRYPT_VERIFY_CONTEXT_SIGNATURE=" << CRYPT_VERIFY_CONTEXT_SIGNATURE << std::endl;
    std::cout << "CRYPT_VERIFY_DATA_HASH=" << CRYPT_VERIFY_DATA_HASH << std::endl;
    std::cout << "CRYPT_VOLATILE=" << CRYPT_VOLATILE << std::endl;
    std::cout << "CRYPT_WIRE_ONLY_RETRIEVAL=" << CRYPT_WIRE_ONLY_RETRIEVAL << std::endl;
    std::cout << "CRYPT_WRITE=" << CRYPT_WRITE << std::endl;
    std::cout << "CRYPT_X931_FORMAT=" << CRYPT_X931_FORMAT << std::endl;
    std::cout << "CRYPT_X942_COUNTER_BYTE_LENGTH=" << CRYPT_X942_COUNTER_BYTE_LENGTH << std::endl;
    std::cout << "CRYPT_X942_KEY_LENGTH_BYTE_LENGTH=" << CRYPT_X942_KEY_LENGTH_BYTE_LENGTH << std::endl;
    std::cout << "CRYPT_X942_PUB_INFO_BYTE_LENGTH=" << CRYPT_X942_PUB_INFO_BYTE_LENGTH << std::endl;
    std::cout << "CRYPT_Y_ONLY=" << CRYPT_Y_ONLY << std::endl;
    std::cout << "CSOUND_SYSTEM=" << CSOUND_SYSTEM << std::endl;
    std::cout << "CSTR_EQUAL=" << CSTR_EQUAL << std::endl;
    std::cout << "CSTR_GREATER_THAN=" << CSTR_GREATER_THAN << std::endl;
    std::cout << "CSTR_LESS_THAN=" << CSTR_LESS_THAN << std::endl;
    std::cout << "CS_BYTEALIGNCLIENT=" << CS_BYTEALIGNCLIENT << std::endl;
    std::cout << "CS_BYTEALIGNWINDOW=" << CS_BYTEALIGNWINDOW << std::endl;
    std::cout << "CS_CLASSDC=" << CS_CLASSDC << std::endl;
    std::cout << "CS_DBLCLKS=" << CS_DBLCLKS << std::endl;
    std::cout << "CS_DROPSHADOW=" << CS_DROPSHADOW << std::endl;
    std::cout << "CS_GLOBALCLASS=" << CS_GLOBALCLASS << std::endl;
    std::cout << "CS_HREDRAW=" << CS_HREDRAW << std::endl;
    std::cout << "CS_IME=" << CS_IME << std::endl;
    std::cout << "CS_INSERTCHAR=" << CS_INSERTCHAR << std::endl;
    std::cout << "CS_NOCLOSE=" << CS_NOCLOSE << std::endl;
    std::cout << "CS_NOMOVECARET=" << CS_NOMOVECARET << std::endl;
    std::cout << "CS_OWNDC=" << CS_OWNDC << std::endl;
    std::cout << "CS_PARENTDC=" << CS_PARENTDC << std::endl;
    std::cout << "CS_SAVEBITS=" << CS_SAVEBITS << std::endl;
    std::cout << "CS_VREDRAW=" << CS_VREDRAW << std::endl;
    std::cout << "CTLCOLOR_BTN=" << CTLCOLOR_BTN << std::endl;
    std::cout << "CTLCOLOR_DLG=" << CTLCOLOR_DLG << std::endl;
    std::cout << "CTLCOLOR_EDIT=" << CTLCOLOR_EDIT << std::endl;
    std::cout << "CTLCOLOR_LISTBOX=" << CTLCOLOR_LISTBOX << std::endl;
    std::cout << "CTLCOLOR_MAX=" << CTLCOLOR_MAX << std::endl;
    std::cout << "CTLCOLOR_MSGBOX=" << CTLCOLOR_MSGBOX << std::endl;
    std::cout << "CTLCOLOR_SCROLLBAR=" << CTLCOLOR_SCROLLBAR << std::endl;
    std::cout << "CTLCOLOR_STATIC=" << CTLCOLOR_STATIC << std::endl;
    std::cout << "CTL_ANY_SUBJECT_TYPE=" << CTL_ANY_SUBJECT_TYPE << std::endl;
    std::cout << "CTL_CERT_SUBJECT_TYPE=" << CTL_CERT_SUBJECT_TYPE << std::endl;
    std::cout << "CTL_ENTRY_FROM_PROP_CHAIN_FLAG=" << CTL_ENTRY_FROM_PROP_CHAIN_FLAG << std::endl;
    std::cout << "CTL_FIND_ANY=" << CTL_FIND_ANY << std::endl;
    std::cout << "CTL_FIND_EXISTING=" << CTL_FIND_EXISTING << std::endl;
    std::cout << "CTL_FIND_MD5_HASH=" << CTL_FIND_MD5_HASH << std::endl;
    std::cout << "CTL_FIND_SAME_USAGE_FLAG=" << CTL_FIND_SAME_USAGE_FLAG << std::endl;
    std::cout << "CTL_FIND_SHA1_HASH=" << CTL_FIND_SHA1_HASH << std::endl;
    std::cout << "CTL_FIND_SUBJECT=" << CTL_FIND_SUBJECT << std::endl;
    std::cout << "CTL_FIND_USAGE=" << CTL_FIND_USAGE << std::endl;
    std::cout << "CTL_V1=" << CTL_V1 << std::endl;
    std::cout << "CTRL_BREAK_EVENT=" << CTRL_BREAK_EVENT << std::endl;
    std::cout << "CTRL_CLOSE_EVENT=" << CTRL_CLOSE_EVENT << std::endl;
    std::cout << "CTRL_C_EVENT=" << CTRL_C_EVENT << std::endl;
    std::cout << "CTRL_LOGOFF_EVENT=" << CTRL_LOGOFF_EVENT << std::endl;
    std::cout << "CTRL_SHUTDOWN_EVENT=" << CTRL_SHUTDOWN_EVENT << std::endl;
    std::cout << "CTRY_ALBANIA=" << CTRY_ALBANIA << std::endl;
    std::cout << "CTRY_ALGERIA=" << CTRY_ALGERIA << std::endl;
    std::cout << "CTRY_ARGENTINA=" << CTRY_ARGENTINA << std::endl;
    std::cout << "CTRY_ARMENIA=" << CTRY_ARMENIA << std::endl;
    std::cout << "CTRY_AUSTRALIA=" << CTRY_AUSTRALIA << std::endl;
    std::cout << "CTRY_AUSTRIA=" << CTRY_AUSTRIA << std::endl;
    std::cout << "CTRY_AZERBAIJAN=" << CTRY_AZERBAIJAN << std::endl;
    std::cout << "CTRY_BAHRAIN=" << CTRY_BAHRAIN << std::endl;
    std::cout << "CTRY_BELARUS=" << CTRY_BELARUS << std::endl;
    std::cout << "CTRY_BELGIUM=" << CTRY_BELGIUM << std::endl;
    std::cout << "CTRY_BELIZE=" << CTRY_BELIZE << std::endl;
    std::cout << "CTRY_BOLIVIA=" << CTRY_BOLIVIA << std::endl;
    std::cout << "CTRY_BRAZIL=" << CTRY_BRAZIL << std::endl;
    std::cout << "CTRY_BRUNEI_DARUSSALAM=" << CTRY_BRUNEI_DARUSSALAM << std::endl;
    std::cout << "CTRY_BULGARIA=" << CTRY_BULGARIA << std::endl;
    std::cout << "CTRY_CANADA=" << CTRY_CANADA << std::endl;
    std::cout << "CTRY_CARIBBEAN=" << CTRY_CARIBBEAN << std::endl;
    std::cout << "CTRY_CHILE=" << CTRY_CHILE << std::endl;
    std::cout << "CTRY_COLOMBIA=" << CTRY_COLOMBIA << std::endl;
    std::cout << "CTRY_COSTA_RICA=" << CTRY_COSTA_RICA << std::endl;
    std::cout << "CTRY_CROATIA=" << CTRY_CROATIA << std::endl;
    std::cout << "CTRY_CZECH=" << CTRY_CZECH << std::endl;
    std::cout << "CTRY_DEFAULT=" << CTRY_DEFAULT << std::endl;
    std::cout << "CTRY_DENMARK=" << CTRY_DENMARK << std::endl;
    std::cout << "CTRY_DOMINICAN_REPUBLIC=" << CTRY_DOMINICAN_REPUBLIC << std::endl;
    std::cout << "CTRY_ECUADOR=" << CTRY_ECUADOR << std::endl;
    std::cout << "CTRY_EGYPT=" << CTRY_EGYPT << std::endl;
    std::cout << "CTRY_EL_SALVADOR=" << CTRY_EL_SALVADOR << std::endl;
    std::cout << "CTRY_ESTONIA=" << CTRY_ESTONIA << std::endl;
    std::cout << "CTRY_FAEROE_ISLANDS=" << CTRY_FAEROE_ISLANDS << std::endl;
    std::cout << "CTRY_FINLAND=" << CTRY_FINLAND << std::endl;
    std::cout << "CTRY_FRANCE=" << CTRY_FRANCE << std::endl;
    std::cout << "CTRY_GEORGIA=" << CTRY_GEORGIA << std::endl;
    std::cout << "CTRY_GERMANY=" << CTRY_GERMANY << std::endl;
    std::cout << "CTRY_GREECE=" << CTRY_GREECE << std::endl;
    std::cout << "CTRY_GUATEMALA=" << CTRY_GUATEMALA << std::endl;
    std::cout << "CTRY_HONDURAS=" << CTRY_HONDURAS << std::endl;
    std::cout << "CTRY_HONG_KONG=" << CTRY_HONG_KONG << std::endl;
    std::cout << "CTRY_HUNGARY=" << CTRY_HUNGARY << std::endl;
    std::cout << "CTRY_ICELAND=" << CTRY_ICELAND << std::endl;
    std::cout << "CTRY_INDIA=" << CTRY_INDIA << std::endl;
    std::cout << "CTRY_INDONESIA=" << CTRY_INDONESIA << std::endl;
    std::cout << "CTRY_IRAN=" << CTRY_IRAN << std::endl;
    std::cout << "CTRY_IRAQ=" << CTRY_IRAQ << std::endl;
    std::cout << "CTRY_IRELAND=" << CTRY_IRELAND << std::endl;
    std::cout << "CTRY_ISRAEL=" << CTRY_ISRAEL << std::endl;
    std::cout << "CTRY_ITALY=" << CTRY_ITALY << std::endl;
    std::cout << "CTRY_JAMAICA=" << CTRY_JAMAICA << std::endl;
    std::cout << "CTRY_JAPAN=" << CTRY_JAPAN << std::endl;
    std::cout << "CTRY_JORDAN=" << CTRY_JORDAN << std::endl;
    std::cout << "CTRY_KAZAKSTAN=" << CTRY_KAZAKSTAN << std::endl;
    std::cout << "CTRY_KENYA=" << CTRY_KENYA << std::endl;
    std::cout << "CTRY_KUWAIT=" << CTRY_KUWAIT << std::endl;
    std::cout << "CTRY_KYRGYZSTAN=" << CTRY_KYRGYZSTAN << std::endl;
    std::cout << "CTRY_LATVIA=" << CTRY_LATVIA << std::endl;
    std::cout << "CTRY_LEBANON=" << CTRY_LEBANON << std::endl;
    std::cout << "CTRY_LIBYA=" << CTRY_LIBYA << std::endl;
    std::cout << "CTRY_LIECHTENSTEIN=" << CTRY_LIECHTENSTEIN << std::endl;
    std::cout << "CTRY_LITHUANIA=" << CTRY_LITHUANIA << std::endl;
    std::cout << "CTRY_LUXEMBOURG=" << CTRY_LUXEMBOURG << std::endl;
    std::cout << "CTRY_MACAU=" << CTRY_MACAU << std::endl;
    std::cout << "CTRY_MACEDONIA=" << CTRY_MACEDONIA << std::endl;
    std::cout << "CTRY_MALAYSIA=" << CTRY_MALAYSIA << std::endl;
    std::cout << "CTRY_MALDIVES=" << CTRY_MALDIVES << std::endl;
    std::cout << "CTRY_MEXICO=" << CTRY_MEXICO << std::endl;
    std::cout << "CTRY_MONACO=" << CTRY_MONACO << std::endl;
    std::cout << "CTRY_MONGOLIA=" << CTRY_MONGOLIA << std::endl;
    std::cout << "CTRY_MOROCCO=" << CTRY_MOROCCO << std::endl;
    std::cout << "CTRY_NETHERLANDS=" << CTRY_NETHERLANDS << std::endl;
    std::cout << "CTRY_NEW_ZEALAND=" << CTRY_NEW_ZEALAND << std::endl;
    std::cout << "CTRY_NICARAGUA=" << CTRY_NICARAGUA << std::endl;
    std::cout << "CTRY_NORWAY=" << CTRY_NORWAY << std::endl;
    std::cout << "CTRY_OMAN=" << CTRY_OMAN << std::endl;
    std::cout << "CTRY_PAKISTAN=" << CTRY_PAKISTAN << std::endl;
    std::cout << "CTRY_PANAMA=" << CTRY_PANAMA << std::endl;
    std::cout << "CTRY_PARAGUAY=" << CTRY_PARAGUAY << std::endl;
    std::cout << "CTRY_PERU=" << CTRY_PERU << std::endl;
    std::cout << "CTRY_PHILIPPINES=" << CTRY_PHILIPPINES << std::endl;
    std::cout << "CTRY_POLAND=" << CTRY_POLAND << std::endl;
    std::cout << "CTRY_PORTUGAL=" << CTRY_PORTUGAL << std::endl;
    std::cout << "CTRY_PRCHINA=" << CTRY_PRCHINA << std::endl;
    std::cout << "CTRY_PUERTO_RICO=" << CTRY_PUERTO_RICO << std::endl;
    std::cout << "CTRY_QATAR=" << CTRY_QATAR << std::endl;
    std::cout << "CTRY_ROMANIA=" << CTRY_ROMANIA << std::endl;
    std::cout << "CTRY_RUSSIA=" << CTRY_RUSSIA << std::endl;
    std::cout << "CTRY_SAUDI_ARABIA=" << CTRY_SAUDI_ARABIA << std::endl;
    std::cout << "CTRY_SERBIA=" << CTRY_SERBIA << std::endl;
    std::cout << "CTRY_SINGAPORE=" << CTRY_SINGAPORE << std::endl;
    std::cout << "CTRY_SLOVAK=" << CTRY_SLOVAK << std::endl;
    std::cout << "CTRY_SLOVENIA=" << CTRY_SLOVENIA << std::endl;
    std::cout << "CTRY_SOUTH_AFRICA=" << CTRY_SOUTH_AFRICA << std::endl;
    std::cout << "CTRY_SOUTH_KOREA=" << CTRY_SOUTH_KOREA << std::endl;
    std::cout << "CTRY_SPAIN=" << CTRY_SPAIN << std::endl;
    std::cout << "CTRY_SWEDEN=" << CTRY_SWEDEN << std::endl;
    std::cout << "CTRY_SWITZERLAND=" << CTRY_SWITZERLAND << std::endl;
    std::cout << "CTRY_SYRIA=" << CTRY_SYRIA << std::endl;
    std::cout << "CTRY_TAIWAN=" << CTRY_TAIWAN << std::endl;
    std::cout << "CTRY_TATARSTAN=" << CTRY_TATARSTAN << std::endl;
    std::cout << "CTRY_THAILAND=" << CTRY_THAILAND << std::endl;
    std::cout << "CTRY_TRINIDAD_Y_TOBAGO=" << CTRY_TRINIDAD_Y_TOBAGO << std::endl;
    std::cout << "CTRY_TUNISIA=" << CTRY_TUNISIA << std::endl;
    std::cout << "CTRY_TURKEY=" << CTRY_TURKEY << std::endl;
    std::cout << "CTRY_UAE=" << CTRY_UAE << std::endl;
    std::cout << "CTRY_UKRAINE=" << CTRY_UKRAINE << std::endl;
    std::cout << "CTRY_UNITED_KINGDOM=" << CTRY_UNITED_KINGDOM << std::endl;
    std::cout << "CTRY_UNITED_STATES=" << CTRY_UNITED_STATES << std::endl;
    std::cout << "CTRY_URUGUAY=" << CTRY_URUGUAY << std::endl;
    std::cout << "CTRY_UZBEKISTAN=" << CTRY_UZBEKISTAN << std::endl;
    std::cout << "CTRY_VENEZUELA=" << CTRY_VENEZUELA << std::endl;
    std::cout << "CTRY_VIET_NAM=" << CTRY_VIET_NAM << std::endl;
    std::cout << "CTRY_YEMEN=" << CTRY_YEMEN << std::endl;
    std::cout << "CTRY_ZIMBABWE=" << CTRY_ZIMBABWE << std::endl;
    std::cout << "CT_CTYPE1=" << CT_CTYPE1 << std::endl;
    std::cout << "CT_CTYPE2=" << CT_CTYPE2 << std::endl;
    std::cout << "CT_CTYPE3=" << CT_CTYPE3 << std::endl;
    std::cout << "CURRENT_IMPORT_REDIRECTION_VERSION=" << CURRENT_IMPORT_REDIRECTION_VERSION << std::endl;
    std::cout << "CURSOR_SHOWING=" << CURSOR_SHOWING << std::endl;
    std::cout << "CURSOR_SUPPRESSED=" << CURSOR_SUPPRESSED << std::endl;
    std::cout << "CURVECAPS=" << CURVECAPS << std::endl;
    std::cout << "CUR_BLOB_VERSION=" << CUR_BLOB_VERSION << std::endl;
    std::cout << "CWCSTORAGENAME=" << CWCSTORAGENAME << std::endl;
    std::cout << "CWF_CREATE_ONLY=" << CWF_CREATE_ONLY << std::endl;
    std::cout << "CWMO_MAX_HANDLES=" << CWMO_MAX_HANDLES << std::endl;
    std::cout << "CWP_ALL=" << CWP_ALL << std::endl;
    std::cout << "CWP_SKIPDISABLED=" << CWP_SKIPDISABLED << std::endl;
    std::cout << "CWP_SKIPINVISIBLE=" << CWP_SKIPINVISIBLE << std::endl;
    std::cout << "CWP_SKIPTRANSPARENT=" << CWP_SKIPTRANSPARENT << std::endl;
    std::cout << "DATE_AUTOLAYOUT=" << DATE_AUTOLAYOUT << std::endl;
    std::cout << "DATE_LONGDATE=" << DATE_LONGDATE << std::endl;
    std::cout << "DATE_LTRREADING=" << DATE_LTRREADING << std::endl;
    std::cout << "DATE_RTLREADING=" << DATE_RTLREADING << std::endl;
    std::cout << "DATE_SHORTDATE=" << DATE_SHORTDATE << std::endl;
    std::cout << "DATE_USE_ALT_CALENDAR=" << DATE_USE_ALT_CALENDAR << std::endl;
    std::cout << "DATE_YEARMONTH=" << DATE_YEARMONTH << std::endl;
    std::cout << "DCBA_FACEDOWNCENTER=" << DCBA_FACEDOWNCENTER << std::endl;
    std::cout << "DCBA_FACEDOWNLEFT=" << DCBA_FACEDOWNLEFT << std::endl;
    std::cout << "DCBA_FACEDOWNNONE=" << DCBA_FACEDOWNNONE << std::endl;
    std::cout << "DCBA_FACEDOWNRIGHT=" << DCBA_FACEDOWNRIGHT << std::endl;
    std::cout << "DCBA_FACEUPCENTER=" << DCBA_FACEUPCENTER << std::endl;
    std::cout << "DCBA_FACEUPLEFT=" << DCBA_FACEUPLEFT << std::endl;
    std::cout << "DCBA_FACEUPNONE=" << DCBA_FACEUPNONE << std::endl;
    std::cout << "DCBA_FACEUPRIGHT=" << DCBA_FACEUPRIGHT << std::endl;
    std::cout << "DCB_ACCUMULATE=" << DCB_ACCUMULATE << std::endl;
    std::cout << "DCB_DIRTY=" << DCB_DIRTY << std::endl;
    std::cout << "DCB_DISABLE=" << DCB_DISABLE << std::endl;
    std::cout << "DCB_ENABLE=" << DCB_ENABLE << std::endl;
    std::cout << "DCB_RESET=" << DCB_RESET << std::endl;
    std::cout << "DCB_SET=" << DCB_SET << std::endl;
    std::cout << "DCE_C_ERROR_STRING_LEN=" << DCE_C_ERROR_STRING_LEN << std::endl;
    std::cout << "DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL=" << DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL << std::endl;
    std::cout << "DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES=" << DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES << std::endl;
    std::cout << "DCOMSCM_PING_DISALLOW_UNSECURE_CALL=" << DCOMSCM_PING_DISALLOW_UNSECURE_CALL << std::endl;
    std::cout << "DCOMSCM_PING_USE_MID_AUTHNSERVICE=" << DCOMSCM_PING_USE_MID_AUTHNSERVICE << std::endl;
    std::cout << "DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL=" << DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL << std::endl;
    std::cout << "DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES=" << DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES << std::endl;
    std::cout << "DC_ACTIVE=" << DC_ACTIVE << std::endl;
    std::cout << "DC_BINADJUST=" << DC_BINADJUST << std::endl;
    std::cout << "DC_BINNAMES=" << DC_BINNAMES << std::endl;
    std::cout << "DC_BINS=" << DC_BINS << std::endl;
    std::cout << "DC_BRUSH=" << DC_BRUSH << std::endl;
    std::cout << "DC_BUTTONS=" << DC_BUTTONS << std::endl;
    std::cout << "DC_COLLATE=" << DC_COLLATE << std::endl;
    std::cout << "DC_COLORDEVICE=" << DC_COLORDEVICE << std::endl;
    std::cout << "DC_COPIES=" << DC_COPIES << std::endl;
    std::cout << "DC_DATATYPE_PRODUCED=" << DC_DATATYPE_PRODUCED << std::endl;
    std::cout << "DC_DRIVER=" << DC_DRIVER << std::endl;
    std::cout << "DC_DUPLEX=" << DC_DUPLEX << std::endl;
    std::cout << "DC_EMF_COMPLIANT=" << DC_EMF_COMPLIANT << std::endl;
    std::cout << "DC_ENUMRESOLUTIONS=" << DC_ENUMRESOLUTIONS << std::endl;
    std::cout << "DC_EXTRA=" << DC_EXTRA << std::endl;
    std::cout << "DC_FIELDS=" << DC_FIELDS << std::endl;
    std::cout << "DC_FILEDEPENDENCIES=" << DC_FILEDEPENDENCIES << std::endl;
    std::cout << "DC_GRADIENT=" << DC_GRADIENT << std::endl;
    std::cout << "DC_HASDEFID=" << DC_HASDEFID << std::endl;
    std::cout << "DC_ICON=" << DC_ICON << std::endl;
    std::cout << "DC_INBUTTON=" << DC_INBUTTON << std::endl;
    std::cout << "DC_MANUFACTURER=" << DC_MANUFACTURER << std::endl;
    std::cout << "DC_MAXEXTENT=" << DC_MAXEXTENT << std::endl;
    std::cout << "DC_MEDIAREADY=" << DC_MEDIAREADY << std::endl;
    std::cout << "DC_MEDIATYPENAMES=" << DC_MEDIATYPENAMES << std::endl;
    std::cout << "DC_MEDIATYPES=" << DC_MEDIATYPES << std::endl;
    std::cout << "DC_MINEXTENT=" << DC_MINEXTENT << std::endl;
    std::cout << "DC_MODEL=" << DC_MODEL << std::endl;
    std::cout << "DC_NUP=" << DC_NUP << std::endl;
    std::cout << "DC_ORIENTATION=" << DC_ORIENTATION << std::endl;
    std::cout << "DC_PAPERNAMES=" << DC_PAPERNAMES << std::endl;
    std::cout << "DC_PAPERS=" << DC_PAPERS << std::endl;
    std::cout << "DC_PAPERSIZE=" << DC_PAPERSIZE << std::endl;
    std::cout << "DC_PEN=" << DC_PEN << std::endl;
    std::cout << "DC_PERSONALITY=" << DC_PERSONALITY << std::endl;
    std::cout << "DC_PRINTERMEM=" << DC_PRINTERMEM << std::endl;
    std::cout << "DC_PRINTRATE=" << DC_PRINTRATE << std::endl;
    std::cout << "DC_PRINTRATEPPM=" << DC_PRINTRATEPPM << std::endl;
    std::cout << "DC_PRINTRATEUNIT=" << DC_PRINTRATEUNIT << std::endl;
    std::cout << "DC_SIZE=" << DC_SIZE << std::endl;
    std::cout << "DC_SMALLCAP=" << DC_SMALLCAP << std::endl;
    std::cout << "DC_STAPLE=" << DC_STAPLE << std::endl;
    std::cout << "DC_TEXT=" << DC_TEXT << std::endl;
    std::cout << "DC_TRUETYPE=" << DC_TRUETYPE << std::endl;
    std::cout << "DC_VERSION=" << DC_VERSION << std::endl;
    std::cout << "DDD_EXACT_MATCH_ON_REMOVE=" << DDD_EXACT_MATCH_ON_REMOVE << std::endl;
    std::cout << "DDD_LUID_BROADCAST_DRIVE=" << DDD_LUID_BROADCAST_DRIVE << std::endl;
    std::cout << "DDD_NO_BROADCAST_SYSTEM=" << DDD_NO_BROADCAST_SYSTEM << std::endl;
    std::cout << "DDD_RAW_TARGET_PATH=" << DDD_RAW_TARGET_PATH << std::endl;
    std::cout << "DDD_REMOVE_DEFINITION=" << DDD_REMOVE_DEFINITION << std::endl;
    std::cout << "DDE_FACK=" << DDE_FACK << std::endl;
    std::cout << "DDE_FACKREQ=" << DDE_FACKREQ << std::endl;
    std::cout << "DDE_FADVRESERVED=" << DDE_FADVRESERVED << std::endl;
    std::cout << "DDE_FBUSY=" << DDE_FBUSY << std::endl;
    std::cout << "DDE_FDATRESERVED=" << DDE_FDATRESERVED << std::endl;
    std::cout << "DDE_FDEFERUPD=" << DDE_FDEFERUPD << std::endl;
    std::cout << "DDE_FNOTPROCESSED=" << DDE_FNOTPROCESSED << std::endl;
    std::cout << "DDE_FPOKRESERVED=" << DDE_FPOKRESERVED << std::endl;
    std::cout << "DDE_FRELEASE=" << DDE_FRELEASE << std::endl;
    std::cout << "DDE_FREQUESTED=" << DDE_FREQUESTED << std::endl;
    std::cout << "DDL_ARCHIVE=" << DDL_ARCHIVE << std::endl;
    std::cout << "DDL_DIRECTORY=" << DDL_DIRECTORY << std::endl;
    std::cout << "DDL_DRIVES=" << DDL_DRIVES << std::endl;
    std::cout << "DDL_EXCLUSIVE=" << DDL_EXCLUSIVE << std::endl;
    std::cout << "DDL_HIDDEN=" << DDL_HIDDEN << std::endl;
    std::cout << "DDL_POSTMSGS=" << DDL_POSTMSGS << std::endl;
    std::cout << "DDL_READONLY=" << DDL_READONLY << std::endl;
    std::cout << "DDL_READWRITE=" << DDL_READWRITE << std::endl;
    std::cout << "DDL_SYSTEM=" << DDL_SYSTEM << std::endl;
    std::cout << "DD_DEFDRAGDELAY=" << DD_DEFDRAGDELAY << std::endl;
    std::cout << "DD_DEFDRAGMINDIST=" << DD_DEFDRAGMINDIST << std::endl;
    std::cout << "DD_DEFSCROLLDELAY=" << DD_DEFSCROLLDELAY << std::endl;
    std::cout << "DD_DEFSCROLLINSET=" << DD_DEFSCROLLINSET << std::endl;
    std::cout << "DD_DEFSCROLLINTERVAL=" << DD_DEFSCROLLINTERVAL << std::endl;
    std::cout << "DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION=" << DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION << std::endl;
    std::cout << "DEBUG_ONLY_THIS_PROCESS=" << DEBUG_ONLY_THIS_PROCESS << std::endl;
    std::cout << "DEBUG_PROCESS=" << DEBUG_PROCESS << std::endl;
    std::cout << "DEFAULT_CHARSET=" << DEFAULT_CHARSET << std::endl;
    std::cout << "DEFAULT_GUI_FONT=" << DEFAULT_GUI_FONT << std::endl;
    std::cout << "DEFAULT_PALETTE=" << DEFAULT_PALETTE << std::endl;
    std::cout << "DEFAULT_PITCH=" << DEFAULT_PITCH << std::endl;
    std::cout << "DEFAULT_QUALITY=" << DEFAULT_QUALITY << std::endl;
    std::cout << "DEF_PRIORITY=" << DEF_PRIORITY << std::endl;
    std::cout << "DEREGISTERED=" << DEREGISTERED << std::endl;
    std::cout << "DESKTOPHORZRES=" << DESKTOPHORZRES << std::endl;
    std::cout << "DESKTOPVERTRES=" << DESKTOPVERTRES << std::endl;
    std::cout << "DETACHED_PROCESS=" << DETACHED_PROCESS << std::endl;
    std::cout << "DEVICEDATA=" << DEVICEDATA << std::endl;
    std::cout << "DEVICE_DEFAULT_FONT=" << DEVICE_DEFAULT_FONT << std::endl;
    std::cout << "DEVICE_FONTTYPE=" << DEVICE_FONTTYPE << std::endl;
    std::cout << "DEVICE_NOTIFY_ALL_INTERFACE_CLASSES=" << DEVICE_NOTIFY_ALL_INTERFACE_CLASSES << std::endl;
    std::cout << "DEVICE_NOTIFY_SERVICE_HANDLE=" << DEVICE_NOTIFY_SERVICE_HANDLE << std::endl;
    std::cout << "DEVICE_NOTIFY_WINDOW_HANDLE=" << DEVICE_NOTIFY_WINDOW_HANDLE << std::endl;
    std::cout << "DFCS_ADJUSTRECT=" << DFCS_ADJUSTRECT << std::endl;
    std::cout << "DFCS_BUTTON3STATE=" << DFCS_BUTTON3STATE << std::endl;
    std::cout << "DFCS_BUTTONCHECK=" << DFCS_BUTTONCHECK << std::endl;
    std::cout << "DFCS_BUTTONPUSH=" << DFCS_BUTTONPUSH << std::endl;
    std::cout << "DFCS_BUTTONRADIO=" << DFCS_BUTTONRADIO << std::endl;
    std::cout << "DFCS_BUTTONRADIOIMAGE=" << DFCS_BUTTONRADIOIMAGE << std::endl;
    std::cout << "DFCS_BUTTONRADIOMASK=" << DFCS_BUTTONRADIOMASK << std::endl;
    std::cout << "DFCS_CAPTIONCLOSE=" << DFCS_CAPTIONCLOSE << std::endl;
    std::cout << "DFCS_CAPTIONHELP=" << DFCS_CAPTIONHELP << std::endl;
    std::cout << "DFCS_CAPTIONMAX=" << DFCS_CAPTIONMAX << std::endl;
    std::cout << "DFCS_CAPTIONMIN=" << DFCS_CAPTIONMIN << std::endl;
    std::cout << "DFCS_CAPTIONRESTORE=" << DFCS_CAPTIONRESTORE << std::endl;
    std::cout << "DFCS_CHECKED=" << DFCS_CHECKED << std::endl;
    std::cout << "DFCS_FLAT=" << DFCS_FLAT << std::endl;
    std::cout << "DFCS_HOT=" << DFCS_HOT << std::endl;
    std::cout << "DFCS_INACTIVE=" << DFCS_INACTIVE << std::endl;
    std::cout << "DFCS_MENUARROW=" << DFCS_MENUARROW << std::endl;
    std::cout << "DFCS_MENUARROWRIGHT=" << DFCS_MENUARROWRIGHT << std::endl;
    std::cout << "DFCS_MENUBULLET=" << DFCS_MENUBULLET << std::endl;
    std::cout << "DFCS_MENUCHECK=" << DFCS_MENUCHECK << std::endl;
    std::cout << "DFCS_MONO=" << DFCS_MONO << std::endl;
    std::cout << "DFCS_PUSHED=" << DFCS_PUSHED << std::endl;
    std::cout << "DFCS_SCROLLCOMBOBOX=" << DFCS_SCROLLCOMBOBOX << std::endl;
    std::cout << "DFCS_SCROLLDOWN=" << DFCS_SCROLLDOWN << std::endl;
    std::cout << "DFCS_SCROLLLEFT=" << DFCS_SCROLLLEFT << std::endl;
    std::cout << "DFCS_SCROLLRIGHT=" << DFCS_SCROLLRIGHT << std::endl;
    std::cout << "DFCS_SCROLLSIZEGRIP=" << DFCS_SCROLLSIZEGRIP << std::endl;
    std::cout << "DFCS_SCROLLSIZEGRIPRIGHT=" << DFCS_SCROLLSIZEGRIPRIGHT << std::endl;
    std::cout << "DFCS_SCROLLUP=" << DFCS_SCROLLUP << std::endl;
    std::cout << "DFCS_TRANSPARENT=" << DFCS_TRANSPARENT << std::endl;
    std::cout << "DFC_BUTTON=" << DFC_BUTTON << std::endl;
    std::cout << "DFC_CAPTION=" << DFC_CAPTION << std::endl;
    std::cout << "DFC_MENU=" << DFC_MENU << std::endl;
    std::cout << "DFC_POPUPMENU=" << DFC_POPUPMENU << std::endl;
    std::cout << "DFC_SCROLL=" << DFC_SCROLL << std::endl;
    std::cout << "DIAGNOSTIC_REASON_DETAILED_STRING=" << DIAGNOSTIC_REASON_DETAILED_STRING << std::endl;
    std::cout << "DIAGNOSTIC_REASON_INVALID_FLAGS=" << DIAGNOSTIC_REASON_INVALID_FLAGS << std::endl;
    std::cout << "DIAGNOSTIC_REASON_NOT_SPECIFIED=" << DIAGNOSTIC_REASON_NOT_SPECIFIED << std::endl;
    std::cout << "DIAGNOSTIC_REASON_SIMPLE_STRING=" << DIAGNOSTIC_REASON_SIMPLE_STRING << std::endl;
    std::cout << "DIAGNOSTIC_REASON_VERSION=" << DIAGNOSTIC_REASON_VERSION << std::endl;
    std::cout << "DIALOPTION_BILLING=" << DIALOPTION_BILLING << std::endl;
    std::cout << "DIALOPTION_DIALTONE=" << DIALOPTION_DIALTONE << std::endl;
    std::cout << "DIALOPTION_QUIET=" << DIALOPTION_QUIET << std::endl;
    std::cout << "DIB_PAL_COLORS=" << DIB_PAL_COLORS << std::endl;
    std::cout << "DIB_RGB_COLORS=" << DIB_RGB_COLORS << std::endl;
    std::cout << "DIFFERENCE=" << DIFFERENCE << std::endl;
    std::cout << "DISABLE_MAX_PRIVILEGE=" << DISABLE_MAX_PRIVILEGE << std::endl;
    std::cout << "DISABLE_NEWLINE_AUTO_RETURN=" << DISABLE_NEWLINE_AUTO_RETURN << std::endl;
    std::cout << "DISABLE_SMART=" << DISABLE_SMART << std::endl;
    std::cout << "DISCHARGE_POLICY_CRITICAL=" << DISCHARGE_POLICY_CRITICAL << std::endl;
    std::cout << "DISCHARGE_POLICY_LOW=" << DISCHARGE_POLICY_LOW << std::endl;
    std::cout << "DISC_NO_FORCE=" << DISC_NO_FORCE << std::endl;
    std::cout << "DISC_UPDATE_PROFILE=" << DISC_UPDATE_PROFILE << std::endl;
    std::cout << "DISK_BINNING=" << DISK_BINNING << std::endl;
    std::cout << "DISK_LOGGING_DUMP=" << DISK_LOGGING_DUMP << std::endl;
    std::cout << "DISK_LOGGING_START=" << DISK_LOGGING_START << std::endl;
    std::cout << "DISK_LOGGING_STOP=" << DISK_LOGGING_STOP << std::endl;
    std::cout << "DISPATCH_METHOD=" << DISPATCH_METHOD << std::endl;
    std::cout << "DISPATCH_PROPERTYGET=" << DISPATCH_PROPERTYGET << std::endl;
    std::cout << "DISPATCH_PROPERTYPUT=" << DISPATCH_PROPERTYPUT << std::endl;
    std::cout << "DISPATCH_PROPERTYPUTREF=" << DISPATCH_PROPERTYPUTREF << std::endl;
    std::cout << "DISPID_COLLECT=" << DISPID_COLLECT << std::endl;
    std::cout << "DISPID_CONSTRUCTOR=" << DISPID_CONSTRUCTOR << std::endl;
    std::cout << "DISPID_DESTRUCTOR=" << DISPID_DESTRUCTOR << std::endl;
    std::cout << "DISPID_EVALUATE=" << DISPID_EVALUATE << std::endl;
    std::cout << "DISPID_NEWENUM=" << DISPID_NEWENUM << std::endl;
    std::cout << "DISPID_PROPERTYPUT=" << DISPID_PROPERTYPUT << std::endl;
    std::cout << "DISPID_UNKNOWN=" << DISPID_UNKNOWN << std::endl;
    std::cout << "DISPID_VALUE=" << DISPID_VALUE << std::endl;
    std::cout << "DISPLAYCONFIG_MAXPATH=" << DISPLAYCONFIG_MAXPATH << std::endl;
    std::cout << "DISPLAYCONFIG_PATH_ACTIVE=" << DISPLAYCONFIG_PATH_ACTIVE << std::endl;
    std::cout << "DISPLAYCONFIG_PATH_PREFERRED_UNSCALED=" << DISPLAYCONFIG_PATH_PREFERRED_UNSCALED << std::endl;
    std::cout << "DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE=" << DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE << std::endl;
    std::cout << "DISPLAYCONFIG_PATH_VALID_FLAGS=" << DISPLAYCONFIG_PATH_VALID_FLAGS << std::endl;
    std::cout << "DISPLAYCONFIG_SOURCE_IN_USE=" << DISPLAYCONFIG_SOURCE_IN_USE << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT=" << DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH=" << DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM=" << DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_FORCIBLE=" << DISPLAYCONFIG_TARGET_FORCIBLE << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_IN_USE=" << DISPLAYCONFIG_TARGET_IN_USE << std::endl;
    std::cout << "DISPLAYCONFIG_TARGET_IS_HMD=" << DISPLAYCONFIG_TARGET_IS_HMD << std::endl;
    std::cout << "DISPLAY_DEVICE_ACC_DRIVER=" << DISPLAY_DEVICE_ACC_DRIVER << std::endl;
    std::cout << "DISPLAY_DEVICE_ACTIVE=" << DISPLAY_DEVICE_ACTIVE << std::endl;
    std::cout << "DISPLAY_DEVICE_ATTACHED=" << DISPLAY_DEVICE_ATTACHED << std::endl;
    std::cout << "DISPLAY_DEVICE_ATTACHED_TO_DESKTOP=" << DISPLAY_DEVICE_ATTACHED_TO_DESKTOP << std::endl;
    std::cout << "DISPLAY_DEVICE_DISCONNECT=" << DISPLAY_DEVICE_DISCONNECT << std::endl;
    std::cout << "DISPLAY_DEVICE_MIRRORING_DRIVER=" << DISPLAY_DEVICE_MIRRORING_DRIVER << std::endl;
    std::cout << "DISPLAY_DEVICE_MODESPRUNED=" << DISPLAY_DEVICE_MODESPRUNED << std::endl;
    std::cout << "DISPLAY_DEVICE_MULTI_DRIVER=" << DISPLAY_DEVICE_MULTI_DRIVER << std::endl;
    std::cout << "DISPLAY_DEVICE_PRIMARY_DEVICE=" << DISPLAY_DEVICE_PRIMARY_DEVICE << std::endl;
    std::cout << "DISPLAY_DEVICE_RDPUDD=" << DISPLAY_DEVICE_RDPUDD << std::endl;
    std::cout << "DISPLAY_DEVICE_REMOTE=" << DISPLAY_DEVICE_REMOTE << std::endl;
    std::cout << "DISPLAY_DEVICE_REMOVABLE=" << DISPLAY_DEVICE_REMOVABLE << std::endl;
    std::cout << "DISPLAY_DEVICE_TS_COMPATIBLE=" << DISPLAY_DEVICE_TS_COMPATIBLE << std::endl;
    std::cout << "DISPLAY_DEVICE_UNSAFE_MODES_ON=" << DISPLAY_DEVICE_UNSAFE_MODES_ON << std::endl;
    std::cout << "DISPLAY_DEVICE_VGA_COMPATIBLE=" << DISPLAY_DEVICE_VGA_COMPATIBLE << std::endl;
    std::cout << "DISP_CHANGE_BADDUALVIEW=" << DISP_CHANGE_BADDUALVIEW << std::endl;
    std::cout << "DISP_CHANGE_BADFLAGS=" << DISP_CHANGE_BADFLAGS << std::endl;
    std::cout << "DISP_CHANGE_BADMODE=" << DISP_CHANGE_BADMODE << std::endl;
    std::cout << "DISP_CHANGE_BADPARAM=" << DISP_CHANGE_BADPARAM << std::endl;
    std::cout << "DISP_CHANGE_FAILED=" << DISP_CHANGE_FAILED << std::endl;
    std::cout << "DISP_CHANGE_NOTUPDATED=" << DISP_CHANGE_NOTUPDATED << std::endl;
    std::cout << "DISP_CHANGE_RESTART=" << DISP_CHANGE_RESTART << std::endl;
    std::cout << "DISP_CHANGE_SUCCESSFUL=" << DISP_CHANGE_SUCCESSFUL << std::endl;
    std::cout << "DI_APPBANDING=" << DI_APPBANDING << std::endl;
    std::cout << "DI_CHANNEL=" << DI_CHANNEL << std::endl;
    std::cout << "DI_COMPAT=" << DI_COMPAT << std::endl;
    std::cout << "DI_DEFAULTSIZE=" << DI_DEFAULTSIZE << std::endl;
    std::cout << "DI_IMAGE=" << DI_IMAGE << std::endl;
    std::cout << "DI_MASK=" << DI_MASK << std::endl;
    std::cout << "DI_MEMORYMAP_WRITE=" << DI_MEMORYMAP_WRITE << std::endl;
    std::cout << "DI_NOMIRROR=" << DI_NOMIRROR << std::endl;
    std::cout << "DI_NORMAL=" << DI_NORMAL << std::endl;
    std::cout << "DI_READ_SPOOL_JOB=" << DI_READ_SPOOL_JOB << std::endl;
    std::cout << "DI_ROPS_READ_DESTINATION=" << DI_ROPS_READ_DESTINATION << std::endl;
    std::cout << "DKGRAY_BRUSH=" << DKGRAY_BRUSH << std::endl;
    std::cout << "DLGC_BUTTON=" << DLGC_BUTTON << std::endl;
    std::cout << "DLGC_DEFPUSHBUTTON=" << DLGC_DEFPUSHBUTTON << std::endl;
    std::cout << "DLGC_HASSETSEL=" << DLGC_HASSETSEL << std::endl;
    std::cout << "DLGC_RADIOBUTTON=" << DLGC_RADIOBUTTON << std::endl;
    std::cout << "DLGC_STATIC=" << DLGC_STATIC << std::endl;
    std::cout << "DLGC_UNDEFPUSHBUTTON=" << DLGC_UNDEFPUSHBUTTON << std::endl;
    std::cout << "DLGC_WANTALLKEYS=" << DLGC_WANTALLKEYS << std::endl;
    std::cout << "DLGC_WANTARROWS=" << DLGC_WANTARROWS << std::endl;
    std::cout << "DLGC_WANTCHARS=" << DLGC_WANTCHARS << std::endl;
    std::cout << "DLGC_WANTMESSAGE=" << DLGC_WANTMESSAGE << std::endl;
    std::cout << "DLGC_WANTTAB=" << DLGC_WANTTAB << std::endl;
    std::cout << "DLGWINDOWEXTRA=" << DLGWINDOWEXTRA << std::endl;
    std::cout << "DLL_PROCESS_ATTACH=" << DLL_PROCESS_ATTACH << std::endl;
    std::cout << "DLL_PROCESS_DETACH=" << DLL_PROCESS_DETACH << std::endl;
    std::cout << "DLL_PROCESS_VERIFIER=" << DLL_PROCESS_VERIFIER << std::endl;
    std::cout << "DLL_THREAD_ATTACH=" << DLL_THREAD_ATTACH << std::endl;
    std::cout << "DLL_THREAD_DETACH=" << DLL_THREAD_DETACH << std::endl;
    std::cout << "DMBIN_AUTO=" << DMBIN_AUTO << std::endl;
    std::cout << "DMBIN_CASSETTE=" << DMBIN_CASSETTE << std::endl;
    std::cout << "DMBIN_ENVELOPE=" << DMBIN_ENVELOPE << std::endl;
    std::cout << "DMBIN_ENVMANUAL=" << DMBIN_ENVMANUAL << std::endl;
    std::cout << "DMBIN_FIRST=" << DMBIN_FIRST << std::endl;
    std::cout << "DMBIN_FORMSOURCE=" << DMBIN_FORMSOURCE << std::endl;
    std::cout << "DMBIN_LARGECAPACITY=" << DMBIN_LARGECAPACITY << std::endl;
    std::cout << "DMBIN_LARGEFMT=" << DMBIN_LARGEFMT << std::endl;
    std::cout << "DMBIN_LAST=" << DMBIN_LAST << std::endl;
    std::cout << "DMBIN_LOWER=" << DMBIN_LOWER << std::endl;
    std::cout << "DMBIN_MANUAL=" << DMBIN_MANUAL << std::endl;
    std::cout << "DMBIN_MIDDLE=" << DMBIN_MIDDLE << std::endl;
    std::cout << "DMBIN_ONLYONE=" << DMBIN_ONLYONE << std::endl;
    std::cout << "DMBIN_SMALLFMT=" << DMBIN_SMALLFMT << std::endl;
    std::cout << "DMBIN_TRACTOR=" << DMBIN_TRACTOR << std::endl;
    std::cout << "DMBIN_UPPER=" << DMBIN_UPPER << std::endl;
    std::cout << "DMBIN_USER=" << DMBIN_USER << std::endl;
    std::cout << "DMCOLLATE_FALSE=" << DMCOLLATE_FALSE << std::endl;
    std::cout << "DMCOLLATE_TRUE=" << DMCOLLATE_TRUE << std::endl;
    std::cout << "DMCOLOR_COLOR=" << DMCOLOR_COLOR << std::endl;
    std::cout << "DMCOLOR_MONOCHROME=" << DMCOLOR_MONOCHROME << std::endl;
    std::cout << "DMDFO_CENTER=" << DMDFO_CENTER << std::endl;
    std::cout << "DMDFO_DEFAULT=" << DMDFO_DEFAULT << std::endl;
    std::cout << "DMDFO_STRETCH=" << DMDFO_STRETCH << std::endl;
    std::cout << "DMDISPLAYFLAGS_TEXTMODE=" << DMDISPLAYFLAGS_TEXTMODE << std::endl;
    std::cout << "DMDITHER_COARSE=" << DMDITHER_COARSE << std::endl;
    std::cout << "DMDITHER_ERRORDIFFUSION=" << DMDITHER_ERRORDIFFUSION << std::endl;
    std::cout << "DMDITHER_FINE=" << DMDITHER_FINE << std::endl;
    std::cout << "DMDITHER_GRAYSCALE=" << DMDITHER_GRAYSCALE << std::endl;
    std::cout << "DMDITHER_LINEART=" << DMDITHER_LINEART << std::endl;
    std::cout << "DMDITHER_NONE=" << DMDITHER_NONE << std::endl;
    std::cout << "DMDITHER_RESERVED6=" << DMDITHER_RESERVED6 << std::endl;
    std::cout << "DMDITHER_RESERVED7=" << DMDITHER_RESERVED7 << std::endl;
    std::cout << "DMDITHER_RESERVED8=" << DMDITHER_RESERVED8 << std::endl;
    std::cout << "DMDITHER_RESERVED9=" << DMDITHER_RESERVED9 << std::endl;
    std::cout << "DMDITHER_USER=" << DMDITHER_USER << std::endl;
    std::cout << "DMDO_180=" << DMDO_180 << std::endl;
    std::cout << "DMDO_270=" << DMDO_270 << std::endl;
    std::cout << "DMDO_90=" << DMDO_90 << std::endl;
    std::cout << "DMDO_DEFAULT=" << DMDO_DEFAULT << std::endl;
    std::cout << "DMDUP_HORIZONTAL=" << DMDUP_HORIZONTAL << std::endl;
    std::cout << "DMDUP_SIMPLEX=" << DMDUP_SIMPLEX << std::endl;
    std::cout << "DMDUP_VERTICAL=" << DMDUP_VERTICAL << std::endl;
    std::cout << "DMICMMETHOD_DEVICE=" << DMICMMETHOD_DEVICE << std::endl;
    std::cout << "DMICMMETHOD_DRIVER=" << DMICMMETHOD_DRIVER << std::endl;
    std::cout << "DMICMMETHOD_NONE=" << DMICMMETHOD_NONE << std::endl;
    std::cout << "DMICMMETHOD_SYSTEM=" << DMICMMETHOD_SYSTEM << std::endl;
    std::cout << "DMICMMETHOD_USER=" << DMICMMETHOD_USER << std::endl;
    std::cout << "DMICM_ABS_COLORIMETRIC=" << DMICM_ABS_COLORIMETRIC << std::endl;
    std::cout << "DMICM_COLORIMETRIC=" << DMICM_COLORIMETRIC << std::endl;
    std::cout << "DMICM_CONTRAST=" << DMICM_CONTRAST << std::endl;
    std::cout << "DMICM_SATURATE=" << DMICM_SATURATE << std::endl;
    std::cout << "DMICM_USER=" << DMICM_USER << std::endl;
    std::cout << "DMLERR_ADVACKTIMEOUT=" << DMLERR_ADVACKTIMEOUT << std::endl;
    std::cout << "DMLERR_BUSY=" << DMLERR_BUSY << std::endl;
    std::cout << "DMLERR_DATAACKTIMEOUT=" << DMLERR_DATAACKTIMEOUT << std::endl;
    std::cout << "DMLERR_DLL_NOT_INITIALIZED=" << DMLERR_DLL_NOT_INITIALIZED << std::endl;
    std::cout << "DMLERR_DLL_USAGE=" << DMLERR_DLL_USAGE << std::endl;
    std::cout << "DMLERR_EXECACKTIMEOUT=" << DMLERR_EXECACKTIMEOUT << std::endl;
    std::cout << "DMLERR_FIRST=" << DMLERR_FIRST << std::endl;
    std::cout << "DMLERR_INVALIDPARAMETER=" << DMLERR_INVALIDPARAMETER << std::endl;
    std::cout << "DMLERR_LAST=" << DMLERR_LAST << std::endl;
    std::cout << "DMLERR_LOW_MEMORY=" << DMLERR_LOW_MEMORY << std::endl;
    std::cout << "DMLERR_MEMORY_ERROR=" << DMLERR_MEMORY_ERROR << std::endl;
    std::cout << "DMLERR_NOTPROCESSED=" << DMLERR_NOTPROCESSED << std::endl;
    std::cout << "DMLERR_NO_ERROR=" << DMLERR_NO_ERROR << std::endl;
    std::cout << "DMLERR_UNADVACKTIMEOUT=" << DMLERR_UNADVACKTIMEOUT << std::endl;
    std::cout << "DMLERR_UNFOUND_QUEUE_ID=" << DMLERR_UNFOUND_QUEUE_ID << std::endl;
    std::cout << "DMMEDIA_GLOSSY=" << DMMEDIA_GLOSSY << std::endl;
    std::cout << "DMMEDIA_STANDARD=" << DMMEDIA_STANDARD << std::endl;
    std::cout << "DMMEDIA_TRANSPARENCY=" << DMMEDIA_TRANSPARENCY << std::endl;
    std::cout << "DMMEDIA_USER=" << DMMEDIA_USER << std::endl;
    std::cout << "DMNUP_ONEUP=" << DMNUP_ONEUP << std::endl;
    std::cout << "DMNUP_SYSTEM=" << DMNUP_SYSTEM << std::endl;
    std::cout << "DMORIENT_LANDSCAPE=" << DMORIENT_LANDSCAPE << std::endl;
    std::cout << "DMORIENT_PORTRAIT=" << DMORIENT_PORTRAIT << std::endl;
    std::cout << "DMPAPER_10X11=" << DMPAPER_10X11 << std::endl;
    std::cout << "DMPAPER_10X14=" << DMPAPER_10X14 << std::endl;
    std::cout << "DMPAPER_11X17=" << DMPAPER_11X17 << std::endl;
    std::cout << "DMPAPER_12X11=" << DMPAPER_12X11 << std::endl;
    std::cout << "DMPAPER_15X11=" << DMPAPER_15X11 << std::endl;
    std::cout << "DMPAPER_9X11=" << DMPAPER_9X11 << std::endl;
    std::cout << "DMPAPER_A2=" << DMPAPER_A2 << std::endl;
    std::cout << "DMPAPER_A3=" << DMPAPER_A3 << std::endl;
    std::cout << "DMPAPER_A3_EXTRA=" << DMPAPER_A3_EXTRA << std::endl;
    std::cout << "DMPAPER_A3_EXTRA_TRANSVERSE=" << DMPAPER_A3_EXTRA_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_A3_ROTATED=" << DMPAPER_A3_ROTATED << std::endl;
    std::cout << "DMPAPER_A3_TRANSVERSE=" << DMPAPER_A3_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_A4=" << DMPAPER_A4 << std::endl;
    std::cout << "DMPAPER_A4SMALL=" << DMPAPER_A4SMALL << std::endl;
    std::cout << "DMPAPER_A4_EXTRA=" << DMPAPER_A4_EXTRA << std::endl;
    std::cout << "DMPAPER_A4_PLUS=" << DMPAPER_A4_PLUS << std::endl;
    std::cout << "DMPAPER_A4_ROTATED=" << DMPAPER_A4_ROTATED << std::endl;
    std::cout << "DMPAPER_A4_TRANSVERSE=" << DMPAPER_A4_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_A5=" << DMPAPER_A5 << std::endl;
    std::cout << "DMPAPER_A5_EXTRA=" << DMPAPER_A5_EXTRA << std::endl;
    std::cout << "DMPAPER_A5_ROTATED=" << DMPAPER_A5_ROTATED << std::endl;
    std::cout << "DMPAPER_A5_TRANSVERSE=" << DMPAPER_A5_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_A6=" << DMPAPER_A6 << std::endl;
    std::cout << "DMPAPER_A6_ROTATED=" << DMPAPER_A6_ROTATED << std::endl;
    std::cout << "DMPAPER_A_PLUS=" << DMPAPER_A_PLUS << std::endl;
    std::cout << "DMPAPER_B4=" << DMPAPER_B4 << std::endl;
    std::cout << "DMPAPER_B4_JIS_ROTATED=" << DMPAPER_B4_JIS_ROTATED << std::endl;
    std::cout << "DMPAPER_B5=" << DMPAPER_B5 << std::endl;
    std::cout << "DMPAPER_B5_EXTRA=" << DMPAPER_B5_EXTRA << std::endl;
    std::cout << "DMPAPER_B5_JIS_ROTATED=" << DMPAPER_B5_JIS_ROTATED << std::endl;
    std::cout << "DMPAPER_B5_TRANSVERSE=" << DMPAPER_B5_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_B6_JIS=" << DMPAPER_B6_JIS << std::endl;
    std::cout << "DMPAPER_B6_JIS_ROTATED=" << DMPAPER_B6_JIS_ROTATED << std::endl;
    std::cout << "DMPAPER_B_PLUS=" << DMPAPER_B_PLUS << std::endl;
    std::cout << "DMPAPER_CSHEET=" << DMPAPER_CSHEET << std::endl;
    std::cout << "DMPAPER_DBL_JAPANESE_POSTCARD=" << DMPAPER_DBL_JAPANESE_POSTCARD << std::endl;
    std::cout << "DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED=" << DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED << std::endl;
    std::cout << "DMPAPER_DSHEET=" << DMPAPER_DSHEET << std::endl;
    std::cout << "DMPAPER_ENV_10=" << DMPAPER_ENV_10 << std::endl;
    std::cout << "DMPAPER_ENV_11=" << DMPAPER_ENV_11 << std::endl;
    std::cout << "DMPAPER_ENV_12=" << DMPAPER_ENV_12 << std::endl;
    std::cout << "DMPAPER_ENV_14=" << DMPAPER_ENV_14 << std::endl;
    std::cout << "DMPAPER_ENV_9=" << DMPAPER_ENV_9 << std::endl;
    std::cout << "DMPAPER_ENV_B4=" << DMPAPER_ENV_B4 << std::endl;
    std::cout << "DMPAPER_ENV_B5=" << DMPAPER_ENV_B5 << std::endl;
    std::cout << "DMPAPER_ENV_B6=" << DMPAPER_ENV_B6 << std::endl;
    std::cout << "DMPAPER_ENV_C3=" << DMPAPER_ENV_C3 << std::endl;
    std::cout << "DMPAPER_ENV_C4=" << DMPAPER_ENV_C4 << std::endl;
    std::cout << "DMPAPER_ENV_C5=" << DMPAPER_ENV_C5 << std::endl;
    std::cout << "DMPAPER_ENV_C6=" << DMPAPER_ENV_C6 << std::endl;
    std::cout << "DMPAPER_ENV_C65=" << DMPAPER_ENV_C65 << std::endl;
    std::cout << "DMPAPER_ENV_DL=" << DMPAPER_ENV_DL << std::endl;
    std::cout << "DMPAPER_ENV_INVITE=" << DMPAPER_ENV_INVITE << std::endl;
    std::cout << "DMPAPER_ENV_ITALY=" << DMPAPER_ENV_ITALY << std::endl;
    std::cout << "DMPAPER_ENV_MONARCH=" << DMPAPER_ENV_MONARCH << std::endl;
    std::cout << "DMPAPER_ENV_PERSONAL=" << DMPAPER_ENV_PERSONAL << std::endl;
    std::cout << "DMPAPER_ESHEET=" << DMPAPER_ESHEET << std::endl;
    std::cout << "DMPAPER_EXECUTIVE=" << DMPAPER_EXECUTIVE << std::endl;
    std::cout << "DMPAPER_FANFOLD_LGL_GERMAN=" << DMPAPER_FANFOLD_LGL_GERMAN << std::endl;
    std::cout << "DMPAPER_FANFOLD_STD_GERMAN=" << DMPAPER_FANFOLD_STD_GERMAN << std::endl;
    std::cout << "DMPAPER_FANFOLD_US=" << DMPAPER_FANFOLD_US << std::endl;
    std::cout << "DMPAPER_FIRST=" << DMPAPER_FIRST << std::endl;
    std::cout << "DMPAPER_FOLIO=" << DMPAPER_FOLIO << std::endl;
    std::cout << "DMPAPER_ISO_B4=" << DMPAPER_ISO_B4 << std::endl;
    std::cout << "DMPAPER_JAPANESE_POSTCARD=" << DMPAPER_JAPANESE_POSTCARD << std::endl;
    std::cout << "DMPAPER_JAPANESE_POSTCARD_ROTATED=" << DMPAPER_JAPANESE_POSTCARD_ROTATED << std::endl;
    std::cout << "DMPAPER_JENV_CHOU3=" << DMPAPER_JENV_CHOU3 << std::endl;
    std::cout << "DMPAPER_JENV_CHOU3_ROTATED=" << DMPAPER_JENV_CHOU3_ROTATED << std::endl;
    std::cout << "DMPAPER_JENV_CHOU4=" << DMPAPER_JENV_CHOU4 << std::endl;
    std::cout << "DMPAPER_JENV_CHOU4_ROTATED=" << DMPAPER_JENV_CHOU4_ROTATED << std::endl;
    std::cout << "DMPAPER_JENV_KAKU2=" << DMPAPER_JENV_KAKU2 << std::endl;
    std::cout << "DMPAPER_JENV_KAKU2_ROTATED=" << DMPAPER_JENV_KAKU2_ROTATED << std::endl;
    std::cout << "DMPAPER_JENV_KAKU3=" << DMPAPER_JENV_KAKU3 << std::endl;
    std::cout << "DMPAPER_JENV_KAKU3_ROTATED=" << DMPAPER_JENV_KAKU3_ROTATED << std::endl;
    std::cout << "DMPAPER_JENV_YOU4=" << DMPAPER_JENV_YOU4 << std::endl;
    std::cout << "DMPAPER_JENV_YOU4_ROTATED=" << DMPAPER_JENV_YOU4_ROTATED << std::endl;
    std::cout << "DMPAPER_LAST=" << DMPAPER_LAST << std::endl;
    std::cout << "DMPAPER_LEDGER=" << DMPAPER_LEDGER << std::endl;
    std::cout << "DMPAPER_LEGAL=" << DMPAPER_LEGAL << std::endl;
    std::cout << "DMPAPER_LEGAL_EXTRA=" << DMPAPER_LEGAL_EXTRA << std::endl;
    std::cout << "DMPAPER_LETTER=" << DMPAPER_LETTER << std::endl;
    std::cout << "DMPAPER_LETTERSMALL=" << DMPAPER_LETTERSMALL << std::endl;
    std::cout << "DMPAPER_LETTER_EXTRA=" << DMPAPER_LETTER_EXTRA << std::endl;
    std::cout << "DMPAPER_LETTER_EXTRA_TRANSVERSE=" << DMPAPER_LETTER_EXTRA_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_LETTER_PLUS=" << DMPAPER_LETTER_PLUS << std::endl;
    std::cout << "DMPAPER_LETTER_ROTATED=" << DMPAPER_LETTER_ROTATED << std::endl;
    std::cout << "DMPAPER_LETTER_TRANSVERSE=" << DMPAPER_LETTER_TRANSVERSE << std::endl;
    std::cout << "DMPAPER_NOTE=" << DMPAPER_NOTE << std::endl;
    std::cout << "DMPAPER_P16K=" << DMPAPER_P16K << std::endl;
    std::cout << "DMPAPER_P16K_ROTATED=" << DMPAPER_P16K_ROTATED << std::endl;
    std::cout << "DMPAPER_P32K=" << DMPAPER_P32K << std::endl;
    std::cout << "DMPAPER_P32KBIG=" << DMPAPER_P32KBIG << std::endl;
    std::cout << "DMPAPER_P32KBIG_ROTATED=" << DMPAPER_P32KBIG_ROTATED << std::endl;
    std::cout << "DMPAPER_P32K_ROTATED=" << DMPAPER_P32K_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_1=" << DMPAPER_PENV_1 << std::endl;
    std::cout << "DMPAPER_PENV_10=" << DMPAPER_PENV_10 << std::endl;
    std::cout << "DMPAPER_PENV_10_ROTATED=" << DMPAPER_PENV_10_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_1_ROTATED=" << DMPAPER_PENV_1_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_2=" << DMPAPER_PENV_2 << std::endl;
    std::cout << "DMPAPER_PENV_2_ROTATED=" << DMPAPER_PENV_2_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_3=" << DMPAPER_PENV_3 << std::endl;
    std::cout << "DMPAPER_PENV_3_ROTATED=" << DMPAPER_PENV_3_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_4=" << DMPAPER_PENV_4 << std::endl;
    std::cout << "DMPAPER_PENV_4_ROTATED=" << DMPAPER_PENV_4_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_5=" << DMPAPER_PENV_5 << std::endl;
    std::cout << "DMPAPER_PENV_5_ROTATED=" << DMPAPER_PENV_5_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_6=" << DMPAPER_PENV_6 << std::endl;
    std::cout << "DMPAPER_PENV_6_ROTATED=" << DMPAPER_PENV_6_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_7=" << DMPAPER_PENV_7 << std::endl;
    std::cout << "DMPAPER_PENV_7_ROTATED=" << DMPAPER_PENV_7_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_8=" << DMPAPER_PENV_8 << std::endl;
    std::cout << "DMPAPER_PENV_8_ROTATED=" << DMPAPER_PENV_8_ROTATED << std::endl;
    std::cout << "DMPAPER_PENV_9=" << DMPAPER_PENV_9 << std::endl;
    std::cout << "DMPAPER_PENV_9_ROTATED=" << DMPAPER_PENV_9_ROTATED << std::endl;
    std::cout << "DMPAPER_QUARTO=" << DMPAPER_QUARTO << std::endl;
    std::cout << "DMPAPER_RESERVED_48=" << DMPAPER_RESERVED_48 << std::endl;
    std::cout << "DMPAPER_RESERVED_49=" << DMPAPER_RESERVED_49 << std::endl;
    std::cout << "DMPAPER_STATEMENT=" << DMPAPER_STATEMENT << std::endl;
    std::cout << "DMPAPER_TABLOID=" << DMPAPER_TABLOID << std::endl;
    std::cout << "DMPAPER_TABLOID_EXTRA=" << DMPAPER_TABLOID_EXTRA << std::endl;
    std::cout << "DMPAPER_USER=" << DMPAPER_USER << std::endl;
    std::cout << "DMRES_DRAFT=" << DMRES_DRAFT << std::endl;
    std::cout << "DMRES_HIGH=" << DMRES_HIGH << std::endl;
    std::cout << "DMRES_LOW=" << DMRES_LOW << std::endl;
    std::cout << "DMRES_MEDIUM=" << DMRES_MEDIUM << std::endl;
    std::cout << "DMTT_BITMAP=" << DMTT_BITMAP << std::endl;
    std::cout << "DMTT_DOWNLOAD=" << DMTT_DOWNLOAD << std::endl;
    std::cout << "DMTT_DOWNLOAD_OUTLINE=" << DMTT_DOWNLOAD_OUTLINE << std::endl;
    std::cout << "DMTT_SUBDEV=" << DMTT_SUBDEV << std::endl;
    std::cout << "DM_COPY=" << DM_COPY << std::endl;
    std::cout << "DM_GETDEFID=" << DM_GETDEFID << std::endl;
    std::cout << "DM_INTERLACED=" << DM_INTERLACED << std::endl;
    std::cout << "DM_IN_BUFFER=" << DM_IN_BUFFER << std::endl;
    std::cout << "DM_IN_PROMPT=" << DM_IN_PROMPT << std::endl;
    std::cout << "DM_MODIFY=" << DM_MODIFY << std::endl;
    std::cout << "DM_OUT_BUFFER=" << DM_OUT_BUFFER << std::endl;
    std::cout << "DM_OUT_DEFAULT=" << DM_OUT_DEFAULT << std::endl;
    std::cout << "DM_POINTERHITTEST=" << DM_POINTERHITTEST << std::endl;
    std::cout << "DM_PROMPT=" << DM_PROMPT << std::endl;
    std::cout << "DM_REPOSITION=" << DM_REPOSITION << std::endl;
    std::cout << "DM_SETDEFID=" << DM_SETDEFID << std::endl;
    std::cout << "DM_SPECVERSION=" << DM_SPECVERSION << std::endl;
    std::cout << "DM_UPDATE=" << DM_UPDATE << std::endl;
    std::cout << "DNS_ERROR_DATABASE_BASE=" << DNS_ERROR_DATABASE_BASE << std::endl;
    std::cout << "DNS_ERROR_DATAFILE_BASE=" << DNS_ERROR_DATAFILE_BASE << std::endl;
    std::cout << "DNS_ERROR_DP_BASE=" << DNS_ERROR_DP_BASE << std::endl;
    std::cout << "DNS_ERROR_GENERAL_API_BASE=" << DNS_ERROR_GENERAL_API_BASE << std::endl;
    std::cout << "DNS_ERROR_MASK=" << DNS_ERROR_MASK << std::endl;
    std::cout << "DNS_ERROR_OPERATION_BASE=" << DNS_ERROR_OPERATION_BASE << std::endl;
    std::cout << "DNS_ERROR_PACKET_FMT_BASE=" << DNS_ERROR_PACKET_FMT_BASE << std::endl;
    std::cout << "DNS_ERROR_RESPONSE_CODES_BASE=" << DNS_ERROR_RESPONSE_CODES_BASE << std::endl;
    std::cout << "DNS_ERROR_SECURE_BASE=" << DNS_ERROR_SECURE_BASE << std::endl;
    std::cout << "DNS_ERROR_SETUP_BASE=" << DNS_ERROR_SETUP_BASE << std::endl;
    std::cout << "DNS_ERROR_ZONE_BASE=" << DNS_ERROR_ZONE_BASE << std::endl;
    std::cout << "DNS_FILTEROFF=" << DNS_FILTEROFF << std::endl;
    std::cout << "DNS_FILTERON=" << DNS_FILTERON << std::endl;
    std::cout << "DNS_REGISTER=" << DNS_REGISTER << std::endl;
    std::cout << "DNS_UNREGISTER=" << DNS_UNREGISTER << std::endl;
    std::cout << "DN_DEFAULTPRN=" << DN_DEFAULTPRN << std::endl;
    std::cout << "DOCKINFO_DOCKED=" << DOCKINFO_DOCKED << std::endl;
    std::cout << "DOCKINFO_UNDOCKED=" << DOCKINFO_UNDOCKED << std::endl;
    std::cout << "DOCKINFO_USER_DOCKED=" << DOCKINFO_USER_DOCKED << std::endl;
    std::cout << "DOCKINFO_USER_SUPPLIED=" << DOCKINFO_USER_SUPPLIED << std::endl;
    std::cout << "DOCKINFO_USER_UNDOCKED=" << DOCKINFO_USER_UNDOCKED << std::endl;
    std::cout << "DOF_DIRECTORY=" << DOF_DIRECTORY << std::endl;
    std::cout << "DOF_DOCUMENT=" << DOF_DOCUMENT << std::endl;
    std::cout << "DOF_EXECUTABLE=" << DOF_EXECUTABLE << std::endl;
    std::cout << "DOF_MULTIPLE=" << DOF_MULTIPLE << std::endl;
    std::cout << "DOF_PROGMAN=" << DOF_PROGMAN << std::endl;
    std::cout << "DOF_SHELLDATA=" << DOF_SHELLDATA << std::endl;
    std::cout << "DONT_RESOLVE_DLL_REFERENCES=" << DONT_RESOLVE_DLL_REFERENCES << std::endl;
    std::cout << "DOUBLE_CLICK=" << DOUBLE_CLICK << std::endl;
    std::cout << "DOWNLOADFACE=" << DOWNLOADFACE << std::endl;
    std::cout << "DOWNLOADHEADER=" << DOWNLOADHEADER << std::endl;
    std::cout << "DPD_DELETE_ALL_FILES=" << DPD_DELETE_ALL_FILES << std::endl;
    std::cout << "DPD_DELETE_SPECIFIC_VERSION=" << DPD_DELETE_SPECIFIC_VERSION << std::endl;
    std::cout << "DPD_DELETE_UNUSED_FILES=" << DPD_DELETE_UNUSED_FILES << std::endl;
    std::cout << "DRAFTMODE=" << DRAFTMODE << std::endl;
    std::cout << "DRAFT_QUALITY=" << DRAFT_QUALITY << std::endl;
    std::cout << "DRAWPATTERNRECT=" << DRAWPATTERNRECT << std::endl;
    std::cout << "DRIVERVERSION=" << DRIVERVERSION << std::endl;
    std::cout << "DRIVER_KERNELMODE=" << DRIVER_KERNELMODE << std::endl;
    std::cout << "DRIVER_USERMODE=" << DRIVER_USERMODE << std::endl;
    std::cout << "DRIVE_CDROM=" << DRIVE_CDROM << std::endl;
    std::cout << "DRIVE_FIXED=" << DRIVE_FIXED << std::endl;
    std::cout << "DRIVE_NO_ROOT_DIR=" << DRIVE_NO_ROOT_DIR << std::endl;
    std::cout << "DRIVE_RAMDISK=" << DRIVE_RAMDISK << std::endl;
    std::cout << "DRIVE_REMOTE=" << DRIVE_REMOTE << std::endl;
    std::cout << "DRIVE_REMOVABLE=" << DRIVE_REMOVABLE << std::endl;
    std::cout << "DRIVE_UNKNOWN=" << DRIVE_UNKNOWN << std::endl;
    std::cout << "DROPEFFECT_COPY=" << DROPEFFECT_COPY << std::endl;
    std::cout << "DROPEFFECT_LINK=" << DROPEFFECT_LINK << std::endl;
    std::cout << "DROPEFFECT_MOVE=" << DROPEFFECT_MOVE << std::endl;
    std::cout << "DROPEFFECT_NONE=" << DROPEFFECT_NONE << std::endl;
    std::cout << "DROPEFFECT_SCROLL=" << DROPEFFECT_SCROLL << std::endl;
    std::cout << "DRVCNF_CANCEL=" << DRVCNF_CANCEL << std::endl;
    std::cout << "DRVCNF_OK=" << DRVCNF_OK << std::endl;
    std::cout << "DRVCNF_RESTART=" << DRVCNF_RESTART << std::endl;
    std::cout << "DRV_CANCEL=" << DRV_CANCEL << std::endl;
    std::cout << "DRV_CLOSE=" << DRV_CLOSE << std::endl;
    std::cout << "DRV_CONFIGURE=" << DRV_CONFIGURE << std::endl;
    std::cout << "DRV_DISABLE=" << DRV_DISABLE << std::endl;
    std::cout << "DRV_ENABLE=" << DRV_ENABLE << std::endl;
    std::cout << "DRV_EXITSESSION=" << DRV_EXITSESSION << std::endl;
    std::cout << "DRV_FREE=" << DRV_FREE << std::endl;
    std::cout << "DRV_INSTALL=" << DRV_INSTALL << std::endl;
    std::cout << "DRV_LOAD=" << DRV_LOAD << std::endl;
    std::cout << "DRV_MCI_FIRST=" << DRV_MCI_FIRST << std::endl;
    std::cout << "DRV_MCI_LAST=" << DRV_MCI_LAST << std::endl;
    std::cout << "DRV_OK=" << DRV_OK << std::endl;
    std::cout << "DRV_OPEN=" << DRV_OPEN << std::endl;
    std::cout << "DRV_POWER=" << DRV_POWER << std::endl;
    std::cout << "DRV_QUERYCONFIGURE=" << DRV_QUERYCONFIGURE << std::endl;
    std::cout << "DRV_REMOVE=" << DRV_REMOVE << std::endl;
    std::cout << "DRV_RESERVED=" << DRV_RESERVED << std::endl;
    std::cout << "DRV_RESTART=" << DRV_RESTART << std::endl;
    std::cout << "DRV_USER=" << DRV_USER << std::endl;
    std::cout << "DSPRINT_PENDING=" << DSPRINT_PENDING << std::endl;
    std::cout << "DSPRINT_PUBLISH=" << DSPRINT_PUBLISH << std::endl;
    std::cout << "DSPRINT_REPUBLISH=" << DSPRINT_REPUBLISH << std::endl;
    std::cout << "DSPRINT_UNPUBLISH=" << DSPRINT_UNPUBLISH << std::endl;
    std::cout << "DSPRINT_UPDATE=" << DSPRINT_UPDATE << std::endl;
    std::cout << "DSS_DISABLED=" << DSS_DISABLED << std::endl;
    std::cout << "DSS_HIDEPREFIX=" << DSS_HIDEPREFIX << std::endl;
    std::cout << "DSS_MONO=" << DSS_MONO << std::endl;
    std::cout << "DSS_NORMAL=" << DSS_NORMAL << std::endl;
    std::cout << "DSS_PREFIXONLY=" << DSS_PREFIXONLY << std::endl;
    std::cout << "DSS_RIGHT=" << DSS_RIGHT << std::endl;
    std::cout << "DSS_UNION=" << DSS_UNION << std::endl;
    std::cout << "DST_BITMAP=" << DST_BITMAP << std::endl;
    std::cout << "DST_COMPLEX=" << DST_COMPLEX << std::endl;
    std::cout << "DST_ICON=" << DST_ICON << std::endl;
    std::cout << "DST_PREFIXTEXT=" << DST_PREFIXTEXT << std::endl;
    std::cout << "DST_TEXT=" << DST_TEXT << std::endl;
    std::cout << "DS_SHELLFONT=" << DS_SHELLFONT << std::endl;
    std::cout << "DTR_CONTROL_DISABLE=" << DTR_CONTROL_DISABLE << std::endl;
    std::cout << "DTR_CONTROL_ENABLE=" << DTR_CONTROL_ENABLE << std::endl;
    std::cout << "DTR_CONTROL_HANDSHAKE=" << DTR_CONTROL_HANDSHAKE << std::endl;
    std::cout << "DTS_APPCANPARSE=" << DTS_APPCANPARSE << std::endl;
    std::cout << "DTS_LONGDATEFORMAT=" << DTS_LONGDATEFORMAT << std::endl;
    std::cout << "DTS_RIGHTALIGN=" << DTS_RIGHTALIGN << std::endl;
    std::cout << "DTS_SHORTDATEFORMAT=" << DTS_SHORTDATEFORMAT << std::endl;
    std::cout << "DTS_SHOWNONE=" << DTS_SHOWNONE << std::endl;
    std::cout << "DTS_TIMEFORMAT=" << DTS_TIMEFORMAT << std::endl;
    std::cout << "DTS_UPDOWN=" << DTS_UPDOWN << std::endl;
    std::cout << "DT_BOTTOM=" << DT_BOTTOM << std::endl;
    std::cout << "DT_CALCRECT=" << DT_CALCRECT << std::endl;
    std::cout << "DT_CENTER=" << DT_CENTER << std::endl;
    std::cout << "DT_CHARSTREAM=" << DT_CHARSTREAM << std::endl;
    std::cout << "DT_DISPFILE=" << DT_DISPFILE << std::endl;
    std::cout << "DT_EDITCONTROL=" << DT_EDITCONTROL << std::endl;
    std::cout << "DT_END_ELLIPSIS=" << DT_END_ELLIPSIS << std::endl;
    std::cout << "DT_EXPANDTABS=" << DT_EXPANDTABS << std::endl;
    std::cout << "DT_EXTERNALLEADING=" << DT_EXTERNALLEADING << std::endl;
    std::cout << "DT_HIDEPREFIX=" << DT_HIDEPREFIX << std::endl;
    std::cout << "DT_INTERNAL=" << DT_INTERNAL << std::endl;
    std::cout << "DT_LEFT=" << DT_LEFT << std::endl;
    std::cout << "DT_METAFILE=" << DT_METAFILE << std::endl;
    std::cout << "DT_MODIFYSTRING=" << DT_MODIFYSTRING << std::endl;
    std::cout << "DT_NOCLIP=" << DT_NOCLIP << std::endl;
    std::cout << "DT_NOFULLWIDTHCHARBREAK=" << DT_NOFULLWIDTHCHARBREAK << std::endl;
    std::cout << "DT_NOPREFIX=" << DT_NOPREFIX << std::endl;
    std::cout << "DT_PATH_ELLIPSIS=" << DT_PATH_ELLIPSIS << std::endl;
    std::cout << "DT_PLOTTER=" << DT_PLOTTER << std::endl;
    std::cout << "DT_PREFIXONLY=" << DT_PREFIXONLY << std::endl;
    std::cout << "DT_RASCAMERA=" << DT_RASCAMERA << std::endl;
    std::cout << "DT_RASDISPLAY=" << DT_RASDISPLAY << std::endl;
    std::cout << "DT_RASPRINTER=" << DT_RASPRINTER << std::endl;
    std::cout << "DT_RIGHT=" << DT_RIGHT << std::endl;
    std::cout << "DT_RTLREADING=" << DT_RTLREADING << std::endl;
    std::cout << "DT_SINGLELINE=" << DT_SINGLELINE << std::endl;
    std::cout << "DT_TABSTOP=" << DT_TABSTOP << std::endl;
    std::cout << "DT_TOP=" << DT_TOP << std::endl;
    std::cout << "DT_VCENTER=" << DT_VCENTER << std::endl;
    std::cout << "DT_WORDBREAK=" << DT_WORDBREAK << std::endl;
    std::cout << "DT_WORD_ELLIPSIS=" << DT_WORD_ELLIPSIS << std::endl;
    std::cout << "DUPLICATE=" << DUPLICATE << std::endl;
    std::cout << "DUPLICATE_CLOSE_SOURCE=" << DUPLICATE_CLOSE_SOURCE << std::endl;
    std::cout << "DUPLICATE_DEREG=" << DUPLICATE_DEREG << std::endl;
    std::cout << "DUPLICATE_SAME_ACCESS=" << DUPLICATE_SAME_ACCESS << std::endl;
    std::cout << "DWLP_MSGRESULT=" << DWLP_MSGRESULT << std::endl;
    std::cout << "DWL_DLGPROC=" << DWL_DLGPROC << std::endl;
    std::cout << "DWL_MSGRESULT=" << DWL_MSGRESULT << std::endl;
    std::cout << "DWL_USER=" << DWL_USER << std::endl;
    std::cout << "EADDRINUSE=" << EADDRINUSE << std::endl;
    std::cout << "EADDRNOTAVAIL=" << EADDRNOTAVAIL << std::endl;
    std::cout << "EAFNOSUPPORT=" << EAFNOSUPPORT << std::endl;
    std::cout << "EALREADY=" << EALREADY << std::endl;
    std::cout << "EASTEUROPE_CHARSET=" << EASTEUROPE_CHARSET << std::endl;
    std::cout << "ECC_CMS_SHARED_INFO=" << ECC_CMS_SHARED_INFO << std::endl;
    std::cout << "ECONNABORTED=" << ECONNABORTED << std::endl;
    std::cout << "ECONNREFUSED=" << ECONNREFUSED << std::endl;
    std::cout << "ECONNRESET=" << ECONNRESET << std::endl;
    std::cout << "EC_DISABLE=" << EC_DISABLE << std::endl;
    std::cout << "EC_ENABLEALL=" << EC_ENABLEALL << std::endl;
    std::cout << "EC_ENABLEONE=" << EC_ENABLEONE << std::endl;
    std::cout << "EC_LEFTMARGIN=" << EC_LEFTMARGIN << std::endl;
    std::cout << "EC_QUERYWAITING=" << EC_QUERYWAITING << std::endl;
    std::cout << "EC_RIGHTMARGIN=" << EC_RIGHTMARGIN << std::endl;
    std::cout << "EDD_GET_DEVICE_INTERFACE_NAME=" << EDD_GET_DEVICE_INTERFACE_NAME << std::endl;
    std::cout << "EDESTADDRREQ=" << EDESTADDRREQ << std::endl;
    std::cout << "EDGE_BUMP=" << EDGE_BUMP << std::endl;
    std::cout << "EDGE_ETCHED=" << EDGE_ETCHED << std::endl;
    std::cout << "EDGE_RAISED=" << EDGE_RAISED << std::endl;
    std::cout << "EDGE_SUNKEN=" << EDGE_SUNKEN << std::endl;
    std::cout << "EDQUOT=" << EDQUOT << std::endl;
    std::cout << "EDS_RAWMODE=" << EDS_RAWMODE << std::endl;
    std::cout << "EDS_ROTATEDMODE=" << EDS_ROTATEDMODE << std::endl;
    std::cout << "EFSRPC_SECURE_ONLY=" << EFSRPC_SECURE_ONLY << std::endl;
    std::cout << "EFS_USE_RECOVERY_KEYS=" << EFS_USE_RECOVERY_KEYS << std::endl;
    std::cout << "EHOSTDOWN=" << EHOSTDOWN << std::endl;
    std::cout << "EHOSTUNREACH=" << EHOSTUNREACH << std::endl;
    std::cout << "EIMES_CANCELCOMPSTRINFOCUS=" << EIMES_CANCELCOMPSTRINFOCUS << std::endl;
    std::cout << "EIMES_COMPLETECOMPSTRKILLFOCUS=" << EIMES_COMPLETECOMPSTRKILLFOCUS << std::endl;
    std::cout << "EIMES_GETCOMPSTRATONCE=" << EIMES_GETCOMPSTRATONCE << std::endl;
    std::cout << "EINPROGRESS=" << EINPROGRESS << std::endl;
    std::cout << "EISCONN=" << EISCONN << std::endl;
    std::cout << "ELEMENT_STATUS_ACCESS=" << ELEMENT_STATUS_ACCESS << std::endl;
    std::cout << "ELEMENT_STATUS_AVOLTAG=" << ELEMENT_STATUS_AVOLTAG << std::endl;
    std::cout << "ELEMENT_STATUS_EXCEPT=" << ELEMENT_STATUS_EXCEPT << std::endl;
    std::cout << "ELEMENT_STATUS_EXENAB=" << ELEMENT_STATUS_EXENAB << std::endl;
    std::cout << "ELEMENT_STATUS_FULL=" << ELEMENT_STATUS_FULL << std::endl;
    std::cout << "ELEMENT_STATUS_ID_VALID=" << ELEMENT_STATUS_ID_VALID << std::endl;
    std::cout << "ELEMENT_STATUS_IMPEXP=" << ELEMENT_STATUS_IMPEXP << std::endl;
    std::cout << "ELEMENT_STATUS_INENAB=" << ELEMENT_STATUS_INENAB << std::endl;
    std::cout << "ELEMENT_STATUS_INVERT=" << ELEMENT_STATUS_INVERT << std::endl;
    std::cout << "ELEMENT_STATUS_LUN_VALID=" << ELEMENT_STATUS_LUN_VALID << std::endl;
    std::cout << "ELEMENT_STATUS_NOT_BUS=" << ELEMENT_STATUS_NOT_BUS << std::endl;
    std::cout << "ELEMENT_STATUS_PRODUCT_DATA=" << ELEMENT_STATUS_PRODUCT_DATA << std::endl;
    std::cout << "ELEMENT_STATUS_PVOLTAG=" << ELEMENT_STATUS_PVOLTAG << std::endl;
    std::cout << "ELEMENT_STATUS_SVALID=" << ELEMENT_STATUS_SVALID << std::endl;
    std::cout << "ELF_CULTURE_LATIN=" << ELF_CULTURE_LATIN << std::endl;
    std::cout << "ELF_VENDOR_SIZE=" << ELF_VENDOR_SIZE << std::endl;
    std::cout << "ELF_VERSION=" << ELF_VERSION << std::endl;
    std::cout << "ELOOP=" << ELOOP << std::endl;
    std::cout << "EMARCH_ENC_I17_IC_INST_WORD_POS_X=" << EMARCH_ENC_I17_IC_INST_WORD_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IC_INST_WORD_X=" << EMARCH_ENC_I17_IC_INST_WORD_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IC_SIZE_X=" << EMARCH_ENC_I17_IC_SIZE_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IC_VAL_POS_X=" << EMARCH_ENC_I17_IC_VAL_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X=" << EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM5C_INST_WORD_X=" << EMARCH_ENC_I17_IMM5C_INST_WORD_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM5C_SIZE_X=" << EMARCH_ENC_I17_IMM5C_SIZE_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM5C_VAL_POS_X=" << EMARCH_ENC_I17_IMM5C_VAL_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X=" << EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM7B_INST_WORD_X=" << EMARCH_ENC_I17_IMM7B_INST_WORD_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM7B_SIZE_X=" << EMARCH_ENC_I17_IMM7B_SIZE_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM7B_VAL_POS_X=" << EMARCH_ENC_I17_IMM7B_VAL_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X=" << EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM9D_INST_WORD_X=" << EMARCH_ENC_I17_IMM9D_INST_WORD_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM9D_SIZE_X=" << EMARCH_ENC_I17_IMM9D_SIZE_X << std::endl;
    std::cout << "EMARCH_ENC_I17_IMM9D_VAL_POS_X=" << EMARCH_ENC_I17_IMM9D_VAL_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_SIGN_INST_WORD_POS_X=" << EMARCH_ENC_I17_SIGN_INST_WORD_POS_X << std::endl;
    std::cout << "EMARCH_ENC_I17_SIGN_INST_WORD_X=" << EMARCH_ENC_I17_SIGN_INST_WORD_X << std::endl;
    std::cout << "EMARCH_ENC_I17_SIGN_SIZE_X=" << EMARCH_ENC_I17_SIGN_SIZE_X << std::endl;
    std::cout << "EMARCH_ENC_I17_SIGN_VAL_POS_X=" << EMARCH_ENC_I17_SIGN_VAL_POS_X << std::endl;
    std::cout << "EMR_ABORTPATH=" << EMR_ABORTPATH << std::endl;
    std::cout << "EMR_ALPHABLEND=" << EMR_ALPHABLEND << std::endl;
    std::cout << "EMR_ANGLEARC=" << EMR_ANGLEARC << std::endl;
    std::cout << "EMR_ARC=" << EMR_ARC << std::endl;
    std::cout << "EMR_ARCTO=" << EMR_ARCTO << std::endl;
    std::cout << "EMR_BEGINPATH=" << EMR_BEGINPATH << std::endl;
    std::cout << "EMR_BITBLT=" << EMR_BITBLT << std::endl;
    std::cout << "EMR_CHORD=" << EMR_CHORD << std::endl;
    std::cout << "EMR_CLOSEFIGURE=" << EMR_CLOSEFIGURE << std::endl;
    std::cout << "EMR_COLORCORRECTPALETTE=" << EMR_COLORCORRECTPALETTE << std::endl;
    std::cout << "EMR_COLORMATCHTOTARGETW=" << EMR_COLORMATCHTOTARGETW << std::endl;
    std::cout << "EMR_CREATEBRUSHINDIRECT=" << EMR_CREATEBRUSHINDIRECT << std::endl;
    std::cout << "EMR_CREATECOLORSPACE=" << EMR_CREATECOLORSPACE << std::endl;
    std::cout << "EMR_CREATECOLORSPACEW=" << EMR_CREATECOLORSPACEW << std::endl;
    std::cout << "EMR_CREATEDIBPATTERNBRUSHPT=" << EMR_CREATEDIBPATTERNBRUSHPT << std::endl;
    std::cout << "EMR_CREATEMONOBRUSH=" << EMR_CREATEMONOBRUSH << std::endl;
    std::cout << "EMR_CREATEPALETTE=" << EMR_CREATEPALETTE << std::endl;
    std::cout << "EMR_CREATEPEN=" << EMR_CREATEPEN << std::endl;
    std::cout << "EMR_DELETECOLORSPACE=" << EMR_DELETECOLORSPACE << std::endl;
    std::cout << "EMR_DELETEOBJECT=" << EMR_DELETEOBJECT << std::endl;
    std::cout << "EMR_ELLIPSE=" << EMR_ELLIPSE << std::endl;
    std::cout << "EMR_ENDPATH=" << EMR_ENDPATH << std::endl;
    std::cout << "EMR_EOF=" << EMR_EOF << std::endl;
    std::cout << "EMR_EXCLUDECLIPRECT=" << EMR_EXCLUDECLIPRECT << std::endl;
    std::cout << "EMR_EXTCREATEFONTINDIRECTW=" << EMR_EXTCREATEFONTINDIRECTW << std::endl;
    std::cout << "EMR_EXTCREATEPEN=" << EMR_EXTCREATEPEN << std::endl;
    std::cout << "EMR_EXTFLOODFILL=" << EMR_EXTFLOODFILL << std::endl;
    std::cout << "EMR_EXTSELECTCLIPRGN=" << EMR_EXTSELECTCLIPRGN << std::endl;
    std::cout << "EMR_EXTTEXTOUTA=" << EMR_EXTTEXTOUTA << std::endl;
    std::cout << "EMR_EXTTEXTOUTW=" << EMR_EXTTEXTOUTW << std::endl;
    std::cout << "EMR_FILLPATH=" << EMR_FILLPATH << std::endl;
    std::cout << "EMR_FILLRGN=" << EMR_FILLRGN << std::endl;
    std::cout << "EMR_FLATTENPATH=" << EMR_FLATTENPATH << std::endl;
    std::cout << "EMR_FRAMERGN=" << EMR_FRAMERGN << std::endl;
    std::cout << "EMR_GDICOMMENT=" << EMR_GDICOMMENT << std::endl;
    std::cout << "EMR_GLSBOUNDEDRECORD=" << EMR_GLSBOUNDEDRECORD << std::endl;
    std::cout << "EMR_GLSRECORD=" << EMR_GLSRECORD << std::endl;
    std::cout << "EMR_GRADIENTFILL=" << EMR_GRADIENTFILL << std::endl;
    std::cout << "EMR_HEADER=" << EMR_HEADER << std::endl;
    std::cout << "EMR_INTERSECTCLIPRECT=" << EMR_INTERSECTCLIPRECT << std::endl;
    std::cout << "EMR_INVERTRGN=" << EMR_INVERTRGN << std::endl;
    std::cout << "EMR_LINETO=" << EMR_LINETO << std::endl;
    std::cout << "EMR_MASKBLT=" << EMR_MASKBLT << std::endl;
    std::cout << "EMR_MAX=" << EMR_MAX << std::endl;
    std::cout << "EMR_MIN=" << EMR_MIN << std::endl;
    std::cout << "EMR_MODIFYWORLDTRANSFORM=" << EMR_MODIFYWORLDTRANSFORM << std::endl;
    std::cout << "EMR_MOVETOEX=" << EMR_MOVETOEX << std::endl;
    std::cout << "EMR_OFFSETCLIPRGN=" << EMR_OFFSETCLIPRGN << std::endl;
    std::cout << "EMR_PAINTRGN=" << EMR_PAINTRGN << std::endl;
    std::cout << "EMR_PIE=" << EMR_PIE << std::endl;
    std::cout << "EMR_PIXELFORMAT=" << EMR_PIXELFORMAT << std::endl;
    std::cout << "EMR_PLGBLT=" << EMR_PLGBLT << std::endl;
    std::cout << "EMR_POLYBEZIER=" << EMR_POLYBEZIER << std::endl;
    std::cout << "EMR_POLYBEZIER16=" << EMR_POLYBEZIER16 << std::endl;
    std::cout << "EMR_POLYBEZIERTO=" << EMR_POLYBEZIERTO << std::endl;
    std::cout << "EMR_POLYBEZIERTO16=" << EMR_POLYBEZIERTO16 << std::endl;
    std::cout << "EMR_POLYDRAW=" << EMR_POLYDRAW << std::endl;
    std::cout << "EMR_POLYDRAW16=" << EMR_POLYDRAW16 << std::endl;
    std::cout << "EMR_POLYGON=" << EMR_POLYGON << std::endl;
    std::cout << "EMR_POLYGON16=" << EMR_POLYGON16 << std::endl;
    std::cout << "EMR_POLYLINE=" << EMR_POLYLINE << std::endl;
    std::cout << "EMR_POLYLINE16=" << EMR_POLYLINE16 << std::endl;
    std::cout << "EMR_POLYLINETO=" << EMR_POLYLINETO << std::endl;
    std::cout << "EMR_POLYLINETO16=" << EMR_POLYLINETO16 << std::endl;
    std::cout << "EMR_POLYPOLYGON=" << EMR_POLYPOLYGON << std::endl;
    std::cout << "EMR_POLYPOLYGON16=" << EMR_POLYPOLYGON16 << std::endl;
    std::cout << "EMR_POLYPOLYLINE=" << EMR_POLYPOLYLINE << std::endl;
    std::cout << "EMR_POLYPOLYLINE16=" << EMR_POLYPOLYLINE16 << std::endl;
    std::cout << "EMR_POLYTEXTOUTA=" << EMR_POLYTEXTOUTA << std::endl;
    std::cout << "EMR_POLYTEXTOUTW=" << EMR_POLYTEXTOUTW << std::endl;
    std::cout << "EMR_REALIZEPALETTE=" << EMR_REALIZEPALETTE << std::endl;
    std::cout << "EMR_RECTANGLE=" << EMR_RECTANGLE << std::endl;
    std::cout << "EMR_RESERVED_105=" << EMR_RESERVED_105 << std::endl;
    std::cout << "EMR_RESERVED_106=" << EMR_RESERVED_106 << std::endl;
    std::cout << "EMR_RESERVED_107=" << EMR_RESERVED_107 << std::endl;
    std::cout << "EMR_RESERVED_108=" << EMR_RESERVED_108 << std::endl;
    std::cout << "EMR_RESERVED_109=" << EMR_RESERVED_109 << std::endl;
    std::cout << "EMR_RESERVED_110=" << EMR_RESERVED_110 << std::endl;
    std::cout << "EMR_RESERVED_117=" << EMR_RESERVED_117 << std::endl;
    std::cout << "EMR_RESERVED_119=" << EMR_RESERVED_119 << std::endl;
    std::cout << "EMR_RESERVED_120=" << EMR_RESERVED_120 << std::endl;
    std::cout << "EMR_RESIZEPALETTE=" << EMR_RESIZEPALETTE << std::endl;
    std::cout << "EMR_RESTOREDC=" << EMR_RESTOREDC << std::endl;
    std::cout << "EMR_ROUNDRECT=" << EMR_ROUNDRECT << std::endl;
    std::cout << "EMR_SAVEDC=" << EMR_SAVEDC << std::endl;
    std::cout << "EMR_SCALEVIEWPORTEXTEX=" << EMR_SCALEVIEWPORTEXTEX << std::endl;
    std::cout << "EMR_SCALEWINDOWEXTEX=" << EMR_SCALEWINDOWEXTEX << std::endl;
    std::cout << "EMR_SELECTCLIPPATH=" << EMR_SELECTCLIPPATH << std::endl;
    std::cout << "EMR_SELECTOBJECT=" << EMR_SELECTOBJECT << std::endl;
    std::cout << "EMR_SELECTPALETTE=" << EMR_SELECTPALETTE << std::endl;
    std::cout << "EMR_SETARCDIRECTION=" << EMR_SETARCDIRECTION << std::endl;
    std::cout << "EMR_SETBKCOLOR=" << EMR_SETBKCOLOR << std::endl;
    std::cout << "EMR_SETBKMODE=" << EMR_SETBKMODE << std::endl;
    std::cout << "EMR_SETBRUSHORGEX=" << EMR_SETBRUSHORGEX << std::endl;
    std::cout << "EMR_SETCOLORADJUSTMENT=" << EMR_SETCOLORADJUSTMENT << std::endl;
    std::cout << "EMR_SETCOLORSPACE=" << EMR_SETCOLORSPACE << std::endl;
    std::cout << "EMR_SETDIBITSTODEVICE=" << EMR_SETDIBITSTODEVICE << std::endl;
    std::cout << "EMR_SETICMMODE=" << EMR_SETICMMODE << std::endl;
    std::cout << "EMR_SETICMPROFILEA=" << EMR_SETICMPROFILEA << std::endl;
    std::cout << "EMR_SETICMPROFILEW=" << EMR_SETICMPROFILEW << std::endl;
    std::cout << "EMR_SETLAYOUT=" << EMR_SETLAYOUT << std::endl;
    std::cout << "EMR_SETMAPMODE=" << EMR_SETMAPMODE << std::endl;
    std::cout << "EMR_SETMAPPERFLAGS=" << EMR_SETMAPPERFLAGS << std::endl;
    std::cout << "EMR_SETMETARGN=" << EMR_SETMETARGN << std::endl;
    std::cout << "EMR_SETMITERLIMIT=" << EMR_SETMITERLIMIT << std::endl;
    std::cout << "EMR_SETPALETTEENTRIES=" << EMR_SETPALETTEENTRIES << std::endl;
    std::cout << "EMR_SETPIXELV=" << EMR_SETPIXELV << std::endl;
    std::cout << "EMR_SETPOLYFILLMODE=" << EMR_SETPOLYFILLMODE << std::endl;
    std::cout << "EMR_SETROP2=" << EMR_SETROP2 << std::endl;
    std::cout << "EMR_SETSTRETCHBLTMODE=" << EMR_SETSTRETCHBLTMODE << std::endl;
    std::cout << "EMR_SETTEXTALIGN=" << EMR_SETTEXTALIGN << std::endl;
    std::cout << "EMR_SETTEXTCOLOR=" << EMR_SETTEXTCOLOR << std::endl;
    std::cout << "EMR_SETVIEWPORTEXTEX=" << EMR_SETVIEWPORTEXTEX << std::endl;
    std::cout << "EMR_SETVIEWPORTORGEX=" << EMR_SETVIEWPORTORGEX << std::endl;
    std::cout << "EMR_SETWINDOWEXTEX=" << EMR_SETWINDOWEXTEX << std::endl;
    std::cout << "EMR_SETWINDOWORGEX=" << EMR_SETWINDOWORGEX << std::endl;
    std::cout << "EMR_SETWORLDTRANSFORM=" << EMR_SETWORLDTRANSFORM << std::endl;
    std::cout << "EMR_STRETCHBLT=" << EMR_STRETCHBLT << std::endl;
    std::cout << "EMR_STRETCHDIBITS=" << EMR_STRETCHDIBITS << std::endl;
    std::cout << "EMR_STROKEANDFILLPATH=" << EMR_STROKEANDFILLPATH << std::endl;
    std::cout << "EMR_STROKEPATH=" << EMR_STROKEPATH << std::endl;
    std::cout << "EMR_TRANSPARENTBLT=" << EMR_TRANSPARENTBLT << std::endl;
    std::cout << "EMR_WIDENPATH=" << EMR_WIDENPATH << std::endl;
    std::cout << "EMSGSIZE=" << EMSGSIZE << std::endl;
    std::cout << "EMSIS_COMPOSITIONSTRING=" << EMSIS_COMPOSITIONSTRING << std::endl;
    std::cout << "EM_CANUNDO=" << EM_CANUNDO << std::endl;
    std::cout << "EM_CHARFROMPOS=" << EM_CHARFROMPOS << std::endl;
    std::cout << "EM_EMPTYUNDOBUFFER=" << EM_EMPTYUNDOBUFFER << std::endl;
    std::cout << "EM_ENABLEFEATURE=" << EM_ENABLEFEATURE << std::endl;
    std::cout << "EM_FMTLINES=" << EM_FMTLINES << std::endl;
    std::cout << "EM_GETFIRSTVISIBLELINE=" << EM_GETFIRSTVISIBLELINE << std::endl;
    std::cout << "EM_GETHANDLE=" << EM_GETHANDLE << std::endl;
    std::cout << "EM_GETIMESTATUS=" << EM_GETIMESTATUS << std::endl;
    std::cout << "EM_GETLIMITTEXT=" << EM_GETLIMITTEXT << std::endl;
    std::cout << "EM_GETLINE=" << EM_GETLINE << std::endl;
    std::cout << "EM_GETLINECOUNT=" << EM_GETLINECOUNT << std::endl;
    std::cout << "EM_GETMARGINS=" << EM_GETMARGINS << std::endl;
    std::cout << "EM_GETMODIFY=" << EM_GETMODIFY << std::endl;
    std::cout << "EM_GETPASSWORDCHAR=" << EM_GETPASSWORDCHAR << std::endl;
    std::cout << "EM_GETRECT=" << EM_GETRECT << std::endl;
    std::cout << "EM_GETSEL=" << EM_GETSEL << std::endl;
    std::cout << "EM_GETTHUMB=" << EM_GETTHUMB << std::endl;
    std::cout << "EM_GETWORDBREAKPROC=" << EM_GETWORDBREAKPROC << std::endl;
    std::cout << "EM_LIMITTEXT=" << EM_LIMITTEXT << std::endl;
    std::cout << "EM_LINEFROMCHAR=" << EM_LINEFROMCHAR << std::endl;
    std::cout << "EM_LINEINDEX=" << EM_LINEINDEX << std::endl;
    std::cout << "EM_LINELENGTH=" << EM_LINELENGTH << std::endl;
    std::cout << "EM_LINESCROLL=" << EM_LINESCROLL << std::endl;
    std::cout << "EM_POSFROMCHAR=" << EM_POSFROMCHAR << std::endl;
    std::cout << "EM_REPLACESEL=" << EM_REPLACESEL << std::endl;
    std::cout << "EM_SCROLL=" << EM_SCROLL << std::endl;
    std::cout << "EM_SCROLLCARET=" << EM_SCROLLCARET << std::endl;
    std::cout << "EM_SETHANDLE=" << EM_SETHANDLE << std::endl;
    std::cout << "EM_SETIMESTATUS=" << EM_SETIMESTATUS << std::endl;
    std::cout << "EM_SETLIMITTEXT=" << EM_SETLIMITTEXT << std::endl;
    std::cout << "EM_SETMARGINS=" << EM_SETMARGINS << std::endl;
    std::cout << "EM_SETMODIFY=" << EM_SETMODIFY << std::endl;
    std::cout << "EM_SETPASSWORDCHAR=" << EM_SETPASSWORDCHAR << std::endl;
    std::cout << "EM_SETREADONLY=" << EM_SETREADONLY << std::endl;
    std::cout << "EM_SETRECT=" << EM_SETRECT << std::endl;
    std::cout << "EM_SETRECTNP=" << EM_SETRECTNP << std::endl;
    std::cout << "EM_SETSEL=" << EM_SETSEL << std::endl;
    std::cout << "EM_SETTABSTOPS=" << EM_SETTABSTOPS << std::endl;
    std::cout << "EM_SETWORDBREAKPROC=" << EM_SETWORDBREAKPROC << std::endl;
    std::cout << "EM_UNDO=" << EM_UNDO << std::endl;
    std::cout << "ENABLEDUPLEX=" << ENABLEDUPLEX << std::endl;
    std::cout << "ENABLEPAIRKERNING=" << ENABLEPAIRKERNING << std::endl;
    std::cout << "ENABLERELATIVEWIDTHS=" << ENABLERELATIVEWIDTHS << std::endl;
    std::cout << "ENABLE_AUTO_POSITION=" << ENABLE_AUTO_POSITION << std::endl;
    std::cout << "ENABLE_DISABLE_AUTOSAVE=" << ENABLE_DISABLE_AUTOSAVE << std::endl;
    std::cout << "ENABLE_DISABLE_AUTO_OFFLINE=" << ENABLE_DISABLE_AUTO_OFFLINE << std::endl;
    std::cout << "ENABLE_ECHO_INPUT=" << ENABLE_ECHO_INPUT << std::endl;
    std::cout << "ENABLE_EXTENDED_FLAGS=" << ENABLE_EXTENDED_FLAGS << std::endl;
    std::cout << "ENABLE_INSERT_MODE=" << ENABLE_INSERT_MODE << std::endl;
    std::cout << "ENABLE_LINE_INPUT=" << ENABLE_LINE_INPUT << std::endl;
    std::cout << "ENABLE_LVB_GRID_WORLDWIDE=" << ENABLE_LVB_GRID_WORLDWIDE << std::endl;
    std::cout << "ENABLE_MOUSE_INPUT=" << ENABLE_MOUSE_INPUT << std::endl;
    std::cout << "ENABLE_PROCESSED_INPUT=" << ENABLE_PROCESSED_INPUT << std::endl;
    std::cout << "ENABLE_PROCESSED_OUTPUT=" << ENABLE_PROCESSED_OUTPUT << std::endl;
    std::cout << "ENABLE_QUICK_EDIT_MODE=" << ENABLE_QUICK_EDIT_MODE << std::endl;
    std::cout << "ENABLE_SMART=" << ENABLE_SMART << std::endl;
    std::cout << "ENABLE_VIRTUAL_TERMINAL_INPUT=" << ENABLE_VIRTUAL_TERMINAL_INPUT << std::endl;
    std::cout << "ENABLE_VIRTUAL_TERMINAL_PROCESSING=" << ENABLE_VIRTUAL_TERMINAL_PROCESSING << std::endl;
    std::cout << "ENABLE_WINDOW_INPUT=" << ENABLE_WINDOW_INPUT << std::endl;
    std::cout << "ENABLE_WRAP_AT_EOL_OUTPUT=" << ENABLE_WRAP_AT_EOL_OUTPUT << std::endl;
    std::cout << "ENAMETOOLONG=" << ENAMETOOLONG << std::endl;
    std::cout << "ENCAPSULATED_POSTSCRIPT=" << ENCAPSULATED_POSTSCRIPT << std::endl;
    std::cout << "ENCRYPTION_FORMAT_DEFAULT=" << ENCRYPTION_FORMAT_DEFAULT << std::endl;
    std::cout << "ENDDOC=" << ENDDOC << std::endl;
    std::cout << "ENDSESSION_CLOSEAPP=" << ENDSESSION_CLOSEAPP << std::endl;
    std::cout << "ENDSESSION_CRITICAL=" << ENDSESSION_CRITICAL << std::endl;
    std::cout << "ENDSESSION_LOGOFF=" << ENDSESSION_LOGOFF << std::endl;
    std::cout << "END_PATH=" << END_PATH << std::endl;
    std::cout << "ENETDOWN=" << ENETDOWN << std::endl;
    std::cout << "ENETRESET=" << ENETRESET << std::endl;
    std::cout << "ENETUNREACH=" << ENETUNREACH << std::endl;
    std::cout << "ENHANCED_KEY=" << ENHANCED_KEY << std::endl;
    std::cout << "ENHMETA_SIGNATURE=" << ENHMETA_SIGNATURE << std::endl;
    std::cout << "ENHMETA_STOCK_OBJECT=" << ENHMETA_STOCK_OBJECT << std::endl;
    std::cout << "ENLISTMENT_ALL_ACCESS=" << ENLISTMENT_ALL_ACCESS << std::endl;
    std::cout << "ENLISTMENT_GENERIC_EXECUTE=" << ENLISTMENT_GENERIC_EXECUTE << std::endl;
    std::cout << "ENLISTMENT_GENERIC_READ=" << ENLISTMENT_GENERIC_READ << std::endl;
    std::cout << "ENLISTMENT_GENERIC_WRITE=" << ENLISTMENT_GENERIC_WRITE << std::endl;
    std::cout << "ENLISTMENT_MAXIMUM_OPTION=" << ENLISTMENT_MAXIMUM_OPTION << std::endl;
    std::cout << "ENLISTMENT_QUERY_INFORMATION=" << ENLISTMENT_QUERY_INFORMATION << std::endl;
    std::cout << "ENLISTMENT_RECOVER=" << ENLISTMENT_RECOVER << std::endl;
    std::cout << "ENLISTMENT_SET_INFORMATION=" << ENLISTMENT_SET_INFORMATION << std::endl;
    std::cout << "ENLISTMENT_SUBORDINATE_RIGHTS=" << ENLISTMENT_SUBORDINATE_RIGHTS << std::endl;
    std::cout << "ENLISTMENT_SUPERIOR=" << ENLISTMENT_SUPERIOR << std::endl;
    std::cout << "ENLISTMENT_SUPERIOR_RIGHTS=" << ENLISTMENT_SUPERIOR_RIGHTS << std::endl;
    std::cout << "ENOBUFS=" << ENOBUFS << std::endl;
    std::cout << "ENOPROTOOPT=" << ENOPROTOOPT << std::endl;
    std::cout << "ENOTCONN=" << ENOTCONN << std::endl;
    std::cout << "ENOTEMPTY=" << ENOTEMPTY << std::endl;
    std::cout << "ENOTSOCK=" << ENOTSOCK << std::endl;
    std::cout << "ENUMPAPERBINS=" << ENUMPAPERBINS << std::endl;
    std::cout << "ENUMPAPERMETRICS=" << ENUMPAPERMETRICS << std::endl;
    std::cout << "EN_AFTER_PASTE=" << EN_AFTER_PASTE << std::endl;
    std::cout << "EN_ALIGN_LTR_EC=" << EN_ALIGN_LTR_EC << std::endl;
    std::cout << "EN_ALIGN_RTL_EC=" << EN_ALIGN_RTL_EC << std::endl;
    std::cout << "EN_BEFORE_PASTE=" << EN_BEFORE_PASTE << std::endl;
    std::cout << "EN_CHANGE=" << EN_CHANGE << std::endl;
    std::cout << "EN_ERRSPACE=" << EN_ERRSPACE << std::endl;
    std::cout << "EN_HSCROLL=" << EN_HSCROLL << std::endl;
    std::cout << "EN_KILLFOCUS=" << EN_KILLFOCUS << std::endl;
    std::cout << "EN_MAXTEXT=" << EN_MAXTEXT << std::endl;
    std::cout << "EN_SETFOCUS=" << EN_SETFOCUS << std::endl;
    std::cout << "EN_UPDATE=" << EN_UPDATE << std::endl;
    std::cout << "EN_VSCROLL=" << EN_VSCROLL << std::endl;
    std::cout << "EOPNOTSUPP=" << EOPNOTSUPP << std::endl;
    std::cout << "EPFNOSUPPORT=" << EPFNOSUPPORT << std::endl;
    std::cout << "EPROCLIM=" << EPROCLIM << std::endl;
    std::cout << "EPROTONOSUPPORT=" << EPROTONOSUPPORT << std::endl;
    std::cout << "EPROTOTYPE=" << EPROTOTYPE << std::endl;
    std::cout << "EPSPRINTING=" << EPSPRINTING << std::endl;
    std::cout << "EPS_SIGNATURE=" << EPS_SIGNATURE << std::endl;
    std::cout << "EREMOTE=" << EREMOTE << std::endl;
    std::cout << "ERROR=" << ERROR << std::endl;
    std::cout << "ERROR_BIDI_DEVICE_OFFLINE=" << ERROR_BIDI_DEVICE_OFFLINE << std::endl;
    std::cout << "ERROR_BIDI_ERROR_BASE=" << ERROR_BIDI_ERROR_BASE << std::endl;
    std::cout << "ERROR_BIDI_SCHEMA_NOT_SUPPORTED=" << ERROR_BIDI_SCHEMA_NOT_SUPPORTED << std::endl;
    std::cout << "ERROR_BIDI_SCHEMA_READ_ONLY=" << ERROR_BIDI_SCHEMA_READ_ONLY << std::endl;
    std::cout << "ERROR_BIDI_SERVER_OFFLINE=" << ERROR_BIDI_SERVER_OFFLINE << std::endl;
    std::cout << "ERROR_BIDI_STATUS_OK=" << ERROR_BIDI_STATUS_OK << std::endl;
    std::cout << "ERROR_BIDI_STATUS_WARNING=" << ERROR_BIDI_STATUS_WARNING << std::endl;
    std::cout << "ERROR_DRIVE_NOT_INSTALLED=" << ERROR_DRIVE_NOT_INSTALLED << std::endl;
    std::cout << "ERROR_INIT_STATUS_NEEDED=" << ERROR_INIT_STATUS_NEEDED << std::endl;
    std::cout << "ERROR_LABEL_QUESTIONABLE=" << ERROR_LABEL_QUESTIONABLE << std::endl;
    std::cout << "ERROR_LABEL_UNREADABLE=" << ERROR_LABEL_UNREADABLE << std::endl;
    std::cout << "ERROR_SEVERITY_ERROR=" << ERROR_SEVERITY_ERROR << std::endl;
    std::cout << "ERROR_SEVERITY_INFORMATIONAL=" << ERROR_SEVERITY_INFORMATIONAL << std::endl;
    std::cout << "ERROR_SEVERITY_SUCCESS=" << ERROR_SEVERITY_SUCCESS << std::endl;
    std::cout << "ERROR_SEVERITY_WARNING=" << ERROR_SEVERITY_WARNING << std::endl;
    std::cout << "ERROR_SLOT_NOT_PRESENT=" << ERROR_SLOT_NOT_PRESENT << std::endl;
    std::cout << "ERROR_TRAY_MALFUNCTION=" << ERROR_TRAY_MALFUNCTION << std::endl;
    std::cout << "ERROR_UNHANDLED_ERROR=" << ERROR_UNHANDLED_ERROR << std::endl;
    std::cout << "ESB_DISABLE_BOTH=" << ESB_DISABLE_BOTH << std::endl;
    std::cout << "ESB_DISABLE_DOWN=" << ESB_DISABLE_DOWN << std::endl;
    std::cout << "ESB_DISABLE_LEFT=" << ESB_DISABLE_LEFT << std::endl;
    std::cout << "ESB_DISABLE_LTUP=" << ESB_DISABLE_LTUP << std::endl;
    std::cout << "ESB_DISABLE_RIGHT=" << ESB_DISABLE_RIGHT << std::endl;
    std::cout << "ESB_DISABLE_RTDN=" << ESB_DISABLE_RTDN << std::endl;
    std::cout << "ESB_DISABLE_UP=" << ESB_DISABLE_UP << std::endl;
    std::cout << "ESB_ENABLE_BOTH=" << ESB_ENABLE_BOTH << std::endl;
    std::cout << "ESHUTDOWN=" << ESHUTDOWN << std::endl;
    std::cout << "ESOCKTNOSUPPORT=" << ESOCKTNOSUPPORT << std::endl;
    std::cout << "ESTALE=" << ESTALE << std::endl;
    std::cout << "ETIMEDOUT=" << ETIMEDOUT << std::endl;
    std::cout << "ETOOMANYREFS=" << ETOOMANYREFS << std::endl;
    std::cout << "ETO_CLIPPED=" << ETO_CLIPPED << std::endl;
    std::cout << "ETO_GLYPH_INDEX=" << ETO_GLYPH_INDEX << std::endl;
    std::cout << "ETO_IGNORELANGUAGE=" << ETO_IGNORELANGUAGE << std::endl;
    std::cout << "ETO_NUMERICSLATIN=" << ETO_NUMERICSLATIN << std::endl;
    std::cout << "ETO_NUMERICSLOCAL=" << ETO_NUMERICSLOCAL << std::endl;
    std::cout << "ETO_OPAQUE=" << ETO_OPAQUE << std::endl;
    std::cout << "ETO_PDY=" << ETO_PDY << std::endl;
    std::cout << "ETO_REVERSE_INDEX_MAP=" << ETO_REVERSE_INDEX_MAP << std::endl;
    std::cout << "ETO_RTLREADING=" << ETO_RTLREADING << std::endl;
    std::cout << "EUSERS=" << EUSERS << std::endl;
    std::cout << "EVENPARITY=" << EVENPARITY << std::endl;
    std::cout << "EVENTLOG_AUDIT_FAILURE=" << EVENTLOG_AUDIT_FAILURE << std::endl;
    std::cout << "EVENTLOG_AUDIT_SUCCESS=" << EVENTLOG_AUDIT_SUCCESS << std::endl;
    std::cout << "EVENTLOG_BACKWARDS_READ=" << EVENTLOG_BACKWARDS_READ << std::endl;
    std::cout << "EVENTLOG_END_ALL_PAIRED_EVENTS=" << EVENTLOG_END_ALL_PAIRED_EVENTS << std::endl;
    std::cout << "EVENTLOG_END_PAIRED_EVENT=" << EVENTLOG_END_PAIRED_EVENT << std::endl;
    std::cout << "EVENTLOG_ERROR_TYPE=" << EVENTLOG_ERROR_TYPE << std::endl;
    std::cout << "EVENTLOG_FORWARDS_READ=" << EVENTLOG_FORWARDS_READ << std::endl;
    std::cout << "EVENTLOG_FULL_INFO=" << EVENTLOG_FULL_INFO << std::endl;
    std::cout << "EVENTLOG_INFORMATION_TYPE=" << EVENTLOG_INFORMATION_TYPE << std::endl;
    std::cout << "EVENTLOG_PAIRED_EVENT_ACTIVE=" << EVENTLOG_PAIRED_EVENT_ACTIVE << std::endl;
    std::cout << "EVENTLOG_PAIRED_EVENT_INACTIVE=" << EVENTLOG_PAIRED_EVENT_INACTIVE << std::endl;
    std::cout << "EVENTLOG_SEEK_READ=" << EVENTLOG_SEEK_READ << std::endl;
    std::cout << "EVENTLOG_SEQUENTIAL_READ=" << EVENTLOG_SEQUENTIAL_READ << std::endl;
    std::cout << "EVENTLOG_START_PAIRED_EVENT=" << EVENTLOG_START_PAIRED_EVENT << std::endl;
    std::cout << "EVENTLOG_SUCCESS=" << EVENTLOG_SUCCESS << std::endl;
    std::cout << "EVENTLOG_WARNING_TYPE=" << EVENTLOG_WARNING_TYPE << std::endl;
    std::cout << "EVENT_ALL_ACCESS=" << EVENT_ALL_ACCESS << std::endl;
    std::cout << "EVENT_CONSOLE_CARET=" << EVENT_CONSOLE_CARET << std::endl;
    std::cout << "EVENT_CONSOLE_END_APPLICATION=" << EVENT_CONSOLE_END_APPLICATION << std::endl;
    std::cout << "EVENT_CONSOLE_LAYOUT=" << EVENT_CONSOLE_LAYOUT << std::endl;
    std::cout << "EVENT_CONSOLE_START_APPLICATION=" << EVENT_CONSOLE_START_APPLICATION << std::endl;
    std::cout << "EVENT_CONSOLE_UPDATE_REGION=" << EVENT_CONSOLE_UPDATE_REGION << std::endl;
    std::cout << "EVENT_CONSOLE_UPDATE_SCROLL=" << EVENT_CONSOLE_UPDATE_SCROLL << std::endl;
    std::cout << "EVENT_CONSOLE_UPDATE_SIMPLE=" << EVENT_CONSOLE_UPDATE_SIMPLE << std::endl;
    std::cout << "EVENT_MAX=" << EVENT_MAX << std::endl;
    std::cout << "EVENT_MIN=" << EVENT_MIN << std::endl;
    std::cout << "EVENT_MODIFY_STATE=" << EVENT_MODIFY_STATE << std::endl;
    std::cout << "EVENT_OBJECT_ACCELERATORCHANGE=" << EVENT_OBJECT_ACCELERATORCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_CLOAKED=" << EVENT_OBJECT_CLOAKED << std::endl;
    std::cout << "EVENT_OBJECT_CONTENTSCROLLED=" << EVENT_OBJECT_CONTENTSCROLLED << std::endl;
    std::cout << "EVENT_OBJECT_CREATE=" << EVENT_OBJECT_CREATE << std::endl;
    std::cout << "EVENT_OBJECT_DEFACTIONCHANGE=" << EVENT_OBJECT_DEFACTIONCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_DESCRIPTIONCHANGE=" << EVENT_OBJECT_DESCRIPTIONCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_DESTROY=" << EVENT_OBJECT_DESTROY << std::endl;
    std::cout << "EVENT_OBJECT_DRAGCANCEL=" << EVENT_OBJECT_DRAGCANCEL << std::endl;
    std::cout << "EVENT_OBJECT_DRAGCOMPLETE=" << EVENT_OBJECT_DRAGCOMPLETE << std::endl;
    std::cout << "EVENT_OBJECT_DRAGDROPPED=" << EVENT_OBJECT_DRAGDROPPED << std::endl;
    std::cout << "EVENT_OBJECT_DRAGENTER=" << EVENT_OBJECT_DRAGENTER << std::endl;
    std::cout << "EVENT_OBJECT_DRAGLEAVE=" << EVENT_OBJECT_DRAGLEAVE << std::endl;
    std::cout << "EVENT_OBJECT_DRAGSTART=" << EVENT_OBJECT_DRAGSTART << std::endl;
    std::cout << "EVENT_OBJECT_FOCUS=" << EVENT_OBJECT_FOCUS << std::endl;
    std::cout << "EVENT_OBJECT_HELPCHANGE=" << EVENT_OBJECT_HELPCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_HIDE=" << EVENT_OBJECT_HIDE << std::endl;
    std::cout << "EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED=" << EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED << std::endl;
    std::cout << "EVENT_OBJECT_IME_CHANGE=" << EVENT_OBJECT_IME_CHANGE << std::endl;
    std::cout << "EVENT_OBJECT_IME_HIDE=" << EVENT_OBJECT_IME_HIDE << std::endl;
    std::cout << "EVENT_OBJECT_IME_SHOW=" << EVENT_OBJECT_IME_SHOW << std::endl;
    std::cout << "EVENT_OBJECT_INVOKED=" << EVENT_OBJECT_INVOKED << std::endl;
    std::cout << "EVENT_OBJECT_LIVEREGIONCHANGED=" << EVENT_OBJECT_LIVEREGIONCHANGED << std::endl;
    std::cout << "EVENT_OBJECT_LOCATIONCHANGE=" << EVENT_OBJECT_LOCATIONCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_NAMECHANGE=" << EVENT_OBJECT_NAMECHANGE << std::endl;
    std::cout << "EVENT_OBJECT_PARENTCHANGE=" << EVENT_OBJECT_PARENTCHANGE << std::endl;
    std::cout << "EVENT_OBJECT_REORDER=" << EVENT_OBJECT_REORDER << std::endl;
    std::cout << "EVENT_OBJECT_SELECTION=" << EVENT_OBJECT_SELECTION << std::endl;
    std::cout << "EVENT_OBJECT_SELECTIONADD=" << EVENT_OBJECT_SELECTIONADD << std::endl;
    std::cout << "EVENT_OBJECT_SELECTIONREMOVE=" << EVENT_OBJECT_SELECTIONREMOVE << std::endl;
    std::cout << "EVENT_OBJECT_SELECTIONWITHIN=" << EVENT_OBJECT_SELECTIONWITHIN << std::endl;
    std::cout << "EVENT_OBJECT_SHOW=" << EVENT_OBJECT_SHOW << std::endl;
    std::cout << "EVENT_OBJECT_STATECHANGE=" << EVENT_OBJECT_STATECHANGE << std::endl;
    std::cout << "EVENT_OBJECT_TEXTSELECTIONCHANGED=" << EVENT_OBJECT_TEXTSELECTIONCHANGED << std::endl;
    std::cout << "EVENT_OBJECT_UNCLOAKED=" << EVENT_OBJECT_UNCLOAKED << std::endl;
    std::cout << "EVENT_OBJECT_VALUECHANGE=" << EVENT_OBJECT_VALUECHANGE << std::endl;
    std::cout << "EVENT_OEM_DEFINED_START=" << EVENT_OEM_DEFINED_START << std::endl;
    std::cout << "EVENT_SYSTEM_ALERT=" << EVENT_SYSTEM_ALERT << std::endl;
    std::cout << "EVENT_SYSTEM_ARRANGMENTPREVIEW=" << EVENT_SYSTEM_ARRANGMENTPREVIEW << std::endl;
    std::cout << "EVENT_SYSTEM_CAPTUREEND=" << EVENT_SYSTEM_CAPTUREEND << std::endl;
    std::cout << "EVENT_SYSTEM_CAPTURESTART=" << EVENT_SYSTEM_CAPTURESTART << std::endl;
    std::cout << "EVENT_SYSTEM_CONTEXTHELPEND=" << EVENT_SYSTEM_CONTEXTHELPEND << std::endl;
    std::cout << "EVENT_SYSTEM_CONTEXTHELPSTART=" << EVENT_SYSTEM_CONTEXTHELPSTART << std::endl;
    std::cout << "EVENT_SYSTEM_DESKTOPSWITCH=" << EVENT_SYSTEM_DESKTOPSWITCH << std::endl;
    std::cout << "EVENT_SYSTEM_DIALOGEND=" << EVENT_SYSTEM_DIALOGEND << std::endl;
    std::cout << "EVENT_SYSTEM_DIALOGSTART=" << EVENT_SYSTEM_DIALOGSTART << std::endl;
    std::cout << "EVENT_SYSTEM_DRAGDROPEND=" << EVENT_SYSTEM_DRAGDROPEND << std::endl;
    std::cout << "EVENT_SYSTEM_DRAGDROPSTART=" << EVENT_SYSTEM_DRAGDROPSTART << std::endl;
    std::cout << "EVENT_SYSTEM_FOREGROUND=" << EVENT_SYSTEM_FOREGROUND << std::endl;
    std::cout << "EVENT_SYSTEM_IME_KEY_NOTIFICATION=" << EVENT_SYSTEM_IME_KEY_NOTIFICATION << std::endl;
    std::cout << "EVENT_SYSTEM_MENUEND=" << EVENT_SYSTEM_MENUEND << std::endl;
    std::cout << "EVENT_SYSTEM_MENUPOPUPEND=" << EVENT_SYSTEM_MENUPOPUPEND << std::endl;
    std::cout << "EVENT_SYSTEM_MENUPOPUPSTART=" << EVENT_SYSTEM_MENUPOPUPSTART << std::endl;
    std::cout << "EVENT_SYSTEM_MENUSTART=" << EVENT_SYSTEM_MENUSTART << std::endl;
    std::cout << "EVENT_SYSTEM_MINIMIZEEND=" << EVENT_SYSTEM_MINIMIZEEND << std::endl;
    std::cout << "EVENT_SYSTEM_MINIMIZESTART=" << EVENT_SYSTEM_MINIMIZESTART << std::endl;
    std::cout << "EVENT_SYSTEM_MOVESIZEEND=" << EVENT_SYSTEM_MOVESIZEEND << std::endl;
    std::cout << "EVENT_SYSTEM_MOVESIZESTART=" << EVENT_SYSTEM_MOVESIZESTART << std::endl;
    std::cout << "EVENT_SYSTEM_SCROLLINGEND=" << EVENT_SYSTEM_SCROLLINGEND << std::endl;
    std::cout << "EVENT_SYSTEM_SCROLLINGSTART=" << EVENT_SYSTEM_SCROLLINGSTART << std::endl;
    std::cout << "EVENT_SYSTEM_SOUND=" << EVENT_SYSTEM_SOUND << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHEND=" << EVENT_SYSTEM_SWITCHEND << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHER_APPDROPPED=" << EVENT_SYSTEM_SWITCHER_APPDROPPED << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHER_APPGRABBED=" << EVENT_SYSTEM_SWITCHER_APPGRABBED << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHER_APPOVERTARGET=" << EVENT_SYSTEM_SWITCHER_APPOVERTARGET << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHER_CANCELLED=" << EVENT_SYSTEM_SWITCHER_CANCELLED << std::endl;
    std::cout << "EVENT_SYSTEM_SWITCHSTART=" << EVENT_SYSTEM_SWITCHSTART << std::endl;
    std::cout << "EVENT_UIA_PROPID_START=" << EVENT_UIA_PROPID_START << std::endl;
    std::cout << "EV_BREAK=" << EV_BREAK << std::endl;
    std::cout << "EV_CTS=" << EV_CTS << std::endl;
    std::cout << "EV_DSR=" << EV_DSR << std::endl;
    std::cout << "EV_ERR=" << EV_ERR << std::endl;
    std::cout << "EV_EVENT1=" << EV_EVENT1 << std::endl;
    std::cout << "EV_EVENT2=" << EV_EVENT2 << std::endl;
    std::cout << "EV_PERR=" << EV_PERR << std::endl;
    std::cout << "EV_RING=" << EV_RING << std::endl;
    std::cout << "EV_RLSD=" << EV_RLSD << std::endl;
    std::cout << "EV_RX80FULL=" << EV_RX80FULL << std::endl;
    std::cout << "EV_RXCHAR=" << EV_RXCHAR << std::endl;
    std::cout << "EV_RXFLAG=" << EV_RXFLAG << std::endl;
    std::cout << "EV_TXEMPTY=" << EV_TXEMPTY << std::endl;
    std::cout << "EWOULDBLOCK=" << EWOULDBLOCK << std::endl;
    std::cout << "EWX_ARSO=" << EWX_ARSO << std::endl;
    std::cout << "EWX_BOOTOPTIONS=" << EWX_BOOTOPTIONS << std::endl;
    std::cout << "EWX_CHECK_SAFE_FOR_SERVER=" << EWX_CHECK_SAFE_FOR_SERVER << std::endl;
    std::cout << "EWX_FORCE=" << EWX_FORCE << std::endl;
    std::cout << "EWX_FORCEIFHUNG=" << EWX_FORCEIFHUNG << std::endl;
    std::cout << "EWX_HYBRID_SHUTDOWN=" << EWX_HYBRID_SHUTDOWN << std::endl;
    std::cout << "EWX_LOGOFF=" << EWX_LOGOFF << std::endl;
    std::cout << "EWX_POWEROFF=" << EWX_POWEROFF << std::endl;
    std::cout << "EWX_QUICKRESOLVE=" << EWX_QUICKRESOLVE << std::endl;
    std::cout << "EWX_REBOOT=" << EWX_REBOOT << std::endl;
    std::cout << "EWX_RESTARTAPPS=" << EWX_RESTARTAPPS << std::endl;
    std::cout << "EWX_SHUTDOWN=" << EWX_SHUTDOWN << std::endl;
    std::cout << "EXCEPTION_ACCESS_VIOLATION=" << EXCEPTION_ACCESS_VIOLATION << std::endl;
    std::cout << "EXCEPTION_ARRAY_BOUNDS_EXCEEDED=" << EXCEPTION_ARRAY_BOUNDS_EXCEEDED << std::endl;
    std::cout << "EXCEPTION_BREAKPOINT=" << EXCEPTION_BREAKPOINT << std::endl;
    std::cout << "EXCEPTION_COLLIDED_UNWIND=" << EXCEPTION_COLLIDED_UNWIND << std::endl;
    std::cout << "EXCEPTION_CONTINUE_EXECUTION=" << EXCEPTION_CONTINUE_EXECUTION << std::endl;
    std::cout << "EXCEPTION_CONTINUE_SEARCH=" << EXCEPTION_CONTINUE_SEARCH << std::endl;
    std::cout << "EXCEPTION_DATATYPE_MISALIGNMENT=" << EXCEPTION_DATATYPE_MISALIGNMENT << std::endl;
    std::cout << "EXCEPTION_DEBUG_EVENT=" << EXCEPTION_DEBUG_EVENT << std::endl;
    std::cout << "EXCEPTION_EXECUTE_FAULT=" << EXCEPTION_EXECUTE_FAULT << std::endl;
    std::cout << "EXCEPTION_EXECUTE_HANDLER=" << EXCEPTION_EXECUTE_HANDLER << std::endl;
    std::cout << "EXCEPTION_EXIT_UNWIND=" << EXCEPTION_EXIT_UNWIND << std::endl;
    std::cout << "EXCEPTION_FLT_DENORMAL_OPERAND=" << EXCEPTION_FLT_DENORMAL_OPERAND << std::endl;
    std::cout << "EXCEPTION_FLT_DIVIDE_BY_ZERO=" << EXCEPTION_FLT_DIVIDE_BY_ZERO << std::endl;
    std::cout << "EXCEPTION_FLT_INEXACT_RESULT=" << EXCEPTION_FLT_INEXACT_RESULT << std::endl;
    std::cout << "EXCEPTION_FLT_INVALID_OPERATION=" << EXCEPTION_FLT_INVALID_OPERATION << std::endl;
    std::cout << "EXCEPTION_FLT_OVERFLOW=" << EXCEPTION_FLT_OVERFLOW << std::endl;
    std::cout << "EXCEPTION_FLT_STACK_CHECK=" << EXCEPTION_FLT_STACK_CHECK << std::endl;
    std::cout << "EXCEPTION_FLT_UNDERFLOW=" << EXCEPTION_FLT_UNDERFLOW << std::endl;
    std::cout << "EXCEPTION_GUARD_PAGE=" << EXCEPTION_GUARD_PAGE << std::endl;
    std::cout << "EXCEPTION_ILLEGAL_INSTRUCTION=" << EXCEPTION_ILLEGAL_INSTRUCTION << std::endl;
    std::cout << "EXCEPTION_INT_DIVIDE_BY_ZERO=" << EXCEPTION_INT_DIVIDE_BY_ZERO << std::endl;
    std::cout << "EXCEPTION_INT_OVERFLOW=" << EXCEPTION_INT_OVERFLOW << std::endl;
    std::cout << "EXCEPTION_INVALID_DISPOSITION=" << EXCEPTION_INVALID_DISPOSITION << std::endl;
    std::cout << "EXCEPTION_INVALID_HANDLE=" << EXCEPTION_INVALID_HANDLE << std::endl;
    std::cout << "EXCEPTION_IN_PAGE_ERROR=" << EXCEPTION_IN_PAGE_ERROR << std::endl;
    std::cout << "EXCEPTION_MAXIMUM_PARAMETERS=" << EXCEPTION_MAXIMUM_PARAMETERS << std::endl;
    std::cout << "EXCEPTION_NESTED_CALL=" << EXCEPTION_NESTED_CALL << std::endl;
    std::cout << "EXCEPTION_NONCONTINUABLE=" << EXCEPTION_NONCONTINUABLE << std::endl;
    std::cout << "EXCEPTION_NONCONTINUABLE_EXCEPTION=" << EXCEPTION_NONCONTINUABLE_EXCEPTION << std::endl;
    std::cout << "EXCEPTION_PRIV_INSTRUCTION=" << EXCEPTION_PRIV_INSTRUCTION << std::endl;
    std::cout << "EXCEPTION_READ_FAULT=" << EXCEPTION_READ_FAULT << std::endl;
    std::cout << "EXCEPTION_SINGLE_STEP=" << EXCEPTION_SINGLE_STEP << std::endl;
    std::cout << "EXCEPTION_STACK_INVALID=" << EXCEPTION_STACK_INVALID << std::endl;
    std::cout << "EXCEPTION_STACK_OVERFLOW=" << EXCEPTION_STACK_OVERFLOW << std::endl;
    std::cout << "EXCEPTION_TARGET_UNWIND=" << EXCEPTION_TARGET_UNWIND << std::endl;
    std::cout << "EXCEPTION_UNWIND=" << EXCEPTION_UNWIND << std::endl;
    std::cout << "EXCEPTION_UNWINDING=" << EXCEPTION_UNWINDING << std::endl;
    std::cout << "EXCEPTION_WRITE_FAULT=" << EXCEPTION_WRITE_FAULT << std::endl;
    std::cout << "EXECUTE_OFFLINE_DIAGS=" << EXECUTE_OFFLINE_DIAGS << std::endl;
    std::cout << "EXIT_FAILURE=" << EXIT_FAILURE << std::endl;
    std::cout << "EXIT_PROCESS_DEBUG_EVENT=" << EXIT_PROCESS_DEBUG_EVENT << std::endl;
    std::cout << "EXIT_SUCCESS=" << EXIT_SUCCESS << std::endl;
    std::cout << "EXIT_THREAD_DEBUG_EVENT=" << EXIT_THREAD_DEBUG_EVENT << std::endl;
    std::cout << "EXPENTRY=" << EXPENTRY << std::endl;
    std::cout << "EXPORT_PRIVATE_KEYS=" << EXPORT_PRIVATE_KEYS << std::endl;
    std::cout << "EXTENDED_STARTUPINFO_PRESENT=" << EXTENDED_STARTUPINFO_PRESENT << std::endl;
    std::cout << "EXTEND_IEPORT=" << EXTEND_IEPORT << std::endl;
    std::cout << "EXTTEXTOUT=" << EXTTEXTOUT << std::endl;
    std::cout << "EXT_DEVICE_CAPS=" << EXT_DEVICE_CAPS << std::endl;
    std::cout << "FACILITY_AAF=" << FACILITY_AAF << std::endl;
    std::cout << "FACILITY_ACS=" << FACILITY_ACS << std::endl;
    std::cout << "FACILITY_AUDCLNT=" << FACILITY_AUDCLNT << std::endl;
    std::cout << "FACILITY_BACKGROUNDCOPY=" << FACILITY_BACKGROUNDCOPY << std::endl;
    std::cout << "FACILITY_CERT=" << FACILITY_CERT << std::endl;
    std::cout << "FACILITY_COMPLUS=" << FACILITY_COMPLUS << std::endl;
    std::cout << "FACILITY_CONFIGURATION=" << FACILITY_CONFIGURATION << std::endl;
    std::cout << "FACILITY_CONTROL=" << FACILITY_CONTROL << std::endl;
    std::cout << "FACILITY_DIRECTORYSERVICE=" << FACILITY_DIRECTORYSERVICE << std::endl;
    std::cout << "FACILITY_DISPATCH=" << FACILITY_DISPATCH << std::endl;
    std::cout << "FACILITY_DPLAY=" << FACILITY_DPLAY << std::endl;
    std::cout << "FACILITY_HTTP=" << FACILITY_HTTP << std::endl;
    std::cout << "FACILITY_INTERNET=" << FACILITY_INTERNET << std::endl;
    std::cout << "FACILITY_ITF=" << FACILITY_ITF << std::endl;
    std::cout << "FACILITY_MEDIASERVER=" << FACILITY_MEDIASERVER << std::endl;
    std::cout << "FACILITY_METADIRECTORY=" << FACILITY_METADIRECTORY << std::endl;
    std::cout << "FACILITY_MSMQ=" << FACILITY_MSMQ << std::endl;
    std::cout << "FACILITY_NT_BIT=" << FACILITY_NT_BIT << std::endl;
    std::cout << "FACILITY_NULL=" << FACILITY_NULL << std::endl;
    std::cout << "FACILITY_RPC=" << FACILITY_RPC << std::endl;
    std::cout << "FACILITY_SCARD=" << FACILITY_SCARD << std::endl;
    std::cout << "FACILITY_SECURITY=" << FACILITY_SECURITY << std::endl;
    std::cout << "FACILITY_SETUPAPI=" << FACILITY_SETUPAPI << std::endl;
    std::cout << "FACILITY_SSPI=" << FACILITY_SSPI << std::endl;
    std::cout << "FACILITY_STATE_MANAGEMENT=" << FACILITY_STATE_MANAGEMENT << std::endl;
    std::cout << "FACILITY_STORAGE=" << FACILITY_STORAGE << std::endl;
    std::cout << "FACILITY_SXS=" << FACILITY_SXS << std::endl;
    std::cout << "FACILITY_SYSTEM=" << FACILITY_SYSTEM << std::endl;
    std::cout << "FACILITY_UMI=" << FACILITY_UMI << std::endl;
    std::cout << "FACILITY_URT=" << FACILITY_URT << std::endl;
    std::cout << "FACILITY_WIN32=" << FACILITY_WIN32 << std::endl;
    std::cout << "FACILITY_WINDOWS=" << FACILITY_WINDOWS << std::endl;
    std::cout << "FACILITY_WINDOWSUPDATE=" << FACILITY_WINDOWSUPDATE << std::endl;
    std::cout << "FACILITY_WINDOWS_CE=" << FACILITY_WINDOWS_CE << std::endl;
    std::cout << "FADF_AUTO=" << FADF_AUTO << std::endl;
    std::cout << "FADF_BSTR=" << FADF_BSTR << std::endl;
    std::cout << "FADF_DISPATCH=" << FADF_DISPATCH << std::endl;
    std::cout << "FADF_EMBEDDED=" << FADF_EMBEDDED << std::endl;
    std::cout << "FADF_FIXEDSIZE=" << FADF_FIXEDSIZE << std::endl;
    std::cout << "FADF_HAVEIID=" << FADF_HAVEIID << std::endl;
    std::cout << "FADF_HAVEVARTYPE=" << FADF_HAVEVARTYPE << std::endl;
    std::cout << "FADF_RECORD=" << FADF_RECORD << std::endl;
    std::cout << "FADF_STATIC=" << FADF_STATIC << std::endl;
    std::cout << "FADF_UNKNOWN=" << FADF_UNKNOWN << std::endl;
    std::cout << "FADF_VARIANT=" << FADF_VARIANT << std::endl;
    std::cout << "FAILED_ACCESS_ACE_FLAG=" << FAILED_ACCESS_ACE_FLAG << std::endl;
    std::cout << "FAIL_FAST_GENERATE_EXCEPTION_ADDRESS=" << FAIL_FAST_GENERATE_EXCEPTION_ADDRESS << std::endl;
    std::cout << "FAIL_FAST_NO_HARD_ERROR_DLG=" << FAIL_FAST_NO_HARD_ERROR_DLG << std::endl;
    std::cout << "FALSE=" << FALSE << std::endl;
    std::cout << "FALT=" << FALT << std::endl;
    std::cout << "FAPPCOMMAND_KEY=" << FAPPCOMMAND_KEY << std::endl;
    std::cout << "FAPPCOMMAND_MASK=" << FAPPCOMMAND_MASK << std::endl;
    std::cout << "FAPPCOMMAND_MOUSE=" << FAPPCOMMAND_MOUSE << std::endl;
    std::cout << "FAPPCOMMAND_OEM=" << FAPPCOMMAND_OEM << std::endl;
    std::cout << "FAST_FAIL_CORRUPT_LIST_ENTRY=" << FAST_FAIL_CORRUPT_LIST_ENTRY << std::endl;
    std::cout << "FAST_FAIL_FATAL_APP_EXIT=" << FAST_FAIL_FATAL_APP_EXIT << std::endl;
    std::cout << "FAST_FAIL_GS_COOKIE_INIT=" << FAST_FAIL_GS_COOKIE_INIT << std::endl;
    std::cout << "FAST_FAIL_INCORRECT_STACK=" << FAST_FAIL_INCORRECT_STACK << std::endl;
    std::cout << "FAST_FAIL_INVALID_ARG=" << FAST_FAIL_INVALID_ARG << std::endl;
    std::cout << "FAST_FAIL_LEGACY_GS_VIOLATION=" << FAST_FAIL_LEGACY_GS_VIOLATION << std::endl;
    std::cout << "FAST_FAIL_RANGE_CHECK_FAILURE=" << FAST_FAIL_RANGE_CHECK_FAILURE << std::endl;
    std::cout << "FAST_FAIL_STACK_COOKIE_CHECK_FAILURE=" << FAST_FAIL_STACK_COOKIE_CHECK_FAILURE << std::endl;
    std::cout << "FAST_FAIL_UNSAFE_REGISTRY_ACCESS=" << FAST_FAIL_UNSAFE_REGISTRY_ACCESS << std::endl;
    std::cout << "FAST_FAIL_VTGUARD_CHECK_FAILURE=" << FAST_FAIL_VTGUARD_CHECK_FAILURE << std::endl;
    std::cout << "FCONTROL=" << FCONTROL << std::endl;
    std::cout << "FD_ACCEPT=" << FD_ACCEPT << std::endl;
    std::cout << "FD_CLOSE=" << FD_CLOSE << std::endl;
    std::cout << "FD_CONNECT=" << FD_CONNECT << std::endl;
    std::cout << "FD_OOB=" << FD_OOB << std::endl;
    std::cout << "FD_READ=" << FD_READ << std::endl;
    std::cout << "FD_SETSIZE=" << FD_SETSIZE << std::endl;
    std::cout << "FD_WRITE=" << FD_WRITE << std::endl;
    std::cout << "FEATURESETTING_CUSTPAPER=" << FEATURESETTING_CUSTPAPER << std::endl;
    std::cout << "FEATURESETTING_MIRROR=" << FEATURESETTING_MIRROR << std::endl;
    std::cout << "FEATURESETTING_NEGATIVE=" << FEATURESETTING_NEGATIVE << std::endl;
    std::cout << "FEATURESETTING_NUP=" << FEATURESETTING_NUP << std::endl;
    std::cout << "FEATURESETTING_OUTPUT=" << FEATURESETTING_OUTPUT << std::endl;
    std::cout << "FEATURESETTING_PRIVATE_BEGIN=" << FEATURESETTING_PRIVATE_BEGIN << std::endl;
    std::cout << "FEATURESETTING_PRIVATE_END=" << FEATURESETTING_PRIVATE_END << std::endl;
    std::cout << "FEATURESETTING_PROTOCOL=" << FEATURESETTING_PROTOCOL << std::endl;
    std::cout << "FEATURESETTING_PSLEVEL=" << FEATURESETTING_PSLEVEL << std::endl;
    std::cout << "FE_FONTSMOOTHINGCLEARTYPE=" << FE_FONTSMOOTHINGCLEARTYPE << std::endl;
    std::cout << "FE_FONTSMOOTHINGDOCKING=" << FE_FONTSMOOTHINGDOCKING << std::endl;
    std::cout << "FE_FONTSMOOTHINGORIENTATIONBGR=" << FE_FONTSMOOTHINGORIENTATIONBGR << std::endl;
    std::cout << "FE_FONTSMOOTHINGORIENTATIONRGB=" << FE_FONTSMOOTHINGORIENTATIONRGB << std::endl;
    std::cout << "FE_FONTSMOOTHINGSTANDARD=" << FE_FONTSMOOTHINGSTANDARD << std::endl;
    std::cout << "FF_DECORATIVE=" << FF_DECORATIVE << std::endl;
    std::cout << "FF_DONTCARE=" << FF_DONTCARE << std::endl;
    std::cout << "FF_MODERN=" << FF_MODERN << std::endl;
    std::cout << "FF_ROMAN=" << FF_ROMAN << std::endl;
    std::cout << "FF_SCRIPT=" << FF_SCRIPT << std::endl;
    std::cout << "FF_SWISS=" << FF_SWISS << std::endl;
    std::cout << "FIBER_FLAG_FLOAT_SWITCH=" << FIBER_FLAG_FLOAT_SWITCH << std::endl;
    std::cout << "FIEF_FLAG_FORCE_JITUI=" << FIEF_FLAG_FORCE_JITUI << std::endl;
    std::cout << "FIEF_FLAG_PEEK=" << FIEF_FLAG_PEEK << std::endl;
    std::cout << "FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK=" << FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK << std::endl;
    std::cout << "FILEOPENORD=" << FILEOPENORD << std::endl;
    std::cout << "FILESYSTEM_STATISTICS_TYPE_FAT=" << FILESYSTEM_STATISTICS_TYPE_FAT << std::endl;
    std::cout << "FILESYSTEM_STATISTICS_TYPE_NTFS=" << FILESYSTEM_STATISTICS_TYPE_NTFS << std::endl;
    std::cout << "FILE_ACTION_ADDED=" << FILE_ACTION_ADDED << std::endl;
    std::cout << "FILE_ACTION_MODIFIED=" << FILE_ACTION_MODIFIED << std::endl;
    std::cout << "FILE_ACTION_REMOVED=" << FILE_ACTION_REMOVED << std::endl;
    std::cout << "FILE_ACTION_RENAMED_NEW_NAME=" << FILE_ACTION_RENAMED_NEW_NAME << std::endl;
    std::cout << "FILE_ACTION_RENAMED_OLD_NAME=" << FILE_ACTION_RENAMED_OLD_NAME << std::endl;
    std::cout << "FILE_ADD_FILE=" << FILE_ADD_FILE << std::endl;
    std::cout << "FILE_ADD_SUBDIRECTORY=" << FILE_ADD_SUBDIRECTORY << std::endl;
    std::cout << "FILE_ALL_ACCESS=" << FILE_ALL_ACCESS << std::endl;
    std::cout << "FILE_ANY_ACCESS=" << FILE_ANY_ACCESS << std::endl;
    std::cout << "FILE_APPEND_DATA=" << FILE_APPEND_DATA << std::endl;
    std::cout << "FILE_ATTRIBUTE_ARCHIVE=" << FILE_ATTRIBUTE_ARCHIVE << std::endl;
    std::cout << "FILE_ATTRIBUTE_COMPRESSED=" << FILE_ATTRIBUTE_COMPRESSED << std::endl;
    std::cout << "FILE_ATTRIBUTE_DEVICE=" << FILE_ATTRIBUTE_DEVICE << std::endl;
    std::cout << "FILE_ATTRIBUTE_DIRECTORY=" << FILE_ATTRIBUTE_DIRECTORY << std::endl;
    std::cout << "FILE_ATTRIBUTE_ENCRYPTED=" << FILE_ATTRIBUTE_ENCRYPTED << std::endl;
    std::cout << "FILE_ATTRIBUTE_HIDDEN=" << FILE_ATTRIBUTE_HIDDEN << std::endl;
    std::cout << "FILE_ATTRIBUTE_NORMAL=" << FILE_ATTRIBUTE_NORMAL << std::endl;
    std::cout << "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED=" << FILE_ATTRIBUTE_NOT_CONTENT_INDEXED << std::endl;
    std::cout << "FILE_ATTRIBUTE_OFFLINE=" << FILE_ATTRIBUTE_OFFLINE << std::endl;
    std::cout << "FILE_ATTRIBUTE_READONLY=" << FILE_ATTRIBUTE_READONLY << std::endl;
    std::cout << "FILE_ATTRIBUTE_REPARSE_POINT=" << FILE_ATTRIBUTE_REPARSE_POINT << std::endl;
    std::cout << "FILE_ATTRIBUTE_SPARSE_FILE=" << FILE_ATTRIBUTE_SPARSE_FILE << std::endl;
    std::cout << "FILE_ATTRIBUTE_SYSTEM=" << FILE_ATTRIBUTE_SYSTEM << std::endl;
    std::cout << "FILE_ATTRIBUTE_TEMPORARY=" << FILE_ATTRIBUTE_TEMPORARY << std::endl;
    std::cout << "FILE_ATTRIBUTE_VIRTUAL=" << FILE_ATTRIBUTE_VIRTUAL << std::endl;
    std::cout << "FILE_BEGIN=" << FILE_BEGIN << std::endl;
    std::cout << "FILE_CACHE_MAX_HARD_DISABLE=" << FILE_CACHE_MAX_HARD_DISABLE << std::endl;
    std::cout << "FILE_CACHE_MAX_HARD_ENABLE=" << FILE_CACHE_MAX_HARD_ENABLE << std::endl;
    std::cout << "FILE_CACHE_MIN_HARD_DISABLE=" << FILE_CACHE_MIN_HARD_DISABLE << std::endl;
    std::cout << "FILE_CACHE_MIN_HARD_ENABLE=" << FILE_CACHE_MIN_HARD_ENABLE << std::endl;
    std::cout << "FILE_CASE_PRESERVED_NAMES=" << FILE_CASE_PRESERVED_NAMES << std::endl;
    std::cout << "FILE_CASE_SENSITIVE_SEARCH=" << FILE_CASE_SENSITIVE_SEARCH << std::endl;
    std::cout << "FILE_CLEAR_ENCRYPTION=" << FILE_CLEAR_ENCRYPTION << std::endl;
    std::cout << "FILE_COMPLETE_IF_OPLOCKED=" << FILE_COMPLETE_IF_OPLOCKED << std::endl;
    std::cout << "FILE_CREATE=" << FILE_CREATE << std::endl;
    std::cout << "FILE_CREATE_PIPE_INSTANCE=" << FILE_CREATE_PIPE_INSTANCE << std::endl;
    std::cout << "FILE_CREATE_TREE_CONNECTION=" << FILE_CREATE_TREE_CONNECTION << std::endl;
    std::cout << "FILE_CURRENT=" << FILE_CURRENT << std::endl;
    std::cout << "FILE_DELETE_CHILD=" << FILE_DELETE_CHILD << std::endl;
    std::cout << "FILE_DELETE_ON_CLOSE=" << FILE_DELETE_ON_CLOSE << std::endl;
    std::cout << "FILE_DEVICE_8042_PORT=" << FILE_DEVICE_8042_PORT << std::endl;
    std::cout << "FILE_DEVICE_ACPI=" << FILE_DEVICE_ACPI << std::endl;
    std::cout << "FILE_DEVICE_BATTERY=" << FILE_DEVICE_BATTERY << std::endl;
    std::cout << "FILE_DEVICE_BEEP=" << FILE_DEVICE_BEEP << std::endl;
    std::cout << "FILE_DEVICE_BIOMETRIC=" << FILE_DEVICE_BIOMETRIC << std::endl;
    std::cout << "FILE_DEVICE_BLUETOOTH=" << FILE_DEVICE_BLUETOOTH << std::endl;
    std::cout << "FILE_DEVICE_CD_ROM=" << FILE_DEVICE_CD_ROM << std::endl;
    std::cout << "FILE_DEVICE_CD_ROM_FILE_SYSTEM=" << FILE_DEVICE_CD_ROM_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_CHANGER=" << FILE_DEVICE_CHANGER << std::endl;
    std::cout << "FILE_DEVICE_CONSOLE=" << FILE_DEVICE_CONSOLE << std::endl;
    std::cout << "FILE_DEVICE_CONTROLLER=" << FILE_DEVICE_CONTROLLER << std::endl;
    std::cout << "FILE_DEVICE_CRYPT_PROVIDER=" << FILE_DEVICE_CRYPT_PROVIDER << std::endl;
    std::cout << "FILE_DEVICE_DATALINK=" << FILE_DEVICE_DATALINK << std::endl;
    std::cout << "FILE_DEVICE_DEVAPI=" << FILE_DEVICE_DEVAPI << std::endl;
    std::cout << "FILE_DEVICE_DFS=" << FILE_DEVICE_DFS << std::endl;
    std::cout << "FILE_DEVICE_DFS_FILE_SYSTEM=" << FILE_DEVICE_DFS_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_DFS_VOLUME=" << FILE_DEVICE_DFS_VOLUME << std::endl;
    std::cout << "FILE_DEVICE_DISK=" << FILE_DEVICE_DISK << std::endl;
    std::cout << "FILE_DEVICE_DISK_FILE_SYSTEM=" << FILE_DEVICE_DISK_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_DVD=" << FILE_DEVICE_DVD << std::endl;
    std::cout << "FILE_DEVICE_EHSTOR=" << FILE_DEVICE_EHSTOR << std::endl;
    std::cout << "FILE_DEVICE_FILE_SYSTEM=" << FILE_DEVICE_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_FIPS=" << FILE_DEVICE_FIPS << std::endl;
    std::cout << "FILE_DEVICE_FULLSCREEN_VIDEO=" << FILE_DEVICE_FULLSCREEN_VIDEO << std::endl;
    std::cout << "FILE_DEVICE_GPIO=" << FILE_DEVICE_GPIO << std::endl;
    std::cout << "FILE_DEVICE_INFINIBAND=" << FILE_DEVICE_INFINIBAND << std::endl;
    std::cout << "FILE_DEVICE_KSEC=" << FILE_DEVICE_KSEC << std::endl;
    std::cout << "FILE_DEVICE_MT_COMPOSITE=" << FILE_DEVICE_MT_COMPOSITE << std::endl;
    std::cout << "FILE_DEVICE_MT_TRANSPORT=" << FILE_DEVICE_MT_TRANSPORT << std::endl;
    std::cout << "FILE_DEVICE_MULTI_UNC_PROVIDER=" << FILE_DEVICE_MULTI_UNC_PROVIDER << std::endl;
    std::cout << "FILE_DEVICE_NAMED_PIPE=" << FILE_DEVICE_NAMED_PIPE << std::endl;
    std::cout << "FILE_DEVICE_NETWORK=" << FILE_DEVICE_NETWORK << std::endl;
    std::cout << "FILE_DEVICE_NETWORK_BROWSER=" << FILE_DEVICE_NETWORK_BROWSER << std::endl;
    std::cout << "FILE_DEVICE_NETWORK_FILE_SYSTEM=" << FILE_DEVICE_NETWORK_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_NETWORK_REDIRECTOR=" << FILE_DEVICE_NETWORK_REDIRECTOR << std::endl;
    std::cout << "FILE_DEVICE_NFP=" << FILE_DEVICE_NFP << std::endl;
    std::cout << "FILE_DEVICE_NULL=" << FILE_DEVICE_NULL << std::endl;
    std::cout << "FILE_DEVICE_PARALLEL_PORT=" << FILE_DEVICE_PARALLEL_PORT << std::endl;
    std::cout << "FILE_DEVICE_PERSISTENT_MEMORY=" << FILE_DEVICE_PERSISTENT_MEMORY << std::endl;
    std::cout << "FILE_DEVICE_PHYSICAL_NETCARD=" << FILE_DEVICE_PHYSICAL_NETCARD << std::endl;
    std::cout << "FILE_DEVICE_PMI=" << FILE_DEVICE_PMI << std::endl;
    std::cout << "FILE_DEVICE_POINT_OF_SERVICE=" << FILE_DEVICE_POINT_OF_SERVICE << std::endl;
    std::cout << "FILE_DEVICE_PRINTER=" << FILE_DEVICE_PRINTER << std::endl;
    std::cout << "FILE_DEVICE_SCANNER=" << FILE_DEVICE_SCANNER << std::endl;
    std::cout << "FILE_DEVICE_SERENUM=" << FILE_DEVICE_SERENUM << std::endl;
    std::cout << "FILE_DEVICE_SMARTCARD=" << FILE_DEVICE_SMARTCARD << std::endl;
    std::cout << "FILE_DEVICE_STORAGE_REPLICATION=" << FILE_DEVICE_STORAGE_REPLICATION << std::endl;
    std::cout << "FILE_DEVICE_SYSENV=" << FILE_DEVICE_SYSENV << std::endl;
    std::cout << "FILE_DEVICE_TAPE_FILE_SYSTEM=" << FILE_DEVICE_TAPE_FILE_SYSTEM << std::endl;
    std::cout << "FILE_DEVICE_TERMSRV=" << FILE_DEVICE_TERMSRV << std::endl;
    std::cout << "FILE_DEVICE_TRANSPORT=" << FILE_DEVICE_TRANSPORT << std::endl;
    std::cout << "FILE_DEVICE_TRUST_ENV=" << FILE_DEVICE_TRUST_ENV << std::endl;
    std::cout << "FILE_DEVICE_UCM=" << FILE_DEVICE_UCM << std::endl;
    std::cout << "FILE_DEVICE_UCMTCPCI=" << FILE_DEVICE_UCMTCPCI << std::endl;
    std::cout << "FILE_DEVICE_UNKNOWN=" << FILE_DEVICE_UNKNOWN << std::endl;
    std::cout << "FILE_DEVICE_USBEX=" << FILE_DEVICE_USBEX << std::endl;
    std::cout << "FILE_DEVICE_VIDEO=" << FILE_DEVICE_VIDEO << std::endl;
    std::cout << "FILE_DEVICE_VIRTUAL_BLOCK=" << FILE_DEVICE_VIRTUAL_BLOCK << std::endl;
    std::cout << "FILE_DEVICE_VIRTUAL_DISK=" << FILE_DEVICE_VIRTUAL_DISK << std::endl;
    std::cout << "FILE_DEVICE_VMBUS=" << FILE_DEVICE_VMBUS << std::endl;
    std::cout << "FILE_DEVICE_WAVE_IN=" << FILE_DEVICE_WAVE_IN << std::endl;
    std::cout << "FILE_DEVICE_WAVE_OUT=" << FILE_DEVICE_WAVE_OUT << std::endl;
    std::cout << "FILE_DEVICE_WPD=" << FILE_DEVICE_WPD << std::endl;
    std::cout << "FILE_DIRECTORY_FILE=" << FILE_DIRECTORY_FILE << std::endl;
    std::cout << "FILE_DIR_DISALLOWED=" << FILE_DIR_DISALLOWED << std::endl;
    std::cout << "FILE_DISALLOW_EXCLUSIVE=" << FILE_DISALLOW_EXCLUSIVE << std::endl;
    std::cout << "FILE_ENCRYPTABLE=" << FILE_ENCRYPTABLE << std::endl;
    std::cout << "FILE_END=" << FILE_END << std::endl;
    std::cout << "FILE_EXECUTE=" << FILE_EXECUTE << std::endl;
    std::cout << "FILE_FILE_COMPRESSION=" << FILE_FILE_COMPRESSION << std::endl;
    std::cout << "FILE_FLAG_BACKUP_SEMANTICS=" << FILE_FLAG_BACKUP_SEMANTICS << std::endl;
    std::cout << "FILE_FLAG_DELETE_ON_CLOSE=" << FILE_FLAG_DELETE_ON_CLOSE << std::endl;
    std::cout << "FILE_FLAG_FIRST_PIPE_INSTANCE=" << FILE_FLAG_FIRST_PIPE_INSTANCE << std::endl;
    std::cout << "FILE_FLAG_NO_BUFFERING=" << FILE_FLAG_NO_BUFFERING << std::endl;
    std::cout << "FILE_FLAG_OPEN_NO_RECALL=" << FILE_FLAG_OPEN_NO_RECALL << std::endl;
    std::cout << "FILE_FLAG_OPEN_REPARSE_POINT=" << FILE_FLAG_OPEN_REPARSE_POINT << std::endl;
    std::cout << "FILE_FLAG_OPEN_REQUIRING_OPLOCK=" << FILE_FLAG_OPEN_REQUIRING_OPLOCK << std::endl;
    std::cout << "FILE_FLAG_OVERLAPPED=" << FILE_FLAG_OVERLAPPED << std::endl;
    std::cout << "FILE_FLAG_POSIX_SEMANTICS=" << FILE_FLAG_POSIX_SEMANTICS << std::endl;
    std::cout << "FILE_FLAG_RANDOM_ACCESS=" << FILE_FLAG_RANDOM_ACCESS << std::endl;
    std::cout << "FILE_FLAG_SEQUENTIAL_SCAN=" << FILE_FLAG_SEQUENTIAL_SCAN << std::endl;
    std::cout << "FILE_FLAG_SESSION_AWARE=" << FILE_FLAG_SESSION_AWARE << std::endl;
    std::cout << "FILE_FLAG_WRITE_THROUGH=" << FILE_FLAG_WRITE_THROUGH << std::endl;
    std::cout << "FILE_GENERIC_EXECUTE=" << FILE_GENERIC_EXECUTE << std::endl;
    std::cout << "FILE_GENERIC_READ=" << FILE_GENERIC_READ << std::endl;
    std::cout << "FILE_GENERIC_WRITE=" << FILE_GENERIC_WRITE << std::endl;
    std::cout << "FILE_IS_ENCRYPTED=" << FILE_IS_ENCRYPTED << std::endl;
    std::cout << "FILE_LIST_DIRECTORY=" << FILE_LIST_DIRECTORY << std::endl;
    std::cout << "FILE_MAP_ALL_ACCESS=" << FILE_MAP_ALL_ACCESS << std::endl;
    std::cout << "FILE_MAP_COPY=" << FILE_MAP_COPY << std::endl;
    std::cout << "FILE_MAP_EXECUTE=" << FILE_MAP_EXECUTE << std::endl;
    std::cout << "FILE_MAP_LARGE_PAGES=" << FILE_MAP_LARGE_PAGES << std::endl;
    std::cout << "FILE_MAP_READ=" << FILE_MAP_READ << std::endl;
    std::cout << "FILE_MAP_RESERVE=" << FILE_MAP_RESERVE << std::endl;
    std::cout << "FILE_MAP_TARGETS_INVALID=" << FILE_MAP_TARGETS_INVALID << std::endl;
    std::cout << "FILE_MAP_WRITE=" << FILE_MAP_WRITE << std::endl;
    std::cout << "FILE_MAXIMUM_DISPOSITION=" << FILE_MAXIMUM_DISPOSITION << std::endl;
    std::cout << "FILE_NAMED_STREAMS=" << FILE_NAMED_STREAMS << std::endl;
    std::cout << "FILE_NAME_NORMALIZED=" << FILE_NAME_NORMALIZED << std::endl;
    std::cout << "FILE_NAME_OPENED=" << FILE_NAME_OPENED << std::endl;
    std::cout << "FILE_NON_DIRECTORY_FILE=" << FILE_NON_DIRECTORY_FILE << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_ATTRIBUTES=" << FILE_NOTIFY_CHANGE_ATTRIBUTES << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_CREATION=" << FILE_NOTIFY_CHANGE_CREATION << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_DIR_NAME=" << FILE_NOTIFY_CHANGE_DIR_NAME << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_FILE_NAME=" << FILE_NOTIFY_CHANGE_FILE_NAME << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_LAST_ACCESS=" << FILE_NOTIFY_CHANGE_LAST_ACCESS << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_LAST_WRITE=" << FILE_NOTIFY_CHANGE_LAST_WRITE << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_SECURITY=" << FILE_NOTIFY_CHANGE_SECURITY << std::endl;
    std::cout << "FILE_NOTIFY_CHANGE_SIZE=" << FILE_NOTIFY_CHANGE_SIZE << std::endl;
    std::cout << "FILE_NO_COMPRESSION=" << FILE_NO_COMPRESSION << std::endl;
    std::cout << "FILE_NO_EA_KNOWLEDGE=" << FILE_NO_EA_KNOWLEDGE << std::endl;
    std::cout << "FILE_NO_INTERMEDIATE_BUFFERING=" << FILE_NO_INTERMEDIATE_BUFFERING << std::endl;
    std::cout << "FILE_OPEN=" << FILE_OPEN << std::endl;
    std::cout << "FILE_OPEN_BY_FILE_ID=" << FILE_OPEN_BY_FILE_ID << std::endl;
    std::cout << "FILE_OPEN_FOR_BACKUP_INTENT=" << FILE_OPEN_FOR_BACKUP_INTENT << std::endl;
    std::cout << "FILE_OPEN_FOR_FREE_SPACE_QUERY=" << FILE_OPEN_FOR_FREE_SPACE_QUERY << std::endl;
    std::cout << "FILE_OPEN_IF=" << FILE_OPEN_IF << std::endl;
    std::cout << "FILE_OPEN_NO_RECALL=" << FILE_OPEN_NO_RECALL << std::endl;
    std::cout << "FILE_OPEN_REMOTE_INSTANCE=" << FILE_OPEN_REMOTE_INSTANCE << std::endl;
    std::cout << "FILE_OPEN_REPARSE_POINT=" << FILE_OPEN_REPARSE_POINT << std::endl;
    std::cout << "FILE_OPEN_REQUIRING_OPLOCK=" << FILE_OPEN_REQUIRING_OPLOCK << std::endl;
    std::cout << "FILE_OVERWRITE=" << FILE_OVERWRITE << std::endl;
    std::cout << "FILE_OVERWRITE_IF=" << FILE_OVERWRITE_IF << std::endl;
    std::cout << "FILE_PERSISTENT_ACLS=" << FILE_PERSISTENT_ACLS << std::endl;
    std::cout << "FILE_PREFETCH_TYPE_FOR_CREATE=" << FILE_PREFETCH_TYPE_FOR_CREATE << std::endl;
    std::cout << "FILE_RANDOM_ACCESS=" << FILE_RANDOM_ACCESS << std::endl;
    std::cout << "FILE_READ_ACCESS=" << FILE_READ_ACCESS << std::endl;
    std::cout << "FILE_READ_ATTRIBUTES=" << FILE_READ_ATTRIBUTES << std::endl;
    std::cout << "FILE_READ_DATA=" << FILE_READ_DATA << std::endl;
    std::cout << "FILE_READ_EA=" << FILE_READ_EA << std::endl;
    std::cout << "FILE_READ_ONLY=" << FILE_READ_ONLY << std::endl;
    std::cout << "FILE_READ_ONLY_VOLUME=" << FILE_READ_ONLY_VOLUME << std::endl;
    std::cout << "FILE_RESERVE_OPFILTER=" << FILE_RESERVE_OPFILTER << std::endl;
    std::cout << "FILE_ROOT_DIR=" << FILE_ROOT_DIR << std::endl;
    std::cout << "FILE_SEQUENTIAL_ONLY=" << FILE_SEQUENTIAL_ONLY << std::endl;
    std::cout << "FILE_SEQUENTIAL_WRITE_ONCE=" << FILE_SEQUENTIAL_WRITE_ONCE << std::endl;
    std::cout << "FILE_SET_ENCRYPTION=" << FILE_SET_ENCRYPTION << std::endl;
    std::cout << "FILE_SHARE_DELETE=" << FILE_SHARE_DELETE << std::endl;
    std::cout << "FILE_SHARE_READ=" << FILE_SHARE_READ << std::endl;
    std::cout << "FILE_SHARE_VALID_FLAGS=" << FILE_SHARE_VALID_FLAGS << std::endl;
    std::cout << "FILE_SHARE_WRITE=" << FILE_SHARE_WRITE << std::endl;
    std::cout << "FILE_SKIP_COMPLETION_PORT_ON_SUCCESS=" << FILE_SKIP_COMPLETION_PORT_ON_SUCCESS << std::endl;
    std::cout << "FILE_SKIP_SET_EVENT_ON_HANDLE=" << FILE_SKIP_SET_EVENT_ON_HANDLE << std::endl;
    std::cout << "FILE_SPECIAL_ACCESS=" << FILE_SPECIAL_ACCESS << std::endl;
    std::cout << "FILE_SUPERSEDE=" << FILE_SUPERSEDE << std::endl;
    std::cout << "FILE_SUPPORTS_ENCRYPTION=" << FILE_SUPPORTS_ENCRYPTION << std::endl;
    std::cout << "FILE_SUPPORTS_EXTENDED_ATTRIBUTES=" << FILE_SUPPORTS_EXTENDED_ATTRIBUTES << std::endl;
    std::cout << "FILE_SUPPORTS_HARD_LINKS=" << FILE_SUPPORTS_HARD_LINKS << std::endl;
    std::cout << "FILE_SUPPORTS_INTEGRITY_STREAMS=" << FILE_SUPPORTS_INTEGRITY_STREAMS << std::endl;
    std::cout << "FILE_SUPPORTS_OBJECT_IDS=" << FILE_SUPPORTS_OBJECT_IDS << std::endl;
    std::cout << "FILE_SUPPORTS_OPEN_BY_FILE_ID=" << FILE_SUPPORTS_OPEN_BY_FILE_ID << std::endl;
    std::cout << "FILE_SUPPORTS_REMOTE_STORAGE=" << FILE_SUPPORTS_REMOTE_STORAGE << std::endl;
    std::cout << "FILE_SUPPORTS_REPARSE_POINTS=" << FILE_SUPPORTS_REPARSE_POINTS << std::endl;
    std::cout << "FILE_SUPPORTS_SPARSE_FILES=" << FILE_SUPPORTS_SPARSE_FILES << std::endl;
    std::cout << "FILE_SUPPORTS_TRANSACTIONS=" << FILE_SUPPORTS_TRANSACTIONS << std::endl;
    std::cout << "FILE_SUPPORTS_USN_JOURNAL=" << FILE_SUPPORTS_USN_JOURNAL << std::endl;
    std::cout << "FILE_SYNCHRONOUS_IO_ALERT=" << FILE_SYNCHRONOUS_IO_ALERT << std::endl;
    std::cout << "FILE_SYNCHRONOUS_IO_NONALERT=" << FILE_SYNCHRONOUS_IO_NONALERT << std::endl;
    std::cout << "FILE_SYSTEM_ATTR=" << FILE_SYSTEM_ATTR << std::endl;
    std::cout << "FILE_SYSTEM_DIR=" << FILE_SYSTEM_DIR << std::endl;
    std::cout << "FILE_SYSTEM_NOT_SUPPORT=" << FILE_SYSTEM_NOT_SUPPORT << std::endl;
    std::cout << "FILE_TRAVERSE=" << FILE_TRAVERSE << std::endl;
    std::cout << "FILE_TYPE_CHAR=" << FILE_TYPE_CHAR << std::endl;
    std::cout << "FILE_TYPE_DISK=" << FILE_TYPE_DISK << std::endl;
    std::cout << "FILE_TYPE_PIPE=" << FILE_TYPE_PIPE << std::endl;
    std::cout << "FILE_TYPE_REMOTE=" << FILE_TYPE_REMOTE << std::endl;
    std::cout << "FILE_TYPE_UNKNOWN=" << FILE_TYPE_UNKNOWN << std::endl;
    std::cout << "FILE_UNICODE_ON_DISK=" << FILE_UNICODE_ON_DISK << std::endl;
    std::cout << "FILE_UNKNOWN=" << FILE_UNKNOWN << std::endl;
    std::cout << "FILE_USER_DISALLOWED=" << FILE_USER_DISALLOWED << std::endl;
    std::cout << "FILE_VER_GET_LOCALISED=" << FILE_VER_GET_LOCALISED << std::endl;
    std::cout << "FILE_VER_GET_NEUTRAL=" << FILE_VER_GET_NEUTRAL << std::endl;
    std::cout << "FILE_VER_GET_PREFETCHED=" << FILE_VER_GET_PREFETCHED << std::endl;
    std::cout << "FILE_VOLUME_IS_COMPRESSED=" << FILE_VOLUME_IS_COMPRESSED << std::endl;
    std::cout << "FILE_VOLUME_QUOTAS=" << FILE_VOLUME_QUOTAS << std::endl;
    std::cout << "FILE_WRITE_ACCESS=" << FILE_WRITE_ACCESS << std::endl;
    std::cout << "FILE_WRITE_ATTRIBUTES=" << FILE_WRITE_ATTRIBUTES << std::endl;
    std::cout << "FILE_WRITE_DATA=" << FILE_WRITE_DATA << std::endl;
    std::cout << "FILE_WRITE_EA=" << FILE_WRITE_EA << std::endl;
    std::cout << "FILE_WRITE_THROUGH=" << FILE_WRITE_THROUGH << std::endl;
    std::cout << "FINDDLGORD=" << FINDDLGORD << std::endl;
    std::cout << "FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA=" << FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA << std::endl;
    std::cout << "FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS=" << FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS << std::endl;
    std::cout << "FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX=" << FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX << std::endl;
    std::cout << "FIND_ENDSWITH=" << FIND_ENDSWITH << std::endl;
    std::cout << "FIND_FIRST_EX_CASE_SENSITIVE=" << FIND_FIRST_EX_CASE_SENSITIVE << std::endl;
    std::cout << "FIND_FIRST_EX_LARGE_FETCH=" << FIND_FIRST_EX_LARGE_FETCH << std::endl;
    std::cout << "FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY=" << FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY << std::endl;
    std::cout << "FIND_FROMEND=" << FIND_FROMEND << std::endl;
    std::cout << "FIND_FROMSTART=" << FIND_FROMSTART << std::endl;
    std::cout << "FIND_RESOURCE_DIRECTORY_LANGUAGES=" << FIND_RESOURCE_DIRECTORY_LANGUAGES << std::endl;
    std::cout << "FIND_RESOURCE_DIRECTORY_NAMES=" << FIND_RESOURCE_DIRECTORY_NAMES << std::endl;
    std::cout << "FIND_RESOURCE_DIRECTORY_TYPES=" << FIND_RESOURCE_DIRECTORY_TYPES << std::endl;
    std::cout << "FIND_STARTSWITH=" << FIND_STARTSWITH << std::endl;
    std::cout << "FIXED_PITCH=" << FIXED_PITCH << std::endl;
    std::cout << "FKF_AVAILABLE=" << FKF_AVAILABLE << std::endl;
    std::cout << "FKF_CLICKON=" << FKF_CLICKON << std::endl;
    std::cout << "FKF_CONFIRMHOTKEY=" << FKF_CONFIRMHOTKEY << std::endl;
    std::cout << "FKF_FILTERKEYSON=" << FKF_FILTERKEYSON << std::endl;
    std::cout << "FKF_HOTKEYACTIVE=" << FKF_HOTKEYACTIVE << std::endl;
    std::cout << "FKF_HOTKEYSOUND=" << FKF_HOTKEYSOUND << std::endl;
    std::cout << "FKF_INDICATOR=" << FKF_INDICATOR << std::endl;
    std::cout << "FLASHW_ALL=" << FLASHW_ALL << std::endl;
    std::cout << "FLASHW_CAPTION=" << FLASHW_CAPTION << std::endl;
    std::cout << "FLASHW_STOP=" << FLASHW_STOP << std::endl;
    std::cout << "FLASHW_TIMER=" << FLASHW_TIMER << std::endl;
    std::cout << "FLASHW_TRAY=" << FLASHW_TRAY << std::endl;
    std::cout << "FLI_MASK=" << FLI_MASK << std::endl;
    std::cout << "FLOODFILLBORDER=" << FLOODFILLBORDER << std::endl;
    std::cout << "FLOODFILLSURFACE=" << FLOODFILLSURFACE << std::endl;
    std::cout << "FLS_MAXIMUM_AVAILABLE=" << FLS_MAXIMUM_AVAILABLE << std::endl;
    std::cout << "FLUSHOUTPUT=" << FLUSHOUTPUT << std::endl;
    std::cout << "FMFD_DEFAULT=" << FMFD_DEFAULT << std::endl;
    std::cout << "FMFD_ENABLEMIMESNIFFING=" << FMFD_ENABLEMIMESNIFFING << std::endl;
    std::cout << "FMFD_IGNOREMIMETEXTPLAIN=" << FMFD_IGNOREMIMETEXTPLAIN << std::endl;
    std::cout << "FMFD_RESPECTTEXTPLAIN=" << FMFD_RESPECTTEXTPLAIN << std::endl;
    std::cout << "FMFD_RETURNUPDATEDIMGMIMES=" << FMFD_RETURNUPDATEDIMGMIMES << std::endl;
    std::cout << "FMFD_SERVERMIME=" << FMFD_SERVERMIME << std::endl;
    std::cout << "FMFD_URLASFILENAME=" << FMFD_URLASFILENAME << std::endl;
    std::cout << "FNERR_BUFFERTOOSMALL=" << FNERR_BUFFERTOOSMALL << std::endl;
    std::cout << "FNERR_FILENAMECODES=" << FNERR_FILENAMECODES << std::endl;
    std::cout << "FNERR_INVALIDFILENAME=" << FNERR_INVALIDFILENAME << std::endl;
    std::cout << "FNERR_SUBCLASSFAILURE=" << FNERR_SUBCLASSFAILURE << std::endl;
    std::cout << "FNOINVERT=" << FNOINVERT << std::endl;
    std::cout << "FOCUS_EVENT=" << FOCUS_EVENT << std::endl;
    std::cout << "FOF_ALLOWUNDO=" << FOF_ALLOWUNDO << std::endl;
    std::cout << "FOF_CONFIRMMOUSE=" << FOF_CONFIRMMOUSE << std::endl;
    std::cout << "FOF_FILESONLY=" << FOF_FILESONLY << std::endl;
    std::cout << "FOF_MULTIDESTFILES=" << FOF_MULTIDESTFILES << std::endl;
    std::cout << "FOF_NOCONFIRMATION=" << FOF_NOCONFIRMATION << std::endl;
    std::cout << "FOF_NOCONFIRMMKDIR=" << FOF_NOCONFIRMMKDIR << std::endl;
    std::cout << "FOF_NOCOPYSECURITYATTRIBS=" << FOF_NOCOPYSECURITYATTRIBS << std::endl;
    std::cout << "FOF_NOERRORUI=" << FOF_NOERRORUI << std::endl;
    std::cout << "FOF_NORECURSEREPARSE=" << FOF_NORECURSEREPARSE << std::endl;
    std::cout << "FOF_NORECURSION=" << FOF_NORECURSION << std::endl;
    std::cout << "FOF_NO_CONNECTED_ELEMENTS=" << FOF_NO_CONNECTED_ELEMENTS << std::endl;
    std::cout << "FOF_NO_UI=" << FOF_NO_UI << std::endl;
    std::cout << "FOF_RENAMEONCOLLISION=" << FOF_RENAMEONCOLLISION << std::endl;
    std::cout << "FOF_SILENT=" << FOF_SILENT << std::endl;
    std::cout << "FOF_SIMPLEPROGRESS=" << FOF_SIMPLEPROGRESS << std::endl;
    std::cout << "FOF_WANTMAPPINGHANDLE=" << FOF_WANTMAPPINGHANDLE << std::endl;
    std::cout << "FOF_WANTNUKEWARNING=" << FOF_WANTNUKEWARNING << std::endl;
    std::cout << "FONTDLGORD=" << FONTDLGORD << std::endl;
    std::cout << "FONTMAPPER_MAX=" << FONTMAPPER_MAX << std::endl;
    std::cout << "FOREGROUND_BLUE=" << FOREGROUND_BLUE << std::endl;
    std::cout << "FOREGROUND_GREEN=" << FOREGROUND_GREEN << std::endl;
    std::cout << "FOREGROUND_INTENSITY=" << FOREGROUND_INTENSITY << std::endl;
    std::cout << "FOREGROUND_RED=" << FOREGROUND_RED << std::endl;
    std::cout << "FORMATDLGORD30=" << FORMATDLGORD30 << std::endl;
    std::cout << "FORMATDLGORD31=" << FORMATDLGORD31 << std::endl;
    std::cout << "FORMAT_MESSAGE_ALLOCATE_BUFFER=" << FORMAT_MESSAGE_ALLOCATE_BUFFER << std::endl;
    std::cout << "FORMAT_MESSAGE_ARGUMENT_ARRAY=" << FORMAT_MESSAGE_ARGUMENT_ARRAY << std::endl;
    std::cout << "FORMAT_MESSAGE_FROM_HMODULE=" << FORMAT_MESSAGE_FROM_HMODULE << std::endl;
    std::cout << "FORMAT_MESSAGE_FROM_STRING=" << FORMAT_MESSAGE_FROM_STRING << std::endl;
    std::cout << "FORMAT_MESSAGE_FROM_SYSTEM=" << FORMAT_MESSAGE_FROM_SYSTEM << std::endl;
    std::cout << "FORMAT_MESSAGE_IGNORE_INSERTS=" << FORMAT_MESSAGE_IGNORE_INSERTS << std::endl;
    std::cout << "FORM_BUILTIN=" << FORM_BUILTIN << std::endl;
    std::cout << "FORM_PRINTER=" << FORM_PRINTER << std::endl;
    std::cout << "FORM_USER=" << FORM_USER << std::endl;
    std::cout << "FO_COPY=" << FO_COPY << std::endl;
    std::cout << "FO_DELETE=" << FO_DELETE << std::endl;
    std::cout << "FO_MOVE=" << FO_MOVE << std::endl;
    std::cout << "FO_RENAME=" << FO_RENAME << std::endl;
    std::cout << "FRAME_FPO=" << FRAME_FPO << std::endl;
    std::cout << "FRAME_NONFPO=" << FRAME_NONFPO << std::endl;
    std::cout << "FRAME_TRAP=" << FRAME_TRAP << std::endl;
    std::cout << "FRAME_TSS=" << FRAME_TSS << std::endl;
    std::cout << "FRERR_BUFFERLENGTHZERO=" << FRERR_BUFFERLENGTHZERO << std::endl;
    std::cout << "FRERR_FINDREPLACECODES=" << FRERR_FINDREPLACECODES << std::endl;
    std::cout << "FROM_LEFT_1ST_BUTTON_PRESSED=" << FROM_LEFT_1ST_BUTTON_PRESSED << std::endl;
    std::cout << "FROM_LEFT_2ND_BUTTON_PRESSED=" << FROM_LEFT_2ND_BUTTON_PRESSED << std::endl;
    std::cout << "FROM_LEFT_3RD_BUTTON_PRESSED=" << FROM_LEFT_3RD_BUTTON_PRESSED << std::endl;
    std::cout << "FROM_LEFT_4TH_BUTTON_PRESSED=" << FROM_LEFT_4TH_BUTTON_PRESSED << std::endl;
    std::cout << "FR_DIALOGTERM=" << FR_DIALOGTERM << std::endl;
    std::cout << "FR_DOWN=" << FR_DOWN << std::endl;
    std::cout << "FR_ENABLEHOOK=" << FR_ENABLEHOOK << std::endl;
    std::cout << "FR_ENABLETEMPLATE=" << FR_ENABLETEMPLATE << std::endl;
    std::cout << "FR_ENABLETEMPLATEHANDLE=" << FR_ENABLETEMPLATEHANDLE << std::endl;
    std::cout << "FR_FINDNEXT=" << FR_FINDNEXT << std::endl;
    std::cout << "FR_HIDEMATCHCASE=" << FR_HIDEMATCHCASE << std::endl;
    std::cout << "FR_HIDEUPDOWN=" << FR_HIDEUPDOWN << std::endl;
    std::cout << "FR_HIDEWHOLEWORD=" << FR_HIDEWHOLEWORD << std::endl;
    std::cout << "FR_MATCHALEFHAMZA=" << FR_MATCHALEFHAMZA << std::endl;
    std::cout << "FR_MATCHCASE=" << FR_MATCHCASE << std::endl;
    std::cout << "FR_MATCHDIAC=" << FR_MATCHDIAC << std::endl;
    std::cout << "FR_MATCHKASHIDA=" << FR_MATCHKASHIDA << std::endl;
    std::cout << "FR_NOMATCHCASE=" << FR_NOMATCHCASE << std::endl;
    std::cout << "FR_NOT_ENUM=" << FR_NOT_ENUM << std::endl;
    std::cout << "FR_NOUPDOWN=" << FR_NOUPDOWN << std::endl;
    std::cout << "FR_NOWHOLEWORD=" << FR_NOWHOLEWORD << std::endl;
    std::cout << "FR_PRIVATE=" << FR_PRIVATE << std::endl;
    std::cout << "FR_RAW=" << FR_RAW << std::endl;
    std::cout << "FR_REPLACE=" << FR_REPLACE << std::endl;
    std::cout << "FR_REPLACEALL=" << FR_REPLACEALL << std::endl;
    std::cout << "FR_SHOWHELP=" << FR_SHOWHELP << std::endl;
    std::cout << "FR_WHOLEWORD=" << FR_WHOLEWORD << std::endl;
    std::cout << "FSHIFT=" << FSHIFT << std::endl;
    std::cout << "FS_CASE_IS_PRESERVED=" << FS_CASE_IS_PRESERVED << std::endl;
    std::cout << "FS_CASE_SENSITIVE=" << FS_CASE_SENSITIVE << std::endl;
    std::cout << "FS_FILE_COMPRESSION=" << FS_FILE_COMPRESSION << std::endl;
    std::cout << "FS_FILE_ENCRYPTION=" << FS_FILE_ENCRYPTION << std::endl;
    std::cout << "FS_PERSISTENT_ACLS=" << FS_PERSISTENT_ACLS << std::endl;
    std::cout << "FS_UNICODE_STORED_ON_DISK=" << FS_UNICODE_STORED_ON_DISK << std::endl;
    std::cout << "FS_VOL_IS_COMPRESSED=" << FS_VOL_IS_COMPRESSED << std::endl;
    std::cout << "FVIRTKEY=" << FVIRTKEY << std::endl;
    std::cout << "FW_BLACK=" << FW_BLACK << std::endl;
    std::cout << "FW_BOLD=" << FW_BOLD << std::endl;
    std::cout << "FW_DEMIBOLD=" << FW_DEMIBOLD << std::endl;
    std::cout << "FW_DONTCARE=" << FW_DONTCARE << std::endl;
    std::cout << "FW_EXTRABOLD=" << FW_EXTRABOLD << std::endl;
    std::cout << "FW_EXTRALIGHT=" << FW_EXTRALIGHT << std::endl;
    std::cout << "FW_HEAVY=" << FW_HEAVY << std::endl;
    std::cout << "FW_LIGHT=" << FW_LIGHT << std::endl;
    std::cout << "FW_MEDIUM=" << FW_MEDIUM << std::endl;
    std::cout << "FW_NORMAL=" << FW_NORMAL << std::endl;
    std::cout << "FW_REGULAR=" << FW_REGULAR << std::endl;
    std::cout << "FW_SEMIBOLD=" << FW_SEMIBOLD << std::endl;
    std::cout << "FW_THIN=" << FW_THIN << std::endl;
    std::cout << "FW_ULTRABOLD=" << FW_ULTRABOLD << std::endl;
    std::cout << "FW_ULTRALIGHT=" << FW_ULTRALIGHT << std::endl;
    std::cout << "GA_PARENT=" << GA_PARENT << std::endl;
    std::cout << "GA_ROOT=" << GA_ROOT << std::endl;
    std::cout << "GA_ROOTOWNER=" << GA_ROOTOWNER << std::endl;
    std::cout << "GB2312_CHARSET=" << GB2312_CHARSET << std::endl;
    std::cout << "GCF_INCLUDE_ANCESTORS=" << GCF_INCLUDE_ANCESTORS << std::endl;
    std::cout << "GCLP_HBRBACKGROUND=" << GCLP_HBRBACKGROUND << std::endl;
    std::cout << "GCLP_HCURSOR=" << GCLP_HCURSOR << std::endl;
    std::cout << "GCLP_HICON=" << GCLP_HICON << std::endl;
    std::cout << "GCLP_HICONSM=" << GCLP_HICONSM << std::endl;
    std::cout << "GCLP_HMODULE=" << GCLP_HMODULE << std::endl;
    std::cout << "GCLP_MENUNAME=" << GCLP_MENUNAME << std::endl;
    std::cout << "GCLP_WNDPROC=" << GCLP_WNDPROC << std::endl;
    std::cout << "GCL_CBCLSEXTRA=" << GCL_CBCLSEXTRA << std::endl;
    std::cout << "GCL_CBWNDEXTRA=" << GCL_CBWNDEXTRA << std::endl;
    std::cout << "GCL_CONVERSION=" << GCL_CONVERSION << std::endl;
    std::cout << "GCL_HBRBACKGROUND=" << GCL_HBRBACKGROUND << std::endl;
    std::cout << "GCL_HCURSOR=" << GCL_HCURSOR << std::endl;
    std::cout << "GCL_HICON=" << GCL_HICON << std::endl;
    std::cout << "GCL_HICONSM=" << GCL_HICONSM << std::endl;
    std::cout << "GCL_HMODULE=" << GCL_HMODULE << std::endl;
    std::cout << "GCL_MENUNAME=" << GCL_MENUNAME << std::endl;
    std::cout << "GCL_REVERSECONVERSION=" << GCL_REVERSECONVERSION << std::endl;
    std::cout << "GCL_REVERSE_LENGTH=" << GCL_REVERSE_LENGTH << std::endl;
    std::cout << "GCL_STYLE=" << GCL_STYLE << std::endl;
    std::cout << "GCL_WNDPROC=" << GCL_WNDPROC << std::endl;
    std::cout << "GCPCLASS_ARABIC=" << GCPCLASS_ARABIC << std::endl;
    std::cout << "GCPCLASS_HEBREW=" << GCPCLASS_HEBREW << std::endl;
    std::cout << "GCPCLASS_LATIN=" << GCPCLASS_LATIN << std::endl;
    std::cout << "GCPCLASS_LATINNUMBER=" << GCPCLASS_LATINNUMBER << std::endl;
    std::cout << "GCPCLASS_LATINNUMERICSEPARATOR=" << GCPCLASS_LATINNUMERICSEPARATOR << std::endl;
    std::cout << "GCPCLASS_LATINNUMERICTERMINATOR=" << GCPCLASS_LATINNUMERICTERMINATOR << std::endl;
    std::cout << "GCPCLASS_LOCALNUMBER=" << GCPCLASS_LOCALNUMBER << std::endl;
    std::cout << "GCPCLASS_NEUTRAL=" << GCPCLASS_NEUTRAL << std::endl;
    std::cout << "GCPCLASS_NUMERICSEPARATOR=" << GCPCLASS_NUMERICSEPARATOR << std::endl;
    std::cout << "GCPCLASS_POSTBOUNDLTR=" << GCPCLASS_POSTBOUNDLTR << std::endl;
    std::cout << "GCPCLASS_POSTBOUNDRTL=" << GCPCLASS_POSTBOUNDRTL << std::endl;
    std::cout << "GCPCLASS_PREBOUNDLTR=" << GCPCLASS_PREBOUNDLTR << std::endl;
    std::cout << "GCPCLASS_PREBOUNDRTL=" << GCPCLASS_PREBOUNDRTL << std::endl;
    std::cout << "GCPGLYPH_LINKAFTER=" << GCPGLYPH_LINKAFTER << std::endl;
    std::cout << "GCPGLYPH_LINKBEFORE=" << GCPGLYPH_LINKBEFORE << std::endl;
    std::cout << "GCP_DBCS=" << GCP_DBCS << std::endl;
    std::cout << "GCP_DIACRITIC=" << GCP_DIACRITIC << std::endl;
    std::cout << "GCP_ERROR=" << GCP_ERROR << std::endl;
    std::cout << "GCP_GLYPHSHAPE=" << GCP_GLYPHSHAPE << std::endl;
    std::cout << "GCP_KASHIDA=" << GCP_KASHIDA << std::endl;
    std::cout << "GCP_LIGATE=" << GCP_LIGATE << std::endl;
    std::cout << "GCP_REORDER=" << GCP_REORDER << std::endl;
    std::cout << "GCP_USEKERNING=" << GCP_USEKERNING << std::endl;
    std::cout << "GCS_COMPATTR=" << GCS_COMPATTR << std::endl;
    std::cout << "GCS_COMPCLAUSE=" << GCS_COMPCLAUSE << std::endl;
    std::cout << "GCS_COMPREADATTR=" << GCS_COMPREADATTR << std::endl;
    std::cout << "GCS_COMPREADCLAUSE=" << GCS_COMPREADCLAUSE << std::endl;
    std::cout << "GCS_COMPREADSTR=" << GCS_COMPREADSTR << std::endl;
    std::cout << "GCS_COMPSTR=" << GCS_COMPSTR << std::endl;
    std::cout << "GCS_CURSORPOS=" << GCS_CURSORPOS << std::endl;
    std::cout << "GCS_DELTASTART=" << GCS_DELTASTART << std::endl;
    std::cout << "GCS_RESULTCLAUSE=" << GCS_RESULTCLAUSE << std::endl;
    std::cout << "GCS_RESULTREADCLAUSE=" << GCS_RESULTREADCLAUSE << std::endl;
    std::cout << "GCS_RESULTREADSTR=" << GCS_RESULTREADSTR << std::endl;
    std::cout << "GCS_RESULTSTR=" << GCS_RESULTSTR << std::endl;
    std::cout << "GCW_ATOM=" << GCW_ATOM << std::endl;
    std::cout << "GC_ALLGESTURES=" << GC_ALLGESTURES << std::endl;
    std::cout << "GC_PAN=" << GC_PAN << std::endl;
    std::cout << "GC_PAN_WITH_GUTTER=" << GC_PAN_WITH_GUTTER << std::endl;
    std::cout << "GC_PAN_WITH_INERTIA=" << GC_PAN_WITH_INERTIA << std::endl;
    std::cout << "GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY=" << GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY << std::endl;
    std::cout << "GC_PAN_WITH_SINGLE_FINGER_VERTICALLY=" << GC_PAN_WITH_SINGLE_FINGER_VERTICALLY << std::endl;
    std::cout << "GC_PRESSANDTAP=" << GC_PRESSANDTAP << std::endl;
    std::cout << "GC_ROLLOVER=" << GC_ROLLOVER << std::endl;
    std::cout << "GC_ROTATE=" << GC_ROTATE << std::endl;
    std::cout << "GC_TWOFINGERTAP=" << GC_TWOFINGERTAP << std::endl;
    std::cout << "GC_ZOOM=" << GC_ZOOM << std::endl;
    std::cout << "GDICOMMENT_BEGINGROUP=" << GDICOMMENT_BEGINGROUP << std::endl;
    std::cout << "GDICOMMENT_ENDGROUP=" << GDICOMMENT_ENDGROUP << std::endl;
    std::cout << "GDICOMMENT_IDENTIFIER=" << GDICOMMENT_IDENTIFIER << std::endl;
    std::cout << "GDICOMMENT_MULTIFORMATS=" << GDICOMMENT_MULTIFORMATS << std::endl;
    std::cout << "GDICOMMENT_UNICODE_END=" << GDICOMMENT_UNICODE_END << std::endl;
    std::cout << "GDICOMMENT_UNICODE_STRING=" << GDICOMMENT_UNICODE_STRING << std::endl;
    std::cout << "GDICOMMENT_WINDOWS_METAFILE=" << GDICOMMENT_WINDOWS_METAFILE << std::endl;
    std::cout << "GDIPLUS_TS_QUERYVER=" << GDIPLUS_TS_QUERYVER << std::endl;
    std::cout << "GDIPLUS_TS_RECORD=" << GDIPLUS_TS_RECORD << std::endl;
    std::cout << "GDIREGISTERDDRAWPACKETVERSION=" << GDIREGISTERDDRAWPACKETVERSION << std::endl;
    std::cout << "GDI_OBJ_LAST=" << GDI_OBJ_LAST << std::endl;
    std::cout << "GEOID_NOT_AVAILABLE=" << GEOID_NOT_AVAILABLE << std::endl;
    std::cout << "GESTURECONFIGMAXCOUNT=" << GESTURECONFIGMAXCOUNT << std::endl;
    std::cout << "GESTUREVISUALIZATION_DOUBLETAP=" << GESTUREVISUALIZATION_DOUBLETAP << std::endl;
    std::cout << "GESTUREVISUALIZATION_OFF=" << GESTUREVISUALIZATION_OFF << std::endl;
    std::cout << "GESTUREVISUALIZATION_PRESSANDHOLD=" << GESTUREVISUALIZATION_PRESSANDHOLD << std::endl;
    std::cout << "GESTUREVISUALIZATION_PRESSANDTAP=" << GESTUREVISUALIZATION_PRESSANDTAP << std::endl;
    std::cout << "GESTUREVISUALIZATION_RIGHTTAP=" << GESTUREVISUALIZATION_RIGHTTAP << std::endl;
    std::cout << "GESTUREVISUALIZATION_TAP=" << GESTUREVISUALIZATION_TAP << std::endl;
    std::cout << "GETCOLORTABLE=" << GETCOLORTABLE << std::endl;
    std::cout << "GETDEVICEUNITS=" << GETDEVICEUNITS << std::endl;
    std::cout << "GETEXTENDEDTEXTMETRICS=" << GETEXTENDEDTEXTMETRICS << std::endl;
    std::cout << "GETEXTENTTABLE=" << GETEXTENTTABLE << std::endl;
    std::cout << "GETFACENAME=" << GETFACENAME << std::endl;
    std::cout << "GETPAIRKERNTABLE=" << GETPAIRKERNTABLE << std::endl;
    std::cout << "GETPENWIDTH=" << GETPENWIDTH << std::endl;
    std::cout << "GETPHYSPAGESIZE=" << GETPHYSPAGESIZE << std::endl;
    std::cout << "GETPRINTINGOFFSET=" << GETPRINTINGOFFSET << std::endl;
    std::cout << "GETSCALINGFACTOR=" << GETSCALINGFACTOR << std::endl;
    std::cout << "GETSETPAPERBINS=" << GETSETPAPERBINS << std::endl;
    std::cout << "GETSETPAPERMETRICS=" << GETSETPAPERMETRICS << std::endl;
    std::cout << "GETSETPRINTORIENT=" << GETSETPRINTORIENT << std::endl;
    std::cout << "GETSETSCREENPARAMS=" << GETSETSCREENPARAMS << std::endl;
    std::cout << "GETTECHNOLGY=" << GETTECHNOLGY << std::endl;
    std::cout << "GETTECHNOLOGY=" << GETTECHNOLOGY << std::endl;
    std::cout << "GETTRACKKERNTABLE=" << GETTRACKKERNTABLE << std::endl;
    std::cout << "GETVECTORBRUSHSIZE=" << GETVECTORBRUSHSIZE << std::endl;
    std::cout << "GETVECTORPENSIZE=" << GETVECTORPENSIZE << std::endl;
    std::cout << "GET_FEATURE_FROM_PROCESS=" << GET_FEATURE_FROM_PROCESS << std::endl;
    std::cout << "GET_FEATURE_FROM_REGISTRY=" << GET_FEATURE_FROM_REGISTRY << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD=" << GET_FEATURE_FROM_THREAD << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD_INTERNET=" << GET_FEATURE_FROM_THREAD_INTERNET << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD_INTRANET=" << GET_FEATURE_FROM_THREAD_INTRANET << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD_LOCALMACHINE=" << GET_FEATURE_FROM_THREAD_LOCALMACHINE << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD_RESTRICTED=" << GET_FEATURE_FROM_THREAD_RESTRICTED << std::endl;
    std::cout << "GET_FEATURE_FROM_THREAD_TRUSTED=" << GET_FEATURE_FROM_THREAD_TRUSTED << std::endl;
    std::cout << "GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS=" << GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS << std::endl;
    std::cout << "GET_MODULE_HANDLE_EX_FLAG_PIN=" << GET_MODULE_HANDLE_EX_FLAG_PIN << std::endl;
    std::cout << "GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT=" << GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT << std::endl;
    std::cout << "GET_PS_FEATURESETTING=" << GET_PS_FEATURESETTING << std::endl;
    std::cout << "GET_TAPE_DRIVE_INFORMATION=" << GET_TAPE_DRIVE_INFORMATION << std::endl;
    std::cout << "GET_TAPE_MEDIA_INFORMATION=" << GET_TAPE_MEDIA_INFORMATION << std::endl;
    std::cout << "GF_BEGIN=" << GF_BEGIN << std::endl;
    std::cout << "GF_END=" << GF_END << std::endl;
    std::cout << "GF_INERTIA=" << GF_INERTIA << std::endl;
    std::cout << "GGI_MARK_NONEXISTING_GLYPHS=" << GGI_MARK_NONEXISTING_GLYPHS << std::endl;
    std::cout << "GGL_INDEX=" << GGL_INDEX << std::endl;
    std::cout << "GGL_LEVEL=" << GGL_LEVEL << std::endl;
    std::cout << "GGL_PRIVATE=" << GGL_PRIVATE << std::endl;
    std::cout << "GGL_STRING=" << GGL_STRING << std::endl;
    std::cout << "GGO_BEZIER=" << GGO_BEZIER << std::endl;
    std::cout << "GGO_BITMAP=" << GGO_BITMAP << std::endl;
    std::cout << "GGO_GLYPH_INDEX=" << GGO_GLYPH_INDEX << std::endl;
    std::cout << "GGO_GRAY2_BITMAP=" << GGO_GRAY2_BITMAP << std::endl;
    std::cout << "GGO_GRAY4_BITMAP=" << GGO_GRAY4_BITMAP << std::endl;
    std::cout << "GGO_GRAY8_BITMAP=" << GGO_GRAY8_BITMAP << std::endl;
    std::cout << "GGO_METRICS=" << GGO_METRICS << std::endl;
    std::cout << "GGO_NATIVE=" << GGO_NATIVE << std::endl;
    std::cout << "GGO_UNHINTED=" << GGO_UNHINTED << std::endl;
    std::cout << "GHND=" << GHND << std::endl;
    std::cout << "GIDC_ARRIVAL=" << GIDC_ARRIVAL << std::endl;
    std::cout << "GIDC_REMOVAL=" << GIDC_REMOVAL << std::endl;
    std::cout << "GID_BEGIN=" << GID_BEGIN << std::endl;
    std::cout << "GID_END=" << GID_END << std::endl;
    std::cout << "GID_PAN=" << GID_PAN << std::endl;
    std::cout << "GID_PRESSANDTAP=" << GID_PRESSANDTAP << std::endl;
    std::cout << "GID_ROLLOVER=" << GID_ROLLOVER << std::endl;
    std::cout << "GID_ROTATE=" << GID_ROTATE << std::endl;
    std::cout << "GID_TWOFINGERTAP=" << GID_TWOFINGERTAP << std::endl;
    std::cout << "GID_ZOOM=" << GID_ZOOM << std::endl;
    std::cout << "GL_ID_CANNOTSAVE=" << GL_ID_CANNOTSAVE << std::endl;
    std::cout << "GL_ID_CHOOSECANDIDATE=" << GL_ID_CHOOSECANDIDATE << std::endl;
    std::cout << "GL_ID_INPUTCODE=" << GL_ID_INPUTCODE << std::endl;
    std::cout << "GL_ID_INPUTRADICAL=" << GL_ID_INPUTRADICAL << std::endl;
    std::cout << "GL_ID_INPUTREADING=" << GL_ID_INPUTREADING << std::endl;
    std::cout << "GL_ID_INPUTSYMBOL=" << GL_ID_INPUTSYMBOL << std::endl;
    std::cout << "GL_ID_NOCONVERT=" << GL_ID_NOCONVERT << std::endl;
    std::cout << "GL_ID_NODICTIONARY=" << GL_ID_NODICTIONARY << std::endl;
    std::cout << "GL_ID_NOMODULE=" << GL_ID_NOMODULE << std::endl;
    std::cout << "GL_ID_PRIVATE_FIRST=" << GL_ID_PRIVATE_FIRST << std::endl;
    std::cout << "GL_ID_PRIVATE_LAST=" << GL_ID_PRIVATE_LAST << std::endl;
    std::cout << "GL_ID_READINGCONFLICT=" << GL_ID_READINGCONFLICT << std::endl;
    std::cout << "GL_ID_REVERSECONVERSION=" << GL_ID_REVERSECONVERSION << std::endl;
    std::cout << "GL_ID_TOOMANYSTROKE=" << GL_ID_TOOMANYSTROKE << std::endl;
    std::cout << "GL_ID_TYPINGERROR=" << GL_ID_TYPINGERROR << std::endl;
    std::cout << "GL_ID_UNKNOWN=" << GL_ID_UNKNOWN << std::endl;
    std::cout << "GL_LEVEL_ERROR=" << GL_LEVEL_ERROR << std::endl;
    std::cout << "GL_LEVEL_FATAL=" << GL_LEVEL_FATAL << std::endl;
    std::cout << "GL_LEVEL_INFORMATION=" << GL_LEVEL_INFORMATION << std::endl;
    std::cout << "GL_LEVEL_NOGUIDELINE=" << GL_LEVEL_NOGUIDELINE << std::endl;
    std::cout << "GL_LEVEL_WARNING=" << GL_LEVEL_WARNING << std::endl;
    std::cout << "GMEM_DDESHARE=" << GMEM_DDESHARE << std::endl;
    std::cout << "GMEM_DISCARDABLE=" << GMEM_DISCARDABLE << std::endl;
    std::cout << "GMEM_DISCARDED=" << GMEM_DISCARDED << std::endl;
    std::cout << "GMEM_FIXED=" << GMEM_FIXED << std::endl;
    std::cout << "GMEM_INVALID_HANDLE=" << GMEM_INVALID_HANDLE << std::endl;
    std::cout << "GMEM_LOWER=" << GMEM_LOWER << std::endl;
    std::cout << "GMEM_MODIFY=" << GMEM_MODIFY << std::endl;
    std::cout << "GMEM_MOVEABLE=" << GMEM_MOVEABLE << std::endl;
    std::cout << "GMEM_NOCOMPACT=" << GMEM_NOCOMPACT << std::endl;
    std::cout << "GMEM_NODISCARD=" << GMEM_NODISCARD << std::endl;
    std::cout << "GMEM_NOTIFY=" << GMEM_NOTIFY << std::endl;
    std::cout << "GMEM_NOT_BANKED=" << GMEM_NOT_BANKED << std::endl;
    std::cout << "GMEM_SHARE=" << GMEM_SHARE << std::endl;
    std::cout << "GMEM_ZEROINIT=" << GMEM_ZEROINIT << std::endl;
    std::cout << "GMMP_USE_DISPLAY_POINTS=" << GMMP_USE_DISPLAY_POINTS << std::endl;
    std::cout << "GMMP_USE_HIGH_RESOLUTION_POINTS=" << GMMP_USE_HIGH_RESOLUTION_POINTS << std::endl;
    std::cout << "GM_ADVANCED=" << GM_ADVANCED << std::endl;
    std::cout << "GM_COMPATIBLE=" << GM_COMPATIBLE << std::endl;
    std::cout << "GM_LAST=" << GM_LAST << std::endl;
    std::cout << "GPTR=" << GPTR << std::endl;
    std::cout << "GPT_ATTRIBUTE_PLATFORM_REQUIRED=" << GPT_ATTRIBUTE_PLATFORM_REQUIRED << std::endl;
    std::cout << "GPT_BASIC_DATA_ATTRIBUTE_HIDDEN=" << GPT_BASIC_DATA_ATTRIBUTE_HIDDEN << std::endl;
    std::cout << "GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER=" << GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER << std::endl;
    std::cout << "GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY=" << GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY << std::endl;
    std::cout << "GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY=" << GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY << std::endl;
    std::cout << "GRADIENT_FILL_RECT_H=" << GRADIENT_FILL_RECT_H << std::endl;
    std::cout << "GRADIENT_FILL_RECT_V=" << GRADIENT_FILL_RECT_V << std::endl;
    std::cout << "GRADIENT_FILL_TRIANGLE=" << GRADIENT_FILL_TRIANGLE << std::endl;
    std::cout << "GRAY_BRUSH=" << GRAY_BRUSH << std::endl;
    std::cout << "GREEK_CHARSET=" << GREEK_CHARSET << std::endl;
    std::cout << "GROUP_NAME=" << GROUP_NAME << std::endl;
    std::cout << "GR_GDIOBJECTS=" << GR_GDIOBJECTS << std::endl;
    std::cout << "GR_GDIOBJECTS_PEAK=" << GR_GDIOBJECTS_PEAK << std::endl;
    std::cout << "GR_USEROBJECTS=" << GR_USEROBJECTS << std::endl;
    std::cout << "GR_USEROBJECTS_PEAK=" << GR_USEROBJECTS_PEAK << std::endl;
    std::cout << "GSS_ALLOW_INHERITED_COMMON=" << GSS_ALLOW_INHERITED_COMMON << std::endl;
    std::cout << "GS_8BIT_INDICES=" << GS_8BIT_INDICES << std::endl;
    std::cout << "GUI_16BITTASK=" << GUI_16BITTASK << std::endl;
    std::cout << "GUI_CARETBLINKING=" << GUI_CARETBLINKING << std::endl;
    std::cout << "GUI_INMENUMODE=" << GUI_INMENUMODE << std::endl;
    std::cout << "GUI_INMOVESIZE=" << GUI_INMOVESIZE << std::endl;
    std::cout << "GUI_POPUPMENUMODE=" << GUI_POPUPMENUMODE << std::endl;
    std::cout << "GUI_SYSTEMMENUMODE=" << GUI_SYSTEMMENUMODE << std::endl;
    std::cout << "GWFS_INCLUDE_ANCESTORS=" << GWFS_INCLUDE_ANCESTORS << std::endl;
    std::cout << "GWLP_HINSTANCE=" << GWLP_HINSTANCE << std::endl;
    std::cout << "GWLP_HWNDPARENT=" << GWLP_HWNDPARENT << std::endl;
    std::cout << "GWLP_ID=" << GWLP_ID << std::endl;
    std::cout << "GWLP_USERDATA=" << GWLP_USERDATA << std::endl;
    std::cout << "GWLP_WNDPROC=" << GWLP_WNDPROC << std::endl;
    std::cout << "GWL_EXSTYLE=" << GWL_EXSTYLE << std::endl;
    std::cout << "GWL_HINSTANCE=" << GWL_HINSTANCE << std::endl;
    std::cout << "GWL_HWNDPARENT=" << GWL_HWNDPARENT << std::endl;
    std::cout << "GWL_ID=" << GWL_ID << std::endl;
    std::cout << "GWL_STYLE=" << GWL_STYLE << std::endl;
    std::cout << "GWL_USERDATA=" << GWL_USERDATA << std::endl;
    std::cout << "GWL_WNDPROC=" << GWL_WNDPROC << std::endl;
    std::cout << "GW_CHILD=" << GW_CHILD << std::endl;
    std::cout << "GW_ENABLEDPOPUP=" << GW_ENABLEDPOPUP << std::endl;
    std::cout << "GW_HWNDFIRST=" << GW_HWNDFIRST << std::endl;
    std::cout << "GW_HWNDLAST=" << GW_HWNDLAST << std::endl;
    std::cout << "GW_HWNDNEXT=" << GW_HWNDNEXT << std::endl;
    std::cout << "GW_HWNDPREV=" << GW_HWNDPREV << std::endl;
    std::cout << "GW_MAX=" << GW_MAX << std::endl;
    std::cout << "GW_OWNER=" << GW_OWNER << std::endl;
    std::cout << "HALFTONE=" << HALFTONE << std::endl;
    std::cout << "HANDLE_FLAG_INHERIT=" << HANDLE_FLAG_INHERIT << std::endl;
    std::cout << "HANDLE_FLAG_PROTECT_FROM_CLOSE=" << HANDLE_FLAG_PROTECT_FROM_CLOSE << std::endl;
    std::cout << "HANGEUL_CHARSET=" << HANGEUL_CHARSET << std::endl;
    std::cout << "HANGUL_CHARSET=" << HANGUL_CHARSET << std::endl;
    std::cout << "HANGUP_COMPLETE=" << HANGUP_COMPLETE << std::endl;
    std::cout << "HANGUP_PENDING=" << HANGUP_PENDING << std::endl;
    std::cout << "HCBT_ACTIVATE=" << HCBT_ACTIVATE << std::endl;
    std::cout << "HCBT_CLICKSKIPPED=" << HCBT_CLICKSKIPPED << std::endl;
    std::cout << "HCBT_CREATEWND=" << HCBT_CREATEWND << std::endl;
    std::cout << "HCBT_DESTROYWND=" << HCBT_DESTROYWND << std::endl;
    std::cout << "HCBT_KEYSKIPPED=" << HCBT_KEYSKIPPED << std::endl;
    std::cout << "HCBT_MINMAX=" << HCBT_MINMAX << std::endl;
    std::cout << "HCBT_MOVESIZE=" << HCBT_MOVESIZE << std::endl;
    std::cout << "HCBT_QS=" << HCBT_QS << std::endl;
    std::cout << "HCBT_SETFOCUS=" << HCBT_SETFOCUS << std::endl;
    std::cout << "HCBT_SYSCOMMAND=" << HCBT_SYSCOMMAND << std::endl;
    std::cout << "HCF_AVAILABLE=" << HCF_AVAILABLE << std::endl;
    std::cout << "HCF_CONFIRMHOTKEY=" << HCF_CONFIRMHOTKEY << std::endl;
    std::cout << "HCF_DEFAULTDESKTOP=" << HCF_DEFAULTDESKTOP << std::endl;
    std::cout << "HCF_HIGHCONTRASTON=" << HCF_HIGHCONTRASTON << std::endl;
    std::cout << "HCF_HOTKEYACTIVE=" << HCF_HOTKEYACTIVE << std::endl;
    std::cout << "HCF_HOTKEYAVAILABLE=" << HCF_HOTKEYAVAILABLE << std::endl;
    std::cout << "HCF_HOTKEYSOUND=" << HCF_HOTKEYSOUND << std::endl;
    std::cout << "HCF_INDICATOR=" << HCF_INDICATOR << std::endl;
    std::cout << "HCF_LOGONDESKTOP=" << HCF_LOGONDESKTOP << std::endl;
    std::cout << "HCF_OPTION_NOTHEMECHANGE=" << HCF_OPTION_NOTHEMECHANGE << std::endl;
    std::cout << "HC_ACTION=" << HC_ACTION << std::endl;
    std::cout << "HC_GETNEXT=" << HC_GETNEXT << std::endl;
    std::cout << "HC_NOREM=" << HC_NOREM << std::endl;
    std::cout << "HC_NOREMOVE=" << HC_NOREMOVE << std::endl;
    std::cout << "HC_SKIP=" << HC_SKIP << std::endl;
    std::cout << "HC_SYSMODALOFF=" << HC_SYSMODALOFF << std::endl;
    std::cout << "HC_SYSMODALON=" << HC_SYSMODALON << std::endl;
    std::cout << "HDATA_APPOWNED=" << HDATA_APPOWNED << std::endl;
    std::cout << "HDS_BUTTONS=" << HDS_BUTTONS << std::endl;
    std::cout << "HDS_CHECKBOXES=" << HDS_CHECKBOXES << std::endl;
    std::cout << "HDS_DRAGDROP=" << HDS_DRAGDROP << std::endl;
    std::cout << "HDS_FILTERBAR=" << HDS_FILTERBAR << std::endl;
    std::cout << "HDS_FLAT=" << HDS_FLAT << std::endl;
    std::cout << "HDS_FULLDRAG=" << HDS_FULLDRAG << std::endl;
    std::cout << "HDS_HIDDEN=" << HDS_HIDDEN << std::endl;
    std::cout << "HDS_HORZ=" << HDS_HORZ << std::endl;
    std::cout << "HDS_HOTTRACK=" << HDS_HOTTRACK << std::endl;
    std::cout << "HDS_NOSIZING=" << HDS_NOSIZING << std::endl;
    std::cout << "HDS_OVERFLOW=" << HDS_OVERFLOW << std::endl;
    std::cout << "HEAP_CREATE_ALIGN_16=" << HEAP_CREATE_ALIGN_16 << std::endl;
    std::cout << "HEAP_CREATE_ENABLE_EXECUTE=" << HEAP_CREATE_ENABLE_EXECUTE << std::endl;
    std::cout << "HEAP_CREATE_ENABLE_TRACING=" << HEAP_CREATE_ENABLE_TRACING << std::endl;
    std::cout << "HEAP_DISABLE_COALESCE_ON_FREE=" << HEAP_DISABLE_COALESCE_ON_FREE << std::endl;
    std::cout << "HEAP_FREE_CHECKING_ENABLED=" << HEAP_FREE_CHECKING_ENABLED << std::endl;
    std::cout << "HEAP_GENERATE_EXCEPTIONS=" << HEAP_GENERATE_EXCEPTIONS << std::endl;
    std::cout << "HEAP_GROWABLE=" << HEAP_GROWABLE << std::endl;
    std::cout << "HEAP_MAXIMUM_TAG=" << HEAP_MAXIMUM_TAG << std::endl;
    std::cout << "HEAP_NO_SERIALIZE=" << HEAP_NO_SERIALIZE << std::endl;
    std::cout << "HEAP_PSEUDO_TAG_FLAG=" << HEAP_PSEUDO_TAG_FLAG << std::endl;
    std::cout << "HEAP_REALLOC_IN_PLACE_ONLY=" << HEAP_REALLOC_IN_PLACE_ONLY << std::endl;
    std::cout << "HEAP_TAG_SHIFT=" << HEAP_TAG_SHIFT << std::endl;
    std::cout << "HEAP_TAIL_CHECKING_ENABLED=" << HEAP_TAIL_CHECKING_ENABLED << std::endl;
    std::cout << "HEAP_ZERO_MEMORY=" << HEAP_ZERO_MEMORY << std::endl;
    std::cout << "HEBREW_CHARSET=" << HEBREW_CHARSET << std::endl;
    std::cout << "HELPINFO_MENUITEM=" << HELPINFO_MENUITEM << std::endl;
    std::cout << "HELPINFO_WINDOW=" << HELPINFO_WINDOW << std::endl;
    std::cout << "HELP_COMMAND=" << HELP_COMMAND << std::endl;
    std::cout << "HELP_CONTENTS=" << HELP_CONTENTS << std::endl;
    std::cout << "HELP_CONTEXT=" << HELP_CONTEXT << std::endl;
    std::cout << "HELP_CONTEXTPOPUP=" << HELP_CONTEXTPOPUP << std::endl;
    std::cout << "HELP_FORCEFILE=" << HELP_FORCEFILE << std::endl;
    std::cout << "HELP_HELPONHELP=" << HELP_HELPONHELP << std::endl;
    std::cout << "HELP_INDEX=" << HELP_INDEX << std::endl;
    std::cout << "HELP_KEY=" << HELP_KEY << std::endl;
    std::cout << "HELP_MULTIKEY=" << HELP_MULTIKEY << std::endl;
    std::cout << "HELP_PARTIALKEY=" << HELP_PARTIALKEY << std::endl;
    std::cout << "HELP_QUIT=" << HELP_QUIT << std::endl;
    std::cout << "HELP_SETCONTENTS=" << HELP_SETCONTENTS << std::endl;
    std::cout << "HELP_SETINDEX=" << HELP_SETINDEX << std::endl;
    std::cout << "HELP_SETWINPOS=" << HELP_SETWINPOS << std::endl;
    std::cout << "HELP_TCARD=" << HELP_TCARD << std::endl;
    std::cout << "HELP_TCARD_DATA=" << HELP_TCARD_DATA << std::endl;
    std::cout << "HELP_TCARD_OTHER_CALLER=" << HELP_TCARD_OTHER_CALLER << std::endl;
    std::cout << "HIDE_WINDOW=" << HIDE_WINDOW << std::endl;
    std::cout << "HIGH_PRIORITY_CLASS=" << HIGH_PRIORITY_CLASS << std::endl;
    std::cout << "HINSTANCE_ERROR=" << HINSTANCE_ERROR << std::endl;
    std::cout << "HISTORY_NO_DUP_FLAG=" << HISTORY_NO_DUP_FLAG << std::endl;
    std::cout << "HIST_NO_OF_BUCKETS=" << HIST_NO_OF_BUCKETS << std::endl;
    std::cout << "HKL_NEXT=" << HKL_NEXT << std::endl;
    std::cout << "HKL_PREV=" << HKL_PREV << std::endl;
    std::cout << "HMONITOR_DECLARED=" << HMONITOR_DECLARED << std::endl;
    std::cout << "HOLLOW_BRUSH=" << HOLLOW_BRUSH << std::endl;
    std::cout << "HORZRES=" << HORZRES << std::endl;
    std::cout << "HORZSIZE=" << HORZSIZE << std::endl;
    std::cout << "HOST_NOT_FOUND=" << HOST_NOT_FOUND << std::endl;
    std::cout << "HOVER_DEFAULT=" << HOVER_DEFAULT << std::endl;
    std::cout << "HP_ALGID=" << HP_ALGID << std::endl;
    std::cout << "HP_HASHSIZE=" << HP_HASHSIZE << std::endl;
    std::cout << "HP_HASHVAL=" << HP_HASHVAL << std::endl;
    std::cout << "HP_HMAC_INFO=" << HP_HMAC_INFO << std::endl;
    std::cout << "HP_TLS1PRF_LABEL=" << HP_TLS1PRF_LABEL << std::endl;
    std::cout << "HP_TLS1PRF_SEED=" << HP_TLS1PRF_SEED << std::endl;
    std::cout << "HSHELL_ACCESSIBILITYSTATE=" << HSHELL_ACCESSIBILITYSTATE << std::endl;
    std::cout << "HSHELL_ACTIVATESHELLWINDOW=" << HSHELL_ACTIVATESHELLWINDOW << std::endl;
    std::cout << "HSHELL_APPCOMMAND=" << HSHELL_APPCOMMAND << std::endl;
    std::cout << "HSHELL_ENDTASK=" << HSHELL_ENDTASK << std::endl;
    std::cout << "HSHELL_FLASH=" << HSHELL_FLASH << std::endl;
    std::cout << "HSHELL_GETMINRECT=" << HSHELL_GETMINRECT << std::endl;
    std::cout << "HSHELL_HIGHBIT=" << HSHELL_HIGHBIT << std::endl;
    std::cout << "HSHELL_LANGUAGE=" << HSHELL_LANGUAGE << std::endl;
    std::cout << "HSHELL_MONITORCHANGED=" << HSHELL_MONITORCHANGED << std::endl;
    std::cout << "HSHELL_REDRAW=" << HSHELL_REDRAW << std::endl;
    std::cout << "HSHELL_RUDEAPPACTIVATED=" << HSHELL_RUDEAPPACTIVATED << std::endl;
    std::cout << "HSHELL_SYSMENU=" << HSHELL_SYSMENU << std::endl;
    std::cout << "HSHELL_TASKMAN=" << HSHELL_TASKMAN << std::endl;
    std::cout << "HSHELL_WINDOWACTIVATED=" << HSHELL_WINDOWACTIVATED << std::endl;
    std::cout << "HSHELL_WINDOWCREATED=" << HSHELL_WINDOWCREATED << std::endl;
    std::cout << "HSHELL_WINDOWDESTROYED=" << HSHELL_WINDOWDESTROYED << std::endl;
    std::cout << "HSHELL_WINDOWREPLACED=" << HSHELL_WINDOWREPLACED << std::endl;
    std::cout << "HSHELL_WINDOWREPLACING=" << HSHELL_WINDOWREPLACING << std::endl;
    std::cout << "HS_API_MAX=" << HS_API_MAX << std::endl;
    std::cout << "HS_BDIAGONAL=" << HS_BDIAGONAL << std::endl;
    std::cout << "HS_CROSS=" << HS_CROSS << std::endl;
    std::cout << "HS_DIAGCROSS=" << HS_DIAGCROSS << std::endl;
    std::cout << "HS_FDIAGONAL=" << HS_FDIAGONAL << std::endl;
    std::cout << "HS_HORIZONTAL=" << HS_HORIZONTAL << std::endl;
    std::cout << "HS_VERTICAL=" << HS_VERTICAL << std::endl;
    std::cout << "HTBORDER=" << HTBORDER << std::endl;
    std::cout << "HTBOTTOM=" << HTBOTTOM << std::endl;
    std::cout << "HTBOTTOMLEFT=" << HTBOTTOMLEFT << std::endl;
    std::cout << "HTBOTTOMRIGHT=" << HTBOTTOMRIGHT << std::endl;
    std::cout << "HTCAPTION=" << HTCAPTION << std::endl;
    std::cout << "HTCLIENT=" << HTCLIENT << std::endl;
    std::cout << "HTCLOSE=" << HTCLOSE << std::endl;
    std::cout << "HTERROR=" << HTERROR << std::endl;
    std::cout << "HTGROWBOX=" << HTGROWBOX << std::endl;
    std::cout << "HTHELP=" << HTHELP << std::endl;
    std::cout << "HTHSCROLL=" << HTHSCROLL << std::endl;
    std::cout << "HTLEFT=" << HTLEFT << std::endl;
    std::cout << "HTMAXBUTTON=" << HTMAXBUTTON << std::endl;
    std::cout << "HTMENU=" << HTMENU << std::endl;
    std::cout << "HTMINBUTTON=" << HTMINBUTTON << std::endl;
    std::cout << "HTNOWHERE=" << HTNOWHERE << std::endl;
    std::cout << "HTOBJECT=" << HTOBJECT << std::endl;
    std::cout << "HTREDUCE=" << HTREDUCE << std::endl;
    std::cout << "HTRIGHT=" << HTRIGHT << std::endl;
    std::cout << "HTSIZE=" << HTSIZE << std::endl;
    std::cout << "HTSIZEFIRST=" << HTSIZEFIRST << std::endl;
    std::cout << "HTSIZELAST=" << HTSIZELAST << std::endl;
    std::cout << "HTSYSMENU=" << HTSYSMENU << std::endl;
    std::cout << "HTTOP=" << HTTOP << std::endl;
    std::cout << "HTTOPLEFT=" << HTTOPLEFT << std::endl;
    std::cout << "HTTOPRIGHT=" << HTTOPRIGHT << std::endl;
    std::cout << "HTTRANSPARENT=" << HTTRANSPARENT << std::endl;
    std::cout << "HTVSCROLL=" << HTVSCROLL << std::endl;
    std::cout << "HTZOOM=" << HTZOOM << std::endl;
    std::cout << "HW_PROFILE_GUIDLEN=" << HW_PROFILE_GUIDLEN << std::endl;
    std::cout << "IACE_CHILDREN=" << IACE_CHILDREN << std::endl;
    std::cout << "IACE_DEFAULT=" << IACE_DEFAULT << std::endl;
    std::cout << "IACE_IGNORENOCONTEXT=" << IACE_IGNORENOCONTEXT << std::endl;
    std::cout << "ICM_ADDPROFILE=" << ICM_ADDPROFILE << std::endl;
    std::cout << "ICM_DELETEPROFILE=" << ICM_DELETEPROFILE << std::endl;
    std::cout << "ICM_DONE_OUTSIDEDC=" << ICM_DONE_OUTSIDEDC << std::endl;
    std::cout << "ICM_OFF=" << ICM_OFF << std::endl;
    std::cout << "ICM_ON=" << ICM_ON << std::endl;
    std::cout << "ICM_QUERY=" << ICM_QUERY << std::endl;
    std::cout << "ICM_QUERYMATCH=" << ICM_QUERYMATCH << std::endl;
    std::cout << "ICM_QUERYPROFILE=" << ICM_QUERYPROFILE << std::endl;
    std::cout << "ICM_REGISTERICMATCHER=" << ICM_REGISTERICMATCHER << std::endl;
    std::cout << "ICM_SETDEFAULTPROFILE=" << ICM_SETDEFAULTPROFILE << std::endl;
    std::cout << "ICM_UNREGISTERICMATCHER=" << ICM_UNREGISTERICMATCHER << std::endl;
    std::cout << "ICON_BIG=" << ICON_BIG << std::endl;
    std::cout << "ICON_SMALL=" << ICON_SMALL << std::endl;
    std::cout << "ICON_SMALL2=" << ICON_SMALL2 << std::endl;
    std::cout << "IDABORT=" << IDABORT << std::endl;
    std::cout << "IDANI_CAPTION=" << IDANI_CAPTION << std::endl;
    std::cout << "IDANI_OPEN=" << IDANI_OPEN << std::endl;
    std::cout << "IDCANCEL=" << IDCANCEL << std::endl;
    std::cout << "IDCLOSE=" << IDCLOSE << std::endl;
    std::cout << "IDCONTINUE=" << IDCONTINUE << std::endl;
    std::cout << "IDENTIFY_BUFFER_SIZE=" << IDENTIFY_BUFFER_SIZE << std::endl;
    std::cout << "IDHELP=" << IDHELP << std::endl;
    std::cout << "IDHOT_SNAPDESKTOP=" << IDHOT_SNAPDESKTOP << std::endl;
    std::cout << "IDHOT_SNAPWINDOW=" << IDHOT_SNAPWINDOW << std::endl;
    std::cout << "IDH_CANCEL=" << IDH_CANCEL << std::endl;
    std::cout << "IDH_GENERIC_HELP_BUTTON=" << IDH_GENERIC_HELP_BUTTON << std::endl;
    std::cout << "IDH_HELP=" << IDH_HELP << std::endl;
    std::cout << "IDH_MISSING_CONTEXT=" << IDH_MISSING_CONTEXT << std::endl;
    std::cout << "IDH_NO_HELP=" << IDH_NO_HELP << std::endl;
    std::cout << "IDH_OK=" << IDH_OK << std::endl;
    std::cout << "IDIGNORE=" << IDIGNORE << std::endl;
    std::cout << "IDI_APPLICATION=" << IDI_APPLICATION << std::endl;
    std::cout << "IDI_ASTERISK=" << IDI_ASTERISK << std::endl;
    std::cout << "IDI_ERROR=" << IDI_ERROR << std::endl;
    std::cout << "IDI_EXCLAMATION=" << IDI_EXCLAMATION << std::endl;
    std::cout << "IDI_HAND=" << IDI_HAND << std::endl;
    std::cout << "IDI_INFORMATION=" << IDI_INFORMATION << std::endl;
    std::cout << "IDI_QUESTION=" << IDI_QUESTION << std::endl;
    std::cout << "IDI_SHIELD=" << IDI_SHIELD << std::endl;
    std::cout << "IDI_WARNING=" << IDI_WARNING << std::endl;
    std::cout << "IDI_WINLOGO=" << IDI_WINLOGO << std::endl;
    std::cout << "IDLE_PRIORITY_CLASS=" << IDLE_PRIORITY_CLASS << std::endl;
    std::cout << "IDLFLAG_FIN=" << IDLFLAG_FIN << std::endl;
    std::cout << "IDLFLAG_FLCID=" << IDLFLAG_FLCID << std::endl;
    std::cout << "IDLFLAG_FOUT=" << IDLFLAG_FOUT << std::endl;
    std::cout << "IDLFLAG_FRETVAL=" << IDLFLAG_FRETVAL << std::endl;
    std::cout << "IDLFLAG_NONE=" << IDLFLAG_NONE << std::endl;
    std::cout << "IDNO=" << IDNO << std::endl;
    std::cout << "IDN_ALLOW_UNASSIGNED=" << IDN_ALLOW_UNASSIGNED << std::endl;
    std::cout << "IDN_EMAIL_ADDRESS=" << IDN_EMAIL_ADDRESS << std::endl;
    std::cout << "IDN_RAW_PUNYCODE=" << IDN_RAW_PUNYCODE << std::endl;
    std::cout << "IDN_USE_STD3_ASCII_RULES=" << IDN_USE_STD3_ASCII_RULES << std::endl;
    std::cout << "IDOK=" << IDOK << std::endl;
    std::cout << "IDRETRY=" << IDRETRY << std::endl;
    std::cout << "IDTIMEOUT=" << IDTIMEOUT << std::endl;
    std::cout << "IDTRYAGAIN=" << IDTRYAGAIN << std::endl;
    std::cout << "IDYES=" << IDYES << std::endl;
    std::cout << "ID_CMD=" << ID_CMD << std::endl;
    std::cout << "ID_DEFAULTINST=" << ID_DEFAULTINST << std::endl;
    std::cout << "ID_PSREBOOTSYSTEM=" << ID_PSREBOOTSYSTEM << std::endl;
    std::cout << "ID_PSRESTARTWINDOWS=" << ID_PSRESTARTWINDOWS << std::endl;
    std::cout << "IE_BADID=" << IE_BADID << std::endl;
    std::cout << "IE_BAUDRATE=" << IE_BAUDRATE << std::endl;
    std::cout << "IE_BYTESIZE=" << IE_BYTESIZE << std::endl;
    std::cout << "IE_DEFAULT=" << IE_DEFAULT << std::endl;
    std::cout << "IE_HARDWARE=" << IE_HARDWARE << std::endl;
    std::cout << "IE_MEMORY=" << IE_MEMORY << std::endl;
    std::cout << "IE_NOPEN=" << IE_NOPEN << std::endl;
    std::cout << "IE_OPEN=" << IE_OPEN << std::endl;
    std::cout << "IFACEMETHODIMP=" << IFACEMETHODIMP << std::endl;
    std::cout << "IFACEMETHODIMPV=" << IFACEMETHODIMPV << std::endl;
    std::cout << "IGIMIF_RIGHTMENU=" << IGIMIF_RIGHTMENU << std::endl;
    std::cout << "IGIMII_CMODE=" << IGIMII_CMODE << std::endl;
    std::cout << "IGIMII_CONFIGURE=" << IGIMII_CONFIGURE << std::endl;
    std::cout << "IGIMII_HELP=" << IGIMII_HELP << std::endl;
    std::cout << "IGIMII_INPUTTOOLS=" << IGIMII_INPUTTOOLS << std::endl;
    std::cout << "IGIMII_OTHER=" << IGIMII_OTHER << std::endl;
    std::cout << "IGIMII_SMODE=" << IGIMII_SMODE << std::endl;
    std::cout << "IGIMII_TOOLS=" << IGIMII_TOOLS << std::endl;
    std::cout << "IGNORE=" << IGNORE << std::endl;
    std::cout << "IGP_CONVERSION=" << IGP_CONVERSION << std::endl;
    std::cout << "IGP_PROPERTY=" << IGP_PROPERTY << std::endl;
    std::cout << "IGP_SELECT=" << IGP_SELECT << std::endl;
    std::cout << "IGP_SETCOMPSTR=" << IGP_SETCOMPSTR << std::endl;
    std::cout << "IGP_UI=" << IGP_UI << std::endl;
    std::cout << "ILLUMINANT_A=" << ILLUMINANT_A << std::endl;
    std::cout << "ILLUMINANT_B=" << ILLUMINANT_B << std::endl;
    std::cout << "ILLUMINANT_C=" << ILLUMINANT_C << std::endl;
    std::cout << "ILLUMINANT_D50=" << ILLUMINANT_D50 << std::endl;
    std::cout << "ILLUMINANT_D55=" << ILLUMINANT_D55 << std::endl;
    std::cout << "ILLUMINANT_D65=" << ILLUMINANT_D65 << std::endl;
    std::cout << "ILLUMINANT_D75=" << ILLUMINANT_D75 << std::endl;
    std::cout << "ILLUMINANT_DAYLIGHT=" << ILLUMINANT_DAYLIGHT << std::endl;
    std::cout << "ILLUMINANT_DEVICE_DEFAULT=" << ILLUMINANT_DEVICE_DEFAULT << std::endl;
    std::cout << "ILLUMINANT_F2=" << ILLUMINANT_F2 << std::endl;
    std::cout << "ILLUMINANT_FLUORESCENT=" << ILLUMINANT_FLUORESCENT << std::endl;
    std::cout << "ILLUMINANT_MAX_INDEX=" << ILLUMINANT_MAX_INDEX << std::endl;
    std::cout << "ILLUMINANT_NTSC=" << ILLUMINANT_NTSC << std::endl;
    std::cout << "ILLUMINANT_TUNGSTEN=" << ILLUMINANT_TUNGSTEN << std::endl;
    std::cout << "IMAGE_ARCHIVE_START_SIZE=" << IMAGE_ARCHIVE_START_SIZE << std::endl;
    std::cout << "IMAGE_BITMAP=" << IMAGE_BITMAP << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_ANY=" << IMAGE_COMDAT_SELECT_ANY << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_ASSOCIATIVE=" << IMAGE_COMDAT_SELECT_ASSOCIATIVE << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_EXACT_MATCH=" << IMAGE_COMDAT_SELECT_EXACT_MATCH << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_LARGEST=" << IMAGE_COMDAT_SELECT_LARGEST << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_NEWEST=" << IMAGE_COMDAT_SELECT_NEWEST << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_NODUPLICATES=" << IMAGE_COMDAT_SELECT_NODUPLICATES << std::endl;
    std::cout << "IMAGE_COMDAT_SELECT_SAME_SIZE=" << IMAGE_COMDAT_SELECT_SAME_SIZE << std::endl;
    std::cout << "IMAGE_CURSOR=" << IMAGE_CURSOR << std::endl;
    std::cout << "IMAGE_DEBUG_MISC_EXENAME=" << IMAGE_DEBUG_MISC_EXENAME << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_BORLAND=" << IMAGE_DEBUG_TYPE_BORLAND << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_CLSID=" << IMAGE_DEBUG_TYPE_CLSID << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_CODEVIEW=" << IMAGE_DEBUG_TYPE_CODEVIEW << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_COFF=" << IMAGE_DEBUG_TYPE_COFF << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_EXCEPTION=" << IMAGE_DEBUG_TYPE_EXCEPTION << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_FIXUP=" << IMAGE_DEBUG_TYPE_FIXUP << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_FPO=" << IMAGE_DEBUG_TYPE_FPO << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_MISC=" << IMAGE_DEBUG_TYPE_MISC << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_OMAP_FROM_SRC=" << IMAGE_DEBUG_TYPE_OMAP_FROM_SRC << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_OMAP_TO_SRC=" << IMAGE_DEBUG_TYPE_OMAP_TO_SRC << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_RESERVED10=" << IMAGE_DEBUG_TYPE_RESERVED10 << std::endl;
    std::cout << "IMAGE_DEBUG_TYPE_UNKNOWN=" << IMAGE_DEBUG_TYPE_UNKNOWN << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_ARCHITECTURE=" << IMAGE_DIRECTORY_ENTRY_ARCHITECTURE << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_BASERELOC=" << IMAGE_DIRECTORY_ENTRY_BASERELOC << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT=" << IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR=" << IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_DEBUG=" << IMAGE_DIRECTORY_ENTRY_DEBUG << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT=" << IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_EXCEPTION=" << IMAGE_DIRECTORY_ENTRY_EXCEPTION << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_EXPORT=" << IMAGE_DIRECTORY_ENTRY_EXPORT << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_GLOBALPTR=" << IMAGE_DIRECTORY_ENTRY_GLOBALPTR << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_IAT=" << IMAGE_DIRECTORY_ENTRY_IAT << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_IMPORT=" << IMAGE_DIRECTORY_ENTRY_IMPORT << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG=" << IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_RESOURCE=" << IMAGE_DIRECTORY_ENTRY_RESOURCE << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_SECURITY=" << IMAGE_DIRECTORY_ENTRY_SECURITY << std::endl;
    std::cout << "IMAGE_DIRECTORY_ENTRY_TLS=" << IMAGE_DIRECTORY_ENTRY_TLS << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_APPCONTAINER=" << IMAGE_DLLCHARACTERISTICS_APPCONTAINER << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE=" << IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY=" << IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_GUARD_CF=" << IMAGE_DLLCHARACTERISTICS_GUARD_CF << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA=" << IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_NO_BIND=" << IMAGE_DLLCHARACTERISTICS_NO_BIND << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_NO_ISOLATION=" << IMAGE_DLLCHARACTERISTICS_NO_ISOLATION << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_NO_SEH=" << IMAGE_DLLCHARACTERISTICS_NO_SEH << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_NX_COMPAT=" << IMAGE_DLLCHARACTERISTICS_NX_COMPAT << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE=" << IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE << std::endl;
    std::cout << "IMAGE_DLLCHARACTERISTICS_WDM_DRIVER=" << IMAGE_DLLCHARACTERISTICS_WDM_DRIVER << std::endl;
    std::cout << "IMAGE_DOS_SIGNATURE=" << IMAGE_DOS_SIGNATURE << std::endl;
    std::cout << "IMAGE_ENHMETAFILE=" << IMAGE_ENHMETAFILE << std::endl;
    std::cout << "IMAGE_FILE_32BIT_MACHINE=" << IMAGE_FILE_32BIT_MACHINE << std::endl;
    std::cout << "IMAGE_FILE_AGGRESIVE_WS_TRIM=" << IMAGE_FILE_AGGRESIVE_WS_TRIM << std::endl;
    std::cout << "IMAGE_FILE_BYTES_REVERSED_HI=" << IMAGE_FILE_BYTES_REVERSED_HI << std::endl;
    std::cout << "IMAGE_FILE_BYTES_REVERSED_LO=" << IMAGE_FILE_BYTES_REVERSED_LO << std::endl;
    std::cout << "IMAGE_FILE_DEBUG_STRIPPED=" << IMAGE_FILE_DEBUG_STRIPPED << std::endl;
    std::cout << "IMAGE_FILE_DLL=" << IMAGE_FILE_DLL << std::endl;
    std::cout << "IMAGE_FILE_EXECUTABLE_IMAGE=" << IMAGE_FILE_EXECUTABLE_IMAGE << std::endl;
    std::cout << "IMAGE_FILE_LARGE_ADDRESS_AWARE=" << IMAGE_FILE_LARGE_ADDRESS_AWARE << std::endl;
    std::cout << "IMAGE_FILE_LINE_NUMS_STRIPPED=" << IMAGE_FILE_LINE_NUMS_STRIPPED << std::endl;
    std::cout << "IMAGE_FILE_LOCAL_SYMS_STRIPPED=" << IMAGE_FILE_LOCAL_SYMS_STRIPPED << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_ALPHA=" << IMAGE_FILE_MACHINE_ALPHA << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_ALPHA64=" << IMAGE_FILE_MACHINE_ALPHA64 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_AMD64=" << IMAGE_FILE_MACHINE_AMD64 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_AXP64=" << IMAGE_FILE_MACHINE_AXP64 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_CEF=" << IMAGE_FILE_MACHINE_CEF << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_EBC=" << IMAGE_FILE_MACHINE_EBC << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_IA64=" << IMAGE_FILE_MACHINE_IA64 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_M32R=" << IMAGE_FILE_MACHINE_M32R << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_MIPS16=" << IMAGE_FILE_MACHINE_MIPS16 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_MIPSFPU=" << IMAGE_FILE_MACHINE_MIPSFPU << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_MIPSFPU16=" << IMAGE_FILE_MACHINE_MIPSFPU16 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_POWERPC=" << IMAGE_FILE_MACHINE_POWERPC << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_R10000=" << IMAGE_FILE_MACHINE_R10000 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_R3000=" << IMAGE_FILE_MACHINE_R3000 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_R4000=" << IMAGE_FILE_MACHINE_R4000 << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_TRICORE=" << IMAGE_FILE_MACHINE_TRICORE << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_UNKNOWN=" << IMAGE_FILE_MACHINE_UNKNOWN << std::endl;
    std::cout << "IMAGE_FILE_MACHINE_WCEMIPSV2=" << IMAGE_FILE_MACHINE_WCEMIPSV2 << std::endl;
    std::cout << "IMAGE_FILE_NET_RUN_FROM_SWAP=" << IMAGE_FILE_NET_RUN_FROM_SWAP << std::endl;
    std::cout << "IMAGE_FILE_RELOCS_STRIPPED=" << IMAGE_FILE_RELOCS_STRIPPED << std::endl;
    std::cout << "IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP=" << IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP << std::endl;
    std::cout << "IMAGE_FILE_SYSTEM=" << IMAGE_FILE_SYSTEM << std::endl;
    std::cout << "IMAGE_FILE_UP_SYSTEM_ONLY=" << IMAGE_FILE_UP_SYSTEM_ONLY << std::endl;
    std::cout << "IMAGE_ICON=" << IMAGE_ICON << std::endl;
    std::cout << "IMAGE_NT_SIGNATURE=" << IMAGE_NT_SIGNATURE << std::endl;
    std::cout << "IMAGE_NUMBEROF_DIRECTORY_ENTRIES=" << IMAGE_NUMBEROF_DIRECTORY_ENTRIES << std::endl;
    std::cout << "IMAGE_ORDINAL_FLAG32=" << IMAGE_ORDINAL_FLAG32 << std::endl;
    std::cout << "IMAGE_OS2_SIGNATURE=" << IMAGE_OS2_SIGNATURE << std::endl;
    std::cout << "IMAGE_OS2_SIGNATURE_LE=" << IMAGE_OS2_SIGNATURE_LE << std::endl;
    std::cout << "IMAGE_REL_ALPHA_ABSOLUTE=" << IMAGE_REL_ALPHA_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_ALPHA_BRADDR=" << IMAGE_REL_ALPHA_BRADDR << std::endl;
    std::cout << "IMAGE_REL_ALPHA_GPDISP=" << IMAGE_REL_ALPHA_GPDISP << std::endl;
    std::cout << "IMAGE_REL_ALPHA_GPREL32=" << IMAGE_REL_ALPHA_GPREL32 << std::endl;
    std::cout << "IMAGE_REL_ALPHA_GPRELHI=" << IMAGE_REL_ALPHA_GPRELHI << std::endl;
    std::cout << "IMAGE_REL_ALPHA_GPRELLO=" << IMAGE_REL_ALPHA_GPRELLO << std::endl;
    std::cout << "IMAGE_REL_ALPHA_HINT=" << IMAGE_REL_ALPHA_HINT << std::endl;
    std::cout << "IMAGE_REL_ALPHA_INLINE_REFLONG=" << IMAGE_REL_ALPHA_INLINE_REFLONG << std::endl;
    std::cout << "IMAGE_REL_ALPHA_LITERAL=" << IMAGE_REL_ALPHA_LITERAL << std::endl;
    std::cout << "IMAGE_REL_ALPHA_LITUSE=" << IMAGE_REL_ALPHA_LITUSE << std::endl;
    std::cout << "IMAGE_REL_ALPHA_MATCH=" << IMAGE_REL_ALPHA_MATCH << std::endl;
    std::cout << "IMAGE_REL_ALPHA_PAIR=" << IMAGE_REL_ALPHA_PAIR << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFHI=" << IMAGE_REL_ALPHA_REFHI << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFLO=" << IMAGE_REL_ALPHA_REFLO << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFLONG=" << IMAGE_REL_ALPHA_REFLONG << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFLONGNB=" << IMAGE_REL_ALPHA_REFLONGNB << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFQ1=" << IMAGE_REL_ALPHA_REFQ1 << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFQ2=" << IMAGE_REL_ALPHA_REFQ2 << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFQ3=" << IMAGE_REL_ALPHA_REFQ3 << std::endl;
    std::cout << "IMAGE_REL_ALPHA_REFQUAD=" << IMAGE_REL_ALPHA_REFQUAD << std::endl;
    std::cout << "IMAGE_REL_ALPHA_SECREL=" << IMAGE_REL_ALPHA_SECREL << std::endl;
    std::cout << "IMAGE_REL_ALPHA_SECRELHI=" << IMAGE_REL_ALPHA_SECRELHI << std::endl;
    std::cout << "IMAGE_REL_ALPHA_SECRELLO=" << IMAGE_REL_ALPHA_SECRELLO << std::endl;
    std::cout << "IMAGE_REL_ALPHA_SECTION=" << IMAGE_REL_ALPHA_SECTION << std::endl;
    std::cout << "IMAGE_REL_AMD64_ABSOLUTE=" << IMAGE_REL_AMD64_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_AMD64_ADDR32=" << IMAGE_REL_AMD64_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_AMD64_ADDR32NB=" << IMAGE_REL_AMD64_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_AMD64_ADDR64=" << IMAGE_REL_AMD64_ADDR64 << std::endl;
    std::cout << "IMAGE_REL_AMD64_PAIR=" << IMAGE_REL_AMD64_PAIR << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32=" << IMAGE_REL_AMD64_REL32 << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32_1=" << IMAGE_REL_AMD64_REL32_1 << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32_2=" << IMAGE_REL_AMD64_REL32_2 << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32_3=" << IMAGE_REL_AMD64_REL32_3 << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32_4=" << IMAGE_REL_AMD64_REL32_4 << std::endl;
    std::cout << "IMAGE_REL_AMD64_REL32_5=" << IMAGE_REL_AMD64_REL32_5 << std::endl;
    std::cout << "IMAGE_REL_AMD64_SECREL=" << IMAGE_REL_AMD64_SECREL << std::endl;
    std::cout << "IMAGE_REL_AMD64_SECREL7=" << IMAGE_REL_AMD64_SECREL7 << std::endl;
    std::cout << "IMAGE_REL_AMD64_SECTION=" << IMAGE_REL_AMD64_SECTION << std::endl;
    std::cout << "IMAGE_REL_AMD64_SREL32=" << IMAGE_REL_AMD64_SREL32 << std::endl;
    std::cout << "IMAGE_REL_AMD64_SSPAN32=" << IMAGE_REL_AMD64_SSPAN32 << std::endl;
    std::cout << "IMAGE_REL_AMD64_TOKEN=" << IMAGE_REL_AMD64_TOKEN << std::endl;
    std::cout << "IMAGE_REL_AM_ABSOLUTE=" << IMAGE_REL_AM_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_AM_ADDR32=" << IMAGE_REL_AM_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_AM_ADDR32NB=" << IMAGE_REL_AM_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_AM_CALL32=" << IMAGE_REL_AM_CALL32 << std::endl;
    std::cout << "IMAGE_REL_AM_FUNCINFO=" << IMAGE_REL_AM_FUNCINFO << std::endl;
    std::cout << "IMAGE_REL_AM_REL32_1=" << IMAGE_REL_AM_REL32_1 << std::endl;
    std::cout << "IMAGE_REL_AM_REL32_2=" << IMAGE_REL_AM_REL32_2 << std::endl;
    std::cout << "IMAGE_REL_AM_SECREL=" << IMAGE_REL_AM_SECREL << std::endl;
    std::cout << "IMAGE_REL_AM_SECTION=" << IMAGE_REL_AM_SECTION << std::endl;
    std::cout << "IMAGE_REL_AM_TOKEN=" << IMAGE_REL_AM_TOKEN << std::endl;
    std::cout << "IMAGE_REL_ARM_ABSOLUTE=" << IMAGE_REL_ARM_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_ARM_ADDR32=" << IMAGE_REL_ARM_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_ARM_ADDR32NB=" << IMAGE_REL_ARM_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_ARM_BLX11=" << IMAGE_REL_ARM_BLX11 << std::endl;
    std::cout << "IMAGE_REL_ARM_BLX23T=" << IMAGE_REL_ARM_BLX23T << std::endl;
    std::cout << "IMAGE_REL_ARM_BLX24=" << IMAGE_REL_ARM_BLX24 << std::endl;
    std::cout << "IMAGE_REL_ARM_BRANCH11=" << IMAGE_REL_ARM_BRANCH11 << std::endl;
    std::cout << "IMAGE_REL_ARM_BRANCH20T=" << IMAGE_REL_ARM_BRANCH20T << std::endl;
    std::cout << "IMAGE_REL_ARM_BRANCH24=" << IMAGE_REL_ARM_BRANCH24 << std::endl;
    std::cout << "IMAGE_REL_ARM_BRANCH24T=" << IMAGE_REL_ARM_BRANCH24T << std::endl;
    std::cout << "IMAGE_REL_ARM_GPREL12=" << IMAGE_REL_ARM_GPREL12 << std::endl;
    std::cout << "IMAGE_REL_ARM_GPREL7=" << IMAGE_REL_ARM_GPREL7 << std::endl;
    std::cout << "IMAGE_REL_ARM_MOV32=" << IMAGE_REL_ARM_MOV32 << std::endl;
    std::cout << "IMAGE_REL_ARM_MOV32A=" << IMAGE_REL_ARM_MOV32A << std::endl;
    std::cout << "IMAGE_REL_ARM_MOV32T=" << IMAGE_REL_ARM_MOV32T << std::endl;
    std::cout << "IMAGE_REL_ARM_SECREL=" << IMAGE_REL_ARM_SECREL << std::endl;
    std::cout << "IMAGE_REL_ARM_SECTION=" << IMAGE_REL_ARM_SECTION << std::endl;
    std::cout << "IMAGE_REL_ARM_TOKEN=" << IMAGE_REL_ARM_TOKEN << std::endl;
    std::cout << "IMAGE_REL_BASED_ABSOLUTE=" << IMAGE_REL_BASED_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_BASED_ARM_MOV32=" << IMAGE_REL_BASED_ARM_MOV32 << std::endl;
    std::cout << "IMAGE_REL_BASED_DIR64=" << IMAGE_REL_BASED_DIR64 << std::endl;
    std::cout << "IMAGE_REL_BASED_HIGH=" << IMAGE_REL_BASED_HIGH << std::endl;
    std::cout << "IMAGE_REL_BASED_HIGHADJ=" << IMAGE_REL_BASED_HIGHADJ << std::endl;
    std::cout << "IMAGE_REL_BASED_HIGHLOW=" << IMAGE_REL_BASED_HIGHLOW << std::endl;
    std::cout << "IMAGE_REL_BASED_IA64_IMM64=" << IMAGE_REL_BASED_IA64_IMM64 << std::endl;
    std::cout << "IMAGE_REL_BASED_LOW=" << IMAGE_REL_BASED_LOW << std::endl;
    std::cout << "IMAGE_REL_BASED_MIPS_JMPADDR=" << IMAGE_REL_BASED_MIPS_JMPADDR << std::endl;
    std::cout << "IMAGE_REL_BASED_MIPS_JMPADDR16=" << IMAGE_REL_BASED_MIPS_JMPADDR16 << std::endl;
    std::cout << "IMAGE_REL_BASED_THUMB_MOV32=" << IMAGE_REL_BASED_THUMB_MOV32 << std::endl;
    std::cout << "IMAGE_REL_CEE_ABSOLUTE=" << IMAGE_REL_CEE_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_CEE_ADDR32=" << IMAGE_REL_CEE_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_CEE_ADDR32NB=" << IMAGE_REL_CEE_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_CEE_ADDR64=" << IMAGE_REL_CEE_ADDR64 << std::endl;
    std::cout << "IMAGE_REL_CEE_SECREL=" << IMAGE_REL_CEE_SECREL << std::endl;
    std::cout << "IMAGE_REL_CEE_SECTION=" << IMAGE_REL_CEE_SECTION << std::endl;
    std::cout << "IMAGE_REL_CEE_TOKEN=" << IMAGE_REL_CEE_TOKEN << std::endl;
    std::cout << "IMAGE_REL_CEF_ABSOLUTE=" << IMAGE_REL_CEF_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_CEF_ADDR32=" << IMAGE_REL_CEF_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_CEF_ADDR32NB=" << IMAGE_REL_CEF_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_CEF_ADDR64=" << IMAGE_REL_CEF_ADDR64 << std::endl;
    std::cout << "IMAGE_REL_CEF_SECREL=" << IMAGE_REL_CEF_SECREL << std::endl;
    std::cout << "IMAGE_REL_CEF_SECTION=" << IMAGE_REL_CEF_SECTION << std::endl;
    std::cout << "IMAGE_REL_CEF_TOKEN=" << IMAGE_REL_CEF_TOKEN << std::endl;
    std::cout << "IMAGE_REL_EBC_ABSOLUTE=" << IMAGE_REL_EBC_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_EBC_ADDR32NB=" << IMAGE_REL_EBC_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_EBC_REL32=" << IMAGE_REL_EBC_REL32 << std::endl;
    std::cout << "IMAGE_REL_EBC_SECREL=" << IMAGE_REL_EBC_SECREL << std::endl;
    std::cout << "IMAGE_REL_EBC_SECTION=" << IMAGE_REL_EBC_SECTION << std::endl;
    std::cout << "IMAGE_REL_I386_ABSOLUTE=" << IMAGE_REL_I386_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_I386_DIR16=" << IMAGE_REL_I386_DIR16 << std::endl;
    std::cout << "IMAGE_REL_I386_DIR32=" << IMAGE_REL_I386_DIR32 << std::endl;
    std::cout << "IMAGE_REL_I386_DIR32NB=" << IMAGE_REL_I386_DIR32NB << std::endl;
    std::cout << "IMAGE_REL_I386_REL16=" << IMAGE_REL_I386_REL16 << std::endl;
    std::cout << "IMAGE_REL_I386_REL32=" << IMAGE_REL_I386_REL32 << std::endl;
    std::cout << "IMAGE_REL_I386_SECREL=" << IMAGE_REL_I386_SECREL << std::endl;
    std::cout << "IMAGE_REL_I386_SECREL7=" << IMAGE_REL_I386_SECREL7 << std::endl;
    std::cout << "IMAGE_REL_I386_SECTION=" << IMAGE_REL_I386_SECTION << std::endl;
    std::cout << "IMAGE_REL_I386_SEG12=" << IMAGE_REL_I386_SEG12 << std::endl;
    std::cout << "IMAGE_REL_I386_TOKEN=" << IMAGE_REL_I386_TOKEN << std::endl;
    std::cout << "IMAGE_REL_IA64_ABSOLUTE=" << IMAGE_REL_IA64_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_IA64_ADDEND=" << IMAGE_REL_IA64_ADDEND << std::endl;
    std::cout << "IMAGE_REL_IA64_DIR32=" << IMAGE_REL_IA64_DIR32 << std::endl;
    std::cout << "IMAGE_REL_IA64_DIR32NB=" << IMAGE_REL_IA64_DIR32NB << std::endl;
    std::cout << "IMAGE_REL_IA64_DIR64=" << IMAGE_REL_IA64_DIR64 << std::endl;
    std::cout << "IMAGE_REL_IA64_GPREL22=" << IMAGE_REL_IA64_GPREL22 << std::endl;
    std::cout << "IMAGE_REL_IA64_GPREL32=" << IMAGE_REL_IA64_GPREL32 << std::endl;
    std::cout << "IMAGE_REL_IA64_IMM14=" << IMAGE_REL_IA64_IMM14 << std::endl;
    std::cout << "IMAGE_REL_IA64_IMM22=" << IMAGE_REL_IA64_IMM22 << std::endl;
    std::cout << "IMAGE_REL_IA64_IMM64=" << IMAGE_REL_IA64_IMM64 << std::endl;
    std::cout << "IMAGE_REL_IA64_IMMGPREL64=" << IMAGE_REL_IA64_IMMGPREL64 << std::endl;
    std::cout << "IMAGE_REL_IA64_LTOFF22=" << IMAGE_REL_IA64_LTOFF22 << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL21B=" << IMAGE_REL_IA64_PCREL21B << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL21F=" << IMAGE_REL_IA64_PCREL21F << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL21M=" << IMAGE_REL_IA64_PCREL21M << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL60B=" << IMAGE_REL_IA64_PCREL60B << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL60F=" << IMAGE_REL_IA64_PCREL60F << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL60I=" << IMAGE_REL_IA64_PCREL60I << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL60M=" << IMAGE_REL_IA64_PCREL60M << std::endl;
    std::cout << "IMAGE_REL_IA64_PCREL60X=" << IMAGE_REL_IA64_PCREL60X << std::endl;
    std::cout << "IMAGE_REL_IA64_SECREL22=" << IMAGE_REL_IA64_SECREL22 << std::endl;
    std::cout << "IMAGE_REL_IA64_SECREL32=" << IMAGE_REL_IA64_SECREL32 << std::endl;
    std::cout << "IMAGE_REL_IA64_SECREL64I=" << IMAGE_REL_IA64_SECREL64I << std::endl;
    std::cout << "IMAGE_REL_IA64_SECTION=" << IMAGE_REL_IA64_SECTION << std::endl;
    std::cout << "IMAGE_REL_IA64_SREL14=" << IMAGE_REL_IA64_SREL14 << std::endl;
    std::cout << "IMAGE_REL_IA64_SREL22=" << IMAGE_REL_IA64_SREL22 << std::endl;
    std::cout << "IMAGE_REL_IA64_SREL32=" << IMAGE_REL_IA64_SREL32 << std::endl;
    std::cout << "IMAGE_REL_IA64_TOKEN=" << IMAGE_REL_IA64_TOKEN << std::endl;
    std::cout << "IMAGE_REL_IA64_UREL32=" << IMAGE_REL_IA64_UREL32 << std::endl;
    std::cout << "IMAGE_REL_M32R_ABSOLUTE=" << IMAGE_REL_M32R_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_M32R_ADDR24=" << IMAGE_REL_M32R_ADDR24 << std::endl;
    std::cout << "IMAGE_REL_M32R_ADDR32=" << IMAGE_REL_M32R_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_M32R_ADDR32NB=" << IMAGE_REL_M32R_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_M32R_GPREL16=" << IMAGE_REL_M32R_GPREL16 << std::endl;
    std::cout << "IMAGE_REL_M32R_PAIR=" << IMAGE_REL_M32R_PAIR << std::endl;
    std::cout << "IMAGE_REL_M32R_PCREL16=" << IMAGE_REL_M32R_PCREL16 << std::endl;
    std::cout << "IMAGE_REL_M32R_PCREL24=" << IMAGE_REL_M32R_PCREL24 << std::endl;
    std::cout << "IMAGE_REL_M32R_PCREL8=" << IMAGE_REL_M32R_PCREL8 << std::endl;
    std::cout << "IMAGE_REL_M32R_REFHALF=" << IMAGE_REL_M32R_REFHALF << std::endl;
    std::cout << "IMAGE_REL_M32R_REFHI=" << IMAGE_REL_M32R_REFHI << std::endl;
    std::cout << "IMAGE_REL_M32R_REFLO=" << IMAGE_REL_M32R_REFLO << std::endl;
    std::cout << "IMAGE_REL_M32R_SECREL32=" << IMAGE_REL_M32R_SECREL32 << std::endl;
    std::cout << "IMAGE_REL_M32R_SECTION=" << IMAGE_REL_M32R_SECTION << std::endl;
    std::cout << "IMAGE_REL_M32R_TOKEN=" << IMAGE_REL_M32R_TOKEN << std::endl;
    std::cout << "IMAGE_REL_MIPS_ABSOLUTE=" << IMAGE_REL_MIPS_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_MIPS_GPREL=" << IMAGE_REL_MIPS_GPREL << std::endl;
    std::cout << "IMAGE_REL_MIPS_JMPADDR=" << IMAGE_REL_MIPS_JMPADDR << std::endl;
    std::cout << "IMAGE_REL_MIPS_JMPADDR16=" << IMAGE_REL_MIPS_JMPADDR16 << std::endl;
    std::cout << "IMAGE_REL_MIPS_LITERAL=" << IMAGE_REL_MIPS_LITERAL << std::endl;
    std::cout << "IMAGE_REL_MIPS_PAIR=" << IMAGE_REL_MIPS_PAIR << std::endl;
    std::cout << "IMAGE_REL_MIPS_REFHALF=" << IMAGE_REL_MIPS_REFHALF << std::endl;
    std::cout << "IMAGE_REL_MIPS_REFHI=" << IMAGE_REL_MIPS_REFHI << std::endl;
    std::cout << "IMAGE_REL_MIPS_REFLO=" << IMAGE_REL_MIPS_REFLO << std::endl;
    std::cout << "IMAGE_REL_MIPS_REFWORD=" << IMAGE_REL_MIPS_REFWORD << std::endl;
    std::cout << "IMAGE_REL_MIPS_REFWORDNB=" << IMAGE_REL_MIPS_REFWORDNB << std::endl;
    std::cout << "IMAGE_REL_MIPS_SECREL=" << IMAGE_REL_MIPS_SECREL << std::endl;
    std::cout << "IMAGE_REL_MIPS_SECRELHI=" << IMAGE_REL_MIPS_SECRELHI << std::endl;
    std::cout << "IMAGE_REL_MIPS_SECRELLO=" << IMAGE_REL_MIPS_SECRELLO << std::endl;
    std::cout << "IMAGE_REL_MIPS_SECTION=" << IMAGE_REL_MIPS_SECTION << std::endl;
    std::cout << "IMAGE_REL_MIPS_TOKEN=" << IMAGE_REL_MIPS_TOKEN << std::endl;
    std::cout << "IMAGE_REL_PPC_ABSOLUTE=" << IMAGE_REL_PPC_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR14=" << IMAGE_REL_PPC_ADDR14 << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR16=" << IMAGE_REL_PPC_ADDR16 << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR24=" << IMAGE_REL_PPC_ADDR24 << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR32=" << IMAGE_REL_PPC_ADDR32 << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR32NB=" << IMAGE_REL_PPC_ADDR32NB << std::endl;
    std::cout << "IMAGE_REL_PPC_ADDR64=" << IMAGE_REL_PPC_ADDR64 << std::endl;
    std::cout << "IMAGE_REL_PPC_BRNTAKEN=" << IMAGE_REL_PPC_BRNTAKEN << std::endl;
    std::cout << "IMAGE_REL_PPC_BRTAKEN=" << IMAGE_REL_PPC_BRTAKEN << std::endl;
    std::cout << "IMAGE_REL_PPC_GPREL=" << IMAGE_REL_PPC_GPREL << std::endl;
    std::cout << "IMAGE_REL_PPC_IFGLUE=" << IMAGE_REL_PPC_IFGLUE << std::endl;
    std::cout << "IMAGE_REL_PPC_IMGLUE=" << IMAGE_REL_PPC_IMGLUE << std::endl;
    std::cout << "IMAGE_REL_PPC_NEG=" << IMAGE_REL_PPC_NEG << std::endl;
    std::cout << "IMAGE_REL_PPC_PAIR=" << IMAGE_REL_PPC_PAIR << std::endl;
    std::cout << "IMAGE_REL_PPC_REFHI=" << IMAGE_REL_PPC_REFHI << std::endl;
    std::cout << "IMAGE_REL_PPC_REFLO=" << IMAGE_REL_PPC_REFLO << std::endl;
    std::cout << "IMAGE_REL_PPC_REL14=" << IMAGE_REL_PPC_REL14 << std::endl;
    std::cout << "IMAGE_REL_PPC_REL24=" << IMAGE_REL_PPC_REL24 << std::endl;
    std::cout << "IMAGE_REL_PPC_SECREL=" << IMAGE_REL_PPC_SECREL << std::endl;
    std::cout << "IMAGE_REL_PPC_SECREL16=" << IMAGE_REL_PPC_SECREL16 << std::endl;
    std::cout << "IMAGE_REL_PPC_SECRELHI=" << IMAGE_REL_PPC_SECRELHI << std::endl;
    std::cout << "IMAGE_REL_PPC_SECRELLO=" << IMAGE_REL_PPC_SECRELLO << std::endl;
    std::cout << "IMAGE_REL_PPC_SECTION=" << IMAGE_REL_PPC_SECTION << std::endl;
    std::cout << "IMAGE_REL_PPC_TOCDEFN=" << IMAGE_REL_PPC_TOCDEFN << std::endl;
    std::cout << "IMAGE_REL_PPC_TOCREL14=" << IMAGE_REL_PPC_TOCREL14 << std::endl;
    std::cout << "IMAGE_REL_PPC_TOCREL16=" << IMAGE_REL_PPC_TOCREL16 << std::endl;
    std::cout << "IMAGE_REL_PPC_TOKEN=" << IMAGE_REL_PPC_TOKEN << std::endl;
    std::cout << "IMAGE_REL_PPC_TYPEMASK=" << IMAGE_REL_PPC_TYPEMASK << std::endl;
    std::cout << "IMAGE_REL_SH3_ABSOLUTE=" << IMAGE_REL_SH3_ABSOLUTE << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT16=" << IMAGE_REL_SH3_DIRECT16 << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT32=" << IMAGE_REL_SH3_DIRECT32 << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT32_NB=" << IMAGE_REL_SH3_DIRECT32_NB << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT4=" << IMAGE_REL_SH3_DIRECT4 << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT4_LONG=" << IMAGE_REL_SH3_DIRECT4_LONG << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT4_WORD=" << IMAGE_REL_SH3_DIRECT4_WORD << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT8=" << IMAGE_REL_SH3_DIRECT8 << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT8_LONG=" << IMAGE_REL_SH3_DIRECT8_LONG << std::endl;
    std::cout << "IMAGE_REL_SH3_DIRECT8_WORD=" << IMAGE_REL_SH3_DIRECT8_WORD << std::endl;
    std::cout << "IMAGE_REL_SH3_GPREL4_LONG=" << IMAGE_REL_SH3_GPREL4_LONG << std::endl;
    std::cout << "IMAGE_REL_SH3_PCREL12_WORD=" << IMAGE_REL_SH3_PCREL12_WORD << std::endl;
    std::cout << "IMAGE_REL_SH3_PCREL8_LONG=" << IMAGE_REL_SH3_PCREL8_LONG << std::endl;
    std::cout << "IMAGE_REL_SH3_PCREL8_WORD=" << IMAGE_REL_SH3_PCREL8_WORD << std::endl;
    std::cout << "IMAGE_REL_SH3_SECREL=" << IMAGE_REL_SH3_SECREL << std::endl;
    std::cout << "IMAGE_REL_SH3_SECTION=" << IMAGE_REL_SH3_SECTION << std::endl;
    std::cout << "IMAGE_REL_SH3_SIZEOF_SECTION=" << IMAGE_REL_SH3_SIZEOF_SECTION << std::endl;
    std::cout << "IMAGE_REL_SH3_STARTOF_SECTION=" << IMAGE_REL_SH3_STARTOF_SECTION << std::endl;
    std::cout << "IMAGE_REL_SH3_TOKEN=" << IMAGE_REL_SH3_TOKEN << std::endl;
    std::cout << "IMAGE_REL_SHM_PAIR=" << IMAGE_REL_SHM_PAIR << std::endl;
    std::cout << "IMAGE_REL_SHM_PCRELPT=" << IMAGE_REL_SHM_PCRELPT << std::endl;
    std::cout << "IMAGE_REL_SHM_REFHALF=" << IMAGE_REL_SHM_REFHALF << std::endl;
    std::cout << "IMAGE_REL_SHM_REFLO=" << IMAGE_REL_SHM_REFLO << std::endl;
    std::cout << "IMAGE_REL_SHM_RELHALF=" << IMAGE_REL_SHM_RELHALF << std::endl;
    std::cout << "IMAGE_REL_SHM_RELLO=" << IMAGE_REL_SHM_RELLO << std::endl;
    std::cout << "IMAGE_REL_SH_NOMODE=" << IMAGE_REL_SH_NOMODE << std::endl;
    std::cout << "IMAGE_REL_THUMB_BLX23=" << IMAGE_REL_THUMB_BLX23 << std::endl;
    std::cout << "IMAGE_REL_THUMB_BRANCH20=" << IMAGE_REL_THUMB_BRANCH20 << std::endl;
    std::cout << "IMAGE_REL_THUMB_BRANCH24=" << IMAGE_REL_THUMB_BRANCH24 << std::endl;
    std::cout << "IMAGE_REL_THUMB_MOV32=" << IMAGE_REL_THUMB_MOV32 << std::endl;
    std::cout << "IMAGE_RESOURCE_DATA_IS_DIRECTORY=" << IMAGE_RESOURCE_DATA_IS_DIRECTORY << std::endl;
    std::cout << "IMAGE_RESOURCE_NAME_IS_STRING=" << IMAGE_RESOURCE_NAME_IS_STRING << std::endl;
    std::cout << "IMAGE_ROM_OPTIONAL_HDR_MAGIC=" << IMAGE_ROM_OPTIONAL_HDR_MAGIC << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_1024BYTES=" << IMAGE_SCN_ALIGN_1024BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_128BYTES=" << IMAGE_SCN_ALIGN_128BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_16BYTES=" << IMAGE_SCN_ALIGN_16BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_1BYTES=" << IMAGE_SCN_ALIGN_1BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_2048BYTES=" << IMAGE_SCN_ALIGN_2048BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_256BYTES=" << IMAGE_SCN_ALIGN_256BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_2BYTES=" << IMAGE_SCN_ALIGN_2BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_32BYTES=" << IMAGE_SCN_ALIGN_32BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_4096BYTES=" << IMAGE_SCN_ALIGN_4096BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_4BYTES=" << IMAGE_SCN_ALIGN_4BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_512BYTES=" << IMAGE_SCN_ALIGN_512BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_64BYTES=" << IMAGE_SCN_ALIGN_64BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_8192BYTES=" << IMAGE_SCN_ALIGN_8192BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_8BYTES=" << IMAGE_SCN_ALIGN_8BYTES << std::endl;
    std::cout << "IMAGE_SCN_ALIGN_MASK=" << IMAGE_SCN_ALIGN_MASK << std::endl;
    std::cout << "IMAGE_SCN_CNT_CODE=" << IMAGE_SCN_CNT_CODE << std::endl;
    std::cout << "IMAGE_SCN_CNT_INITIALIZED_DATA=" << IMAGE_SCN_CNT_INITIALIZED_DATA << std::endl;
    std::cout << "IMAGE_SCN_CNT_UNINITIALIZED_DATA=" << IMAGE_SCN_CNT_UNINITIALIZED_DATA << std::endl;
    std::cout << "IMAGE_SCN_GPREL=" << IMAGE_SCN_GPREL << std::endl;
    std::cout << "IMAGE_SCN_LNK_COMDAT=" << IMAGE_SCN_LNK_COMDAT << std::endl;
    std::cout << "IMAGE_SCN_LNK_INFO=" << IMAGE_SCN_LNK_INFO << std::endl;
    std::cout << "IMAGE_SCN_LNK_NRELOC_OVFL=" << IMAGE_SCN_LNK_NRELOC_OVFL << std::endl;
    std::cout << "IMAGE_SCN_LNK_OTHER=" << IMAGE_SCN_LNK_OTHER << std::endl;
    std::cout << "IMAGE_SCN_LNK_REMOVE=" << IMAGE_SCN_LNK_REMOVE << std::endl;
    std::cout << "IMAGE_SCN_MEM_16BIT=" << IMAGE_SCN_MEM_16BIT << std::endl;
    std::cout << "IMAGE_SCN_MEM_DISCARDABLE=" << IMAGE_SCN_MEM_DISCARDABLE << std::endl;
    std::cout << "IMAGE_SCN_MEM_EXECUTE=" << IMAGE_SCN_MEM_EXECUTE << std::endl;
    std::cout << "IMAGE_SCN_MEM_FARDATA=" << IMAGE_SCN_MEM_FARDATA << std::endl;
    std::cout << "IMAGE_SCN_MEM_LOCKED=" << IMAGE_SCN_MEM_LOCKED << std::endl;
    std::cout << "IMAGE_SCN_MEM_NOT_CACHED=" << IMAGE_SCN_MEM_NOT_CACHED << std::endl;
    std::cout << "IMAGE_SCN_MEM_NOT_PAGED=" << IMAGE_SCN_MEM_NOT_PAGED << std::endl;
    std::cout << "IMAGE_SCN_MEM_PRELOAD=" << IMAGE_SCN_MEM_PRELOAD << std::endl;
    std::cout << "IMAGE_SCN_MEM_PURGEABLE=" << IMAGE_SCN_MEM_PURGEABLE << std::endl;
    std::cout << "IMAGE_SCN_MEM_READ=" << IMAGE_SCN_MEM_READ << std::endl;
    std::cout << "IMAGE_SCN_MEM_SHARED=" << IMAGE_SCN_MEM_SHARED << std::endl;
    std::cout << "IMAGE_SCN_MEM_WRITE=" << IMAGE_SCN_MEM_WRITE << std::endl;
    std::cout << "IMAGE_SCN_NO_DEFER_SPEC_EXC=" << IMAGE_SCN_NO_DEFER_SPEC_EXC << std::endl;
    std::cout << "IMAGE_SCN_SCALE_INDEX=" << IMAGE_SCN_SCALE_INDEX << std::endl;
    std::cout << "IMAGE_SCN_TYPE_NO_PAD=" << IMAGE_SCN_TYPE_NO_PAD << std::endl;
    std::cout << "IMAGE_SEPARATE_DEBUG_FLAGS_MASK=" << IMAGE_SEPARATE_DEBUG_FLAGS_MASK << std::endl;
    std::cout << "IMAGE_SEPARATE_DEBUG_MISMATCH=" << IMAGE_SEPARATE_DEBUG_MISMATCH << std::endl;
    std::cout << "IMAGE_SEPARATE_DEBUG_SIGNATURE=" << IMAGE_SEPARATE_DEBUG_SIGNATURE << std::endl;
    std::cout << "IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR=" << IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR << std::endl;
    std::cout << "IMAGE_SIZEOF_AUX_SYMBOL=" << IMAGE_SIZEOF_AUX_SYMBOL << std::endl;
    std::cout << "IMAGE_SIZEOF_BASE_RELOCATION=" << IMAGE_SIZEOF_BASE_RELOCATION << std::endl;
    std::cout << "IMAGE_SIZEOF_FILE_HEADER=" << IMAGE_SIZEOF_FILE_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_LINENUMBER=" << IMAGE_SIZEOF_LINENUMBER << std::endl;
    std::cout << "IMAGE_SIZEOF_NT_OPTIONAL32_HEADER=" << IMAGE_SIZEOF_NT_OPTIONAL32_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_NT_OPTIONAL64_HEADER=" << IMAGE_SIZEOF_NT_OPTIONAL64_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_NT_OPTIONAL_HEADER=" << IMAGE_SIZEOF_NT_OPTIONAL_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_RELOCATION=" << IMAGE_SIZEOF_RELOCATION << std::endl;
    std::cout << "IMAGE_SIZEOF_ROM_OPTIONAL_HEADER=" << IMAGE_SIZEOF_ROM_OPTIONAL_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_SECTION_HEADER=" << IMAGE_SIZEOF_SECTION_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_SHORT_NAME=" << IMAGE_SIZEOF_SHORT_NAME << std::endl;
    std::cout << "IMAGE_SIZEOF_STD_OPTIONAL_HEADER=" << IMAGE_SIZEOF_STD_OPTIONAL_HEADER << std::endl;
    std::cout << "IMAGE_SIZEOF_SYMBOL=" << IMAGE_SIZEOF_SYMBOL << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_EFI_APPLICATION=" << IMAGE_SUBSYSTEM_EFI_APPLICATION << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER=" << IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_EFI_ROM=" << IMAGE_SUBSYSTEM_EFI_ROM << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER=" << IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_NATIVE=" << IMAGE_SUBSYSTEM_NATIVE << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_NATIVE_WINDOWS=" << IMAGE_SUBSYSTEM_NATIVE_WINDOWS << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_OS2_CUI=" << IMAGE_SUBSYSTEM_OS2_CUI << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_POSIX_CUI=" << IMAGE_SUBSYSTEM_POSIX_CUI << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_UNKNOWN=" << IMAGE_SUBSYSTEM_UNKNOWN << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION=" << IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_WINDOWS_CE_GUI=" << IMAGE_SUBSYSTEM_WINDOWS_CE_GUI << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_WINDOWS_CUI=" << IMAGE_SUBSYSTEM_WINDOWS_CUI << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_WINDOWS_GUI=" << IMAGE_SUBSYSTEM_WINDOWS_GUI << std::endl;
    std::cout << "IMAGE_SUBSYSTEM_XBOX=" << IMAGE_SUBSYSTEM_XBOX << std::endl;
    std::cout << "IMAGE_SYM_CLASS_ARGUMENT=" << IMAGE_SYM_CLASS_ARGUMENT << std::endl;
    std::cout << "IMAGE_SYM_CLASS_AUTOMATIC=" << IMAGE_SYM_CLASS_AUTOMATIC << std::endl;
    std::cout << "IMAGE_SYM_CLASS_BIT_FIELD=" << IMAGE_SYM_CLASS_BIT_FIELD << std::endl;
    std::cout << "IMAGE_SYM_CLASS_BLOCK=" << IMAGE_SYM_CLASS_BLOCK << std::endl;
    std::cout << "IMAGE_SYM_CLASS_CLR_TOKEN=" << IMAGE_SYM_CLASS_CLR_TOKEN << std::endl;
    std::cout << "IMAGE_SYM_CLASS_END_OF_STRUCT=" << IMAGE_SYM_CLASS_END_OF_STRUCT << std::endl;
    std::cout << "IMAGE_SYM_CLASS_ENUM_TAG=" << IMAGE_SYM_CLASS_ENUM_TAG << std::endl;
    std::cout << "IMAGE_SYM_CLASS_EXTERNAL=" << IMAGE_SYM_CLASS_EXTERNAL << std::endl;
    std::cout << "IMAGE_SYM_CLASS_EXTERNAL_DEF=" << IMAGE_SYM_CLASS_EXTERNAL_DEF << std::endl;
    std::cout << "IMAGE_SYM_CLASS_FAR_EXTERNAL=" << IMAGE_SYM_CLASS_FAR_EXTERNAL << std::endl;
    std::cout << "IMAGE_SYM_CLASS_FILE=" << IMAGE_SYM_CLASS_FILE << std::endl;
    std::cout << "IMAGE_SYM_CLASS_FUNCTION=" << IMAGE_SYM_CLASS_FUNCTION << std::endl;
    std::cout << "IMAGE_SYM_CLASS_LABEL=" << IMAGE_SYM_CLASS_LABEL << std::endl;
    std::cout << "IMAGE_SYM_CLASS_MEMBER_OF_ENUM=" << IMAGE_SYM_CLASS_MEMBER_OF_ENUM << std::endl;
    std::cout << "IMAGE_SYM_CLASS_MEMBER_OF_STRUCT=" << IMAGE_SYM_CLASS_MEMBER_OF_STRUCT << std::endl;
    std::cout << "IMAGE_SYM_CLASS_MEMBER_OF_UNION=" << IMAGE_SYM_CLASS_MEMBER_OF_UNION << std::endl;
    std::cout << "IMAGE_SYM_CLASS_NULL=" << IMAGE_SYM_CLASS_NULL << std::endl;
    std::cout << "IMAGE_SYM_CLASS_REGISTER=" << IMAGE_SYM_CLASS_REGISTER << std::endl;
    std::cout << "IMAGE_SYM_CLASS_REGISTER_PARAM=" << IMAGE_SYM_CLASS_REGISTER_PARAM << std::endl;
    std::cout << "IMAGE_SYM_CLASS_SECTION=" << IMAGE_SYM_CLASS_SECTION << std::endl;
    std::cout << "IMAGE_SYM_CLASS_STATIC=" << IMAGE_SYM_CLASS_STATIC << std::endl;
    std::cout << "IMAGE_SYM_CLASS_STRUCT_TAG=" << IMAGE_SYM_CLASS_STRUCT_TAG << std::endl;
    std::cout << "IMAGE_SYM_CLASS_TYPE_DEFINITION=" << IMAGE_SYM_CLASS_TYPE_DEFINITION << std::endl;
    std::cout << "IMAGE_SYM_CLASS_UNDEFINED_LABEL=" << IMAGE_SYM_CLASS_UNDEFINED_LABEL << std::endl;
    std::cout << "IMAGE_SYM_CLASS_UNDEFINED_STATIC=" << IMAGE_SYM_CLASS_UNDEFINED_STATIC << std::endl;
    std::cout << "IMAGE_SYM_CLASS_UNION_TAG=" << IMAGE_SYM_CLASS_UNION_TAG << std::endl;
    std::cout << "IMAGE_SYM_CLASS_WEAK_EXTERNAL=" << IMAGE_SYM_CLASS_WEAK_EXTERNAL << std::endl;
    std::cout << "IMAGE_SYM_DTYPE_ARRAY=" << IMAGE_SYM_DTYPE_ARRAY << std::endl;
    std::cout << "IMAGE_SYM_DTYPE_FUNCTION=" << IMAGE_SYM_DTYPE_FUNCTION << std::endl;
    std::cout << "IMAGE_SYM_DTYPE_NULL=" << IMAGE_SYM_DTYPE_NULL << std::endl;
    std::cout << "IMAGE_SYM_DTYPE_POINTER=" << IMAGE_SYM_DTYPE_POINTER << std::endl;
    std::cout << "IMAGE_SYM_SECTION_MAX=" << IMAGE_SYM_SECTION_MAX << std::endl;
    std::cout << "IMAGE_SYM_TYPE_BYTE=" << IMAGE_SYM_TYPE_BYTE << std::endl;
    std::cout << "IMAGE_SYM_TYPE_CHAR=" << IMAGE_SYM_TYPE_CHAR << std::endl;
    std::cout << "IMAGE_SYM_TYPE_DOUBLE=" << IMAGE_SYM_TYPE_DOUBLE << std::endl;
    std::cout << "IMAGE_SYM_TYPE_DWORD=" << IMAGE_SYM_TYPE_DWORD << std::endl;
    std::cout << "IMAGE_SYM_TYPE_ENUM=" << IMAGE_SYM_TYPE_ENUM << std::endl;
    std::cout << "IMAGE_SYM_TYPE_FLOAT=" << IMAGE_SYM_TYPE_FLOAT << std::endl;
    std::cout << "IMAGE_SYM_TYPE_INT=" << IMAGE_SYM_TYPE_INT << std::endl;
    std::cout << "IMAGE_SYM_TYPE_LONG=" << IMAGE_SYM_TYPE_LONG << std::endl;
    std::cout << "IMAGE_SYM_TYPE_MOE=" << IMAGE_SYM_TYPE_MOE << std::endl;
    std::cout << "IMAGE_SYM_TYPE_NULL=" << IMAGE_SYM_TYPE_NULL << std::endl;
    std::cout << "IMAGE_SYM_TYPE_PCODE=" << IMAGE_SYM_TYPE_PCODE << std::endl;
    std::cout << "IMAGE_SYM_TYPE_SHORT=" << IMAGE_SYM_TYPE_SHORT << std::endl;
    std::cout << "IMAGE_SYM_TYPE_STRUCT=" << IMAGE_SYM_TYPE_STRUCT << std::endl;
    std::cout << "IMAGE_SYM_TYPE_UINT=" << IMAGE_SYM_TYPE_UINT << std::endl;
    std::cout << "IMAGE_SYM_TYPE_UNION=" << IMAGE_SYM_TYPE_UNION << std::endl;
    std::cout << "IMAGE_SYM_TYPE_VOID=" << IMAGE_SYM_TYPE_VOID << std::endl;
    std::cout << "IMAGE_SYM_TYPE_WORD=" << IMAGE_SYM_TYPE_WORD << std::endl;
    std::cout << "IMAGE_VXD_SIGNATURE=" << IMAGE_VXD_SIGNATURE << std::endl;
    std::cout << "IMAGE_WEAK_EXTERN_SEARCH_ALIAS=" << IMAGE_WEAK_EXTERN_SEARCH_ALIAS << std::endl;
    std::cout << "IMAGE_WEAK_EXTERN_SEARCH_LIBRARY=" << IMAGE_WEAK_EXTERN_SEARCH_LIBRARY << std::endl;
    std::cout << "IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY=" << IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY << std::endl;
    std::cout << "IMC_CLOSESTATUSWINDOW=" << IMC_CLOSESTATUSWINDOW << std::endl;
    std::cout << "IMC_GETCANDIDATEPOS=" << IMC_GETCANDIDATEPOS << std::endl;
    std::cout << "IMC_GETCOMPOSITIONFONT=" << IMC_GETCOMPOSITIONFONT << std::endl;
    std::cout << "IMC_GETCOMPOSITIONWINDOW=" << IMC_GETCOMPOSITIONWINDOW << std::endl;
    std::cout << "IMC_GETSTATUSWINDOWPOS=" << IMC_GETSTATUSWINDOWPOS << std::endl;
    std::cout << "IMC_OPENSTATUSWINDOW=" << IMC_OPENSTATUSWINDOW << std::endl;
    std::cout << "IMC_SETCANDIDATEPOS=" << IMC_SETCANDIDATEPOS << std::endl;
    std::cout << "IMC_SETCOMPOSITIONFONT=" << IMC_SETCOMPOSITIONFONT << std::endl;
    std::cout << "IMC_SETCOMPOSITIONWINDOW=" << IMC_SETCOMPOSITIONWINDOW << std::endl;
    std::cout << "IMC_SETSTATUSWINDOWPOS=" << IMC_SETSTATUSWINDOWPOS << std::endl;
    std::cout << "IMEMENUITEM_STRING_SIZE=" << IMEMENUITEM_STRING_SIZE << std::endl;
    std::cout << "IMEVER_0310=" << IMEVER_0310 << std::endl;
    std::cout << "IMEVER_0400=" << IMEVER_0400 << std::endl;
    std::cout << "IME_CAND_CODE=" << IME_CAND_CODE << std::endl;
    std::cout << "IME_CAND_MEANING=" << IME_CAND_MEANING << std::endl;
    std::cout << "IME_CAND_RADICAL=" << IME_CAND_RADICAL << std::endl;
    std::cout << "IME_CAND_READ=" << IME_CAND_READ << std::endl;
    std::cout << "IME_CAND_STROKE=" << IME_CAND_STROKE << std::endl;
    std::cout << "IME_CAND_UNKNOWN=" << IME_CAND_UNKNOWN << std::endl;
    std::cout << "IME_CHOTKEY_IME_NONIME_TOGGLE=" << IME_CHOTKEY_IME_NONIME_TOGGLE << std::endl;
    std::cout << "IME_CHOTKEY_SHAPE_TOGGLE=" << IME_CHOTKEY_SHAPE_TOGGLE << std::endl;
    std::cout << "IME_CHOTKEY_SYMBOL_TOGGLE=" << IME_CHOTKEY_SYMBOL_TOGGLE << std::endl;
    std::cout << "IME_CMODE_ALPHANUMERIC=" << IME_CMODE_ALPHANUMERIC << std::endl;
    std::cout << "IME_CMODE_CHARCODE=" << IME_CMODE_CHARCODE << std::endl;
    std::cout << "IME_CMODE_CHINESE=" << IME_CMODE_CHINESE << std::endl;
    std::cout << "IME_CMODE_EUDC=" << IME_CMODE_EUDC << std::endl;
    std::cout << "IME_CMODE_FIXED=" << IME_CMODE_FIXED << std::endl;
    std::cout << "IME_CMODE_FULLSHAPE=" << IME_CMODE_FULLSHAPE << std::endl;
    std::cout << "IME_CMODE_HANGEUL=" << IME_CMODE_HANGEUL << std::endl;
    std::cout << "IME_CMODE_HANGUL=" << IME_CMODE_HANGUL << std::endl;
    std::cout << "IME_CMODE_HANJACONVERT=" << IME_CMODE_HANJACONVERT << std::endl;
    std::cout << "IME_CMODE_JAPANESE=" << IME_CMODE_JAPANESE << std::endl;
    std::cout << "IME_CMODE_KATAKANA=" << IME_CMODE_KATAKANA << std::endl;
    std::cout << "IME_CMODE_LANGUAGE=" << IME_CMODE_LANGUAGE << std::endl;
    std::cout << "IME_CMODE_NATIVE=" << IME_CMODE_NATIVE << std::endl;
    std::cout << "IME_CMODE_NOCONVERSION=" << IME_CMODE_NOCONVERSION << std::endl;
    std::cout << "IME_CMODE_RESERVED=" << IME_CMODE_RESERVED << std::endl;
    std::cout << "IME_CMODE_ROMAN=" << IME_CMODE_ROMAN << std::endl;
    std::cout << "IME_CMODE_SOFTKBD=" << IME_CMODE_SOFTKBD << std::endl;
    std::cout << "IME_CMODE_SYMBOL=" << IME_CMODE_SYMBOL << std::endl;
    std::cout << "IME_CONFIG_GENERAL=" << IME_CONFIG_GENERAL << std::endl;
    std::cout << "IME_CONFIG_REGISTERWORD=" << IME_CONFIG_REGISTERWORD << std::endl;
    std::cout << "IME_CONFIG_SELECTDICTIONARY=" << IME_CONFIG_SELECTDICTIONARY << std::endl;
    std::cout << "IME_ESC_AUTOMATA=" << IME_ESC_AUTOMATA << std::endl;
    std::cout << "IME_ESC_GET_EUDC_DICTIONARY=" << IME_ESC_GET_EUDC_DICTIONARY << std::endl;
    std::cout << "IME_ESC_HANJA_MODE=" << IME_ESC_HANJA_MODE << std::endl;
    std::cout << "IME_ESC_IME_NAME=" << IME_ESC_IME_NAME << std::endl;
    std::cout << "IME_ESC_MAX_KEY=" << IME_ESC_MAX_KEY << std::endl;
    std::cout << "IME_ESC_PRIVATE_FIRST=" << IME_ESC_PRIVATE_FIRST << std::endl;
    std::cout << "IME_ESC_PRIVATE_LAST=" << IME_ESC_PRIVATE_LAST << std::endl;
    std::cout << "IME_ESC_QUERY_SUPPORT=" << IME_ESC_QUERY_SUPPORT << std::endl;
    std::cout << "IME_ESC_RESERVED_FIRST=" << IME_ESC_RESERVED_FIRST << std::endl;
    std::cout << "IME_ESC_RESERVED_LAST=" << IME_ESC_RESERVED_LAST << std::endl;
    std::cout << "IME_ESC_SEQUENCE_TO_INTERNAL=" << IME_ESC_SEQUENCE_TO_INTERNAL << std::endl;
    std::cout << "IME_ESC_SET_EUDC_DICTIONARY=" << IME_ESC_SET_EUDC_DICTIONARY << std::endl;
    std::cout << "IME_ESC_SYNC_HOTKEY=" << IME_ESC_SYNC_HOTKEY << std::endl;
    std::cout << "IME_HOTKEY_DSWITCH_FIRST=" << IME_HOTKEY_DSWITCH_FIRST << std::endl;
    std::cout << "IME_HOTKEY_DSWITCH_LAST=" << IME_HOTKEY_DSWITCH_LAST << std::endl;
    std::cout << "IME_HOTKEY_PRIVATE_FIRST=" << IME_HOTKEY_PRIVATE_FIRST << std::endl;
    std::cout << "IME_HOTKEY_PRIVATE_LAST=" << IME_HOTKEY_PRIVATE_LAST << std::endl;
    std::cout << "IME_ITHOTKEY_PREVIOUS_COMPOSITION=" << IME_ITHOTKEY_PREVIOUS_COMPOSITION << std::endl;
    std::cout << "IME_ITHOTKEY_RECONVERTSTRING=" << IME_ITHOTKEY_RECONVERTSTRING << std::endl;
    std::cout << "IME_ITHOTKEY_RESEND_RESULTSTR=" << IME_ITHOTKEY_RESEND_RESULTSTR << std::endl;
    std::cout << "IME_ITHOTKEY_UISTYLE_TOGGLE=" << IME_ITHOTKEY_UISTYLE_TOGGLE << std::endl;
    std::cout << "IME_JHOTKEY_CLOSE_OPEN=" << IME_JHOTKEY_CLOSE_OPEN << std::endl;
    std::cout << "IME_KHOTKEY_ENGLISH=" << IME_KHOTKEY_ENGLISH << std::endl;
    std::cout << "IME_KHOTKEY_HANJACONVERT=" << IME_KHOTKEY_HANJACONVERT << std::endl;
    std::cout << "IME_KHOTKEY_SHAPE_TOGGLE=" << IME_KHOTKEY_SHAPE_TOGGLE << std::endl;
    std::cout << "IME_PROP_AT_CARET=" << IME_PROP_AT_CARET << std::endl;
    std::cout << "IME_PROP_CANDLIST_START_FROM_1=" << IME_PROP_CANDLIST_START_FROM_1 << std::endl;
    std::cout << "IME_PROP_COMPLETE_ON_UNSELECT=" << IME_PROP_COMPLETE_ON_UNSELECT << std::endl;
    std::cout << "IME_PROP_SPECIAL_UI=" << IME_PROP_SPECIAL_UI << std::endl;
    std::cout << "IME_PROP_UNICODE=" << IME_PROP_UNICODE << std::endl;
    std::cout << "IME_REGWORD_STYLE_EUDC=" << IME_REGWORD_STYLE_EUDC << std::endl;
    std::cout << "IME_REGWORD_STYLE_USER_FIRST=" << IME_REGWORD_STYLE_USER_FIRST << std::endl;
    std::cout << "IME_REGWORD_STYLE_USER_LAST=" << IME_REGWORD_STYLE_USER_LAST << std::endl;
    std::cout << "IME_SMODE_AUTOMATIC=" << IME_SMODE_AUTOMATIC << std::endl;
    std::cout << "IME_SMODE_CONVERSATION=" << IME_SMODE_CONVERSATION << std::endl;
    std::cout << "IME_SMODE_NONE=" << IME_SMODE_NONE << std::endl;
    std::cout << "IME_SMODE_PHRASEPREDICT=" << IME_SMODE_PHRASEPREDICT << std::endl;
    std::cout << "IME_SMODE_PLAURALCLAUSE=" << IME_SMODE_PLAURALCLAUSE << std::endl;
    std::cout << "IME_SMODE_RESERVED=" << IME_SMODE_RESERVED << std::endl;
    std::cout << "IME_SMODE_SINGLECONVERT=" << IME_SMODE_SINGLECONVERT << std::endl;
    std::cout << "IME_THOTKEY_IME_NONIME_TOGGLE=" << IME_THOTKEY_IME_NONIME_TOGGLE << std::endl;
    std::cout << "IME_THOTKEY_SHAPE_TOGGLE=" << IME_THOTKEY_SHAPE_TOGGLE << std::endl;
    std::cout << "IME_THOTKEY_SYMBOL_TOGGLE=" << IME_THOTKEY_SYMBOL_TOGGLE << std::endl;
    std::cout << "IMFS_CHECKED=" << IMFS_CHECKED << std::endl;
    std::cout << "IMFS_DEFAULT=" << IMFS_DEFAULT << std::endl;
    std::cout << "IMFS_DISABLED=" << IMFS_DISABLED << std::endl;
    std::cout << "IMFS_ENABLED=" << IMFS_ENABLED << std::endl;
    std::cout << "IMFS_GRAYED=" << IMFS_GRAYED << std::endl;
    std::cout << "IMFS_HILITE=" << IMFS_HILITE << std::endl;
    std::cout << "IMFS_UNCHECKED=" << IMFS_UNCHECKED << std::endl;
    std::cout << "IMFS_UNHILITE=" << IMFS_UNHILITE << std::endl;
    std::cout << "IMFT_RADIOCHECK=" << IMFT_RADIOCHECK << std::endl;
    std::cout << "IMFT_SEPARATOR=" << IMFT_SEPARATOR << std::endl;
    std::cout << "IMFT_SUBMENU=" << IMFT_SUBMENU << std::endl;
    std::cout << "IMM_ERROR_GENERAL=" << IMM_ERROR_GENERAL << std::endl;
    std::cout << "IMM_ERROR_NODATA=" << IMM_ERROR_NODATA << std::endl;
    std::cout << "IMN_CHANGECANDIDATE=" << IMN_CHANGECANDIDATE << std::endl;
    std::cout << "IMN_CLOSECANDIDATE=" << IMN_CLOSECANDIDATE << std::endl;
    std::cout << "IMN_CLOSESTATUSWINDOW=" << IMN_CLOSESTATUSWINDOW << std::endl;
    std::cout << "IMN_GUIDELINE=" << IMN_GUIDELINE << std::endl;
    std::cout << "IMN_OPENCANDIDATE=" << IMN_OPENCANDIDATE << std::endl;
    std::cout << "IMN_OPENSTATUSWINDOW=" << IMN_OPENSTATUSWINDOW << std::endl;
    std::cout << "IMN_PRIVATE=" << IMN_PRIVATE << std::endl;
    std::cout << "IMN_SETCANDIDATEPOS=" << IMN_SETCANDIDATEPOS << std::endl;
    std::cout << "IMN_SETCOMPOSITIONFONT=" << IMN_SETCOMPOSITIONFONT << std::endl;
    std::cout << "IMN_SETCOMPOSITIONWINDOW=" << IMN_SETCOMPOSITIONWINDOW << std::endl;
    std::cout << "IMN_SETCONVERSIONMODE=" << IMN_SETCONVERSIONMODE << std::endl;
    std::cout << "IMN_SETOPENSTATUS=" << IMN_SETOPENSTATUS << std::endl;
    std::cout << "IMN_SETSENTENCEMODE=" << IMN_SETSENTENCEMODE << std::endl;
    std::cout << "IMN_SETSTATUSWINDOWPOS=" << IMN_SETSTATUSWINDOWPOS << std::endl;
    std::cout << "IMPLINK_HIGHEXPER=" << IMPLINK_HIGHEXPER << std::endl;
    std::cout << "IMPLINK_IP=" << IMPLINK_IP << std::endl;
    std::cout << "IMPLINK_LOWEXPER=" << IMPLINK_LOWEXPER << std::endl;
    std::cout << "IMPLTYPEFLAG_FDEFAULT=" << IMPLTYPEFLAG_FDEFAULT << std::endl;
    std::cout << "IMPLTYPEFLAG_FDEFAULTVTABLE=" << IMPLTYPEFLAG_FDEFAULTVTABLE << std::endl;
    std::cout << "IMPLTYPEFLAG_FRESTRICTED=" << IMPLTYPEFLAG_FRESTRICTED << std::endl;
    std::cout << "IMPLTYPEFLAG_FSOURCE=" << IMPLTYPEFLAG_FSOURCE << std::endl;
    std::cout << "IMR_CANDIDATEWINDOW=" << IMR_CANDIDATEWINDOW << std::endl;
    std::cout << "IMR_COMPOSITIONFONT=" << IMR_COMPOSITIONFONT << std::endl;
    std::cout << "IMR_COMPOSITIONWINDOW=" << IMR_COMPOSITIONWINDOW << std::endl;
    std::cout << "IMR_CONFIRMRECONVERTSTRING=" << IMR_CONFIRMRECONVERTSTRING << std::endl;
    std::cout << "IMR_DOCUMENTFEED=" << IMR_DOCUMENTFEED << std::endl;
    std::cout << "IMR_QUERYCHARPOSITION=" << IMR_QUERYCHARPOSITION << std::endl;
    std::cout << "IMR_RECONVERTSTRING=" << IMR_RECONVERTSTRING << std::endl;
    std::cout << "INDEXID_CONTAINER=" << INDEXID_CONTAINER << std::endl;
    std::cout << "INDEXID_OBJECT=" << INDEXID_OBJECT << std::endl;
    std::cout << "INHERITED_ACE=" << INHERITED_ACE << std::endl;
    std::cout << "INHERIT_CALLER_PRIORITY=" << INHERIT_CALLER_PRIORITY << std::endl;
    std::cout << "INHERIT_ONLY_ACE=" << INHERIT_ONLY_ACE << std::endl;
    std::cout << "INHERIT_PARENT_AFFINITY=" << INHERIT_PARENT_AFFINITY << std::endl;
    std::cout << "INITIAL_CPSR=" << INITIAL_CPSR << std::endl;
    std::cout << "INITIAL_FPSCR=" << INITIAL_FPSCR << std::endl;
    std::cout << "INIT_ONCE_CTX_RESERVED_BITS=" << INIT_ONCE_CTX_RESERVED_BITS << std::endl;
    std::cout << "INPUTLANGCHANGE_BACKWARD=" << INPUTLANGCHANGE_BACKWARD << std::endl;
    std::cout << "INPUTLANGCHANGE_FORWARD=" << INPUTLANGCHANGE_FORWARD << std::endl;
    std::cout << "INPUTLANGCHANGE_SYSCHARSET=" << INPUTLANGCHANGE_SYSCHARSET << std::endl;
    std::cout << "INPUT_HARDWARE=" << INPUT_HARDWARE << std::endl;
    std::cout << "INPUT_KEYBOARD=" << INPUT_KEYBOARD << std::endl;
    std::cout << "INPUT_MOUSE=" << INPUT_MOUSE << std::endl;
    std::cout << "INTERNATIONAL_USAGE=" << INTERNATIONAL_USAGE << std::endl;
    std::cout << "INT_MAX=" << INT_MAX << std::endl;
    std::cout << "INT_MIN=" << INT_MIN << std::endl;
    std::cout << "IN_CLASSA_MAX=" << IN_CLASSA_MAX << std::endl;
    std::cout << "IN_CLASSA_NSHIFT=" << IN_CLASSA_NSHIFT << std::endl;
    std::cout << "IN_CLASSB_MAX=" << IN_CLASSB_MAX << std::endl;
    std::cout << "IN_CLASSB_NSHIFT=" << IN_CLASSB_NSHIFT << std::endl;
    std::cout << "IN_CLASSC_NSHIFT=" << IN_CLASSC_NSHIFT << std::endl;
    std::cout << "IOCTL_CHANGER_BASE=" << IOCTL_CHANGER_BASE << std::endl;
    std::cout << "IOCTL_DISK_BASE=" << IOCTL_DISK_BASE << std::endl;
    std::cout << "IOC_IN=" << IOC_IN << std::endl;
    std::cout << "IOC_INOUT=" << IOC_INOUT << std::endl;
    std::cout << "IOC_OUT=" << IOC_OUT << std::endl;
    std::cout << "IOC_VOID=" << IOC_VOID << std::endl;
    std::cout << "IO_COMPLETION_ALL_ACCESS=" << IO_COMPLETION_ALL_ACCESS << std::endl;
    std::cout << "IO_COMPLETION_MODIFY_STATE=" << IO_COMPLETION_MODIFY_STATE << std::endl;
    std::cout << "IO_REPARSE_TAG_RESERVED_ONE=" << IO_REPARSE_TAG_RESERVED_ONE << std::endl;
    std::cout << "IO_REPARSE_TAG_RESERVED_RANGE=" << IO_REPARSE_TAG_RESERVED_RANGE << std::endl;
    std::cout << "IO_REPARSE_TAG_RESERVED_ZERO=" << IO_REPARSE_TAG_RESERVED_ZERO << std::endl;
    std::cout << "IPPORT_BIFFUDP=" << IPPORT_BIFFUDP << std::endl;
    std::cout << "IPPORT_CMDSERVER=" << IPPORT_CMDSERVER << std::endl;
    std::cout << "IPPORT_DAYTIME=" << IPPORT_DAYTIME << std::endl;
    std::cout << "IPPORT_DISCARD=" << IPPORT_DISCARD << std::endl;
    std::cout << "IPPORT_ECHO=" << IPPORT_ECHO << std::endl;
    std::cout << "IPPORT_EFSSERVER=" << IPPORT_EFSSERVER << std::endl;
    std::cout << "IPPORT_EXECSERVER=" << IPPORT_EXECSERVER << std::endl;
    std::cout << "IPPORT_FINGER=" << IPPORT_FINGER << std::endl;
    std::cout << "IPPORT_FTP=" << IPPORT_FTP << std::endl;
    std::cout << "IPPORT_LOGINSERVER=" << IPPORT_LOGINSERVER << std::endl;
    std::cout << "IPPORT_MTP=" << IPPORT_MTP << std::endl;
    std::cout << "IPPORT_NAMESERVER=" << IPPORT_NAMESERVER << std::endl;
    std::cout << "IPPORT_NETSTAT=" << IPPORT_NETSTAT << std::endl;
    std::cout << "IPPORT_RESERVED=" << IPPORT_RESERVED << std::endl;
    std::cout << "IPPORT_RJE=" << IPPORT_RJE << std::endl;
    std::cout << "IPPORT_ROUTESERVER=" << IPPORT_ROUTESERVER << std::endl;
    std::cout << "IPPORT_SMTP=" << IPPORT_SMTP << std::endl;
    std::cout << "IPPORT_SUPDUP=" << IPPORT_SUPDUP << std::endl;
    std::cout << "IPPORT_SYSTAT=" << IPPORT_SYSTAT << std::endl;
    std::cout << "IPPORT_TELNET=" << IPPORT_TELNET << std::endl;
    std::cout << "IPPORT_TFTP=" << IPPORT_TFTP << std::endl;
    std::cout << "IPPORT_TIMESERVER=" << IPPORT_TIMESERVER << std::endl;
    std::cout << "IPPORT_TTYLINK=" << IPPORT_TTYLINK << std::endl;
    std::cout << "IPPORT_WHOIS=" << IPPORT_WHOIS << std::endl;
    std::cout << "IPPORT_WHOSERVER=" << IPPORT_WHOSERVER << std::endl;
    std::cout << "IPPROTO_GGP=" << IPPROTO_GGP << std::endl;
    std::cout << "IPPROTO_ICMP=" << IPPROTO_ICMP << std::endl;
    std::cout << "IPPROTO_IDP=" << IPPROTO_IDP << std::endl;
    std::cout << "IPPROTO_IGMP=" << IPPROTO_IGMP << std::endl;
    std::cout << "IPPROTO_IP=" << IPPROTO_IP << std::endl;
    std::cout << "IPPROTO_MAX=" << IPPROTO_MAX << std::endl;
    std::cout << "IPPROTO_ND=" << IPPROTO_ND << std::endl;
    std::cout << "IPPROTO_PUP=" << IPPROTO_PUP << std::endl;
    std::cout << "IPPROTO_RAW=" << IPPROTO_RAW << std::endl;
    std::cout << "IPPROTO_TCP=" << IPPROTO_TCP << std::endl;
    std::cout << "IPPROTO_UDP=" << IPPROTO_UDP << std::endl;
    std::cout << "IP_ADD_MEMBERSHIP=" << IP_ADD_MEMBERSHIP << std::endl;
    std::cout << "IP_DEFAULT_MULTICAST_LOOP=" << IP_DEFAULT_MULTICAST_LOOP << std::endl;
    std::cout << "IP_DEFAULT_MULTICAST_TTL=" << IP_DEFAULT_MULTICAST_TTL << std::endl;
    std::cout << "IP_DONTFRAGMENT=" << IP_DONTFRAGMENT << std::endl;
    std::cout << "IP_DROP_MEMBERSHIP=" << IP_DROP_MEMBERSHIP << std::endl;
    std::cout << "IP_MAX_MEMBERSHIPS=" << IP_MAX_MEMBERSHIPS << std::endl;
    std::cout << "IP_MULTICAST_IF=" << IP_MULTICAST_IF << std::endl;
    std::cout << "IP_MULTICAST_LOOP=" << IP_MULTICAST_LOOP << std::endl;
    std::cout << "IP_MULTICAST_TTL=" << IP_MULTICAST_TTL << std::endl;
    std::cout << "IP_OPTIONS=" << IP_OPTIONS << std::endl;
    std::cout << "IP_TOS=" << IP_TOS << std::endl;
    std::cout << "IP_TTL=" << IP_TTL << std::endl;
    std::cout << "ISC_SHOWUIALL=" << ISC_SHOWUIALL << std::endl;
    std::cout << "ISC_SHOWUIALLCANDIDATEWINDOW=" << ISC_SHOWUIALLCANDIDATEWINDOW << std::endl;
    std::cout << "ISC_SHOWUICANDIDATEWINDOW=" << ISC_SHOWUICANDIDATEWINDOW << std::endl;
    std::cout << "ISC_SHOWUICOMPOSITIONWINDOW=" << ISC_SHOWUICOMPOSITIONWINDOW << std::endl;
    std::cout << "ISC_SHOWUIGUIDELINE=" << ISC_SHOWUIGUIDELINE << std::endl;
    std::cout << "ISMEX_CALLBACK=" << ISMEX_CALLBACK << std::endl;
    std::cout << "ISMEX_NOSEND=" << ISMEX_NOSEND << std::endl;
    std::cout << "ISMEX_NOTIFY=" << ISMEX_NOTIFY << std::endl;
    std::cout << "ISMEX_REPLIED=" << ISMEX_REPLIED << std::endl;
    std::cout << "ISMEX_SEND=" << ISMEX_SEND << std::endl;
    std::cout << "ISOLATIONAWARE_MANIFEST_RESOURCE_ID=" << ISOLATIONAWARE_MANIFEST_RESOURCE_ID << std::endl;
    std::cout << "ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID=" << ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID << std::endl;
    std::cout << "IS_TEXT_UNICODE_ASCII16=" << IS_TEXT_UNICODE_ASCII16 << std::endl;
    std::cout << "IS_TEXT_UNICODE_CONTROLS=" << IS_TEXT_UNICODE_CONTROLS << std::endl;
    std::cout << "IS_TEXT_UNICODE_DBCS_LEADBYTE=" << IS_TEXT_UNICODE_DBCS_LEADBYTE << std::endl;
    std::cout << "IS_TEXT_UNICODE_ILLEGAL_CHARS=" << IS_TEXT_UNICODE_ILLEGAL_CHARS << std::endl;
    std::cout << "IS_TEXT_UNICODE_NOT_ASCII_MASK=" << IS_TEXT_UNICODE_NOT_ASCII_MASK << std::endl;
    std::cout << "IS_TEXT_UNICODE_NOT_UNICODE_MASK=" << IS_TEXT_UNICODE_NOT_UNICODE_MASK << std::endl;
    std::cout << "IS_TEXT_UNICODE_NULL_BYTES=" << IS_TEXT_UNICODE_NULL_BYTES << std::endl;
    std::cout << "IS_TEXT_UNICODE_ODD_LENGTH=" << IS_TEXT_UNICODE_ODD_LENGTH << std::endl;
    std::cout << "IS_TEXT_UNICODE_REVERSE_ASCII16=" << IS_TEXT_UNICODE_REVERSE_ASCII16 << std::endl;
    std::cout << "IS_TEXT_UNICODE_REVERSE_CONTROLS=" << IS_TEXT_UNICODE_REVERSE_CONTROLS << std::endl;
    std::cout << "IS_TEXT_UNICODE_REVERSE_MASK=" << IS_TEXT_UNICODE_REVERSE_MASK << std::endl;
    std::cout << "IS_TEXT_UNICODE_REVERSE_SIGNATURE=" << IS_TEXT_UNICODE_REVERSE_SIGNATURE << std::endl;
    std::cout << "IS_TEXT_UNICODE_REVERSE_STATISTICS=" << IS_TEXT_UNICODE_REVERSE_STATISTICS << std::endl;
    std::cout << "IS_TEXT_UNICODE_SIGNATURE=" << IS_TEXT_UNICODE_SIGNATURE << std::endl;
    std::cout << "IS_TEXT_UNICODE_STATISTICS=" << IS_TEXT_UNICODE_STATISTICS << std::endl;
    std::cout << "IS_TEXT_UNICODE_UNICODE_MASK=" << IS_TEXT_UNICODE_UNICODE_MASK << std::endl;
    std::cout << "ITALIC_FONTTYPE=" << ITALIC_FONTTYPE << std::endl;
    std::cout << "JOB_ACCESS_ADMINISTER=" << JOB_ACCESS_ADMINISTER << std::endl;
    std::cout << "JOB_ACCESS_READ=" << JOB_ACCESS_READ << std::endl;
    std::cout << "JOB_ALL_ACCESS=" << JOB_ALL_ACCESS << std::endl;
    std::cout << "JOB_CONTROL_CANCEL=" << JOB_CONTROL_CANCEL << std::endl;
    std::cout << "JOB_CONTROL_DELETE=" << JOB_CONTROL_DELETE << std::endl;
    std::cout << "JOB_CONTROL_LAST_PAGE_EJECTED=" << JOB_CONTROL_LAST_PAGE_EJECTED << std::endl;
    std::cout << "JOB_CONTROL_PAUSE=" << JOB_CONTROL_PAUSE << std::endl;
    std::cout << "JOB_CONTROL_RESTART=" << JOB_CONTROL_RESTART << std::endl;
    std::cout << "JOB_CONTROL_RESUME=" << JOB_CONTROL_RESUME << std::endl;
    std::cout << "JOB_CONTROL_SENT_TO_PRINTER=" << JOB_CONTROL_SENT_TO_PRINTER << std::endl;
    std::cout << "JOB_EXECUTE=" << JOB_EXECUTE << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_BYTES_PRINTED=" << JOB_NOTIFY_FIELD_BYTES_PRINTED << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_DATATYPE=" << JOB_NOTIFY_FIELD_DATATYPE << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_DEVMODE=" << JOB_NOTIFY_FIELD_DEVMODE << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_DOCUMENT=" << JOB_NOTIFY_FIELD_DOCUMENT << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_DRIVER_NAME=" << JOB_NOTIFY_FIELD_DRIVER_NAME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_MACHINE_NAME=" << JOB_NOTIFY_FIELD_MACHINE_NAME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_NOTIFY_NAME=" << JOB_NOTIFY_FIELD_NOTIFY_NAME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PAGES_PRINTED=" << JOB_NOTIFY_FIELD_PAGES_PRINTED << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PARAMETERS=" << JOB_NOTIFY_FIELD_PARAMETERS << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PORT_NAME=" << JOB_NOTIFY_FIELD_PORT_NAME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_POSITION=" << JOB_NOTIFY_FIELD_POSITION << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PRINTER_NAME=" << JOB_NOTIFY_FIELD_PRINTER_NAME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PRINT_PROCESSOR=" << JOB_NOTIFY_FIELD_PRINT_PROCESSOR << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_PRIORITY=" << JOB_NOTIFY_FIELD_PRIORITY << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR=" << JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_START_TIME=" << JOB_NOTIFY_FIELD_START_TIME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_STATUS=" << JOB_NOTIFY_FIELD_STATUS << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_STATUS_STRING=" << JOB_NOTIFY_FIELD_STATUS_STRING << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_SUBMITTED=" << JOB_NOTIFY_FIELD_SUBMITTED << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_TIME=" << JOB_NOTIFY_FIELD_TIME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_TOTAL_BYTES=" << JOB_NOTIFY_FIELD_TOTAL_BYTES << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_TOTAL_PAGES=" << JOB_NOTIFY_FIELD_TOTAL_PAGES << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_UNTIL_TIME=" << JOB_NOTIFY_FIELD_UNTIL_TIME << std::endl;
    std::cout << "JOB_NOTIFY_FIELD_USER_NAME=" << JOB_NOTIFY_FIELD_USER_NAME << std::endl;
    std::cout << "JOB_NOTIFY_TYPE=" << JOB_NOTIFY_TYPE << std::endl;
    std::cout << "JOB_OBJECT_ALL_ACCESS=" << JOB_OBJECT_ALL_ACCESS << std::endl;
    std::cout << "JOB_OBJECT_ASSIGN_PROCESS=" << JOB_OBJECT_ASSIGN_PROCESS << std::endl;
    std::cout << "JOB_OBJECT_CPU_RATE_CONTROL_ENABLE=" << JOB_OBJECT_CPU_RATE_CONTROL_ENABLE << std::endl;
    std::cout << "JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP=" << JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP << std::endl;
    std::cout << "JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY=" << JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY << std::endl;
    std::cout << "JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED=" << JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_ACTIVE_PROCESS=" << JOB_OBJECT_LIMIT_ACTIVE_PROCESS << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_AFFINITY=" << JOB_OBJECT_LIMIT_AFFINITY << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_BREAKAWAY_OK=" << JOB_OBJECT_LIMIT_BREAKAWAY_OK << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION=" << JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_JOB_MEMORY=" << JOB_OBJECT_LIMIT_JOB_MEMORY << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_JOB_READ_BYTES=" << JOB_OBJECT_LIMIT_JOB_READ_BYTES << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_JOB_TIME=" << JOB_OBJECT_LIMIT_JOB_TIME << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_JOB_WRITE_BYTES=" << JOB_OBJECT_LIMIT_JOB_WRITE_BYTES << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE=" << JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME=" << JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_PRIORITY_CLASS=" << JOB_OBJECT_LIMIT_PRIORITY_CLASS << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_PROCESS_MEMORY=" << JOB_OBJECT_LIMIT_PROCESS_MEMORY << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_PROCESS_TIME=" << JOB_OBJECT_LIMIT_PROCESS_TIME << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_RATE_CONTROL=" << JOB_OBJECT_LIMIT_RATE_CONTROL << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_RESERVED3=" << JOB_OBJECT_LIMIT_RESERVED3 << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_RESERVED4=" << JOB_OBJECT_LIMIT_RESERVED4 << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_RESERVED5=" << JOB_OBJECT_LIMIT_RESERVED5 << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_RESERVED6=" << JOB_OBJECT_LIMIT_RESERVED6 << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_SCHEDULING_CLASS=" << JOB_OBJECT_LIMIT_SCHEDULING_CLASS << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK=" << JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_SUBSET_AFFINITY=" << JOB_OBJECT_LIMIT_SUBSET_AFFINITY << std::endl;
    std::cout << "JOB_OBJECT_LIMIT_WORKINGSET=" << JOB_OBJECT_LIMIT_WORKINGSET << std::endl;
    std::cout << "JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS=" << JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS << std::endl;
    std::cout << "JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT=" << JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT << std::endl;
    std::cout << "JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO=" << JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO << std::endl;
    std::cout << "JOB_OBJECT_MSG_END_OF_JOB_TIME=" << JOB_OBJECT_MSG_END_OF_JOB_TIME << std::endl;
    std::cout << "JOB_OBJECT_MSG_END_OF_PROCESS_TIME=" << JOB_OBJECT_MSG_END_OF_PROCESS_TIME << std::endl;
    std::cout << "JOB_OBJECT_MSG_EXIT_PROCESS=" << JOB_OBJECT_MSG_EXIT_PROCESS << std::endl;
    std::cout << "JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT=" << JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT << std::endl;
    std::cout << "JOB_OBJECT_MSG_JOB_MEMORY_LIMIT=" << JOB_OBJECT_MSG_JOB_MEMORY_LIMIT << std::endl;
    std::cout << "JOB_OBJECT_MSG_MAXIMUM=" << JOB_OBJECT_MSG_MAXIMUM << std::endl;
    std::cout << "JOB_OBJECT_MSG_MINIMUM=" << JOB_OBJECT_MSG_MINIMUM << std::endl;
    std::cout << "JOB_OBJECT_MSG_NEW_PROCESS=" << JOB_OBJECT_MSG_NEW_PROCESS << std::endl;
    std::cout << "JOB_OBJECT_MSG_NOTIFICATION_LIMIT=" << JOB_OBJECT_MSG_NOTIFICATION_LIMIT << std::endl;
    std::cout << "JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT=" << JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT << std::endl;
    std::cout << "JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS=" << JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS << std::endl;
    std::cout << "JOB_OBJECT_POST_AT_END_OF_JOB=" << JOB_OBJECT_POST_AT_END_OF_JOB << std::endl;
    std::cout << "JOB_OBJECT_QUERY=" << JOB_OBJECT_QUERY << std::endl;
    std::cout << "JOB_OBJECT_SECURITY_FILTER_TOKENS=" << JOB_OBJECT_SECURITY_FILTER_TOKENS << std::endl;
    std::cout << "JOB_OBJECT_SECURITY_NO_ADMIN=" << JOB_OBJECT_SECURITY_NO_ADMIN << std::endl;
    std::cout << "JOB_OBJECT_SECURITY_ONLY_TOKEN=" << JOB_OBJECT_SECURITY_ONLY_TOKEN << std::endl;
    std::cout << "JOB_OBJECT_SECURITY_RESTRICTED_TOKEN=" << JOB_OBJECT_SECURITY_RESTRICTED_TOKEN << std::endl;
    std::cout << "JOB_OBJECT_SET_ATTRIBUTES=" << JOB_OBJECT_SET_ATTRIBUTES << std::endl;
    std::cout << "JOB_OBJECT_SET_SECURITY_ATTRIBUTES=" << JOB_OBJECT_SET_SECURITY_ATTRIBUTES << std::endl;
    std::cout << "JOB_OBJECT_TERMINATE=" << JOB_OBJECT_TERMINATE << std::endl;
    std::cout << "JOB_OBJECT_TERMINATE_AT_END_OF_JOB=" << JOB_OBJECT_TERMINATE_AT_END_OF_JOB << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_ALL=" << JOB_OBJECT_UILIMIT_ALL << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_DESKTOP=" << JOB_OBJECT_UILIMIT_DESKTOP << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_DISPLAYSETTINGS=" << JOB_OBJECT_UILIMIT_DISPLAYSETTINGS << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_EXITWINDOWS=" << JOB_OBJECT_UILIMIT_EXITWINDOWS << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_GLOBALATOMS=" << JOB_OBJECT_UILIMIT_GLOBALATOMS << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_HANDLES=" << JOB_OBJECT_UILIMIT_HANDLES << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_NONE=" << JOB_OBJECT_UILIMIT_NONE << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_READCLIPBOARD=" << JOB_OBJECT_UILIMIT_READCLIPBOARD << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS=" << JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS << std::endl;
    std::cout << "JOB_OBJECT_UILIMIT_WRITECLIPBOARD=" << JOB_OBJECT_UILIMIT_WRITECLIPBOARD << std::endl;
    std::cout << "JOB_OBJECT_UI_VALID_FLAGS=" << JOB_OBJECT_UI_VALID_FLAGS << std::endl;
    std::cout << "JOB_POSITION_UNSPECIFIED=" << JOB_POSITION_UNSPECIFIED << std::endl;
    std::cout << "JOB_READ=" << JOB_READ << std::endl;
    std::cout << "JOB_STATUS_BLOCKED_DEVQ=" << JOB_STATUS_BLOCKED_DEVQ << std::endl;
    std::cout << "JOB_STATUS_COMPLETE=" << JOB_STATUS_COMPLETE << std::endl;
    std::cout << "JOB_STATUS_DELETED=" << JOB_STATUS_DELETED << std::endl;
    std::cout << "JOB_STATUS_DELETING=" << JOB_STATUS_DELETING << std::endl;
    std::cout << "JOB_STATUS_ERROR=" << JOB_STATUS_ERROR << std::endl;
    std::cout << "JOB_STATUS_OFFLINE=" << JOB_STATUS_OFFLINE << std::endl;
    std::cout << "JOB_STATUS_PAPEROUT=" << JOB_STATUS_PAPEROUT << std::endl;
    std::cout << "JOB_STATUS_PAUSED=" << JOB_STATUS_PAUSED << std::endl;
    std::cout << "JOB_STATUS_PRINTED=" << JOB_STATUS_PRINTED << std::endl;
    std::cout << "JOB_STATUS_PRINTING=" << JOB_STATUS_PRINTING << std::endl;
    std::cout << "JOB_STATUS_RESTART=" << JOB_STATUS_RESTART << std::endl;
    std::cout << "JOB_STATUS_SPOOLING=" << JOB_STATUS_SPOOLING << std::endl;
    std::cout << "JOB_STATUS_USER_INTERVENTION=" << JOB_STATUS_USER_INTERVENTION << std::endl;
    std::cout << "JOB_WRITE=" << JOB_WRITE << std::endl;
    std::cout << "JOHAB_CHARSET=" << JOHAB_CHARSET << std::endl;
    std::cout << "JOYCAPS_HASPOV=" << JOYCAPS_HASPOV << std::endl;
    std::cout << "JOYCAPS_HASR=" << JOYCAPS_HASR << std::endl;
    std::cout << "JOYCAPS_HASU=" << JOYCAPS_HASU << std::endl;
    std::cout << "JOYCAPS_HASV=" << JOYCAPS_HASV << std::endl;
    std::cout << "JOYCAPS_HASZ=" << JOYCAPS_HASZ << std::endl;
    std::cout << "JOYCAPS_POV4DIR=" << JOYCAPS_POV4DIR << std::endl;
    std::cout << "JOYCAPS_POVCTS=" << JOYCAPS_POVCTS << std::endl;
    std::cout << "JOYERR_BASE=" << JOYERR_BASE << std::endl;
    std::cout << "JOYERR_NOCANDO=" << JOYERR_NOCANDO << std::endl;
    std::cout << "JOYERR_NOERROR=" << JOYERR_NOERROR << std::endl;
    std::cout << "JOYERR_PARMS=" << JOYERR_PARMS << std::endl;
    std::cout << "JOYERR_UNPLUGGED=" << JOYERR_UNPLUGGED << std::endl;
    std::cout << "JOYSTICKID1=" << JOYSTICKID1 << std::endl;
    std::cout << "JOYSTICKID2=" << JOYSTICKID2 << std::endl;
    std::cout << "JOY_BUTTON1=" << JOY_BUTTON1 << std::endl;
    std::cout << "JOY_BUTTON1CHG=" << JOY_BUTTON1CHG << std::endl;
    std::cout << "JOY_BUTTON2=" << JOY_BUTTON2 << std::endl;
    std::cout << "JOY_BUTTON2CHG=" << JOY_BUTTON2CHG << std::endl;
    std::cout << "JOY_BUTTON3=" << JOY_BUTTON3 << std::endl;
    std::cout << "JOY_BUTTON3CHG=" << JOY_BUTTON3CHG << std::endl;
    std::cout << "JOY_BUTTON4=" << JOY_BUTTON4 << std::endl;
    std::cout << "JOY_BUTTON4CHG=" << JOY_BUTTON4CHG << std::endl;
    std::cout << "JOY_POVBACKWARD=" << JOY_POVBACKWARD << std::endl;
    std::cout << "JOY_POVFORWARD=" << JOY_POVFORWARD << std::endl;
    std::cout << "JOY_POVLEFT=" << JOY_POVLEFT << std::endl;
    std::cout << "JOY_POVRIGHT=" << JOY_POVRIGHT << std::endl;
    std::cout << "KDF_ALGORITHMID=" << KDF_ALGORITHMID << std::endl;
    std::cout << "KDF_GENERIC_PARAMETER=" << KDF_GENERIC_PARAMETER << std::endl;
    std::cout << "KDF_HASH_ALGORITHM=" << KDF_HASH_ALGORITHM << std::endl;
    std::cout << "KDF_HKDF_INFO=" << KDF_HKDF_INFO << std::endl;
    std::cout << "KDF_HKDF_SALT=" << KDF_HKDF_SALT << std::endl;
    std::cout << "KDF_HMAC_KEY=" << KDF_HMAC_KEY << std::endl;
    std::cout << "KDF_ITERATION_COUNT=" << KDF_ITERATION_COUNT << std::endl;
    std::cout << "KDF_KEYBITLENGTH=" << KDF_KEYBITLENGTH << std::endl;
    std::cout << "KDF_PARTYUINFO=" << KDF_PARTYUINFO << std::endl;
    std::cout << "KDF_SECRET_APPEND=" << KDF_SECRET_APPEND << std::endl;
    std::cout << "KDF_SECRET_HANDLE=" << KDF_SECRET_HANDLE << std::endl;
    std::cout << "KDF_SECRET_PREPEND=" << KDF_SECRET_PREPEND << std::endl;
    std::cout << "KDF_TLS_PRF_LABEL=" << KDF_TLS_PRF_LABEL << std::endl;
    std::cout << "KDF_TLS_PRF_PROTOCOL=" << KDF_TLS_PRF_PROTOCOL << std::endl;
    std::cout << "KDF_TLS_PRF_SEED=" << KDF_TLS_PRF_SEED << std::endl;
    std::cout << "KDF_USE_SECRET_AS_HMAC_KEY_FLAG=" << KDF_USE_SECRET_AS_HMAC_KEY_FLAG << std::endl;
    std::cout << "KEYBOARD_OVERRUN_MAKE_CODE=" << KEYBOARD_OVERRUN_MAKE_CODE << std::endl;
    std::cout << "KEYEVENTF_EXTENDEDKEY=" << KEYEVENTF_EXTENDEDKEY << std::endl;
    std::cout << "KEYEVENTF_KEYUP=" << KEYEVENTF_KEYUP << std::endl;
    std::cout << "KEYEVENTF_SCANCODE=" << KEYEVENTF_SCANCODE << std::endl;
    std::cout << "KEYEVENTF_UNICODE=" << KEYEVENTF_UNICODE << std::endl;
    std::cout << "KEY_ALL_ACCESS=" << KEY_ALL_ACCESS << std::endl;
    std::cout << "KEY_CREATE_LINK=" << KEY_CREATE_LINK << std::endl;
    std::cout << "KEY_CREATE_SUB_KEY=" << KEY_CREATE_SUB_KEY << std::endl;
    std::cout << "KEY_ENUMERATE_SUB_KEYS=" << KEY_ENUMERATE_SUB_KEYS << std::endl;
    std::cout << "KEY_EVENT=" << KEY_EVENT << std::endl;
    std::cout << "KEY_EXECUTE=" << KEY_EXECUTE << std::endl;
    std::cout << "KEY_NOTIFY=" << KEY_NOTIFY << std::endl;
    std::cout << "KEY_QUERY_VALUE=" << KEY_QUERY_VALUE << std::endl;
    std::cout << "KEY_READ=" << KEY_READ << std::endl;
    std::cout << "KEY_SET_VALUE=" << KEY_SET_VALUE << std::endl;
    std::cout << "KEY_WOW64_32KEY=" << KEY_WOW64_32KEY << std::endl;
    std::cout << "KEY_WOW64_64KEY=" << KEY_WOW64_64KEY << std::endl;
    std::cout << "KEY_WOW64_RES=" << KEY_WOW64_RES << std::endl;
    std::cout << "KEY_WRITE=" << KEY_WRITE << std::endl;
    std::cout << "KF_ALTDOWN=" << KF_ALTDOWN << std::endl;
    std::cout << "KF_DLGMODE=" << KF_DLGMODE << std::endl;
    std::cout << "KF_EXTENDED=" << KF_EXTENDED << std::endl;
    std::cout << "KF_MENUMODE=" << KF_MENUMODE << std::endl;
    std::cout << "KF_REPEAT=" << KF_REPEAT << std::endl;
    std::cout << "KF_UP=" << KF_UP << std::endl;
    std::cout << "KLF_ACTIVATE=" << KLF_ACTIVATE << std::endl;
    std::cout << "KLF_NOTELLSHELL=" << KLF_NOTELLSHELL << std::endl;
    std::cout << "KLF_REORDER=" << KLF_REORDER << std::endl;
    std::cout << "KLF_REPLACELANG=" << KLF_REPLACELANG << std::endl;
    std::cout << "KLF_RESET=" << KLF_RESET << std::endl;
    std::cout << "KLF_SETFORPROCESS=" << KLF_SETFORPROCESS << std::endl;
    std::cout << "KLF_SHIFTLOCK=" << KLF_SHIFTLOCK << std::endl;
    std::cout << "KLF_SUBSTITUTE_OK=" << KLF_SUBSTITUTE_OK << std::endl;
    std::cout << "KL_NAMELENGTH=" << KL_NAMELENGTH << std::endl;
    std::cout << "KP_ADMIN_PIN=" << KP_ADMIN_PIN << std::endl;
    std::cout << "KP_ALGID=" << KP_ALGID << std::endl;
    std::cout << "KP_BLOCKLEN=" << KP_BLOCKLEN << std::endl;
    std::cout << "KP_CERTIFICATE=" << KP_CERTIFICATE << std::endl;
    std::cout << "KP_CLEAR_KEY=" << KP_CLEAR_KEY << std::endl;
    std::cout << "KP_CLIENT_RANDOM=" << KP_CLIENT_RANDOM << std::endl;
    std::cout << "KP_CMS_DH_KEY_INFO=" << KP_CMS_DH_KEY_INFO << std::endl;
    std::cout << "KP_CMS_KEY_INFO=" << KP_CMS_KEY_INFO << std::endl;
    std::cout << "KP_EFFECTIVE_KEYLEN=" << KP_EFFECTIVE_KEYLEN << std::endl;
    std::cout << "KP_G=" << KP_G << std::endl;
    std::cout << "KP_GET_USE_COUNT=" << KP_GET_USE_COUNT << std::endl;
    std::cout << "KP_HIGHEST_VERSION=" << KP_HIGHEST_VERSION << std::endl;
    std::cout << "KP_INFO=" << KP_INFO << std::endl;
    std::cout << "KP_IV=" << KP_IV << std::endl;
    std::cout << "KP_KEYEXCHANGE_PIN=" << KP_KEYEXCHANGE_PIN << std::endl;
    std::cout << "KP_KEYLEN=" << KP_KEYLEN << std::endl;
    std::cout << "KP_KEYVAL=" << KP_KEYVAL << std::endl;
    std::cout << "KP_MODE=" << KP_MODE << std::endl;
    std::cout << "KP_MODE_BITS=" << KP_MODE_BITS << std::endl;
    std::cout << "KP_OAEP_PARAMS=" << KP_OAEP_PARAMS << std::endl;
    std::cout << "KP_P=" << KP_P << std::endl;
    std::cout << "KP_PADDING=" << KP_PADDING << std::endl;
    std::cout << "KP_PERMISSIONS=" << KP_PERMISSIONS << std::endl;
    std::cout << "KP_PIN_ID=" << KP_PIN_ID << std::endl;
    std::cout << "KP_PIN_INFO=" << KP_PIN_INFO << std::endl;
    std::cout << "KP_PRECOMP_MD5=" << KP_PRECOMP_MD5 << std::endl;
    std::cout << "KP_PRECOMP_SHA=" << KP_PRECOMP_SHA << std::endl;
    std::cout << "KP_PREHASH=" << KP_PREHASH << std::endl;
    std::cout << "KP_PUB_EX_LEN=" << KP_PUB_EX_LEN << std::endl;
    std::cout << "KP_PUB_EX_VAL=" << KP_PUB_EX_VAL << std::endl;
    std::cout << "KP_PUB_PARAMS=" << KP_PUB_PARAMS << std::endl;
    std::cout << "KP_Q=" << KP_Q << std::endl;
    std::cout << "KP_RA=" << KP_RA << std::endl;
    std::cout << "KP_RB=" << KP_RB << std::endl;
    std::cout << "KP_ROUNDS=" << KP_ROUNDS << std::endl;
    std::cout << "KP_RP=" << KP_RP << std::endl;
    std::cout << "KP_SALT=" << KP_SALT << std::endl;
    std::cout << "KP_SALT_EX=" << KP_SALT_EX << std::endl;
    std::cout << "KP_SCHANNEL_ALG=" << KP_SCHANNEL_ALG << std::endl;
    std::cout << "KP_SERVER_RANDOM=" << KP_SERVER_RANDOM << std::endl;
    std::cout << "KP_SIGNATURE_PIN=" << KP_SIGNATURE_PIN << std::endl;
    std::cout << "KP_VERIFY_PARAMS=" << KP_VERIFY_PARAMS << std::endl;
    std::cout << "KP_X=" << KP_X << std::endl;
    std::cout << "KP_Y=" << KP_Y << std::endl;
    std::cout << "KTM_MARSHAL_BLOB_VERSION_MAJOR=" << KTM_MARSHAL_BLOB_VERSION_MAJOR << std::endl;
    std::cout << "KTM_MARSHAL_BLOB_VERSION_MINOR=" << KTM_MARSHAL_BLOB_VERSION_MINOR << std::endl;
    std::cout << "LANG_AFRIKAANS=" << LANG_AFRIKAANS << std::endl;
    std::cout << "LANG_ALSATIAN=" << LANG_ALSATIAN << std::endl;
    std::cout << "LANG_ARABIC=" << LANG_ARABIC << std::endl;
    std::cout << "LANG_BANGLA=" << LANG_BANGLA << std::endl;
    std::cout << "LANG_BELARUSIAN=" << LANG_BELARUSIAN << std::endl;
    std::cout << "LANG_BENGALI=" << LANG_BENGALI << std::endl;
    std::cout << "LANG_BULGARIAN=" << LANG_BULGARIAN << std::endl;
    std::cout << "LANG_CATALAN=" << LANG_CATALAN << std::endl;
    std::cout << "LANG_CENTRAL_KURDISH=" << LANG_CENTRAL_KURDISH << std::endl;
    std::cout << "LANG_CHINESE=" << LANG_CHINESE << std::endl;
    std::cout << "LANG_CHINESE_SIMPLIFIED=" << LANG_CHINESE_SIMPLIFIED << std::endl;
    std::cout << "LANG_CORSICAN=" << LANG_CORSICAN << std::endl;
    std::cout << "LANG_CZECH=" << LANG_CZECH << std::endl;
    std::cout << "LANG_DANISH=" << LANG_DANISH << std::endl;
    std::cout << "LANG_DIVEHI=" << LANG_DIVEHI << std::endl;
    std::cout << "LANG_DUTCH=" << LANG_DUTCH << std::endl;
    std::cout << "LANG_ENGLISH=" << LANG_ENGLISH << std::endl;
    std::cout << "LANG_ESTONIAN=" << LANG_ESTONIAN << std::endl;
    std::cout << "LANG_FAEROESE=" << LANG_FAEROESE << std::endl;
    std::cout << "LANG_FARSI=" << LANG_FARSI << std::endl;
    std::cout << "LANG_FILIPINO=" << LANG_FILIPINO << std::endl;
    std::cout << "LANG_FRISIAN=" << LANG_FRISIAN << std::endl;
    std::cout << "LANG_FULAH=" << LANG_FULAH << std::endl;
    std::cout << "LANG_GALICIAN=" << LANG_GALICIAN << std::endl;
    std::cout << "LANG_GEORGIAN=" << LANG_GEORGIAN << std::endl;
    std::cout << "LANG_GERMAN=" << LANG_GERMAN << std::endl;
    std::cout << "LANG_GREEK=" << LANG_GREEK << std::endl;
    std::cout << "LANG_GUJARATI=" << LANG_GUJARATI << std::endl;
    std::cout << "LANG_HAUSA=" << LANG_HAUSA << std::endl;
    std::cout << "LANG_HINDI=" << LANG_HINDI << std::endl;
    std::cout << "LANG_IGBO=" << LANG_IGBO << std::endl;
    std::cout << "LANG_INDONESIAN=" << LANG_INDONESIAN << std::endl;
    std::cout << "LANG_ITALIAN=" << LANG_ITALIAN << std::endl;
    std::cout << "LANG_JAPANESE=" << LANG_JAPANESE << std::endl;
    std::cout << "LANG_KASHMIRI=" << LANG_KASHMIRI << std::endl;
    std::cout << "LANG_KHMER=" << LANG_KHMER << std::endl;
    std::cout << "LANG_KICHE=" << LANG_KICHE << std::endl;
    std::cout << "LANG_KINYARWANDA=" << LANG_KINYARWANDA << std::endl;
    std::cout << "LANG_KONKANI=" << LANG_KONKANI << std::endl;
    std::cout << "LANG_KOREAN=" << LANG_KOREAN << std::endl;
    std::cout << "LANG_KYRGYZ=" << LANG_KYRGYZ << std::endl;
    std::cout << "LANG_LAO=" << LANG_LAO << std::endl;
    std::cout << "LANG_LATVIAN=" << LANG_LATVIAN << std::endl;
    std::cout << "LANG_LITHUANIAN=" << LANG_LITHUANIAN << std::endl;
    std::cout << "LANG_MANIPURI=" << LANG_MANIPURI << std::endl;
    std::cout << "LANG_MAORI=" << LANG_MAORI << std::endl;
    std::cout << "LANG_MONGOLIAN=" << LANG_MONGOLIAN << std::endl;
    std::cout << "LANG_NEPALI=" << LANG_NEPALI << std::endl;
    std::cout << "LANG_NEUTRAL=" << LANG_NEUTRAL << std::endl;
    std::cout << "LANG_NORWEGIAN=" << LANG_NORWEGIAN << std::endl;
    std::cout << "LANG_OCCITAN=" << LANG_OCCITAN << std::endl;
    std::cout << "LANG_ODIA=" << LANG_ODIA << std::endl;
    std::cout << "LANG_ORIYA=" << LANG_ORIYA << std::endl;
    std::cout << "LANG_PASHTO=" << LANG_PASHTO << std::endl;
    std::cout << "LANG_PERSIAN=" << LANG_PERSIAN << std::endl;
    std::cout << "LANG_POLISH=" << LANG_POLISH << std::endl;
    std::cout << "LANG_PORTUGUESE=" << LANG_PORTUGUESE << std::endl;
    std::cout << "LANG_PULAR=" << LANG_PULAR << std::endl;
    std::cout << "LANG_PUNJABI=" << LANG_PUNJABI << std::endl;
    std::cout << "LANG_ROMANIAN=" << LANG_ROMANIAN << std::endl;
    std::cout << "LANG_ROMANSH=" << LANG_ROMANSH << std::endl;
    std::cout << "LANG_RUSSIAN=" << LANG_RUSSIAN << std::endl;
    std::cout << "LANG_SAKHA=" << LANG_SAKHA << std::endl;
    std::cout << "LANG_SCOTTISH_GAELIC=" << LANG_SCOTTISH_GAELIC << std::endl;
    std::cout << "LANG_SINDHI=" << LANG_SINDHI << std::endl;
    std::cout << "LANG_SLOVENIAN=" << LANG_SLOVENIAN << std::endl;
    std::cout << "LANG_SWAHILI=" << LANG_SWAHILI << std::endl;
    std::cout << "LANG_TAJIK=" << LANG_TAJIK << std::endl;
    std::cout << "LANG_TAMIL=" << LANG_TAMIL << std::endl;
    std::cout << "LANG_TATAR=" << LANG_TATAR << std::endl;
    std::cout << "LANG_TIBETAN=" << LANG_TIBETAN << std::endl;
    std::cout << "LANG_TIGRIGNA=" << LANG_TIGRIGNA << std::endl;
    std::cout << "LANG_TIGRINYA=" << LANG_TIGRINYA << std::endl;
    std::cout << "LANG_TSWANA=" << LANG_TSWANA << std::endl;
    std::cout << "LANG_TURKMEN=" << LANG_TURKMEN << std::endl;
    std::cout << "LANG_UIGHUR=" << LANG_UIGHUR << std::endl;
    std::cout << "LANG_UKRAINIAN=" << LANG_UKRAINIAN << std::endl;
    std::cout << "LANG_URDU=" << LANG_URDU << std::endl;
    std::cout << "LANG_UZBEK=" << LANG_UZBEK << std::endl;
    std::cout << "LANG_VALENCIAN=" << LANG_VALENCIAN << std::endl;
    std::cout << "LANG_WELSH=" << LANG_WELSH << std::endl;
    std::cout << "LANG_WOLOF=" << LANG_WOLOF << std::endl;
    std::cout << "LANG_XHOSA=" << LANG_XHOSA << std::endl;
    std::cout << "LANG_YAKUT=" << LANG_YAKUT << std::endl;
    std::cout << "LANG_YI=" << LANG_YI << std::endl;
    std::cout << "LANG_ZULU=" << LANG_ZULU << std::endl;
    std::cout << "LAYOUT_BITMAPORIENTATIONPRESERVED=" << LAYOUT_BITMAPORIENTATIONPRESERVED << std::endl;
    std::cout << "LAYOUT_BTT=" << LAYOUT_BTT << std::endl;
    std::cout << "LAYOUT_ORIENTATIONMASK=" << LAYOUT_ORIENTATIONMASK << std::endl;
    std::cout << "LAYOUT_RTL=" << LAYOUT_RTL << std::endl;
    std::cout << "LAYOUT_VBH=" << LAYOUT_VBH << std::endl;
    std::cout << "LBN_DBLCLK=" << LBN_DBLCLK << std::endl;
    std::cout << "LBN_ERRSPACE=" << LBN_ERRSPACE << std::endl;
    std::cout << "LBN_KILLFOCUS=" << LBN_KILLFOCUS << std::endl;
    std::cout << "LBN_SELCANCEL=" << LBN_SELCANCEL << std::endl;
    std::cout << "LBN_SELCHANGE=" << LBN_SELCHANGE << std::endl;
    std::cout << "LBN_SETFOCUS=" << LBN_SETFOCUS << std::endl;
    std::cout << "LBS_STANDARD=" << LBS_STANDARD << std::endl;
    std::cout << "LB_ADDFILE=" << LB_ADDFILE << std::endl;
    std::cout << "LB_ADDSTRING=" << LB_ADDSTRING << std::endl;
    std::cout << "LB_DELETESTRING=" << LB_DELETESTRING << std::endl;
    std::cout << "LB_DIR=" << LB_DIR << std::endl;
    std::cout << "LB_ERR=" << LB_ERR << std::endl;
    std::cout << "LB_ERRSPACE=" << LB_ERRSPACE << std::endl;
    std::cout << "LB_FINDSTRING=" << LB_FINDSTRING << std::endl;
    std::cout << "LB_FINDSTRINGEXACT=" << LB_FINDSTRINGEXACT << std::endl;
    std::cout << "LB_GETANCHORINDEX=" << LB_GETANCHORINDEX << std::endl;
    std::cout << "LB_GETCARETINDEX=" << LB_GETCARETINDEX << std::endl;
    std::cout << "LB_GETCOUNT=" << LB_GETCOUNT << std::endl;
    std::cout << "LB_GETCURSEL=" << LB_GETCURSEL << std::endl;
    std::cout << "LB_GETHORIZONTALEXTENT=" << LB_GETHORIZONTALEXTENT << std::endl;
    std::cout << "LB_GETITEMDATA=" << LB_GETITEMDATA << std::endl;
    std::cout << "LB_GETITEMHEIGHT=" << LB_GETITEMHEIGHT << std::endl;
    std::cout << "LB_GETITEMRECT=" << LB_GETITEMRECT << std::endl;
    std::cout << "LB_GETLISTBOXINFO=" << LB_GETLISTBOXINFO << std::endl;
    std::cout << "LB_GETLOCALE=" << LB_GETLOCALE << std::endl;
    std::cout << "LB_GETSEL=" << LB_GETSEL << std::endl;
    std::cout << "LB_GETSELCOUNT=" << LB_GETSELCOUNT << std::endl;
    std::cout << "LB_GETSELITEMS=" << LB_GETSELITEMS << std::endl;
    std::cout << "LB_GETTEXT=" << LB_GETTEXT << std::endl;
    std::cout << "LB_GETTEXTLEN=" << LB_GETTEXTLEN << std::endl;
    std::cout << "LB_GETTOPINDEX=" << LB_GETTOPINDEX << std::endl;
    std::cout << "LB_INITSTORAGE=" << LB_INITSTORAGE << std::endl;
    std::cout << "LB_INSERTSTRING=" << LB_INSERTSTRING << std::endl;
    std::cout << "LB_ITEMFROMPOINT=" << LB_ITEMFROMPOINT << std::endl;
    std::cout << "LB_MSGMAX=" << LB_MSGMAX << std::endl;
    std::cout << "LB_MULTIPLEADDSTRING=" << LB_MULTIPLEADDSTRING << std::endl;
    std::cout << "LB_OKAY=" << LB_OKAY << std::endl;
    std::cout << "LB_RESETCONTENT=" << LB_RESETCONTENT << std::endl;
    std::cout << "LB_SELECTSTRING=" << LB_SELECTSTRING << std::endl;
    std::cout << "LB_SELITEMRANGE=" << LB_SELITEMRANGE << std::endl;
    std::cout << "LB_SELITEMRANGEEX=" << LB_SELITEMRANGEEX << std::endl;
    std::cout << "LB_SETANCHORINDEX=" << LB_SETANCHORINDEX << std::endl;
    std::cout << "LB_SETCARETINDEX=" << LB_SETCARETINDEX << std::endl;
    std::cout << "LB_SETCOLUMNWIDTH=" << LB_SETCOLUMNWIDTH << std::endl;
    std::cout << "LB_SETCOUNT=" << LB_SETCOUNT << std::endl;
    std::cout << "LB_SETCURSEL=" << LB_SETCURSEL << std::endl;
    std::cout << "LB_SETHORIZONTALEXTENT=" << LB_SETHORIZONTALEXTENT << std::endl;
    std::cout << "LB_SETITEMDATA=" << LB_SETITEMDATA << std::endl;
    std::cout << "LB_SETITEMHEIGHT=" << LB_SETITEMHEIGHT << std::endl;
    std::cout << "LB_SETLOCALE=" << LB_SETLOCALE << std::endl;
    std::cout << "LB_SETSEL=" << LB_SETSEL << std::endl;
    std::cout << "LB_SETTABSTOPS=" << LB_SETTABSTOPS << std::endl;
    std::cout << "LB_SETTOPINDEX=" << LB_SETTOPINDEX << std::endl;
    std::cout << "LCID_ALTERNATE_SORTS=" << LCID_ALTERNATE_SORTS << std::endl;
    std::cout << "LCID_INSTALLED=" << LCID_INSTALLED << std::endl;
    std::cout << "LCID_SUPPORTED=" << LCID_SUPPORTED << std::endl;
    std::cout << "LCMAP_BYTEREV=" << LCMAP_BYTEREV << std::endl;
    std::cout << "LCMAP_FULLWIDTH=" << LCMAP_FULLWIDTH << std::endl;
    std::cout << "LCMAP_HALFWIDTH=" << LCMAP_HALFWIDTH << std::endl;
    std::cout << "LCMAP_HASH=" << LCMAP_HASH << std::endl;
    std::cout << "LCMAP_HIRAGANA=" << LCMAP_HIRAGANA << std::endl;
    std::cout << "LCMAP_KATAKANA=" << LCMAP_KATAKANA << std::endl;
    std::cout << "LCMAP_LINGUISTIC_CASING=" << LCMAP_LINGUISTIC_CASING << std::endl;
    std::cout << "LCMAP_LOWERCASE=" << LCMAP_LOWERCASE << std::endl;
    std::cout << "LCMAP_SIMPLIFIED_CHINESE=" << LCMAP_SIMPLIFIED_CHINESE << std::endl;
    std::cout << "LCMAP_SORTHANDLE=" << LCMAP_SORTHANDLE << std::endl;
    std::cout << "LCMAP_SORTKEY=" << LCMAP_SORTKEY << std::endl;
    std::cout << "LCMAP_TITLECASE=" << LCMAP_TITLECASE << std::endl;
    std::cout << "LCMAP_TRADITIONAL_CHINESE=" << LCMAP_TRADITIONAL_CHINESE << std::endl;
    std::cout << "LCMAP_UPPERCASE=" << LCMAP_UPPERCASE << std::endl;
    std::cout << "LC_INTERIORS=" << LC_INTERIORS << std::endl;
    std::cout << "LC_MARKER=" << LC_MARKER << std::endl;
    std::cout << "LC_NONE=" << LC_NONE << std::endl;
    std::cout << "LC_POLYLINE=" << LC_POLYLINE << std::endl;
    std::cout << "LC_POLYMARKER=" << LC_POLYMARKER << std::endl;
    std::cout << "LC_STYLED=" << LC_STYLED << std::endl;
    std::cout << "LC_WIDE=" << LC_WIDE << std::endl;
    std::cout << "LC_WIDESTYLED=" << LC_WIDESTYLED << std::endl;
    std::cout << "LEFT_ALT_PRESSED=" << LEFT_ALT_PRESSED << std::endl;
    std::cout << "LEFT_CTRL_PRESSED=" << LEFT_CTRL_PRESSED << std::endl;
    std::cout << "LF_FACESIZE=" << LF_FACESIZE << std::endl;
    std::cout << "LF_FULLFACESIZE=" << LF_FULLFACESIZE << std::endl;
    std::cout << "LGRPID_ARMENIAN=" << LGRPID_ARMENIAN << std::endl;
    std::cout << "LGRPID_BALTIC=" << LGRPID_BALTIC << std::endl;
    std::cout << "LGRPID_CENTRAL_EUROPE=" << LGRPID_CENTRAL_EUROPE << std::endl;
    std::cout << "LGRPID_CYRILLIC=" << LGRPID_CYRILLIC << std::endl;
    std::cout << "LGRPID_GEORGIAN=" << LGRPID_GEORGIAN << std::endl;
    std::cout << "LGRPID_GREEK=" << LGRPID_GREEK << std::endl;
    std::cout << "LGRPID_INSTALLED=" << LGRPID_INSTALLED << std::endl;
    std::cout << "LGRPID_JAPANESE=" << LGRPID_JAPANESE << std::endl;
    std::cout << "LGRPID_KOREAN=" << LGRPID_KOREAN << std::endl;
    std::cout << "LGRPID_SUPPORTED=" << LGRPID_SUPPORTED << std::endl;
    std::cout << "LGRPID_TRADITIONAL_CHINESE=" << LGRPID_TRADITIONAL_CHINESE << std::endl;
    std::cout << "LGRPID_TURKIC=" << LGRPID_TURKIC << std::endl;
    std::cout << "LGRPID_TURKISH=" << LGRPID_TURKISH << std::endl;
    std::cout << "LGRPID_WESTERN_EUROPE=" << LGRPID_WESTERN_EUROPE << std::endl;
    std::cout << "LHND=" << LHND << std::endl;
    std::cout << "LINECAPS=" << LINECAPS << std::endl;
    std::cout << "LINGUISTIC_IGNORECASE=" << LINGUISTIC_IGNORECASE << std::endl;
    std::cout << "LINGUISTIC_IGNOREDIACRITIC=" << LINGUISTIC_IGNOREDIACRITIC << std::endl;
    std::cout << "LINK_MAX=" << LINK_MAX << std::endl;
    std::cout << "LISTEN_OUTSTANDING=" << LISTEN_OUTSTANDING << std::endl;
    std::cout << "LLKHF_ALTDOWN=" << LLKHF_ALTDOWN << std::endl;
    std::cout << "LLKHF_EXTENDED=" << LLKHF_EXTENDED << std::endl;
    std::cout << "LLKHF_INJECTED=" << LLKHF_INJECTED << std::endl;
    std::cout << "LLKHF_LOWER_IL_INJECTED=" << LLKHF_LOWER_IL_INJECTED << std::endl;
    std::cout << "LLKHF_UP=" << LLKHF_UP << std::endl;
    std::cout << "LLMHF_INJECTED=" << LLMHF_INJECTED << std::endl;
    std::cout << "LLMHF_LOWER_IL_INJECTED=" << LLMHF_LOWER_IL_INJECTED << std::endl;
    std::cout << "LMEM_DISCARDED=" << LMEM_DISCARDED << std::endl;
    std::cout << "LMEM_FIXED=" << LMEM_FIXED << std::endl;
    std::cout << "LMEM_INVALID_HANDLE=" << LMEM_INVALID_HANDLE << std::endl;
    std::cout << "LMEM_MODIFY=" << LMEM_MODIFY << std::endl;
    std::cout << "LMEM_MOVEABLE=" << LMEM_MOVEABLE << std::endl;
    std::cout << "LMEM_NOCOMPACT=" << LMEM_NOCOMPACT << std::endl;
    std::cout << "LMEM_NODISCARD=" << LMEM_NODISCARD << std::endl;
    std::cout << "LMEM_ZEROINIT=" << LMEM_ZEROINIT << std::endl;
    std::cout << "LOAD_DLL_DEBUG_EVENT=" << LOAD_DLL_DEBUG_EVENT << std::endl;
    std::cout << "LOAD_IGNORE_CODE_AUTHZ_LEVEL=" << LOAD_IGNORE_CODE_AUTHZ_LEVEL << std::endl;
    std::cout << "LOAD_LIBRARY_AS_DATAFILE=" << LOAD_LIBRARY_AS_DATAFILE << std::endl;
    std::cout << "LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE=" << LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE << std::endl;
    std::cout << "LOAD_LIBRARY_AS_IMAGE_RESOURCE=" << LOAD_LIBRARY_AS_IMAGE_RESOURCE << std::endl;
    std::cout << "LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY=" << LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY << std::endl;
    std::cout << "LOAD_LIBRARY_REQUIRE_SIGNED_TARGET=" << LOAD_LIBRARY_REQUIRE_SIGNED_TARGET << std::endl;
    std::cout << "LOAD_LIBRARY_SAFE_CURRENT_DIRS=" << LOAD_LIBRARY_SAFE_CURRENT_DIRS << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_APPLICATION_DIR=" << LOAD_LIBRARY_SEARCH_APPLICATION_DIR << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_DEFAULT_DIRS=" << LOAD_LIBRARY_SEARCH_DEFAULT_DIRS << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR=" << LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_SYSTEM32=" << LOAD_LIBRARY_SEARCH_SYSTEM32 << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER=" << LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER << std::endl;
    std::cout << "LOAD_LIBRARY_SEARCH_USER_DIRS=" << LOAD_LIBRARY_SEARCH_USER_DIRS << std::endl;
    std::cout << "LOAD_TLB_AS_32BIT=" << LOAD_TLB_AS_32BIT << std::endl;
    std::cout << "LOAD_TLB_AS_64BIT=" << LOAD_TLB_AS_64BIT << std::endl;
    std::cout << "LOAD_WITH_ALTERED_SEARCH_PATH=" << LOAD_WITH_ALTERED_SEARCH_PATH << std::endl;
    std::cout << "LOCALE_ALL=" << LOCALE_ALL << std::endl;
    std::cout << "LOCALE_ALLOW_NEUTRAL_NAMES=" << LOCALE_ALLOW_NEUTRAL_NAMES << std::endl;
    std::cout << "LOCALE_ALTERNATE_SORTS=" << LOCALE_ALTERNATE_SORTS << std::endl;
    std::cout << "LOCALE_FONTSIGNATURE=" << LOCALE_FONTSIGNATURE << std::endl;
    std::cout << "LOCALE_ICALENDARTYPE=" << LOCALE_ICALENDARTYPE << std::endl;
    std::cout << "LOCALE_ICENTURY=" << LOCALE_ICENTURY << std::endl;
    std::cout << "LOCALE_ICOUNTRY=" << LOCALE_ICOUNTRY << std::endl;
    std::cout << "LOCALE_ICURRDIGITS=" << LOCALE_ICURRDIGITS << std::endl;
    std::cout << "LOCALE_IDATE=" << LOCALE_IDATE << std::endl;
    std::cout << "LOCALE_IDAYLZERO=" << LOCALE_IDAYLZERO << std::endl;
    std::cout << "LOCALE_IDEFAULTANSICODEPAGE=" << LOCALE_IDEFAULTANSICODEPAGE << std::endl;
    std::cout << "LOCALE_IDEFAULTEBCDICCODEPAGE=" << LOCALE_IDEFAULTEBCDICCODEPAGE << std::endl;
    std::cout << "LOCALE_IDEFAULTLANGUAGE=" << LOCALE_IDEFAULTLANGUAGE << std::endl;
    std::cout << "LOCALE_IDEFAULTMACCODEPAGE=" << LOCALE_IDEFAULTMACCODEPAGE << std::endl;
    std::cout << "LOCALE_IDIGITS=" << LOCALE_IDIGITS << std::endl;
    std::cout << "LOCALE_IDIGITSUBSTITUTION=" << LOCALE_IDIGITSUBSTITUTION << std::endl;
    std::cout << "LOCALE_ILANGUAGE=" << LOCALE_ILANGUAGE << std::endl;
    std::cout << "LOCALE_ILDATE=" << LOCALE_ILDATE << std::endl;
    std::cout << "LOCALE_ILZERO=" << LOCALE_ILZERO << std::endl;
    std::cout << "LOCALE_IMONLZERO=" << LOCALE_IMONLZERO << std::endl;
    std::cout << "LOCALE_INEGATIVEPERCENT=" << LOCALE_INEGATIVEPERCENT << std::endl;
    std::cout << "LOCALE_INEGNUMBER=" << LOCALE_INEGNUMBER << std::endl;
    std::cout << "LOCALE_INEGSEPBYSPACE=" << LOCALE_INEGSEPBYSPACE << std::endl;
    std::cout << "LOCALE_INEGSIGNPOSN=" << LOCALE_INEGSIGNPOSN << std::endl;
    std::cout << "LOCALE_INEGSYMPRECEDES=" << LOCALE_INEGSYMPRECEDES << std::endl;
    std::cout << "LOCALE_INEUTRAL=" << LOCALE_INEUTRAL << std::endl;
    std::cout << "LOCALE_IPOSITIVEPERCENT=" << LOCALE_IPOSITIVEPERCENT << std::endl;
    std::cout << "LOCALE_IPOSSEPBYSPACE=" << LOCALE_IPOSSEPBYSPACE << std::endl;
    std::cout << "LOCALE_IPOSSIGNPOSN=" << LOCALE_IPOSSIGNPOSN << std::endl;
    std::cout << "LOCALE_IPOSSYMPRECEDES=" << LOCALE_IPOSSYMPRECEDES << std::endl;
    std::cout << "LOCALE_IREADINGLAYOUT=" << LOCALE_IREADINGLAYOUT << std::endl;
    std::cout << "LOCALE_ITIME=" << LOCALE_ITIME << std::endl;
    std::cout << "LOCALE_ITIMEMARKPOSN=" << LOCALE_ITIMEMARKPOSN << std::endl;
    std::cout << "LOCALE_ITLZERO=" << LOCALE_ITLZERO << std::endl;
    std::cout << "LOCALE_NAME_MAX_LENGTH=" << LOCALE_NAME_MAX_LENGTH << std::endl;
    std::cout << "LOCALE_NAME_USER_DEFAULT=" << LOCALE_NAME_USER_DEFAULT << std::endl;
    std::cout << "LOCALE_NEUTRALDATA=" << LOCALE_NEUTRALDATA << std::endl;
    std::cout << "LOCALE_NOUSEROVERRIDE=" << LOCALE_NOUSEROVERRIDE << std::endl;
    std::cout << "LOCALE_REPLACEMENT=" << LOCALE_REPLACEMENT << std::endl;
    std::cout << "LOCALE_RETURN_GENITIVE_NAMES=" << LOCALE_RETURN_GENITIVE_NAMES << std::endl;
    std::cout << "LOCALE_RETURN_NUMBER=" << LOCALE_RETURN_NUMBER << std::endl;
    std::cout << "LOCALE_S1159=" << LOCALE_S1159 << std::endl;
    std::cout << "LOCALE_S2359=" << LOCALE_S2359 << std::endl;
    std::cout << "LOCALE_SABBREVCTRYNAME=" << LOCALE_SABBREVCTRYNAME << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME1=" << LOCALE_SABBREVDAYNAME1 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME2=" << LOCALE_SABBREVDAYNAME2 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME3=" << LOCALE_SABBREVDAYNAME3 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME4=" << LOCALE_SABBREVDAYNAME4 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME5=" << LOCALE_SABBREVDAYNAME5 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME6=" << LOCALE_SABBREVDAYNAME6 << std::endl;
    std::cout << "LOCALE_SABBREVDAYNAME7=" << LOCALE_SABBREVDAYNAME7 << std::endl;
    std::cout << "LOCALE_SABBREVLANGNAME=" << LOCALE_SABBREVLANGNAME << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME1=" << LOCALE_SABBREVMONTHNAME1 << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME2=" << LOCALE_SABBREVMONTHNAME2 << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME3=" << LOCALE_SABBREVMONTHNAME3 << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME4=" << LOCALE_SABBREVMONTHNAME4 << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME5=" << LOCALE_SABBREVMONTHNAME5 << std::endl;
    std::cout << "LOCALE_SABBREVMONTHNAME6=" << LOCALE_SABBREVMONTHNAME6 << std::endl;
    std::cout << "LOCALE_SCOUNTRY=" << LOCALE_SCOUNTRY << std::endl;
    std::cout << "LOCALE_SCURRENCY=" << LOCALE_SCURRENCY << std::endl;
    std::cout << "LOCALE_SDAYNAME7=" << LOCALE_SDAYNAME7 << std::endl;
    std::cout << "LOCALE_SENGCOUNTRY=" << LOCALE_SENGCOUNTRY << std::endl;
    std::cout << "LOCALE_SENGCURRNAME=" << LOCALE_SENGCURRNAME << std::endl;
    std::cout << "LOCALE_SENGLANGUAGE=" << LOCALE_SENGLANGUAGE << std::endl;
    std::cout << "LOCALE_SENGLISHCOUNTRYNAME=" << LOCALE_SENGLISHCOUNTRYNAME << std::endl;
    std::cout << "LOCALE_SENGLISHDISPLAYNAME=" << LOCALE_SENGLISHDISPLAYNAME << std::endl;
    std::cout << "LOCALE_SENGLISHLANGUAGENAME=" << LOCALE_SENGLISHLANGUAGENAME << std::endl;
    std::cout << "LOCALE_SGROUPING=" << LOCALE_SGROUPING << std::endl;
    std::cout << "LOCALE_SINTLSYMBOL=" << LOCALE_SINTLSYMBOL << std::endl;
    std::cout << "LOCALE_SISO3166CTRYNAME2=" << LOCALE_SISO3166CTRYNAME2 << std::endl;
    std::cout << "LOCALE_SISO639LANGNAME=" << LOCALE_SISO639LANGNAME << std::endl;
    std::cout << "LOCALE_SISO639LANGNAME2=" << LOCALE_SISO639LANGNAME2 << std::endl;
    std::cout << "LOCALE_SLANGUAGE=" << LOCALE_SLANGUAGE << std::endl;
    std::cout << "LOCALE_SLOCALIZEDCOUNTRYNAME=" << LOCALE_SLOCALIZEDCOUNTRYNAME << std::endl;
    std::cout << "LOCALE_SLOCALIZEDDISPLAYNAME=" << LOCALE_SLOCALIZEDDISPLAYNAME << std::endl;
    std::cout << "LOCALE_SLONGDATE=" << LOCALE_SLONGDATE << std::endl;
    std::cout << "LOCALE_SMONDECIMALSEP=" << LOCALE_SMONDECIMALSEP << std::endl;
    std::cout << "LOCALE_SMONGROUPING=" << LOCALE_SMONGROUPING << std::endl;
    std::cout << "LOCALE_SMONTHDAY=" << LOCALE_SMONTHDAY << std::endl;
    std::cout << "LOCALE_SMONTHNAME1=" << LOCALE_SMONTHNAME1 << std::endl;
    std::cout << "LOCALE_SMONTHNAME10=" << LOCALE_SMONTHNAME10 << std::endl;
    std::cout << "LOCALE_SMONTHNAME11=" << LOCALE_SMONTHNAME11 << std::endl;
    std::cout << "LOCALE_SMONTHNAME12=" << LOCALE_SMONTHNAME12 << std::endl;
    std::cout << "LOCALE_SMONTHNAME2=" << LOCALE_SMONTHNAME2 << std::endl;
    std::cout << "LOCALE_SMONTHNAME9=" << LOCALE_SMONTHNAME9 << std::endl;
    std::cout << "LOCALE_SMONTHOUSANDSEP=" << LOCALE_SMONTHOUSANDSEP << std::endl;
    std::cout << "LOCALE_SNAN=" << LOCALE_SNAN << std::endl;
    std::cout << "LOCALE_SNATIVECOUNTRYNAME=" << LOCALE_SNATIVECOUNTRYNAME << std::endl;
    std::cout << "LOCALE_SNATIVECTRYNAME=" << LOCALE_SNATIVECTRYNAME << std::endl;
    std::cout << "LOCALE_SNATIVECURRNAME=" << LOCALE_SNATIVECURRNAME << std::endl;
    std::cout << "LOCALE_SNATIVEDIGITS=" << LOCALE_SNATIVEDIGITS << std::endl;
    std::cout << "LOCALE_SNATIVEDISPLAYNAME=" << LOCALE_SNATIVEDISPLAYNAME << std::endl;
    std::cout << "LOCALE_SNATIVELANGNAME=" << LOCALE_SNATIVELANGNAME << std::endl;
    std::cout << "LOCALE_SNATIVELANGUAGENAME=" << LOCALE_SNATIVELANGUAGENAME << std::endl;
    std::cout << "LOCALE_SNEGATIVESIGN=" << LOCALE_SNEGATIVESIGN << std::endl;
    std::cout << "LOCALE_SPECIFICDATA=" << LOCALE_SPECIFICDATA << std::endl;
    std::cout << "LOCALE_SPERCENT=" << LOCALE_SPERCENT << std::endl;
    std::cout << "LOCALE_SPERMILLE=" << LOCALE_SPERMILLE << std::endl;
    std::cout << "LOCALE_SPOSITIVESIGN=" << LOCALE_SPOSITIVESIGN << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME1=" << LOCALE_SSHORTESTDAYNAME1 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME2=" << LOCALE_SSHORTESTDAYNAME2 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME3=" << LOCALE_SSHORTESTDAYNAME3 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME4=" << LOCALE_SSHORTESTDAYNAME4 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME5=" << LOCALE_SSHORTESTDAYNAME5 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME6=" << LOCALE_SSHORTESTDAYNAME6 << std::endl;
    std::cout << "LOCALE_SSHORTESTDAYNAME7=" << LOCALE_SSHORTESTDAYNAME7 << std::endl;
    std::cout << "LOCALE_SSHORTTIME=" << LOCALE_SSHORTTIME << std::endl;
    std::cout << "LOCALE_SSORTNAME=" << LOCALE_SSORTNAME << std::endl;
    std::cout << "LOCALE_STIMEFORMAT=" << LOCALE_STIMEFORMAT << std::endl;
    std::cout << "LOCALE_SUPPLEMENTAL=" << LOCALE_SUPPLEMENTAL << std::endl;
    std::cout << "LOCALE_SYEARMONTH=" << LOCALE_SYEARMONTH << std::endl;
    std::cout << "LOCALE_USE_CP_ACP=" << LOCALE_USE_CP_ACP << std::endl;
    std::cout << "LOCALE_USE_NLS=" << LOCALE_USE_NLS << std::endl;
    std::cout << "LOCALE_WINDOWS=" << LOCALE_WINDOWS << std::endl;
    std::cout << "LOCKFILE_EXCLUSIVE_LOCK=" << LOCKFILE_EXCLUSIVE_LOCK << std::endl;
    std::cout << "LOCKFILE_FAIL_IMMEDIATELY=" << LOCKFILE_FAIL_IMMEDIATELY << std::endl;
    std::cout << "LOCK_ELEMENT=" << LOCK_ELEMENT << std::endl;
    std::cout << "LOCK_UNLOCK_DOOR=" << LOCK_UNLOCK_DOOR << std::endl;
    std::cout << "LOCK_UNLOCK_IEPORT=" << LOCK_UNLOCK_IEPORT << std::endl;
    std::cout << "LOCK_UNLOCK_KEYPAD=" << LOCK_UNLOCK_KEYPAD << std::endl;
    std::cout << "LOGON32_LOGON_BATCH=" << LOGON32_LOGON_BATCH << std::endl;
    std::cout << "LOGON32_LOGON_INTERACTIVE=" << LOGON32_LOGON_INTERACTIVE << std::endl;
    std::cout << "LOGON32_LOGON_NETWORK=" << LOGON32_LOGON_NETWORK << std::endl;
    std::cout << "LOGON32_LOGON_NETWORK_CLEARTEXT=" << LOGON32_LOGON_NETWORK_CLEARTEXT << std::endl;
    std::cout << "LOGON32_LOGON_NEW_CREDENTIALS=" << LOGON32_LOGON_NEW_CREDENTIALS << std::endl;
    std::cout << "LOGON32_LOGON_SERVICE=" << LOGON32_LOGON_SERVICE << std::endl;
    std::cout << "LOGON32_LOGON_UNLOCK=" << LOGON32_LOGON_UNLOCK << std::endl;
    std::cout << "LOGON32_PROVIDER_DEFAULT=" << LOGON32_PROVIDER_DEFAULT << std::endl;
    std::cout << "LOGON32_PROVIDER_VIRTUAL=" << LOGON32_PROVIDER_VIRTUAL << std::endl;
    std::cout << "LOGON32_PROVIDER_WINNT35=" << LOGON32_PROVIDER_WINNT35 << std::endl;
    std::cout << "LOGON32_PROVIDER_WINNT40=" << LOGON32_PROVIDER_WINNT40 << std::endl;
    std::cout << "LOGON32_PROVIDER_WINNT50=" << LOGON32_PROVIDER_WINNT50 << std::endl;
    std::cout << "LOGON_NETCREDENTIALS_ONLY=" << LOGON_NETCREDENTIALS_ONLY << std::endl;
    std::cout << "LOGON_WITH_PROFILE=" << LOGON_WITH_PROFILE << std::endl;
    std::cout << "LOGON_ZERO_PASSWORD_BUFFER=" << LOGON_ZERO_PASSWORD_BUFFER << std::endl;
    std::cout << "LOGPIXELSX=" << LOGPIXELSX << std::endl;
    std::cout << "LOGPIXELSY=" << LOGPIXELSY << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE << std::endl;
    std::cout << "LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE=" << LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE << std::endl;
    std::cout << "LPD_DOUBLEBUFFER=" << LPD_DOUBLEBUFFER << std::endl;
    std::cout << "LPD_SHARE_ACCUM=" << LPD_SHARE_ACCUM << std::endl;
    std::cout << "LPD_SHARE_DEPTH=" << LPD_SHARE_DEPTH << std::endl;
    std::cout << "LPD_SHARE_STENCIL=" << LPD_SHARE_STENCIL << std::endl;
    std::cout << "LPD_STEREO=" << LPD_STEREO << std::endl;
    std::cout << "LPD_SUPPORT_GDI=" << LPD_SUPPORT_GDI << std::endl;
    std::cout << "LPD_SUPPORT_OPENGL=" << LPD_SUPPORT_OPENGL << std::endl;
    std::cout << "LPD_SWAP_COPY=" << LPD_SWAP_COPY << std::endl;
    std::cout << "LPD_SWAP_EXCHANGE=" << LPD_SWAP_EXCHANGE << std::endl;
    std::cout << "LPD_TRANSPARENT=" << LPD_TRANSPARENT << std::endl;
    std::cout << "LPD_TYPE_COLORINDEX=" << LPD_TYPE_COLORINDEX << std::endl;
    std::cout << "LPD_TYPE_RGBA=" << LPD_TYPE_RGBA << std::endl;
    std::cout << "LPTR=" << LPTR << std::endl;
    std::cout << "LR_COLOR=" << LR_COLOR << std::endl;
    std::cout << "LR_COPYDELETEORG=" << LR_COPYDELETEORG << std::endl;
    std::cout << "LR_COPYFROMRESOURCE=" << LR_COPYFROMRESOURCE << std::endl;
    std::cout << "LR_COPYRETURNORG=" << LR_COPYRETURNORG << std::endl;
    std::cout << "LR_CREATEDIBSECTION=" << LR_CREATEDIBSECTION << std::endl;
    std::cout << "LR_DEFAULTCOLOR=" << LR_DEFAULTCOLOR << std::endl;
    std::cout << "LR_DEFAULTSIZE=" << LR_DEFAULTSIZE << std::endl;
    std::cout << "LR_LOADFROMFILE=" << LR_LOADFROMFILE << std::endl;
    std::cout << "LR_LOADMAP3DCOLORS=" << LR_LOADMAP3DCOLORS << std::endl;
    std::cout << "LR_LOADTRANSPARENT=" << LR_LOADTRANSPARENT << std::endl;
    std::cout << "LR_MONOCHROME=" << LR_MONOCHROME << std::endl;
    std::cout << "LR_SHARED=" << LR_SHARED << std::endl;
    std::cout << "LR_VGACOLOR=" << LR_VGACOLOR << std::endl;
    std::cout << "LSFW_LOCK=" << LSFW_LOCK << std::endl;
    std::cout << "LSFW_UNLOCK=" << LSFW_UNLOCK << std::endl;
    std::cout << "LTGRAY_BRUSH=" << LTGRAY_BRUSH << std::endl;
    std::cout << "LTP_PC_SMT=" << LTP_PC_SMT << std::endl;
    std::cout << "LUA_TOKEN=" << LUA_TOKEN << std::endl;
    std::cout << "LVS_ALIGNLEFT=" << LVS_ALIGNLEFT << std::endl;
    std::cout << "LVS_ALIGNTOP=" << LVS_ALIGNTOP << std::endl;
    std::cout << "LVS_AUTOARRANGE=" << LVS_AUTOARRANGE << std::endl;
    std::cout << "LVS_EDITLABELS=" << LVS_EDITLABELS << std::endl;
    std::cout << "LVS_ICON=" << LVS_ICON << std::endl;
    std::cout << "LVS_LIST=" << LVS_LIST << std::endl;
    std::cout << "LVS_NOCOLUMNHEADER=" << LVS_NOCOLUMNHEADER << std::endl;
    std::cout << "LVS_NOLABELWRAP=" << LVS_NOLABELWRAP << std::endl;
    std::cout << "LVS_NOSCROLL=" << LVS_NOSCROLL << std::endl;
    std::cout << "LVS_NOSORTHEADER=" << LVS_NOSORTHEADER << std::endl;
    std::cout << "LVS_OWNERDATA=" << LVS_OWNERDATA << std::endl;
    std::cout << "LVS_OWNERDRAWFIXED=" << LVS_OWNERDRAWFIXED << std::endl;
    std::cout << "LVS_REPORT=" << LVS_REPORT << std::endl;
    std::cout << "LVS_SHAREIMAGELISTS=" << LVS_SHAREIMAGELISTS << std::endl;
    std::cout << "LVS_SHOWSELALWAYS=" << LVS_SHOWSELALWAYS << std::endl;
    std::cout << "LVS_SINGLESEL=" << LVS_SINGLESEL << std::endl;
    std::cout << "LVS_SMALLICON=" << LVS_SMALLICON << std::endl;
    std::cout << "LVS_SORTASCENDING=" << LVS_SORTASCENDING << std::endl;
    std::cout << "LVS_SORTDESCENDING=" << LVS_SORTDESCENDING << std::endl;
    std::cout << "LVS_TYPEMASK=" << LVS_TYPEMASK << std::endl;
    std::cout << "LWA_ALPHA=" << LWA_ALPHA << std::endl;
    std::cout << "LWA_COLORKEY=" << LWA_COLORKEY << std::endl;
    std::cout << "LWS_IGNORERETURN=" << LWS_IGNORERETURN << std::endl;
    std::cout << "LWS_NOPREFIX=" << LWS_NOPREFIX << std::endl;
    std::cout << "LWS_RIGHT=" << LWS_RIGHT << std::endl;
    std::cout << "LWS_TRANSPARENT=" << LWS_TRANSPARENT << std::endl;
    std::cout << "LWS_USECUSTOMTEXT=" << LWS_USECUSTOMTEXT << std::endl;
    std::cout << "LWS_USEVISUALSTYLE=" << LWS_USEVISUALSTYLE << std::endl;
    std::cout << "LZERROR_BADINHANDLE=" << LZERROR_BADINHANDLE << std::endl;
    std::cout << "LZERROR_BADOUTHANDLE=" << LZERROR_BADOUTHANDLE << std::endl;
    std::cout << "LZERROR_BADVALUE=" << LZERROR_BADVALUE << std::endl;
    std::cout << "LZERROR_GLOBALLOC=" << LZERROR_GLOBALLOC << std::endl;
    std::cout << "LZERROR_GLOBLOCK=" << LZERROR_GLOBLOCK << std::endl;
    std::cout << "LZERROR_READ=" << LZERROR_READ << std::endl;
    std::cout << "LZERROR_UNKNOWNALG=" << LZERROR_UNKNOWNALG << std::endl;
    std::cout << "LZERROR_WRITE=" << LZERROR_WRITE << std::endl;
    std::cout << "MAC_CHARSET=" << MAC_CHARSET << std::endl;
    std::cout << "MAPVK_VK_TO_CHAR=" << MAPVK_VK_TO_CHAR << std::endl;
    std::cout << "MAPVK_VK_TO_VSC=" << MAPVK_VK_TO_VSC << std::endl;
    std::cout << "MAPVK_VK_TO_VSC_EX=" << MAPVK_VK_TO_VSC_EX << std::endl;
    std::cout << "MAPVK_VSC_TO_VK=" << MAPVK_VSC_TO_VK << std::endl;
    std::cout << "MAPVK_VSC_TO_VK_EX=" << MAPVK_VSC_TO_VK_EX << std::endl;
    std::cout << "MAP_COMPOSITE=" << MAP_COMPOSITE << std::endl;
    std::cout << "MAP_EXPAND_LIGATURES=" << MAP_EXPAND_LIGATURES << std::endl;
    std::cout << "MAP_FOLDCZONE=" << MAP_FOLDCZONE << std::endl;
    std::cout << "MAP_FOLDDIGITS=" << MAP_FOLDDIGITS << std::endl;
    std::cout << "MAP_PRECOMPOSED=" << MAP_PRECOMPOSED << std::endl;
    std::cout << "MARKPARITY=" << MARKPARITY << std::endl;
    std::cout << "MARK_HANDLE_NOT_REALTIME=" << MARK_HANDLE_NOT_REALTIME << std::endl;
    std::cout << "MARK_HANDLE_NOT_TXF_SYSTEM_LOG=" << MARK_HANDLE_NOT_TXF_SYSTEM_LOG << std::endl;
    std::cout << "MARK_HANDLE_PROTECT_CLUSTERS=" << MARK_HANDLE_PROTECT_CLUSTERS << std::endl;
    std::cout << "MARK_HANDLE_REALTIME=" << MARK_HANDLE_REALTIME << std::endl;
    std::cout << "MARK_HANDLE_TXF_SYSTEM_LOG=" << MARK_HANDLE_TXF_SYSTEM_LOG << std::endl;
    std::cout << "MARSHALINTERFACE_MIN=" << MARSHALINTERFACE_MIN << std::endl;
    std::cout << "MASK_TO_RESET_TLB_BITS=" << MASK_TO_RESET_TLB_BITS << std::endl;
    std::cout << "MAXERRORLENGTH=" << MAXERRORLENGTH << std::endl;
    std::cout << "MAXGETHOSTSTRUCT=" << MAXGETHOSTSTRUCT << std::endl;
    std::cout << "MAXIMUM_ATTR_STRING_LENGTH=" << MAXIMUM_ATTR_STRING_LENGTH << std::endl;
    std::cout << "MAXIMUM_ENCRYPTION_VALUE=" << MAXIMUM_ENCRYPTION_VALUE << std::endl;
    std::cout << "MAXIMUM_PROCESSORS=" << MAXIMUM_PROCESSORS << std::endl;
    std::cout << "MAXIMUM_PROC_PER_GROUP=" << MAXIMUM_PROC_PER_GROUP << std::endl;
    std::cout << "MAXIMUM_REPARSE_DATA_BUFFER_SIZE=" << MAXIMUM_REPARSE_DATA_BUFFER_SIZE << std::endl;
    std::cout << "MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID=" << MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID << std::endl;
    std::cout << "MAXIMUM_SMARTCARD_READERS=" << MAXIMUM_SMARTCARD_READERS << std::endl;
    std::cout << "MAXIMUM_SUPPORTED_EXTENSION=" << MAXIMUM_SUPPORTED_EXTENSION << std::endl;
    std::cout << "MAXIMUM_WAIT_OBJECTS=" << MAXIMUM_WAIT_OBJECTS << std::endl;
    std::cout << "MAXIMUM_XSTATE_FEATURES=" << MAXIMUM_XSTATE_FEATURES << std::endl;
    std::cout << "MAXLOGICALLOGNAMESIZE=" << MAXLOGICALLOGNAMESIZE << std::endl;
    std::cout << "MAXPNAMELEN=" << MAXPNAMELEN << std::endl;
    std::cout << "MAXPROPPAGES=" << MAXPROPPAGES << std::endl;
    std::cout << "MAXSTRETCHBLTMODE=" << MAXSTRETCHBLTMODE << std::endl;
    std::cout << "MAXUIDLEN=" << MAXUIDLEN << std::endl;
    std::cout << "MAX_ACL_REVISION=" << MAX_ACL_REVISION << std::endl;
    std::cout << "MAX_CANON=" << MAX_CANON << std::endl;
    std::cout << "MAX_COMPUTERNAME_LENGTH=" << MAX_COMPUTERNAME_LENGTH << std::endl;
    std::cout << "MAX_DEFAULTCHAR=" << MAX_DEFAULTCHAR << std::endl;
    std::cout << "MAX_HW_COUNTERS=" << MAX_HW_COUNTERS << std::endl;
    std::cout << "MAX_INPUT=" << MAX_INPUT << std::endl;
    std::cout << "MAX_JOYSTICKOEMVXDNAME=" << MAX_JOYSTICKOEMVXDNAME << std::endl;
    std::cout << "MAX_LANA=" << MAX_LANA << std::endl;
    std::cout << "MAX_LEADBYTES=" << MAX_LEADBYTES << std::endl;
    std::cout << "MAX_LOGICALDPIOVERRIDE=" << MAX_LOGICALDPIOVERRIDE << std::endl;
    std::cout << "MAX_MONITORS=" << MAX_MONITORS << std::endl;
    std::cout << "MAX_NUM_REASONS=" << MAX_NUM_REASONS << std::endl;
    std::cout << "MAX_PATH=" << MAX_PATH << std::endl;
    std::cout << "MAX_PRIORITY=" << MAX_PRIORITY << std::endl;
    std::cout << "MAX_PROFILE_LEN=" << MAX_PROFILE_LEN << std::endl;
    std::cout << "MAX_REASON_BUGID_LEN=" << MAX_REASON_BUGID_LEN << std::endl;
    std::cout << "MAX_REASON_COMMENT_LEN=" << MAX_REASON_COMMENT_LEN << std::endl;
    std::cout << "MAX_REASON_DESC_LEN=" << MAX_REASON_DESC_LEN << std::endl;
    std::cout << "MAX_REASON_NAME_LEN=" << MAX_REASON_NAME_LEN << std::endl;
    std::cout << "MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH=" << MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH << std::endl;
    std::cout << "MAX_SHUTDOWN_TIMEOUT=" << MAX_SHUTDOWN_TIMEOUT << std::endl;
    std::cout << "MAX_SID_SIZE=" << MAX_SID_SIZE << std::endl;
    std::cout << "MAX_SIZE_SECURITY_ID=" << MAX_SIZE_SECURITY_ID << std::endl;
    std::cout << "MAX_STR_BLOCKREASON=" << MAX_STR_BLOCKREASON << std::endl;
    std::cout << "MAX_SUPPORTED_OS_NUM=" << MAX_SUPPORTED_OS_NUM << std::endl;
    std::cout << "MAX_TOUCH_COUNT=" << MAX_TOUCH_COUNT << std::endl;
    std::cout << "MAX_TOUCH_PREDICTION_FILTER_TAPS=" << MAX_TOUCH_PREDICTION_FILTER_TAPS << std::endl;
    std::cout << "MAX_TRANSACTION_DESCRIPTION_LENGTH=" << MAX_TRANSACTION_DESCRIPTION_LENGTH << std::endl;
    std::cout << "MAX_VOLUME_ID_SIZE=" << MAX_VOLUME_ID_SIZE << std::endl;
    std::cout << "MAX_VOLUME_TEMPLATE_SIZE=" << MAX_VOLUME_TEMPLATE_SIZE << std::endl;
    std::cout << "MA_ACTIVATE=" << MA_ACTIVATE << std::endl;
    std::cout << "MA_ACTIVATEANDEAT=" << MA_ACTIVATEANDEAT << std::endl;
    std::cout << "MA_NOACTIVATE=" << MA_NOACTIVATE << std::endl;
    std::cout << "MA_NOACTIVATEANDEAT=" << MA_NOACTIVATEANDEAT << std::endl;
    std::cout << "MB_COMPOSITE=" << MB_COMPOSITE << std::endl;
    std::cout << "MB_ERR_INVALID_CHARS=" << MB_ERR_INVALID_CHARS << std::endl;
    std::cout << "MB_LEN_MAX=" << MB_LEN_MAX << std::endl;
    std::cout << "MB_PRECOMPOSED=" << MB_PRECOMPOSED << std::endl;
    std::cout << "MB_USEGLYPHCHARS=" << MB_USEGLYPHCHARS << std::endl;
    std::cout << "MCIERR_BAD_CONSTANT=" << MCIERR_BAD_CONSTANT << std::endl;
    std::cout << "MCIERR_BAD_INTEGER=" << MCIERR_BAD_INTEGER << std::endl;
    std::cout << "MCIERR_BAD_TIME_FORMAT=" << MCIERR_BAD_TIME_FORMAT << std::endl;
    std::cout << "MCIERR_BASE=" << MCIERR_BASE << std::endl;
    std::cout << "MCIERR_CANNOT_LOAD_DRIVER=" << MCIERR_CANNOT_LOAD_DRIVER << std::endl;
    std::cout << "MCIERR_CANNOT_USE_ALL=" << MCIERR_CANNOT_USE_ALL << std::endl;
    std::cout << "MCIERR_CREATEWINDOW=" << MCIERR_CREATEWINDOW << std::endl;
    std::cout << "MCIERR_CUSTOM_DRIVER_BASE=" << MCIERR_CUSTOM_DRIVER_BASE << std::endl;
    std::cout << "MCIERR_DEVICE_LENGTH=" << MCIERR_DEVICE_LENGTH << std::endl;
    std::cout << "MCIERR_DEVICE_LOCKED=" << MCIERR_DEVICE_LOCKED << std::endl;
    std::cout << "MCIERR_DEVICE_NOT_INSTALLED=" << MCIERR_DEVICE_NOT_INSTALLED << std::endl;
    std::cout << "MCIERR_DEVICE_NOT_READY=" << MCIERR_DEVICE_NOT_READY << std::endl;
    std::cout << "MCIERR_DEVICE_OPEN=" << MCIERR_DEVICE_OPEN << std::endl;
    std::cout << "MCIERR_DEVICE_ORD_LENGTH=" << MCIERR_DEVICE_ORD_LENGTH << std::endl;
    std::cout << "MCIERR_DEVICE_TYPE_REQUIRED=" << MCIERR_DEVICE_TYPE_REQUIRED << std::endl;
    std::cout << "MCIERR_DRIVER=" << MCIERR_DRIVER << std::endl;
    std::cout << "MCIERR_DRIVER_INTERNAL=" << MCIERR_DRIVER_INTERNAL << std::endl;
    std::cout << "MCIERR_DUPLICATE_ALIAS=" << MCIERR_DUPLICATE_ALIAS << std::endl;
    std::cout << "MCIERR_DUPLICATE_FLAGS=" << MCIERR_DUPLICATE_FLAGS << std::endl;
    std::cout << "MCIERR_EXTENSION_NOT_FOUND=" << MCIERR_EXTENSION_NOT_FOUND << std::endl;
    std::cout << "MCIERR_EXTRA_CHARACTERS=" << MCIERR_EXTRA_CHARACTERS << std::endl;
    std::cout << "MCIERR_FILENAME_REQUIRED=" << MCIERR_FILENAME_REQUIRED << std::endl;
    std::cout << "MCIERR_FILE_NOT_FOUND=" << MCIERR_FILE_NOT_FOUND << std::endl;
    std::cout << "MCIERR_FILE_NOT_SAVED=" << MCIERR_FILE_NOT_SAVED << std::endl;
    std::cout << "MCIERR_FILE_READ=" << MCIERR_FILE_READ << std::endl;
    std::cout << "MCIERR_FILE_WRITE=" << MCIERR_FILE_WRITE << std::endl;
    std::cout << "MCIERR_FLAGS_NOT_COMPATIBLE=" << MCIERR_FLAGS_NOT_COMPATIBLE << std::endl;
    std::cout << "MCIERR_GET_CD=" << MCIERR_GET_CD << std::endl;
    std::cout << "MCIERR_HARDWARE=" << MCIERR_HARDWARE << std::endl;
    std::cout << "MCIERR_ILLEGAL_FOR_AUTO_OPEN=" << MCIERR_ILLEGAL_FOR_AUTO_OPEN << std::endl;
    std::cout << "MCIERR_INTERNAL=" << MCIERR_INTERNAL << std::endl;
    std::cout << "MCIERR_INVALID_DEVICE_ID=" << MCIERR_INVALID_DEVICE_ID << std::endl;
    std::cout << "MCIERR_INVALID_DEVICE_NAME=" << MCIERR_INVALID_DEVICE_NAME << std::endl;
    std::cout << "MCIERR_INVALID_FILE=" << MCIERR_INVALID_FILE << std::endl;
    std::cout << "MCIERR_MISSING_COMMAND_STRING=" << MCIERR_MISSING_COMMAND_STRING << std::endl;
    std::cout << "MCIERR_MISSING_DEVICE_NAME=" << MCIERR_MISSING_DEVICE_NAME << std::endl;
    std::cout << "MCIERR_MISSING_PARAMETER=" << MCIERR_MISSING_PARAMETER << std::endl;
    std::cout << "MCIERR_MISSING_STRING_ARGUMENT=" << MCIERR_MISSING_STRING_ARGUMENT << std::endl;
    std::cout << "MCIERR_MULTIPLE=" << MCIERR_MULTIPLE << std::endl;
    std::cout << "MCIERR_MUST_USE_SHAREABLE=" << MCIERR_MUST_USE_SHAREABLE << std::endl;
    std::cout << "MCIERR_NEW_REQUIRES_ALIAS=" << MCIERR_NEW_REQUIRES_ALIAS << std::endl;
    std::cout << "MCIERR_NONAPPLICABLE_FUNCTION=" << MCIERR_NONAPPLICABLE_FUNCTION << std::endl;
    std::cout << "MCIERR_NOTIFY_ON_AUTO_OPEN=" << MCIERR_NOTIFY_ON_AUTO_OPEN << std::endl;
    std::cout << "MCIERR_NO_CLOSING_QUOTE=" << MCIERR_NO_CLOSING_QUOTE << std::endl;
    std::cout << "MCIERR_NO_ELEMENT_ALLOWED=" << MCIERR_NO_ELEMENT_ALLOWED << std::endl;
    std::cout << "MCIERR_NO_IDENTITY=" << MCIERR_NO_IDENTITY << std::endl;
    std::cout << "MCIERR_NO_INTEGER=" << MCIERR_NO_INTEGER << std::endl;
    std::cout << "MCIERR_NO_WINDOW=" << MCIERR_NO_WINDOW << std::endl;
    std::cout << "MCIERR_NULL_PARAMETER_BLOCK=" << MCIERR_NULL_PARAMETER_BLOCK << std::endl;
    std::cout << "MCIERR_OUTOFRANGE=" << MCIERR_OUTOFRANGE << std::endl;
    std::cout << "MCIERR_OUT_OF_MEMORY=" << MCIERR_OUT_OF_MEMORY << std::endl;
    std::cout << "MCIERR_PARAM_OVERFLOW=" << MCIERR_PARAM_OVERFLOW << std::endl;
    std::cout << "MCIERR_PARSER_INTERNAL=" << MCIERR_PARSER_INTERNAL << std::endl;
    std::cout << "MCIERR_SEQ_DIV_INCOMPATIBLE=" << MCIERR_SEQ_DIV_INCOMPATIBLE << std::endl;
    std::cout << "MCIERR_SEQ_NOMIDIPRESENT=" << MCIERR_SEQ_NOMIDIPRESENT << std::endl;
    std::cout << "MCIERR_SEQ_PORTUNSPECIFIED=" << MCIERR_SEQ_PORTUNSPECIFIED << std::endl;
    std::cout << "MCIERR_SEQ_PORT_INUSE=" << MCIERR_SEQ_PORT_INUSE << std::endl;
    std::cout << "MCIERR_SEQ_PORT_MAPNODEVICE=" << MCIERR_SEQ_PORT_MAPNODEVICE << std::endl;
    std::cout << "MCIERR_SEQ_PORT_MISCERROR=" << MCIERR_SEQ_PORT_MISCERROR << std::endl;
    std::cout << "MCIERR_SEQ_PORT_NONEXISTENT=" << MCIERR_SEQ_PORT_NONEXISTENT << std::endl;
    std::cout << "MCIERR_SEQ_TIMER=" << MCIERR_SEQ_TIMER << std::endl;
    std::cout << "MCIERR_SET_CD=" << MCIERR_SET_CD << std::endl;
    std::cout << "MCIERR_SET_DRIVE=" << MCIERR_SET_DRIVE << std::endl;
    std::cout << "MCIERR_UNNAMED_RESOURCE=" << MCIERR_UNNAMED_RESOURCE << std::endl;
    std::cout << "MCIERR_UNRECOGNIZED_COMMAND=" << MCIERR_UNRECOGNIZED_COMMAND << std::endl;
    std::cout << "MCIERR_UNRECOGNIZED_KEYWORD=" << MCIERR_UNRECOGNIZED_KEYWORD << std::endl;
    std::cout << "MCIERR_UNSUPPORTED_FUNCTION=" << MCIERR_UNSUPPORTED_FUNCTION << std::endl;
    std::cout << "MCIERR_WAVE_INPUTSINUSE=" << MCIERR_WAVE_INPUTSINUSE << std::endl;
    std::cout << "MCIERR_WAVE_INPUTSUNSUITABLE=" << MCIERR_WAVE_INPUTSUNSUITABLE << std::endl;
    std::cout << "MCIERR_WAVE_INPUTUNSPECIFIED=" << MCIERR_WAVE_INPUTUNSPECIFIED << std::endl;
    std::cout << "MCIERR_WAVE_OUTPUTSINUSE=" << MCIERR_WAVE_OUTPUTSINUSE << std::endl;
    std::cout << "MCIERR_WAVE_OUTPUTSUNSUITABLE=" << MCIERR_WAVE_OUTPUTSUNSUITABLE << std::endl;
    std::cout << "MCIERR_WAVE_OUTPUTUNSPECIFIED=" << MCIERR_WAVE_OUTPUTUNSPECIFIED << std::endl;
    std::cout << "MCIERR_WAVE_SETINPUTINUSE=" << MCIERR_WAVE_SETINPUTINUSE << std::endl;
    std::cout << "MCIERR_WAVE_SETINPUTUNSUITABLE=" << MCIERR_WAVE_SETINPUTUNSUITABLE << std::endl;
    std::cout << "MCIERR_WAVE_SETOUTPUTINUSE=" << MCIERR_WAVE_SETOUTPUTINUSE << std::endl;
    std::cout << "MCIERR_WAVE_SETOUTPUTUNSUITABLE=" << MCIERR_WAVE_SETOUTPUTUNSUITABLE << std::endl;
    std::cout << "MCI_BREAK=" << MCI_BREAK << std::endl;
    std::cout << "MCI_CDA_TRACK_AUDIO=" << MCI_CDA_TRACK_AUDIO << std::endl;
    std::cout << "MCI_CDA_TRACK_OTHER=" << MCI_CDA_TRACK_OTHER << std::endl;
    std::cout << "MCI_CD_OFFSET=" << MCI_CD_OFFSET << std::endl;
    std::cout << "MCI_CLOSE=" << MCI_CLOSE << std::endl;
    std::cout << "MCI_COPY=" << MCI_COPY << std::endl;
    std::cout << "MCI_CUE=" << MCI_CUE << std::endl;
    std::cout << "MCI_CUT=" << MCI_CUT << std::endl;
    std::cout << "MCI_DELETE=" << MCI_DELETE << std::endl;
    std::cout << "MCI_DEVTYPE_ANIMATION=" << MCI_DEVTYPE_ANIMATION << std::endl;
    std::cout << "MCI_DEVTYPE_CD_AUDIO=" << MCI_DEVTYPE_CD_AUDIO << std::endl;
    std::cout << "MCI_DEVTYPE_DAT=" << MCI_DEVTYPE_DAT << std::endl;
    std::cout << "MCI_DEVTYPE_DIGITAL_VIDEO=" << MCI_DEVTYPE_DIGITAL_VIDEO << std::endl;
    std::cout << "MCI_DEVTYPE_FIRST=" << MCI_DEVTYPE_FIRST << std::endl;
    std::cout << "MCI_DEVTYPE_FIRST_USER=" << MCI_DEVTYPE_FIRST_USER << std::endl;
    std::cout << "MCI_DEVTYPE_LAST=" << MCI_DEVTYPE_LAST << std::endl;
    std::cout << "MCI_DEVTYPE_OTHER=" << MCI_DEVTYPE_OTHER << std::endl;
    std::cout << "MCI_DEVTYPE_OVERLAY=" << MCI_DEVTYPE_OVERLAY << std::endl;
    std::cout << "MCI_DEVTYPE_SCANNER=" << MCI_DEVTYPE_SCANNER << std::endl;
    std::cout << "MCI_DEVTYPE_SEQUENCER=" << MCI_DEVTYPE_SEQUENCER << std::endl;
    std::cout << "MCI_DEVTYPE_VCR=" << MCI_DEVTYPE_VCR << std::endl;
    std::cout << "MCI_DEVTYPE_VIDEODISC=" << MCI_DEVTYPE_VIDEODISC << std::endl;
    std::cout << "MCI_DEVTYPE_WAVEFORM_AUDIO=" << MCI_DEVTYPE_WAVEFORM_AUDIO << std::endl;
    std::cout << "MCI_ESCAPE=" << MCI_ESCAPE << std::endl;
    std::cout << "MCI_FIRST=" << MCI_FIRST << std::endl;
    std::cout << "MCI_FORMAT_BYTES=" << MCI_FORMAT_BYTES << std::endl;
    std::cout << "MCI_FORMAT_FRAMES=" << MCI_FORMAT_FRAMES << std::endl;
    std::cout << "MCI_FORMAT_HMS=" << MCI_FORMAT_HMS << std::endl;
    std::cout << "MCI_FORMAT_MILLISECONDS=" << MCI_FORMAT_MILLISECONDS << std::endl;
    std::cout << "MCI_FORMAT_MSF=" << MCI_FORMAT_MSF << std::endl;
    std::cout << "MCI_FORMAT_SAMPLES=" << MCI_FORMAT_SAMPLES << std::endl;
    std::cout << "MCI_FORMAT_SMPTE_24=" << MCI_FORMAT_SMPTE_24 << std::endl;
    std::cout << "MCI_FORMAT_SMPTE_25=" << MCI_FORMAT_SMPTE_25 << std::endl;
    std::cout << "MCI_FORMAT_SMPTE_30=" << MCI_FORMAT_SMPTE_30 << std::endl;
    std::cout << "MCI_FORMAT_SMPTE_30DROP=" << MCI_FORMAT_SMPTE_30DROP << std::endl;
    std::cout << "MCI_FORMAT_TMSF=" << MCI_FORMAT_TMSF << std::endl;
    std::cout << "MCI_FREEZE=" << MCI_FREEZE << std::endl;
    std::cout << "MCI_GETDEVCAPS=" << MCI_GETDEVCAPS << std::endl;
    std::cout << "MCI_INFO=" << MCI_INFO << std::endl;
    std::cout << "MCI_LAST=" << MCI_LAST << std::endl;
    std::cout << "MCI_LOAD=" << MCI_LOAD << std::endl;
    std::cout << "MCI_MODE_NOT_READY=" << MCI_MODE_NOT_READY << std::endl;
    std::cout << "MCI_MODE_OPEN=" << MCI_MODE_OPEN << std::endl;
    std::cout << "MCI_MODE_PAUSE=" << MCI_MODE_PAUSE << std::endl;
    std::cout << "MCI_MODE_PLAY=" << MCI_MODE_PLAY << std::endl;
    std::cout << "MCI_MODE_RECORD=" << MCI_MODE_RECORD << std::endl;
    std::cout << "MCI_MODE_SEEK=" << MCI_MODE_SEEK << std::endl;
    std::cout << "MCI_MODE_STOP=" << MCI_MODE_STOP << std::endl;
    std::cout << "MCI_NOTIFY_ABORTED=" << MCI_NOTIFY_ABORTED << std::endl;
    std::cout << "MCI_NOTIFY_FAILURE=" << MCI_NOTIFY_FAILURE << std::endl;
    std::cout << "MCI_NOTIFY_SUCCESSFUL=" << MCI_NOTIFY_SUCCESSFUL << std::endl;
    std::cout << "MCI_NOTIFY_SUPERSEDED=" << MCI_NOTIFY_SUPERSEDED << std::endl;
    std::cout << "MCI_OPEN=" << MCI_OPEN << std::endl;
    std::cout << "MCI_PASTE=" << MCI_PASTE << std::endl;
    std::cout << "MCI_PAUSE=" << MCI_PAUSE << std::endl;
    std::cout << "MCI_PLAY=" << MCI_PLAY << std::endl;
    std::cout << "MCI_PUT=" << MCI_PUT << std::endl;
    std::cout << "MCI_REALIZE=" << MCI_REALIZE << std::endl;
    std::cout << "MCI_RECORD=" << MCI_RECORD << std::endl;
    std::cout << "MCI_RESUME=" << MCI_RESUME << std::endl;
    std::cout << "MCI_SAVE=" << MCI_SAVE << std::endl;
    std::cout << "MCI_SEEK=" << MCI_SEEK << std::endl;
    std::cout << "MCI_SEQ_DIV_PPQN=" << MCI_SEQ_DIV_PPQN << std::endl;
    std::cout << "MCI_SEQ_DIV_SMPTE_24=" << MCI_SEQ_DIV_SMPTE_24 << std::endl;
    std::cout << "MCI_SEQ_DIV_SMPTE_25=" << MCI_SEQ_DIV_SMPTE_25 << std::endl;
    std::cout << "MCI_SEQ_DIV_SMPTE_30=" << MCI_SEQ_DIV_SMPTE_30 << std::endl;
    std::cout << "MCI_SEQ_DIV_SMPTE_30DROP=" << MCI_SEQ_DIV_SMPTE_30DROP << std::endl;
    std::cout << "MCI_SEQ_FILE=" << MCI_SEQ_FILE << std::endl;
    std::cout << "MCI_SEQ_FORMAT_SONGPTR=" << MCI_SEQ_FORMAT_SONGPTR << std::endl;
    std::cout << "MCI_SEQ_MAPPER=" << MCI_SEQ_MAPPER << std::endl;
    std::cout << "MCI_SEQ_MIDI=" << MCI_SEQ_MIDI << std::endl;
    std::cout << "MCI_SEQ_NONE=" << MCI_SEQ_NONE << std::endl;
    std::cout << "MCI_SEQ_OFFSET=" << MCI_SEQ_OFFSET << std::endl;
    std::cout << "MCI_SEQ_SMPTE=" << MCI_SEQ_SMPTE << std::endl;
    std::cout << "MCI_SET=" << MCI_SET << std::endl;
    std::cout << "MCI_SPIN=" << MCI_SPIN << std::endl;
    std::cout << "MCI_STATUS=" << MCI_STATUS << std::endl;
    std::cout << "MCI_STEP=" << MCI_STEP << std::endl;
    std::cout << "MCI_STOP=" << MCI_STOP << std::endl;
    std::cout << "MCI_STRING_OFFSET=" << MCI_STRING_OFFSET << std::endl;
    std::cout << "MCI_SYSINFO=" << MCI_SYSINFO << std::endl;
    std::cout << "MCI_UNFREEZE=" << MCI_UNFREEZE << std::endl;
    std::cout << "MCI_UPDATE=" << MCI_UPDATE << std::endl;
    std::cout << "MCI_USER_MESSAGES=" << MCI_USER_MESSAGES << std::endl;
    std::cout << "MCI_VD_FORMAT_TRACK=" << MCI_VD_FORMAT_TRACK << std::endl;
    std::cout << "MCI_VD_MEDIA_CAV=" << MCI_VD_MEDIA_CAV << std::endl;
    std::cout << "MCI_VD_MEDIA_CLV=" << MCI_VD_MEDIA_CLV << std::endl;
    std::cout << "MCI_VD_MEDIA_OTHER=" << MCI_VD_MEDIA_OTHER << std::endl;
    std::cout << "MCI_VD_MODE_PARK=" << MCI_VD_MODE_PARK << std::endl;
    std::cout << "MCI_VD_OFFSET=" << MCI_VD_OFFSET << std::endl;
    std::cout << "MCI_WAVE_MAPPER=" << MCI_WAVE_MAPPER << std::endl;
    std::cout << "MCI_WAVE_OFFSET=" << MCI_WAVE_OFFSET << std::endl;
    std::cout << "MCI_WAVE_PCM=" << MCI_WAVE_PCM << std::endl;
    std::cout << "MCI_WHERE=" << MCI_WHERE << std::endl;
    std::cout << "MCI_WINDOW=" << MCI_WINDOW << std::endl;
    std::cout << "MCS_DAYSTATE=" << MCS_DAYSTATE << std::endl;
    std::cout << "MCS_MULTISELECT=" << MCS_MULTISELECT << std::endl;
    std::cout << "MCS_NOSELCHANGEONNAV=" << MCS_NOSELCHANGEONNAV << std::endl;
    std::cout << "MCS_NOTODAY=" << MCS_NOTODAY << std::endl;
    std::cout << "MCS_NOTODAYCIRCLE=" << MCS_NOTODAYCIRCLE << std::endl;
    std::cout << "MCS_NOTRAILINGDATES=" << MCS_NOTRAILINGDATES << std::endl;
    std::cout << "MCS_SHORTDAYSOFWEEK=" << MCS_SHORTDAYSOFWEEK << std::endl;
    std::cout << "MCS_WEEKNUMBERS=" << MCS_WEEKNUMBERS << std::endl;
    std::cout << "MDIS_ALLCHILDSTYLES=" << MDIS_ALLCHILDSTYLES << std::endl;
    std::cout << "MDITILE_HORIZONTAL=" << MDITILE_HORIZONTAL << std::endl;
    std::cout << "MDITILE_SKIPDISABLED=" << MDITILE_SKIPDISABLED << std::endl;
    std::cout << "MDITILE_VERTICAL=" << MDITILE_VERTICAL << std::endl;
    std::cout << "MDITILE_ZORDER=" << MDITILE_ZORDER << std::endl;
    std::cout << "MDMSPKRFLAG_CALLSETUP=" << MDMSPKRFLAG_CALLSETUP << std::endl;
    std::cout << "MDMSPKRFLAG_DIAL=" << MDMSPKRFLAG_DIAL << std::endl;
    std::cout << "MDMSPKRFLAG_OFF=" << MDMSPKRFLAG_OFF << std::endl;
    std::cout << "MDMSPKRFLAG_ON=" << MDMSPKRFLAG_ON << std::endl;
    std::cout << "MDMSPKR_CALLSETUP=" << MDMSPKR_CALLSETUP << std::endl;
    std::cout << "MDMSPKR_DIAL=" << MDMSPKR_DIAL << std::endl;
    std::cout << "MDMSPKR_OFF=" << MDMSPKR_OFF << std::endl;
    std::cout << "MDMSPKR_ON=" << MDMSPKR_ON << std::endl;
    std::cout << "MDMVOLFLAG_HIGH=" << MDMVOLFLAG_HIGH << std::endl;
    std::cout << "MDMVOLFLAG_LOW=" << MDMVOLFLAG_LOW << std::endl;
    std::cout << "MDMVOLFLAG_MEDIUM=" << MDMVOLFLAG_MEDIUM << std::endl;
    std::cout << "MDMVOL_HIGH=" << MDMVOL_HIGH << std::endl;
    std::cout << "MDMVOL_LOW=" << MDMVOL_LOW << std::endl;
    std::cout << "MDMVOL_MEDIUM=" << MDMVOL_MEDIUM << std::endl;
    std::cout << "MDM_ANALOG_RLP_OFF=" << MDM_ANALOG_RLP_OFF << std::endl;
    std::cout << "MDM_ANALOG_RLP_ON=" << MDM_ANALOG_RLP_ON << std::endl;
    std::cout << "MDM_ANALOG_V34=" << MDM_ANALOG_V34 << std::endl;
    std::cout << "MDM_AUTO_ML_2=" << MDM_AUTO_ML_2 << std::endl;
    std::cout << "MDM_AUTO_ML_DEFAULT=" << MDM_AUTO_ML_DEFAULT << std::endl;
    std::cout << "MDM_AUTO_ML_NONE=" << MDM_AUTO_ML_NONE << std::endl;
    std::cout << "MDM_AUTO_SPEED_DEFAULT=" << MDM_AUTO_SPEED_DEFAULT << std::endl;
    std::cout << "MDM_BEARERMODE_ANALOG=" << MDM_BEARERMODE_ANALOG << std::endl;
    std::cout << "MDM_BEARERMODE_GSM=" << MDM_BEARERMODE_GSM << std::endl;
    std::cout << "MDM_BEARERMODE_ISDN=" << MDM_BEARERMODE_ISDN << std::endl;
    std::cout << "MDM_BLIND_DIAL=" << MDM_BLIND_DIAL << std::endl;
    std::cout << "MDM_CCITT_OVERRIDE=" << MDM_CCITT_OVERRIDE << std::endl;
    std::cout << "MDM_CELLULAR=" << MDM_CELLULAR << std::endl;
    std::cout << "MDM_COMPRESSION=" << MDM_COMPRESSION << std::endl;
    std::cout << "MDM_DIAGNOSTICS=" << MDM_DIAGNOSTICS << std::endl;
    std::cout << "MDM_ERROR_CONTROL=" << MDM_ERROR_CONTROL << std::endl;
    std::cout << "MDM_FLOWCONTROL_HARD=" << MDM_FLOWCONTROL_HARD << std::endl;
    std::cout << "MDM_FLOWCONTROL_SOFT=" << MDM_FLOWCONTROL_SOFT << std::endl;
    std::cout << "MDM_FORCED_EC=" << MDM_FORCED_EC << std::endl;
    std::cout << "MDM_HDLCPPP_AUTH_CHAP=" << MDM_HDLCPPP_AUTH_CHAP << std::endl;
    std::cout << "MDM_HDLCPPP_AUTH_DEFAULT=" << MDM_HDLCPPP_AUTH_DEFAULT << std::endl;
    std::cout << "MDM_HDLCPPP_AUTH_MSCHAP=" << MDM_HDLCPPP_AUTH_MSCHAP << std::endl;
    std::cout << "MDM_HDLCPPP_AUTH_NONE=" << MDM_HDLCPPP_AUTH_NONE << std::endl;
    std::cout << "MDM_HDLCPPP_AUTH_PAP=" << MDM_HDLCPPP_AUTH_PAP << std::endl;
    std::cout << "MDM_HDLCPPP_ML_2=" << MDM_HDLCPPP_ML_2 << std::endl;
    std::cout << "MDM_HDLCPPP_ML_DEFAULT=" << MDM_HDLCPPP_ML_DEFAULT << std::endl;
    std::cout << "MDM_HDLCPPP_ML_NONE=" << MDM_HDLCPPP_ML_NONE << std::endl;
    std::cout << "MDM_HDLCPPP_SPEED_56K=" << MDM_HDLCPPP_SPEED_56K << std::endl;
    std::cout << "MDM_HDLCPPP_SPEED_64K=" << MDM_HDLCPPP_SPEED_64K << std::endl;
    std::cout << "MDM_HDLCPPP_SPEED_DEFAULT=" << MDM_HDLCPPP_SPEED_DEFAULT << std::endl;
    std::cout << "MDM_MASK_AUTO_ML=" << MDM_MASK_AUTO_ML << std::endl;
    std::cout << "MDM_MASK_AUTO_SPEED=" << MDM_MASK_AUTO_SPEED << std::endl;
    std::cout << "MDM_MASK_HDLCPPP_AUTH=" << MDM_MASK_HDLCPPP_AUTH << std::endl;
    std::cout << "MDM_MASK_HDLCPPP_ML=" << MDM_MASK_HDLCPPP_ML << std::endl;
    std::cout << "MDM_MASK_HDLCPPP_SPEED=" << MDM_MASK_HDLCPPP_SPEED << std::endl;
    std::cout << "MDM_MASK_V120_ML=" << MDM_MASK_V120_ML << std::endl;
    std::cout << "MDM_MASK_V120_SPEED=" << MDM_MASK_V120_SPEED << std::endl;
    std::cout << "MDM_MASK_X75_DATA=" << MDM_MASK_X75_DATA << std::endl;
    std::cout << "MDM_PIAFS_INCOMING=" << MDM_PIAFS_INCOMING << std::endl;
    std::cout << "MDM_PIAFS_OUTGOING=" << MDM_PIAFS_OUTGOING << std::endl;
    std::cout << "MDM_PROTOCOLID_ANALOG=" << MDM_PROTOCOLID_ANALOG << std::endl;
    std::cout << "MDM_PROTOCOLID_AUTO=" << MDM_PROTOCOLID_AUTO << std::endl;
    std::cout << "MDM_PROTOCOLID_DEFAULT=" << MDM_PROTOCOLID_DEFAULT << std::endl;
    std::cout << "MDM_PROTOCOLID_GPRS=" << MDM_PROTOCOLID_GPRS << std::endl;
    std::cout << "MDM_PROTOCOLID_HDLCPPP=" << MDM_PROTOCOLID_HDLCPPP << std::endl;
    std::cout << "MDM_PROTOCOLID_PIAFS=" << MDM_PROTOCOLID_PIAFS << std::endl;
    std::cout << "MDM_PROTOCOLID_V110=" << MDM_PROTOCOLID_V110 << std::endl;
    std::cout << "MDM_PROTOCOLID_V120=" << MDM_PROTOCOLID_V120 << std::endl;
    std::cout << "MDM_PROTOCOLID_V128=" << MDM_PROTOCOLID_V128 << std::endl;
    std::cout << "MDM_PROTOCOLID_X75=" << MDM_PROTOCOLID_X75 << std::endl;
    std::cout << "MDM_SHIFT_AUTO_ML=" << MDM_SHIFT_AUTO_ML << std::endl;
    std::cout << "MDM_SHIFT_AUTO_SPEED=" << MDM_SHIFT_AUTO_SPEED << std::endl;
    std::cout << "MDM_SHIFT_BEARERMODE=" << MDM_SHIFT_BEARERMODE << std::endl;
    std::cout << "MDM_SHIFT_EXTENDEDINFO=" << MDM_SHIFT_EXTENDEDINFO << std::endl;
    std::cout << "MDM_SHIFT_HDLCPPP_AUTH=" << MDM_SHIFT_HDLCPPP_AUTH << std::endl;
    std::cout << "MDM_SHIFT_HDLCPPP_ML=" << MDM_SHIFT_HDLCPPP_ML << std::endl;
    std::cout << "MDM_SHIFT_HDLCPPP_SPEED=" << MDM_SHIFT_HDLCPPP_SPEED << std::endl;
    std::cout << "MDM_SHIFT_PROTOCOLDATA=" << MDM_SHIFT_PROTOCOLDATA << std::endl;
    std::cout << "MDM_SHIFT_PROTOCOLID=" << MDM_SHIFT_PROTOCOLID << std::endl;
    std::cout << "MDM_SHIFT_PROTOCOLINFO=" << MDM_SHIFT_PROTOCOLINFO << std::endl;
    std::cout << "MDM_SHIFT_V110_SPEED=" << MDM_SHIFT_V110_SPEED << std::endl;
    std::cout << "MDM_SHIFT_V120_ML=" << MDM_SHIFT_V120_ML << std::endl;
    std::cout << "MDM_SHIFT_V120_SPEED=" << MDM_SHIFT_V120_SPEED << std::endl;
    std::cout << "MDM_SHIFT_X75_DATA=" << MDM_SHIFT_X75_DATA << std::endl;
    std::cout << "MDM_SPEED_ADJUST=" << MDM_SPEED_ADJUST << std::endl;
    std::cout << "MDM_TONE_DIAL=" << MDM_TONE_DIAL << std::endl;
    std::cout << "MDM_V110_SPEED_12DOT0K=" << MDM_V110_SPEED_12DOT0K << std::endl;
    std::cout << "MDM_V110_SPEED_14DOT4K=" << MDM_V110_SPEED_14DOT4K << std::endl;
    std::cout << "MDM_V110_SPEED_19DOT2K=" << MDM_V110_SPEED_19DOT2K << std::endl;
    std::cout << "MDM_V110_SPEED_1DOT2K=" << MDM_V110_SPEED_1DOT2K << std::endl;
    std::cout << "MDM_V110_SPEED_28DOT8K=" << MDM_V110_SPEED_28DOT8K << std::endl;
    std::cout << "MDM_V110_SPEED_2DOT4K=" << MDM_V110_SPEED_2DOT4K << std::endl;
    std::cout << "MDM_V110_SPEED_38DOT4K=" << MDM_V110_SPEED_38DOT4K << std::endl;
    std::cout << "MDM_V110_SPEED_4DOT8K=" << MDM_V110_SPEED_4DOT8K << std::endl;
    std::cout << "MDM_V110_SPEED_57DOT6K=" << MDM_V110_SPEED_57DOT6K << std::endl;
    std::cout << "MDM_V110_SPEED_9DOT6K=" << MDM_V110_SPEED_9DOT6K << std::endl;
    std::cout << "MDM_V110_SPEED_DEFAULT=" << MDM_V110_SPEED_DEFAULT << std::endl;
    std::cout << "MDM_V120_ML_2=" << MDM_V120_ML_2 << std::endl;
    std::cout << "MDM_V120_ML_DEFAULT=" << MDM_V120_ML_DEFAULT << std::endl;
    std::cout << "MDM_V120_ML_NONE=" << MDM_V120_ML_NONE << std::endl;
    std::cout << "MDM_V120_SPEED_56K=" << MDM_V120_SPEED_56K << std::endl;
    std::cout << "MDM_V120_SPEED_64K=" << MDM_V120_SPEED_64K << std::endl;
    std::cout << "MDM_V120_SPEED_DEFAULT=" << MDM_V120_SPEED_DEFAULT << std::endl;
    std::cout << "MDM_V23_OVERRIDE=" << MDM_V23_OVERRIDE << std::endl;
    std::cout << "MDM_X75_DATA_128K=" << MDM_X75_DATA_128K << std::endl;
    std::cout << "MDM_X75_DATA_64K=" << MDM_X75_DATA_64K << std::endl;
    std::cout << "MDM_X75_DATA_BTX=" << MDM_X75_DATA_BTX << std::endl;
    std::cout << "MDM_X75_DATA_DEFAULT=" << MDM_X75_DATA_DEFAULT << std::endl;
    std::cout << "MDM_X75_DATA_T_70=" << MDM_X75_DATA_T_70 << std::endl;
    std::cout << "MD_LFHINT_NONE=" << MD_LFHINT_NONE << std::endl;
    std::cout << "MD_LFHINT_NT1=" << MD_LFHINT_NT1 << std::endl;
    std::cout << "MD_LFHINT_NT2=" << MD_LFHINT_NT2 << std::endl;
    std::cout << "MD_LFHINT_NTA=" << MD_LFHINT_NTA << std::endl;
    std::cout << "MEDIA_CURRENTLY_MOUNTED=" << MEDIA_CURRENTLY_MOUNTED << std::endl;
    std::cout << "MEDIA_ERASEABLE=" << MEDIA_ERASEABLE << std::endl;
    std::cout << "MEDIA_READ_ONLY=" << MEDIA_READ_ONLY << std::endl;
    std::cout << "MEDIA_READ_WRITE=" << MEDIA_READ_WRITE << std::endl;
    std::cout << "MEDIA_WRITE_ONCE=" << MEDIA_WRITE_ONCE << std::endl;
    std::cout << "MEDIA_WRITE_PROTECTED=" << MEDIA_WRITE_PROTECTED << std::endl;
    std::cout << "MEHC_PATROL_SCRUBBER_PRESENT=" << MEHC_PATROL_SCRUBBER_PRESENT << std::endl;
    std::cout << "MEMBERID_NIL=" << MEMBERID_NIL << std::endl;
    std::cout << "MEMORY_ALLOCATION_ALIGNMENT=" << MEMORY_ALLOCATION_ALIGNMENT << std::endl;
    std::cout << "MEMORY_PRIORITY_BELOW_NORMAL=" << MEMORY_PRIORITY_BELOW_NORMAL << std::endl;
    std::cout << "MEMORY_PRIORITY_LOW=" << MEMORY_PRIORITY_LOW << std::endl;
    std::cout << "MEMORY_PRIORITY_MEDIUM=" << MEMORY_PRIORITY_MEDIUM << std::endl;
    std::cout << "MEMORY_PRIORITY_NORMAL=" << MEMORY_PRIORITY_NORMAL << std::endl;
    std::cout << "MEMORY_PRIORITY_VERY_LOW=" << MEMORY_PRIORITY_VERY_LOW << std::endl;
    std::cout << "MEM_4MB_PAGES=" << MEM_4MB_PAGES << std::endl;
    std::cout << "MEM_64K_PAGES=" << MEM_64K_PAGES << std::endl;
    std::cout << "MEM_COMMIT=" << MEM_COMMIT << std::endl;
    std::cout << "MEM_DECOMMIT=" << MEM_DECOMMIT << std::endl;
    std::cout << "MEM_DIFFERENT_IMAGE_BASE_OK=" << MEM_DIFFERENT_IMAGE_BASE_OK << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_GRAPHICS=" << MEM_EXTENDED_PARAMETER_GRAPHICS << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_NONPAGED=" << MEM_EXTENDED_PARAMETER_NONPAGED << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_NONPAGED_HUGE=" << MEM_EXTENDED_PARAMETER_NONPAGED_HUGE << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_NONPAGED_LARGE=" << MEM_EXTENDED_PARAMETER_NONPAGED_LARGE << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_TYPE_BITS=" << MEM_EXTENDED_PARAMETER_TYPE_BITS << std::endl;
    std::cout << "MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL=" << MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL << std::endl;
    std::cout << "MEM_FREE=" << MEM_FREE << std::endl;
    std::cout << "MEM_IMAGE=" << MEM_IMAGE << std::endl;
    std::cout << "MEM_LARGE_PAGES=" << MEM_LARGE_PAGES << std::endl;
    std::cout << "MEM_MAPPED=" << MEM_MAPPED << std::endl;
    std::cout << "MEM_PHYSICAL=" << MEM_PHYSICAL << std::endl;
    std::cout << "MEM_PRIVATE=" << MEM_PRIVATE << std::endl;
    std::cout << "MEM_RELEASE=" << MEM_RELEASE << std::endl;
    std::cout << "MEM_RESERVE=" << MEM_RESERVE << std::endl;
    std::cout << "MEM_RESET=" << MEM_RESET << std::endl;
    std::cout << "MEM_RESET_UNDO=" << MEM_RESET_UNDO << std::endl;
    std::cout << "MEM_ROTATE=" << MEM_ROTATE << std::endl;
    std::cout << "MEM_TOP_DOWN=" << MEM_TOP_DOWN << std::endl;
    std::cout << "MEM_UNMAP_WITH_TRANSIENT_BOOST=" << MEM_UNMAP_WITH_TRANSIENT_BOOST << std::endl;
    std::cout << "MEM_WRITE_WATCH=" << MEM_WRITE_WATCH << std::endl;
    std::cout << "MENU_EVENT=" << MENU_EVENT << std::endl;
    std::cout << "MESSAGE_RESOURCE_UNICODE=" << MESSAGE_RESOURCE_UNICODE << std::endl;
    std::cout << "METAFILE_DRIVER=" << METAFILE_DRIVER << std::endl;
    std::cout << "META_ANIMATEPALETTE=" << META_ANIMATEPALETTE << std::endl;
    std::cout << "META_ARC=" << META_ARC << std::endl;
    std::cout << "META_BITBLT=" << META_BITBLT << std::endl;
    std::cout << "META_CHORD=" << META_CHORD << std::endl;
    std::cout << "META_CREATEBRUSHINDIRECT=" << META_CREATEBRUSHINDIRECT << std::endl;
    std::cout << "META_CREATEFONTINDIRECT=" << META_CREATEFONTINDIRECT << std::endl;
    std::cout << "META_CREATEPATTERNBRUSH=" << META_CREATEPATTERNBRUSH << std::endl;
    std::cout << "META_CREATEPENINDIRECT=" << META_CREATEPENINDIRECT << std::endl;
    std::cout << "META_CREATEREGION=" << META_CREATEREGION << std::endl;
    std::cout << "META_DIBBITBLT=" << META_DIBBITBLT << std::endl;
    std::cout << "META_DIBCREATEPATTERNBRUSH=" << META_DIBCREATEPATTERNBRUSH << std::endl;
    std::cout << "META_ELLIPSE=" << META_ELLIPSE << std::endl;
    std::cout << "META_ESCAPE=" << META_ESCAPE << std::endl;
    std::cout << "META_EXCLUDECLIPRECT=" << META_EXCLUDECLIPRECT << std::endl;
    std::cout << "META_EXTFLOODFILL=" << META_EXTFLOODFILL << std::endl;
    std::cout << "META_FILLREGION=" << META_FILLREGION << std::endl;
    std::cout << "META_FLOODFILL=" << META_FLOODFILL << std::endl;
    std::cout << "META_FRAMEREGION=" << META_FRAMEREGION << std::endl;
    std::cout << "META_INTERSECTCLIPRECT=" << META_INTERSECTCLIPRECT << std::endl;
    std::cout << "META_INVERTREGION=" << META_INVERTREGION << std::endl;
    std::cout << "META_LINETO=" << META_LINETO << std::endl;
    std::cout << "META_MOVETO=" << META_MOVETO << std::endl;
    std::cout << "META_OFFSETCLIPRGN=" << META_OFFSETCLIPRGN << std::endl;
    std::cout << "META_OFFSETVIEWPORTORG=" << META_OFFSETVIEWPORTORG << std::endl;
    std::cout << "META_OFFSETWINDOWORG=" << META_OFFSETWINDOWORG << std::endl;
    std::cout << "META_PAINTREGION=" << META_PAINTREGION << std::endl;
    std::cout << "META_PATBLT=" << META_PATBLT << std::endl;
    std::cout << "META_PIE=" << META_PIE << std::endl;
    std::cout << "META_POLYGON=" << META_POLYGON << std::endl;
    std::cout << "META_POLYLINE=" << META_POLYLINE << std::endl;
    std::cout << "META_POLYPOLYGON=" << META_POLYPOLYGON << std::endl;
    std::cout << "META_REALIZEPALETTE=" << META_REALIZEPALETTE << std::endl;
    std::cout << "META_RECTANGLE=" << META_RECTANGLE << std::endl;
    std::cout << "META_RESIZEPALETTE=" << META_RESIZEPALETTE << std::endl;
    std::cout << "META_RESTOREDC=" << META_RESTOREDC << std::endl;
    std::cout << "META_ROUNDRECT=" << META_ROUNDRECT << std::endl;
    std::cout << "META_SAVEDC=" << META_SAVEDC << std::endl;
    std::cout << "META_SCALEVIEWPORTEXT=" << META_SCALEVIEWPORTEXT << std::endl;
    std::cout << "META_SCALEWINDOWEXT=" << META_SCALEWINDOWEXT << std::endl;
    std::cout << "META_SELECTCLIPREGION=" << META_SELECTCLIPREGION << std::endl;
    std::cout << "META_SELECTOBJECT=" << META_SELECTOBJECT << std::endl;
    std::cout << "META_SELECTPALETTE=" << META_SELECTPALETTE << std::endl;
    std::cout << "META_SETBKCOLOR=" << META_SETBKCOLOR << std::endl;
    std::cout << "META_SETBKMODE=" << META_SETBKMODE << std::endl;
    std::cout << "META_SETLAYOUT=" << META_SETLAYOUT << std::endl;
    std::cout << "META_SETMAPMODE=" << META_SETMAPMODE << std::endl;
    std::cout << "META_SETMAPPERFLAGS=" << META_SETMAPPERFLAGS << std::endl;
    std::cout << "META_SETPALENTRIES=" << META_SETPALENTRIES << std::endl;
    std::cout << "META_SETPIXEL=" << META_SETPIXEL << std::endl;
    std::cout << "META_SETPOLYFILLMODE=" << META_SETPOLYFILLMODE << std::endl;
    std::cout << "META_SETRELABS=" << META_SETRELABS << std::endl;
    std::cout << "META_SETROP2=" << META_SETROP2 << std::endl;
    std::cout << "META_SETSTRETCHBLTMODE=" << META_SETSTRETCHBLTMODE << std::endl;
    std::cout << "META_SETTEXTALIGN=" << META_SETTEXTALIGN << std::endl;
    std::cout << "META_SETTEXTCHAREXTRA=" << META_SETTEXTCHAREXTRA << std::endl;
    std::cout << "META_SETTEXTCOLOR=" << META_SETTEXTCOLOR << std::endl;
    std::cout << "META_SETTEXTJUSTIFICATION=" << META_SETTEXTJUSTIFICATION << std::endl;
    std::cout << "META_SETVIEWPORTEXT=" << META_SETVIEWPORTEXT << std::endl;
    std::cout << "META_SETVIEWPORTORG=" << META_SETVIEWPORTORG << std::endl;
    std::cout << "META_SETWINDOWEXT=" << META_SETWINDOWEXT << std::endl;
    std::cout << "META_SETWINDOWORG=" << META_SETWINDOWORG << std::endl;
    std::cout << "META_STRETCHBLT=" << META_STRETCHBLT << std::endl;
    std::cout << "META_TEXTOUT=" << META_TEXTOUT << std::endl;
    std::cout << "METHOD_BUFFERED=" << METHOD_BUFFERED << std::endl;
    std::cout << "METHOD_DIRECT_FROM_HARDWARE=" << METHOD_DIRECT_FROM_HARDWARE << std::endl;
    std::cout << "METHOD_DIRECT_TO_HARDWARE=" << METHOD_DIRECT_TO_HARDWARE << std::endl;
    std::cout << "METHOD_IN_DIRECT=" << METHOD_IN_DIRECT << std::endl;
    std::cout << "METHOD_NEITHER=" << METHOD_NEITHER << std::endl;
    std::cout << "METHOD_OUT_DIRECT=" << METHOD_OUT_DIRECT << std::endl;
    std::cout << "METRICS_USEDEFAULT=" << METRICS_USEDEFAULT << std::endl;
    std::cout << "MFCOMMENT=" << MFCOMMENT << std::endl;
    std::cout << "MFS_CHECKED=" << MFS_CHECKED << std::endl;
    std::cout << "MFS_DEFAULT=" << MFS_DEFAULT << std::endl;
    std::cout << "MFS_DISABLED=" << MFS_DISABLED << std::endl;
    std::cout << "MFS_ENABLED=" << MFS_ENABLED << std::endl;
    std::cout << "MFS_HILITE=" << MFS_HILITE << std::endl;
    std::cout << "MFS_UNCHECKED=" << MFS_UNCHECKED << std::endl;
    std::cout << "MFS_UNHILITE=" << MFS_UNHILITE << std::endl;
    std::cout << "MFT_BITMAP=" << MFT_BITMAP << std::endl;
    std::cout << "MFT_MENUBARBREAK=" << MFT_MENUBARBREAK << std::endl;
    std::cout << "MFT_MENUBREAK=" << MFT_MENUBREAK << std::endl;
    std::cout << "MFT_OWNERDRAW=" << MFT_OWNERDRAW << std::endl;
    std::cout << "MFT_RIGHTJUSTIFY=" << MFT_RIGHTJUSTIFY << std::endl;
    std::cout << "MFT_SEPARATOR=" << MFT_SEPARATOR << std::endl;
    std::cout << "MFT_STRING=" << MFT_STRING << std::endl;
    std::cout << "MF_CALLBACKS=" << MF_CALLBACKS << std::endl;
    std::cout << "MF_CONV=" << MF_CONV << std::endl;
    std::cout << "MF_ERRORS=" << MF_ERRORS << std::endl;
    std::cout << "MF_HSZ_INFO=" << MF_HSZ_INFO << std::endl;
    std::cout << "MF_LINKS=" << MF_LINKS << std::endl;
    std::cout << "MF_MASK=" << MF_MASK << std::endl;
    std::cout << "MF_POSTMSGS=" << MF_POSTMSGS << std::endl;
    std::cout << "MF_SENDMSGS=" << MF_SENDMSGS << std::endl;
    std::cout << "MHDR_DONE=" << MHDR_DONE << std::endl;
    std::cout << "MHDR_INQUEUE=" << MHDR_INQUEUE << std::endl;
    std::cout << "MHDR_ISSTRM=" << MHDR_ISSTRM << std::endl;
    std::cout << "MHDR_PREPARED=" << MHDR_PREPARED << std::endl;
    std::cout << "MH_CLEANUP=" << MH_CLEANUP << std::endl;
    std::cout << "MH_CREATE=" << MH_CREATE << std::endl;
    std::cout << "MH_DELETE=" << MH_DELETE << std::endl;
    std::cout << "MH_KEEP=" << MH_KEEP << std::endl;
    std::cout << "MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG=" << MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG << std::endl;
    std::cout << "MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG=" << MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG << std::endl;
    std::cout << "MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG=" << MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG << std::endl;
    std::cout << "MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS=" << MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS << std::endl;
    std::cout << "MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS=" << MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS << std::endl;
    std::cout << "MIDICAPS_CACHE=" << MIDICAPS_CACHE << std::endl;
    std::cout << "MIDICAPS_LRVOLUME=" << MIDICAPS_LRVOLUME << std::endl;
    std::cout << "MIDICAPS_STREAM=" << MIDICAPS_STREAM << std::endl;
    std::cout << "MIDICAPS_VOLUME=" << MIDICAPS_VOLUME << std::endl;
    std::cout << "MIDIERR_BADOPENMODE=" << MIDIERR_BADOPENMODE << std::endl;
    std::cout << "MIDIERR_BASE=" << MIDIERR_BASE << std::endl;
    std::cout << "MIDIERR_DONT_CONTINUE=" << MIDIERR_DONT_CONTINUE << std::endl;
    std::cout << "MIDIERR_INVALIDSETUP=" << MIDIERR_INVALIDSETUP << std::endl;
    std::cout << "MIDIERR_LASTERROR=" << MIDIERR_LASTERROR << std::endl;
    std::cout << "MIDIERR_NODEVICE=" << MIDIERR_NODEVICE << std::endl;
    std::cout << "MIDIERR_NOMAP=" << MIDIERR_NOMAP << std::endl;
    std::cout << "MIDIERR_NOTREADY=" << MIDIERR_NOTREADY << std::endl;
    std::cout << "MIDIERR_STILLPLAYING=" << MIDIERR_STILLPLAYING << std::endl;
    std::cout << "MIDIERR_UNPREPARED=" << MIDIERR_UNPREPARED << std::endl;
    std::cout << "MIDIPATCHSIZE=" << MIDIPATCHSIZE << std::endl;
    std::cout << "MIDISTRM_ERROR=" << MIDISTRM_ERROR << std::endl;
    std::cout << "MIDI_CACHE_ALL=" << MIDI_CACHE_ALL << std::endl;
    std::cout << "MIDI_CACHE_BESTFIT=" << MIDI_CACHE_BESTFIT << std::endl;
    std::cout << "MIDI_CACHE_QUERY=" << MIDI_CACHE_QUERY << std::endl;
    std::cout << "MIDI_UNCACHE=" << MIDI_UNCACHE << std::endl;
    std::cout << "MIIM_BITMAP=" << MIIM_BITMAP << std::endl;
    std::cout << "MIIM_CHECKMARKS=" << MIIM_CHECKMARKS << std::endl;
    std::cout << "MIIM_DATA=" << MIIM_DATA << std::endl;
    std::cout << "MIIM_FTYPE=" << MIIM_FTYPE << std::endl;
    std::cout << "MIIM_ID=" << MIIM_ID << std::endl;
    std::cout << "MIIM_STATE=" << MIIM_STATE << std::endl;
    std::cout << "MIIM_STRING=" << MIIM_STRING << std::endl;
    std::cout << "MIIM_SUBMENU=" << MIIM_SUBMENU << std::endl;
    std::cout << "MIIM_TYPE=" << MIIM_TYPE << std::endl;
    std::cout << "MILCORE_TS_QUERYVER_RESULT_FALSE=" << MILCORE_TS_QUERYVER_RESULT_FALSE << std::endl;
    std::cout << "MILCORE_TS_QUERYVER_RESULT_TRUE=" << MILCORE_TS_QUERYVER_RESULT_TRUE << std::endl;
    std::cout << "MIM_APPLYTOSUBMENUS=" << MIM_APPLYTOSUBMENUS << std::endl;
    std::cout << "MIM_BACKGROUND=" << MIM_BACKGROUND << std::endl;
    std::cout << "MIM_CLOSE=" << MIM_CLOSE << std::endl;
    std::cout << "MIM_DATA=" << MIM_DATA << std::endl;
    std::cout << "MIM_ERROR=" << MIM_ERROR << std::endl;
    std::cout << "MIM_HELPID=" << MIM_HELPID << std::endl;
    std::cout << "MIM_LONGDATA=" << MIM_LONGDATA << std::endl;
    std::cout << "MIM_LONGERROR=" << MIM_LONGERROR << std::endl;
    std::cout << "MIM_MAXHEIGHT=" << MIM_MAXHEIGHT << std::endl;
    std::cout << "MIM_MENUDATA=" << MIM_MENUDATA << std::endl;
    std::cout << "MIM_MOREDATA=" << MIM_MOREDATA << std::endl;
    std::cout << "MIM_OPEN=" << MIM_OPEN << std::endl;
    std::cout << "MIM_STYLE=" << MIM_STYLE << std::endl;
    std::cout << "MINCHAR=" << MINCHAR << std::endl;
    std::cout << "MINGW_HAS_DDK_H=" << MINGW_HAS_DDK_H << std::endl;
    std::cout << "MINGW_HAS_SECURE_API=" << MINGW_HAS_SECURE_API << std::endl;
    std::cout << "MINHALF_PTR=" << MINHALF_PTR << std::endl;
    std::cout << "MINIMUM_RESERVED_MANIFEST_RESOURCE_ID=" << MINIMUM_RESERVED_MANIFEST_RESOURCE_ID << std::endl;
    std::cout << "MININT_PTR=" << MININT_PTR << std::endl;
    std::cout << "MINLONG=" << MINLONG << std::endl;
    std::cout << "MINLONG_PTR=" << MINLONG_PTR << std::endl;
    std::cout << "MINSHORT=" << MINSHORT << std::endl;
    std::cout << "MIN_ACL_REVISION=" << MIN_ACL_REVISION << std::endl;
    std::cout << "MIN_LOGICALDPIOVERRIDE=" << MIN_LOGICALDPIOVERRIDE << std::endl;
    std::cout << "MIN_PRIORITY=" << MIN_PRIORITY << std::endl;
    std::cout << "MIN_UCSCHAR=" << MIN_UCSCHAR << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_BASS=" << MIXERCONTROL_CONTROLTYPE_BASS << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_BASS_BOOST=" << MIXERCONTROL_CONTROLTYPE_BASS_BOOST << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_EQUALIZER=" << MIXERCONTROL_CONTROLTYPE_EQUALIZER << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_LOUDNESS=" << MIXERCONTROL_CONTROLTYPE_LOUDNESS << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_MIXER=" << MIXERCONTROL_CONTROLTYPE_MIXER << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_MONO=" << MIXERCONTROL_CONTROLTYPE_MONO << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_MUTE=" << MIXERCONTROL_CONTROLTYPE_MUTE << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_MUX=" << MIXERCONTROL_CONTROLTYPE_MUX << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_ONOFF=" << MIXERCONTROL_CONTROLTYPE_ONOFF << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_PAN=" << MIXERCONTROL_CONTROLTYPE_PAN << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_PEAKMETER=" << MIXERCONTROL_CONTROLTYPE_PEAKMETER << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_QSOUNDPAN=" << MIXERCONTROL_CONTROLTYPE_QSOUNDPAN << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_STEREOENH=" << MIXERCONTROL_CONTROLTYPE_STEREOENH << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_TREBLE=" << MIXERCONTROL_CONTROLTYPE_TREBLE << std::endl;
    std::cout << "MIXERCONTROL_CONTROLTYPE_VOLUME=" << MIXERCONTROL_CONTROLTYPE_VOLUME << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_AUX=" << MIXERLINE_TARGETTYPE_AUX << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_MIDIIN=" << MIXERLINE_TARGETTYPE_MIDIIN << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_MIDIOUT=" << MIXERLINE_TARGETTYPE_MIDIOUT << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_UNDEFINED=" << MIXERLINE_TARGETTYPE_UNDEFINED << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_WAVEIN=" << MIXERLINE_TARGETTYPE_WAVEIN << std::endl;
    std::cout << "MIXERLINE_TARGETTYPE_WAVEOUT=" << MIXERLINE_TARGETTYPE_WAVEOUT << std::endl;
    std::cout << "MIXERR_BASE=" << MIXERR_BASE << std::endl;
    std::cout << "MIXERR_INVALCONTROL=" << MIXERR_INVALCONTROL << std::endl;
    std::cout << "MIXERR_INVALLINE=" << MIXERR_INVALLINE << std::endl;
    std::cout << "MIXERR_INVALVALUE=" << MIXERR_INVALVALUE << std::endl;
    std::cout << "MIXERR_LASTERROR=" << MIXERR_LASTERROR << std::endl;
    std::cout << "MIXER_LONG_NAME_CHARS=" << MIXER_LONG_NAME_CHARS << std::endl;
    std::cout << "MIXER_SHORT_NAME_CHARS=" << MIXER_SHORT_NAME_CHARS << std::endl;
    std::cout << "MKF_AVAILABLE=" << MKF_AVAILABLE << std::endl;
    std::cout << "MKF_CONFIRMHOTKEY=" << MKF_CONFIRMHOTKEY << std::endl;
    std::cout << "MKF_HOTKEYACTIVE=" << MKF_HOTKEYACTIVE << std::endl;
    std::cout << "MKF_HOTKEYSOUND=" << MKF_HOTKEYSOUND << std::endl;
    std::cout << "MKF_INDICATOR=" << MKF_INDICATOR << std::endl;
    std::cout << "MKF_LEFTBUTTONDOWN=" << MKF_LEFTBUTTONDOWN << std::endl;
    std::cout << "MKF_LEFTBUTTONSEL=" << MKF_LEFTBUTTONSEL << std::endl;
    std::cout << "MKF_MODIFIERS=" << MKF_MODIFIERS << std::endl;
    std::cout << "MKF_MOUSEKEYSON=" << MKF_MOUSEKEYSON << std::endl;
    std::cout << "MKF_MOUSEMODE=" << MKF_MOUSEMODE << std::endl;
    std::cout << "MKF_REPLACENUMBERS=" << MKF_REPLACENUMBERS << std::endl;
    std::cout << "MKF_RIGHTBUTTONDOWN=" << MKF_RIGHTBUTTONDOWN << std::endl;
    std::cout << "MKF_RIGHTBUTTONSEL=" << MKF_RIGHTBUTTONSEL << std::endl;
    std::cout << "MKSYS_URLMONIKER=" << MKSYS_URLMONIKER << std::endl;
    std::cout << "MK_ALT=" << MK_ALT << std::endl;
    std::cout << "MK_CONTROL=" << MK_CONTROL << std::endl;
    std::cout << "MK_LBUTTON=" << MK_LBUTTON << std::endl;
    std::cout << "MK_MBUTTON=" << MK_MBUTTON << std::endl;
    std::cout << "MK_RBUTTON=" << MK_RBUTTON << std::endl;
    std::cout << "MK_SHIFT=" << MK_SHIFT << std::endl;
    std::cout << "MK_XBUTTON1=" << MK_XBUTTON1 << std::endl;
    std::cout << "MK_XBUTTON2=" << MK_XBUTTON2 << std::endl;
    std::cout << "MMIOERR_ACCESSDENIED=" << MMIOERR_ACCESSDENIED << std::endl;
    std::cout << "MMIOERR_BASE=" << MMIOERR_BASE << std::endl;
    std::cout << "MMIOERR_CANNOTCLOSE=" << MMIOERR_CANNOTCLOSE << std::endl;
    std::cout << "MMIOERR_CANNOTEXPAND=" << MMIOERR_CANNOTEXPAND << std::endl;
    std::cout << "MMIOERR_CANNOTOPEN=" << MMIOERR_CANNOTOPEN << std::endl;
    std::cout << "MMIOERR_CANNOTREAD=" << MMIOERR_CANNOTREAD << std::endl;
    std::cout << "MMIOERR_CANNOTSEEK=" << MMIOERR_CANNOTSEEK << std::endl;
    std::cout << "MMIOERR_CANNOTWRITE=" << MMIOERR_CANNOTWRITE << std::endl;
    std::cout << "MMIOERR_CHUNKNOTFOUND=" << MMIOERR_CHUNKNOTFOUND << std::endl;
    std::cout << "MMIOERR_FILENOTFOUND=" << MMIOERR_FILENOTFOUND << std::endl;
    std::cout << "MMIOERR_INVALIDFILE=" << MMIOERR_INVALIDFILE << std::endl;
    std::cout << "MMIOERR_NETWORKERROR=" << MMIOERR_NETWORKERROR << std::endl;
    std::cout << "MMIOERR_OUTOFMEMORY=" << MMIOERR_OUTOFMEMORY << std::endl;
    std::cout << "MMIOERR_PATHNOTFOUND=" << MMIOERR_PATHNOTFOUND << std::endl;
    std::cout << "MMIOERR_SHARINGVIOLATION=" << MMIOERR_SHARINGVIOLATION << std::endl;
    std::cout << "MMIOERR_TOOMANYOPENFILES=" << MMIOERR_TOOMANYOPENFILES << std::endl;
    std::cout << "MMIOERR_UNBUFFERED=" << MMIOERR_UNBUFFERED << std::endl;
    std::cout << "MMIOM_CLOSE=" << MMIOM_CLOSE << std::endl;
    std::cout << "MMIOM_OPEN=" << MMIOM_OPEN << std::endl;
    std::cout << "MMIOM_READ=" << MMIOM_READ << std::endl;
    std::cout << "MMIOM_RENAME=" << MMIOM_RENAME << std::endl;
    std::cout << "MMIOM_SEEK=" << MMIOM_SEEK << std::endl;
    std::cout << "MMIOM_USER=" << MMIOM_USER << std::endl;
    std::cout << "MMIOM_WRITE=" << MMIOM_WRITE << std::endl;
    std::cout << "MMIOM_WRITEFLUSH=" << MMIOM_WRITEFLUSH << std::endl;
    std::cout << "MMIO_ALLOCBUF=" << MMIO_ALLOCBUF << std::endl;
    std::cout << "MMIO_COMPAT=" << MMIO_COMPAT << std::endl;
    std::cout << "MMIO_CREATE=" << MMIO_CREATE << std::endl;
    std::cout << "MMIO_CREATELIST=" << MMIO_CREATELIST << std::endl;
    std::cout << "MMIO_CREATERIFF=" << MMIO_CREATERIFF << std::endl;
    std::cout << "MMIO_DEFAULTBUFFER=" << MMIO_DEFAULTBUFFER << std::endl;
    std::cout << "MMIO_DELETE=" << MMIO_DELETE << std::endl;
    std::cout << "MMIO_DENYNONE=" << MMIO_DENYNONE << std::endl;
    std::cout << "MMIO_DENYREAD=" << MMIO_DENYREAD << std::endl;
    std::cout << "MMIO_DENYWRITE=" << MMIO_DENYWRITE << std::endl;
    std::cout << "MMIO_DIRTY=" << MMIO_DIRTY << std::endl;
    std::cout << "MMIO_EMPTYBUF=" << MMIO_EMPTYBUF << std::endl;
    std::cout << "MMIO_EXCLUSIVE=" << MMIO_EXCLUSIVE << std::endl;
    std::cout << "MMIO_EXIST=" << MMIO_EXIST << std::endl;
    std::cout << "MMIO_FHOPEN=" << MMIO_FHOPEN << std::endl;
    std::cout << "MMIO_FINDCHUNK=" << MMIO_FINDCHUNK << std::endl;
    std::cout << "MMIO_FINDLIST=" << MMIO_FINDLIST << std::endl;
    std::cout << "MMIO_FINDPROC=" << MMIO_FINDPROC << std::endl;
    std::cout << "MMIO_FINDRIFF=" << MMIO_FINDRIFF << std::endl;
    std::cout << "MMIO_GETTEMP=" << MMIO_GETTEMP << std::endl;
    std::cout << "MMIO_GLOBALPROC=" << MMIO_GLOBALPROC << std::endl;
    std::cout << "MMIO_INSTALLPROC=" << MMIO_INSTALLPROC << std::endl;
    std::cout << "MMIO_PARSE=" << MMIO_PARSE << std::endl;
    std::cout << "MMIO_READ=" << MMIO_READ << std::endl;
    std::cout << "MMIO_READWRITE=" << MMIO_READWRITE << std::endl;
    std::cout << "MMIO_REMOVEPROC=" << MMIO_REMOVEPROC << std::endl;
    std::cout << "MMIO_RWMODE=" << MMIO_RWMODE << std::endl;
    std::cout << "MMIO_SHAREMODE=" << MMIO_SHAREMODE << std::endl;
    std::cout << "MMIO_TOUPPER=" << MMIO_TOUPPER << std::endl;
    std::cout << "MMIO_UNICODEPROC=" << MMIO_UNICODEPROC << std::endl;
    std::cout << "MMIO_WRITE=" << MMIO_WRITE << std::endl;
    std::cout << "MMSYSERR_ALLOCATED=" << MMSYSERR_ALLOCATED << std::endl;
    std::cout << "MMSYSERR_BADDB=" << MMSYSERR_BADDB << std::endl;
    std::cout << "MMSYSERR_BADDEVICEID=" << MMSYSERR_BADDEVICEID << std::endl;
    std::cout << "MMSYSERR_BADERRNUM=" << MMSYSERR_BADERRNUM << std::endl;
    std::cout << "MMSYSERR_BASE=" << MMSYSERR_BASE << std::endl;
    std::cout << "MMSYSERR_DELETEERROR=" << MMSYSERR_DELETEERROR << std::endl;
    std::cout << "MMSYSERR_ERROR=" << MMSYSERR_ERROR << std::endl;
    std::cout << "MMSYSERR_HANDLEBUSY=" << MMSYSERR_HANDLEBUSY << std::endl;
    std::cout << "MMSYSERR_INVALFLAG=" << MMSYSERR_INVALFLAG << std::endl;
    std::cout << "MMSYSERR_INVALHANDLE=" << MMSYSERR_INVALHANDLE << std::endl;
    std::cout << "MMSYSERR_INVALIDALIAS=" << MMSYSERR_INVALIDALIAS << std::endl;
    std::cout << "MMSYSERR_INVALPARAM=" << MMSYSERR_INVALPARAM << std::endl;
    std::cout << "MMSYSERR_KEYNOTFOUND=" << MMSYSERR_KEYNOTFOUND << std::endl;
    std::cout << "MMSYSERR_LASTERROR=" << MMSYSERR_LASTERROR << std::endl;
    std::cout << "MMSYSERR_MOREDATA=" << MMSYSERR_MOREDATA << std::endl;
    std::cout << "MMSYSERR_NODRIVER=" << MMSYSERR_NODRIVER << std::endl;
    std::cout << "MMSYSERR_NODRIVERCB=" << MMSYSERR_NODRIVERCB << std::endl;
    std::cout << "MMSYSERR_NOERROR=" << MMSYSERR_NOERROR << std::endl;
    std::cout << "MMSYSERR_NOMEM=" << MMSYSERR_NOMEM << std::endl;
    std::cout << "MMSYSERR_NOTENABLED=" << MMSYSERR_NOTENABLED << std::endl;
    std::cout << "MMSYSERR_NOTSUPPORTED=" << MMSYSERR_NOTSUPPORTED << std::endl;
    std::cout << "MMSYSERR_READERROR=" << MMSYSERR_READERROR << std::endl;
    std::cout << "MMSYSERR_VALNOTFOUND=" << MMSYSERR_VALNOTFOUND << std::endl;
    std::cout << "MMSYSERR_WRITEERROR=" << MMSYSERR_WRITEERROR << std::endl;
    std::cout << "MM_ANISOTROPIC=" << MM_ANISOTROPIC << std::endl;
    std::cout << "MM_DRVM_CLOSE=" << MM_DRVM_CLOSE << std::endl;
    std::cout << "MM_DRVM_DATA=" << MM_DRVM_DATA << std::endl;
    std::cout << "MM_DRVM_ERROR=" << MM_DRVM_ERROR << std::endl;
    std::cout << "MM_DRVM_OPEN=" << MM_DRVM_OPEN << std::endl;
    std::cout << "MM_HIENGLISH=" << MM_HIENGLISH << std::endl;
    std::cout << "MM_HIMETRIC=" << MM_HIMETRIC << std::endl;
    std::cout << "MM_ISOTROPIC=" << MM_ISOTROPIC << std::endl;
    std::cout << "MM_JOY1BUTTONDOWN=" << MM_JOY1BUTTONDOWN << std::endl;
    std::cout << "MM_JOY1BUTTONUP=" << MM_JOY1BUTTONUP << std::endl;
    std::cout << "MM_JOY1MOVE=" << MM_JOY1MOVE << std::endl;
    std::cout << "MM_JOY1ZMOVE=" << MM_JOY1ZMOVE << std::endl;
    std::cout << "MM_JOY2BUTTONDOWN=" << MM_JOY2BUTTONDOWN << std::endl;
    std::cout << "MM_JOY2BUTTONUP=" << MM_JOY2BUTTONUP << std::endl;
    std::cout << "MM_JOY2MOVE=" << MM_JOY2MOVE << std::endl;
    std::cout << "MM_JOY2ZMOVE=" << MM_JOY2ZMOVE << std::endl;
    std::cout << "MM_LOENGLISH=" << MM_LOENGLISH << std::endl;
    std::cout << "MM_LOMETRIC=" << MM_LOMETRIC << std::endl;
    std::cout << "MM_MAX=" << MM_MAX << std::endl;
    std::cout << "MM_MAX_AXES_NAMELEN=" << MM_MAX_AXES_NAMELEN << std::endl;
    std::cout << "MM_MAX_FIXEDSCALE=" << MM_MAX_FIXEDSCALE << std::endl;
    std::cout << "MM_MAX_NUMAXES=" << MM_MAX_NUMAXES << std::endl;
    std::cout << "MM_MCINOTIFY=" << MM_MCINOTIFY << std::endl;
    std::cout << "MM_MCISIGNAL=" << MM_MCISIGNAL << std::endl;
    std::cout << "MM_MIM_CLOSE=" << MM_MIM_CLOSE << std::endl;
    std::cout << "MM_MIM_DATA=" << MM_MIM_DATA << std::endl;
    std::cout << "MM_MIM_ERROR=" << MM_MIM_ERROR << std::endl;
    std::cout << "MM_MIM_LONGDATA=" << MM_MIM_LONGDATA << std::endl;
    std::cout << "MM_MIM_LONGERROR=" << MM_MIM_LONGERROR << std::endl;
    std::cout << "MM_MIM_MOREDATA=" << MM_MIM_MOREDATA << std::endl;
    std::cout << "MM_MIM_OPEN=" << MM_MIM_OPEN << std::endl;
    std::cout << "MM_MIN=" << MM_MIN << std::endl;
    std::cout << "MM_MIXM_CONTROL_CHANGE=" << MM_MIXM_CONTROL_CHANGE << std::endl;
    std::cout << "MM_MIXM_LINE_CHANGE=" << MM_MIXM_LINE_CHANGE << std::endl;
    std::cout << "MM_MOM_CLOSE=" << MM_MOM_CLOSE << std::endl;
    std::cout << "MM_MOM_DONE=" << MM_MOM_DONE << std::endl;
    std::cout << "MM_MOM_OPEN=" << MM_MOM_OPEN << std::endl;
    std::cout << "MM_MOM_POSITIONCB=" << MM_MOM_POSITIONCB << std::endl;
    std::cout << "MM_STREAM_CLOSE=" << MM_STREAM_CLOSE << std::endl;
    std::cout << "MM_STREAM_DONE=" << MM_STREAM_DONE << std::endl;
    std::cout << "MM_STREAM_ERROR=" << MM_STREAM_ERROR << std::endl;
    std::cout << "MM_STREAM_OPEN=" << MM_STREAM_OPEN << std::endl;
    std::cout << "MM_TEXT=" << MM_TEXT << std::endl;
    std::cout << "MM_TWIPS=" << MM_TWIPS << std::endl;
    std::cout << "MM_WIM_CLOSE=" << MM_WIM_CLOSE << std::endl;
    std::cout << "MM_WIM_DATA=" << MM_WIM_DATA << std::endl;
    std::cout << "MM_WIM_OPEN=" << MM_WIM_OPEN << std::endl;
    std::cout << "MM_WOM_CLOSE=" << MM_WOM_CLOSE << std::endl;
    std::cout << "MM_WOM_DONE=" << MM_WOM_DONE << std::endl;
    std::cout << "MM_WOM_OPEN=" << MM_WOM_OPEN << std::endl;
    std::cout << "MNC_CLOSE=" << MNC_CLOSE << std::endl;
    std::cout << "MNC_EXECUTE=" << MNC_EXECUTE << std::endl;
    std::cout << "MNC_IGNORE=" << MNC_IGNORE << std::endl;
    std::cout << "MNC_SELECT=" << MNC_SELECT << std::endl;
    std::cout << "MND_CONTINUE=" << MND_CONTINUE << std::endl;
    std::cout << "MND_ENDMENU=" << MND_ENDMENU << std::endl;
    std::cout << "MNGOF_BOTTOMGAP=" << MNGOF_BOTTOMGAP << std::endl;
    std::cout << "MNGOF_TOPGAP=" << MNGOF_TOPGAP << std::endl;
    std::cout << "MNGO_NOERROR=" << MNGO_NOERROR << std::endl;
    std::cout << "MNGO_NOINTERFACE=" << MNGO_NOINTERFACE << std::endl;
    std::cout << "MNS_AUTODISMISS=" << MNS_AUTODISMISS << std::endl;
    std::cout << "MNS_CHECKORBMP=" << MNS_CHECKORBMP << std::endl;
    std::cout << "MNS_DRAGDROP=" << MNS_DRAGDROP << std::endl;
    std::cout << "MNS_MODELESS=" << MNS_MODELESS << std::endl;
    std::cout << "MNS_NOCHECK=" << MNS_NOCHECK << std::endl;
    std::cout << "MNS_NOTIFYBYPOS=" << MNS_NOTIFYBYPOS << std::endl;
    std::cout << "MN_GETHMENU=" << MN_GETHMENU << std::endl;
    std::cout << "MOD_ALT=" << MOD_ALT << std::endl;
    std::cout << "MOD_CONTROL=" << MOD_CONTROL << std::endl;
    std::cout << "MOD_FMSYNTH=" << MOD_FMSYNTH << std::endl;
    std::cout << "MOD_IGNORE_ALL_MODIFIER=" << MOD_IGNORE_ALL_MODIFIER << std::endl;
    std::cout << "MOD_LEFT=" << MOD_LEFT << std::endl;
    std::cout << "MOD_MAPPER=" << MOD_MAPPER << std::endl;
    std::cout << "MOD_MIDIPORT=" << MOD_MIDIPORT << std::endl;
    std::cout << "MOD_NOREPEAT=" << MOD_NOREPEAT << std::endl;
    std::cout << "MOD_ON_KEYUP=" << MOD_ON_KEYUP << std::endl;
    std::cout << "MOD_RIGHT=" << MOD_RIGHT << std::endl;
    std::cout << "MOD_SHIFT=" << MOD_SHIFT << std::endl;
    std::cout << "MOD_SQSYNTH=" << MOD_SQSYNTH << std::endl;
    std::cout << "MOD_SWSYNTH=" << MOD_SWSYNTH << std::endl;
    std::cout << "MOD_SYNTH=" << MOD_SYNTH << std::endl;
    std::cout << "MOD_WAVETABLE=" << MOD_WAVETABLE << std::endl;
    std::cout << "MOD_WIN=" << MOD_WIN << std::endl;
    std::cout << "MOM_CLOSE=" << MOM_CLOSE << std::endl;
    std::cout << "MOM_DONE=" << MOM_DONE << std::endl;
    std::cout << "MOM_OPEN=" << MOM_OPEN << std::endl;
    std::cout << "MOM_POSITIONCB=" << MOM_POSITIONCB << std::endl;
    std::cout << "MONITORINFOF_PRIMARY=" << MONITORINFOF_PRIMARY << std::endl;
    std::cout << "MONITOR_DEFAULTTONEAREST=" << MONITOR_DEFAULTTONEAREST << std::endl;
    std::cout << "MONITOR_DEFAULTTONULL=" << MONITOR_DEFAULTTONULL << std::endl;
    std::cout << "MONITOR_DEFAULTTOPRIMARY=" << MONITOR_DEFAULTTOPRIMARY << std::endl;
    std::cout << "MONO_FONT=" << MONO_FONT << std::endl;
    std::cout << "MOUSEEVENTF_ABSOLUTE=" << MOUSEEVENTF_ABSOLUTE << std::endl;
    std::cout << "MOUSEEVENTF_HWHEEL=" << MOUSEEVENTF_HWHEEL << std::endl;
    std::cout << "MOUSEEVENTF_LEFTDOWN=" << MOUSEEVENTF_LEFTDOWN << std::endl;
    std::cout << "MOUSEEVENTF_LEFTUP=" << MOUSEEVENTF_LEFTUP << std::endl;
    std::cout << "MOUSEEVENTF_MIDDLEDOWN=" << MOUSEEVENTF_MIDDLEDOWN << std::endl;
    std::cout << "MOUSEEVENTF_MIDDLEUP=" << MOUSEEVENTF_MIDDLEUP << std::endl;
    std::cout << "MOUSEEVENTF_MOVE=" << MOUSEEVENTF_MOVE << std::endl;
    std::cout << "MOUSEEVENTF_MOVE_NOCOALESCE=" << MOUSEEVENTF_MOVE_NOCOALESCE << std::endl;
    std::cout << "MOUSEEVENTF_RIGHTDOWN=" << MOUSEEVENTF_RIGHTDOWN << std::endl;
    std::cout << "MOUSEEVENTF_RIGHTUP=" << MOUSEEVENTF_RIGHTUP << std::endl;
    std::cout << "MOUSEEVENTF_VIRTUALDESK=" << MOUSEEVENTF_VIRTUALDESK << std::endl;
    std::cout << "MOUSEEVENTF_WHEEL=" << MOUSEEVENTF_WHEEL << std::endl;
    std::cout << "MOUSEEVENTF_XDOWN=" << MOUSEEVENTF_XDOWN << std::endl;
    std::cout << "MOUSEEVENTF_XUP=" << MOUSEEVENTF_XUP << std::endl;
    std::cout << "MOUSETRAILS=" << MOUSETRAILS << std::endl;
    std::cout << "MOUSEWHEEL_ROUTING_FOCUS=" << MOUSEWHEEL_ROUTING_FOCUS << std::endl;
    std::cout << "MOUSEWHEEL_ROUTING_HYBRID=" << MOUSEWHEEL_ROUTING_HYBRID << std::endl;
    std::cout << "MOUSEWHEEL_ROUTING_MOUSE_POS=" << MOUSEWHEEL_ROUTING_MOUSE_POS << std::endl;
    std::cout << "MOUSE_ATTRIBUTES_CHANGED=" << MOUSE_ATTRIBUTES_CHANGED << std::endl;
    std::cout << "MOUSE_EVENT=" << MOUSE_EVENT << std::endl;
    std::cout << "MOUSE_HWHEELED=" << MOUSE_HWHEELED << std::endl;
    std::cout << "MOUSE_MOVED=" << MOUSE_MOVED << std::endl;
    std::cout << "MOUSE_MOVE_ABSOLUTE=" << MOUSE_MOVE_ABSOLUTE << std::endl;
    std::cout << "MOUSE_MOVE_NOCOALESCE=" << MOUSE_MOVE_NOCOALESCE << std::endl;
    std::cout << "MOUSE_MOVE_RELATIVE=" << MOUSE_MOVE_RELATIVE << std::endl;
    std::cout << "MOUSE_VIRTUAL_DESKTOP=" << MOUSE_VIRTUAL_DESKTOP << std::endl;
    std::cout << "MOUSE_WHEELED=" << MOUSE_WHEELED << std::endl;
    std::cout << "MOVEFILE_COPY_ALLOWED=" << MOVEFILE_COPY_ALLOWED << std::endl;
    std::cout << "MOVEFILE_CREATE_HARDLINK=" << MOVEFILE_CREATE_HARDLINK << std::endl;
    std::cout << "MOVEFILE_DELAY_UNTIL_REBOOT=" << MOVEFILE_DELAY_UNTIL_REBOOT << std::endl;
    std::cout << "MOVEFILE_FAIL_IF_NOT_TRACKABLE=" << MOVEFILE_FAIL_IF_NOT_TRACKABLE << std::endl;
    std::cout << "MOVEFILE_REPLACE_EXISTING=" << MOVEFILE_REPLACE_EXISTING << std::endl;
    std::cout << "MOVEFILE_WRITE_THROUGH=" << MOVEFILE_WRITE_THROUGH << std::endl;
    std::cout << "MSGFLTINFO_ALLOWED_HIGHER=" << MSGFLTINFO_ALLOWED_HIGHER << std::endl;
    std::cout << "MSGFLTINFO_ALREADYALLOWED_FORWND=" << MSGFLTINFO_ALREADYALLOWED_FORWND << std::endl;
    std::cout << "MSGFLTINFO_ALREADYDISALLOWED_FORWND=" << MSGFLTINFO_ALREADYDISALLOWED_FORWND << std::endl;
    std::cout << "MSGFLTINFO_NONE=" << MSGFLTINFO_NONE << std::endl;
    std::cout << "MSGFLT_ADD=" << MSGFLT_ADD << std::endl;
    std::cout << "MSGFLT_ALLOW=" << MSGFLT_ALLOW << std::endl;
    std::cout << "MSGFLT_DISALLOW=" << MSGFLT_DISALLOW << std::endl;
    std::cout << "MSGFLT_REMOVE=" << MSGFLT_REMOVE << std::endl;
    std::cout << "MSGFLT_RESET=" << MSGFLT_RESET << std::endl;
    std::cout << "MSGF_DDEMGR=" << MSGF_DDEMGR << std::endl;
    std::cout << "MSGF_DIALOGBOX=" << MSGF_DIALOGBOX << std::endl;
    std::cout << "MSGF_MAX=" << MSGF_MAX << std::endl;
    std::cout << "MSGF_MENU=" << MSGF_MENU << std::endl;
    std::cout << "MSGF_MESSAGEBOX=" << MSGF_MESSAGEBOX << std::endl;
    std::cout << "MSGF_NEXTWINDOW=" << MSGF_NEXTWINDOW << std::endl;
    std::cout << "MSGF_SCROLLBAR=" << MSGF_SCROLLBAR << std::endl;
    std::cout << "MSGF_USER=" << MSGF_USER << std::endl;
    std::cout << "MSG_DONTROUTE=" << MSG_DONTROUTE << std::endl;
    std::cout << "MSG_MAXIOVLEN=" << MSG_MAXIOVLEN << std::endl;
    std::cout << "MSG_OOB=" << MSG_OOB << std::endl;
    std::cout << "MSG_PARTIAL=" << MSG_PARTIAL << std::endl;
    std::cout << "MSG_PEEK=" << MSG_PEEK << std::endl;
    std::cout << "MS_PPM_SOFTWARE_ALL=" << MS_PPM_SOFTWARE_ALL << std::endl;
    std::cout << "MUI_COMPLEX_SCRIPT_FILTER=" << MUI_COMPLEX_SCRIPT_FILTER << std::endl;
    std::cout << "MUI_CONSOLE_FILTER=" << MUI_CONSOLE_FILTER << std::endl;
    std::cout << "MUI_FILEINFO_VERSION=" << MUI_FILEINFO_VERSION << std::endl;
    std::cout << "MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN=" << MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN << std::endl;
    std::cout << "MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI=" << MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI << std::endl;
    std::cout << "MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL=" << MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL << std::endl;
    std::cout << "MUI_FORMAT_INF_COMPAT=" << MUI_FORMAT_INF_COMPAT << std::endl;
    std::cout << "MUI_FORMAT_REG_COMPAT=" << MUI_FORMAT_REG_COMPAT << std::endl;
    std::cout << "MUI_FULL_LANGUAGE=" << MUI_FULL_LANGUAGE << std::endl;
    std::cout << "MUI_IMMUTABLE_LOOKUP=" << MUI_IMMUTABLE_LOOKUP << std::endl;
    std::cout << "MUI_LANGUAGE_ID=" << MUI_LANGUAGE_ID << std::endl;
    std::cout << "MUI_LANGUAGE_INSTALLED=" << MUI_LANGUAGE_INSTALLED << std::endl;
    std::cout << "MUI_LANGUAGE_LICENSED=" << MUI_LANGUAGE_LICENSED << std::endl;
    std::cout << "MUI_LANGUAGE_NAME=" << MUI_LANGUAGE_NAME << std::endl;
    std::cout << "MUI_LANG_NEUTRAL_PE_FILE=" << MUI_LANG_NEUTRAL_PE_FILE << std::endl;
    std::cout << "MUI_LIP_LANGUAGE=" << MUI_LIP_LANGUAGE << std::endl;
    std::cout << "MUI_MACHINE_LANGUAGE_SETTINGS=" << MUI_MACHINE_LANGUAGE_SETTINGS << std::endl;
    std::cout << "MUI_MERGE_SYSTEM_FALLBACK=" << MUI_MERGE_SYSTEM_FALLBACK << std::endl;
    std::cout << "MUI_MERGE_USER_FALLBACK=" << MUI_MERGE_USER_FALLBACK << std::endl;
    std::cout << "MUI_NON_LANG_NEUTRAL_FILE=" << MUI_NON_LANG_NEUTRAL_FILE << std::endl;
    std::cout << "MUI_PARTIAL_LANGUAGE=" << MUI_PARTIAL_LANGUAGE << std::endl;
    std::cout << "MUI_QUERY_CHECKSUM=" << MUI_QUERY_CHECKSUM << std::endl;
    std::cout << "MUI_QUERY_LANGUAGE_NAME=" << MUI_QUERY_LANGUAGE_NAME << std::endl;
    std::cout << "MUI_QUERY_RESOURCE_TYPES=" << MUI_QUERY_RESOURCE_TYPES << std::endl;
    std::cout << "MUI_QUERY_TYPE=" << MUI_QUERY_TYPE << std::endl;
    std::cout << "MUI_RESET_FILTERS=" << MUI_RESET_FILTERS << std::endl;
    std::cout << "MUI_SKIP_STRING_CACHE=" << MUI_SKIP_STRING_CACHE << std::endl;
    std::cout << "MUI_THREAD_LANGUAGES=" << MUI_THREAD_LANGUAGES << std::endl;
    std::cout << "MUI_UI_FALLBACK=" << MUI_UI_FALLBACK << std::endl;
    std::cout << "MUI_USER_PREFERRED_UI_LANGUAGES=" << MUI_USER_PREFERRED_UI_LANGUAGES << std::endl;
    std::cout << "MUI_USE_INSTALLED_LANGUAGES=" << MUI_USE_INSTALLED_LANGUAGES << std::endl;
    std::cout << "MUI_USE_SEARCH_ALL_LANGUAGES=" << MUI_USE_SEARCH_ALL_LANGUAGES << std::endl;
    std::cout << "MUI_VERIFY_FILE_EXISTS=" << MUI_VERIFY_FILE_EXISTS << std::endl;
    std::cout << "MULTIFILEOPENORD=" << MULTIFILEOPENORD << std::endl;
    std::cout << "MUTANT_ALL_ACCESS=" << MUTANT_ALL_ACCESS << std::endl;
    std::cout << "MUTANT_QUERY_STATE=" << MUTANT_QUERY_STATE << std::endl;
    std::cout << "MUTEX_ALL_ACCESS=" << MUTEX_ALL_ACCESS << std::endl;
    std::cout << "MUTEX_MODIFY_STATE=" << MUTEX_MODIFY_STATE << std::endl;
    std::cout << "MUTZ_ACCEPT_WILDCARD_SCHEME=" << MUTZ_ACCEPT_WILDCARD_SCHEME << std::endl;
    std::cout << "MUTZ_DONT_UNESCAPE=" << MUTZ_DONT_UNESCAPE << std::endl;
    std::cout << "MUTZ_DONT_USE_CACHE=" << MUTZ_DONT_USE_CACHE << std::endl;
    std::cout << "MUTZ_ENFORCERESTRICTED=" << MUTZ_ENFORCERESTRICTED << std::endl;
    std::cout << "MUTZ_FORCE_INTRANET_FLAGS=" << MUTZ_FORCE_INTRANET_FLAGS << std::endl;
    std::cout << "MUTZ_IGNORE_ZONE_MAPPINGS=" << MUTZ_IGNORE_ZONE_MAPPINGS << std::endl;
    std::cout << "MUTZ_ISFILE=" << MUTZ_ISFILE << std::endl;
    std::cout << "MUTZ_NOSAVEDFILECHECK=" << MUTZ_NOSAVEDFILECHECK << std::endl;
    std::cout << "MUTZ_REQUIRESAVEDFILECHECK=" << MUTZ_REQUIRESAVEDFILECHECK << std::endl;
    std::cout << "MUTZ_RESERVED=" << MUTZ_RESERVED << std::endl;
    std::cout << "MWMO_ALERTABLE=" << MWMO_ALERTABLE << std::endl;
    std::cout << "MWMO_INPUTAVAILABLE=" << MWMO_INPUTAVAILABLE << std::endl;
    std::cout << "MWMO_WAITALL=" << MWMO_WAITALL << std::endl;
    std::cout << "MWT_IDENTITY=" << MWT_IDENTITY << std::endl;
    std::cout << "MWT_LEFTMULTIPLY=" << MWT_LEFTMULTIPLY << std::endl;
    std::cout << "MWT_MAX=" << MWT_MAX << std::endl;
    std::cout << "MWT_MIN=" << MWT_MIN << std::endl;
    std::cout << "MWT_RIGHTMULTIPLY=" << MWT_RIGHTMULTIPLY << std::endl;
    std::cout << "NAME_FLAGS_MASK=" << NAME_FLAGS_MASK << std::endl;
    std::cout << "NAME_MAX=" << NAME_MAX << std::endl;
    std::cout << "NCBACTION=" << NCBACTION << std::endl;
    std::cout << "NCBADDGRNAME=" << NCBADDGRNAME << std::endl;
    std::cout << "NCBADDNAME=" << NCBADDNAME << std::endl;
    std::cout << "NCBASTAT=" << NCBASTAT << std::endl;
    std::cout << "NCBCALL=" << NCBCALL << std::endl;
    std::cout << "NCBCANCEL=" << NCBCANCEL << std::endl;
    std::cout << "NCBCHAINSEND=" << NCBCHAINSEND << std::endl;
    std::cout << "NCBCHAINSENDNA=" << NCBCHAINSENDNA << std::endl;
    std::cout << "NCBDELNAME=" << NCBDELNAME << std::endl;
    std::cout << "NCBDGRECV=" << NCBDGRECV << std::endl;
    std::cout << "NCBDGRECVBC=" << NCBDGRECVBC << std::endl;
    std::cout << "NCBDGSEND=" << NCBDGSEND << std::endl;
    std::cout << "NCBDGSENDBC=" << NCBDGSENDBC << std::endl;
    std::cout << "NCBENUM=" << NCBENUM << std::endl;
    std::cout << "NCBFINDNAME=" << NCBFINDNAME << std::endl;
    std::cout << "NCBHANGUP=" << NCBHANGUP << std::endl;
    std::cout << "NCBLANSTALERT=" << NCBLANSTALERT << std::endl;
    std::cout << "NCBLISTEN=" << NCBLISTEN << std::endl;
    std::cout << "NCBNAMSZ=" << NCBNAMSZ << std::endl;
    std::cout << "NCBRECV=" << NCBRECV << std::endl;
    std::cout << "NCBRECVANY=" << NCBRECVANY << std::endl;
    std::cout << "NCBRESET=" << NCBRESET << std::endl;
    std::cout << "NCBSEND=" << NCBSEND << std::endl;
    std::cout << "NCBSENDNA=" << NCBSENDNA << std::endl;
    std::cout << "NCBSSTAT=" << NCBSSTAT << std::endl;
    std::cout << "NCBTRACE=" << NCBTRACE << std::endl;
    std::cout << "NCBUNLINK=" << NCBUNLINK << std::endl;
    std::cout << "NCM_DISPLAYERRORTIP=" << NCM_DISPLAYERRORTIP << std::endl;
    std::cout << "NCM_GETADDRESS=" << NCM_GETADDRESS << std::endl;
    std::cout << "NCM_GETALLOWTYPE=" << NCM_GETALLOWTYPE << std::endl;
    std::cout << "NCM_SETALLOWTYPE=" << NCM_SETALLOWTYPE << std::endl;
    std::cout << "NCRYPTBUFFER_CERT_BLOB=" << NCRYPTBUFFER_CERT_BLOB << std::endl;
    std::cout << "NCRYPTBUFFER_DATA=" << NCRYPTBUFFER_DATA << std::endl;
    std::cout << "NCRYPTBUFFER_EMPTY=" << NCRYPTBUFFER_EMPTY << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_ALG_ID=" << NCRYPTBUFFER_PKCS_ALG_ID << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_ALG_OID=" << NCRYPTBUFFER_PKCS_ALG_OID << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_ALG_PARAM=" << NCRYPTBUFFER_PKCS_ALG_PARAM << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_ATTRS=" << NCRYPTBUFFER_PKCS_ATTRS << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_KEY_NAME=" << NCRYPTBUFFER_PKCS_KEY_NAME << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_OID=" << NCRYPTBUFFER_PKCS_OID << std::endl;
    std::cout << "NCRYPTBUFFER_PKCS_SECRET=" << NCRYPTBUFFER_PKCS_SECRET << std::endl;
    std::cout << "NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING=" << NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING << std::endl;
    std::cout << "NCRYPTBUFFER_PROTECTION_FLAGS=" << NCRYPTBUFFER_PROTECTION_FLAGS << std::endl;
    std::cout << "NCRYPTBUFFER_SSL_CLEAR_KEY=" << NCRYPTBUFFER_SSL_CLEAR_KEY << std::endl;
    std::cout << "NCRYPTBUFFER_SSL_CLIENT_RANDOM=" << NCRYPTBUFFER_SSL_CLIENT_RANDOM << std::endl;
    std::cout << "NCRYPTBUFFER_SSL_HIGHEST_VERSION=" << NCRYPTBUFFER_SSL_HIGHEST_VERSION << std::endl;
    std::cout << "NCRYPTBUFFER_SSL_KEY_ARG_DATA=" << NCRYPTBUFFER_SSL_KEY_ARG_DATA << std::endl;
    std::cout << "NCRYPTBUFFER_SSL_SERVER_RANDOM=" << NCRYPTBUFFER_SSL_SERVER_RANDOM << std::endl;
    std::cout << "NCRYPTBUFFER_VERSION=" << NCRYPTBUFFER_VERSION << std::endl;
    std::cout << "NCRYPT_AES_ALGORITHM_GROUP=" << NCRYPT_AES_ALGORITHM_GROUP << std::endl;
    std::cout << "NCRYPT_ALLOW_ARCHIVING_FLAG=" << NCRYPT_ALLOW_ARCHIVING_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_DECRYPT_FLAG=" << NCRYPT_ALLOW_DECRYPT_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_EXPORT_FLAG=" << NCRYPT_ALLOW_EXPORT_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_KEY_AGREEMENT_FLAG=" << NCRYPT_ALLOW_KEY_AGREEMENT_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG=" << NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG=" << NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG << std::endl;
    std::cout << "NCRYPT_ALLOW_SIGNING_FLAG=" << NCRYPT_ALLOW_SIGNING_FLAG << std::endl;
    std::cout << "NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE=" << NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE << std::endl;
    std::cout << "NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION=" << NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION << std::endl;
    std::cout << "NCRYPT_CIPHER_BLOCK_PADDING_FLAG=" << NCRYPT_CIPHER_BLOCK_PADDING_FLAG << std::endl;
    std::cout << "NCRYPT_CIPHER_INTERFACE=" << NCRYPT_CIPHER_INTERFACE << std::endl;
    std::cout << "NCRYPT_CIPHER_KEY_BLOB_MAGIC=" << NCRYPT_CIPHER_KEY_BLOB_MAGIC << std::endl;
    std::cout << "NCRYPT_CIPHER_NO_PADDING_FLAG=" << NCRYPT_CIPHER_NO_PADDING_FLAG << std::endl;
    std::cout << "NCRYPT_CIPHER_OPERATION=" << NCRYPT_CIPHER_OPERATION << std::endl;
    std::cout << "NCRYPT_CIPHER_OTHER_PADDING_FLAG=" << NCRYPT_CIPHER_OTHER_PADDING_FLAG << std::endl;
    std::cout << "NCRYPT_DH_ALGORITHM_GROUP=" << NCRYPT_DH_ALGORITHM_GROUP << std::endl;
    std::cout << "NCRYPT_DO_NOT_FINALIZE_FLAG=" << NCRYPT_DO_NOT_FINALIZE_FLAG << std::endl;
    std::cout << "NCRYPT_DSA_ALGORITHM_GROUP=" << NCRYPT_DSA_ALGORITHM_GROUP << std::endl;
    std::cout << "NCRYPT_EXPORT_LEGACY_FLAG=" << NCRYPT_EXPORT_LEGACY_FLAG << std::endl;
    std::cout << "NCRYPT_HASH_INTERFACE=" << NCRYPT_HASH_INTERFACE << std::endl;
    std::cout << "NCRYPT_HASH_OPERATION=" << NCRYPT_HASH_OPERATION << std::endl;
    std::cout << "NCRYPT_IMPL_HARDWARE_FLAG=" << NCRYPT_IMPL_HARDWARE_FLAG << std::endl;
    std::cout << "NCRYPT_IMPL_HARDWARE_RNG_FLAG=" << NCRYPT_IMPL_HARDWARE_RNG_FLAG << std::endl;
    std::cout << "NCRYPT_IMPL_REMOVABLE_FLAG=" << NCRYPT_IMPL_REMOVABLE_FLAG << std::endl;
    std::cout << "NCRYPT_IMPL_SOFTWARE_FLAG=" << NCRYPT_IMPL_SOFTWARE_FLAG << std::endl;
    std::cout << "NCRYPT_KEY_DERIVATION_INTERFACE=" << NCRYPT_KEY_DERIVATION_INTERFACE << std::endl;
    std::cout << "NCRYPT_KEY_DERIVATION_OPERATION=" << NCRYPT_KEY_DERIVATION_OPERATION << std::endl;
    std::cout << "NCRYPT_KEY_PROTECTION_INTERFACE=" << NCRYPT_KEY_PROTECTION_INTERFACE << std::endl;
    std::cout << "NCRYPT_KEY_STORAGE_INTERFACE=" << NCRYPT_KEY_STORAGE_INTERFACE << std::endl;
    std::cout << "NCRYPT_MACHINE_KEY_FLAG=" << NCRYPT_MACHINE_KEY_FLAG << std::endl;
    std::cout << "NCRYPT_MAX_ALG_ID_LENGTH=" << NCRYPT_MAX_ALG_ID_LENGTH << std::endl;
    std::cout << "NCRYPT_MAX_KEY_NAME_LENGTH=" << NCRYPT_MAX_KEY_NAME_LENGTH << std::endl;
    std::cout << "NCRYPT_MAX_PROPERTY_DATA=" << NCRYPT_MAX_PROPERTY_DATA << std::endl;
    std::cout << "NCRYPT_MAX_PROPERTY_NAME=" << NCRYPT_MAX_PROPERTY_NAME << std::endl;
    std::cout << "NCRYPT_NO_KEY_VALIDATION=" << NCRYPT_NO_KEY_VALIDATION << std::endl;
    std::cout << "NCRYPT_NO_PADDING_FLAG=" << NCRYPT_NO_PADDING_FLAG << std::endl;
    std::cout << "NCRYPT_OVERWRITE_KEY_FLAG=" << NCRYPT_OVERWRITE_KEY_FLAG << std::endl;
    std::cout << "NCRYPT_PAD_CIPHER_FLAG=" << NCRYPT_PAD_CIPHER_FLAG << std::endl;
    std::cout << "NCRYPT_PAD_OAEP_FLAG=" << NCRYPT_PAD_OAEP_FLAG << std::endl;
    std::cout << "NCRYPT_PAD_PKCS1_FLAG=" << NCRYPT_PAD_PKCS1_FLAG << std::endl;
    std::cout << "NCRYPT_PAD_PSS_FLAG=" << NCRYPT_PAD_PSS_FLAG << std::endl;
    std::cout << "NCRYPT_PCP_ENCRYPTION_KEY=" << NCRYPT_PCP_ENCRYPTION_KEY << std::endl;
    std::cout << "NCRYPT_PCP_GENERIC_KEY=" << NCRYPT_PCP_GENERIC_KEY << std::endl;
    std::cout << "NCRYPT_PCP_IDENTITY_KEY=" << NCRYPT_PCP_IDENTITY_KEY << std::endl;
    std::cout << "NCRYPT_PCP_SIGNATURE_KEY=" << NCRYPT_PCP_SIGNATURE_KEY << std::endl;
    std::cout << "NCRYPT_PCP_STORAGE_KEY=" << NCRYPT_PCP_STORAGE_KEY << std::endl;
    std::cout << "NCRYPT_PERSIST_FLAG=" << NCRYPT_PERSIST_FLAG << std::endl;
    std::cout << "NCRYPT_PERSIST_ONLY_FLAG=" << NCRYPT_PERSIST_ONLY_FLAG << std::endl;
    std::cout << "NCRYPT_RC2_ALGORITHM_GROUP=" << NCRYPT_RC2_ALGORITHM_GROUP << std::endl;
    std::cout << "NCRYPT_REGISTER_NOTIFY_FLAG=" << NCRYPT_REGISTER_NOTIFY_FLAG << std::endl;
    std::cout << "NCRYPT_RNG_OPERATION=" << NCRYPT_RNG_OPERATION << std::endl;
    std::cout << "NCRYPT_RSA_ALGORITHM_GROUP=" << NCRYPT_RSA_ALGORITHM_GROUP << std::endl;
    std::cout << "NCRYPT_SCHANNEL_INTERFACE=" << NCRYPT_SCHANNEL_INTERFACE << std::endl;
    std::cout << "NCRYPT_SCHANNEL_SIGNATURE_INTERFACE=" << NCRYPT_SCHANNEL_SIGNATURE_INTERFACE << std::endl;
    std::cout << "NCRYPT_SECRET_AGREEMENT_INTERFACE=" << NCRYPT_SECRET_AGREEMENT_INTERFACE << std::endl;
    std::cout << "NCRYPT_SECRET_AGREEMENT_OPERATION=" << NCRYPT_SECRET_AGREEMENT_OPERATION << std::endl;
    std::cout << "NCRYPT_SIGNATURE_INTERFACE=" << NCRYPT_SIGNATURE_INTERFACE << std::endl;
    std::cout << "NCRYPT_SIGNATURE_OPERATION=" << NCRYPT_SIGNATURE_OPERATION << std::endl;
    std::cout << "NCRYPT_SILENT_FLAG=" << NCRYPT_SILENT_FLAG << std::endl;
    std::cout << "NCRYPT_TPM12_PROVIDER=" << NCRYPT_TPM12_PROVIDER << std::endl;
    std::cout << "NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG=" << NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG << std::endl;
    std::cout << "NCRYPT_UI_PROTECT_KEY_FLAG=" << NCRYPT_UI_PROTECT_KEY_FLAG << std::endl;
    std::cout << "NCRYPT_UNREGISTER_NOTIFY_FLAG=" << NCRYPT_UNREGISTER_NOTIFY_FLAG << std::endl;
    std::cout << "NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG=" << NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG << std::endl;
    std::cout << "NETINFO_DISKRED=" << NETINFO_DISKRED << std::endl;
    std::cout << "NETINFO_DLL16=" << NETINFO_DLL16 << std::endl;
    std::cout << "NETINFO_PRINTERRED=" << NETINFO_PRINTERRED << std::endl;
    std::cout << "NETPROPERTY_PERSISTENT=" << NETPROPERTY_PERSISTENT << std::endl;
    std::cout << "NETSCAPE_SIGN_CA_CERT_TYPE=" << NETSCAPE_SIGN_CA_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SIGN_CERT_TYPE=" << NETSCAPE_SIGN_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SMIME_CA_CERT_TYPE=" << NETSCAPE_SMIME_CA_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SMIME_CERT_TYPE=" << NETSCAPE_SMIME_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SSL_CA_CERT_TYPE=" << NETSCAPE_SSL_CA_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE=" << NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE << std::endl;
    std::cout << "NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE=" << NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE << std::endl;
    std::cout << "NEWFILEOPENORD=" << NEWFILEOPENORD << std::endl;
    std::cout << "NEWFILEOPENV2ORD=" << NEWFILEOPENV2ORD << std::endl;
    std::cout << "NEWFRAME=" << NEWFRAME << std::endl;
    std::cout << "NEWTRANSPARENT=" << NEWTRANSPARENT << std::endl;
    std::cout << "NEXTBAND=" << NEXTBAND << std::endl;
    std::cout << "NFR_ANSI=" << NFR_ANSI << std::endl;
    std::cout << "NFR_UNICODE=" << NFR_UNICODE << std::endl;
    std::cout << "NFS_ALL=" << NFS_ALL << std::endl;
    std::cout << "NFS_BUTTON=" << NFS_BUTTON << std::endl;
    std::cout << "NFS_EDIT=" << NFS_EDIT << std::endl;
    std::cout << "NFS_LISTCOMBO=" << NFS_LISTCOMBO << std::endl;
    std::cout << "NFS_STATIC=" << NFS_STATIC << std::endl;
    std::cout << "NFS_USEFONTASSOC=" << NFS_USEFONTASSOC << std::endl;
    std::cout << "NF_QUERY=" << NF_QUERY << std::endl;
    std::cout << "NF_REQUERY=" << NF_REQUERY << std::endl;
    std::cout << "NGROUPS_MAX=" << NGROUPS_MAX << std::endl;
    std::cout << "NID_EXTERNAL_PEN=" << NID_EXTERNAL_PEN << std::endl;
    std::cout << "NID_EXTERNAL_TOUCH=" << NID_EXTERNAL_TOUCH << std::endl;
    std::cout << "NID_INTEGRATED_PEN=" << NID_INTEGRATED_PEN << std::endl;
    std::cout << "NID_INTEGRATED_TOUCH=" << NID_INTEGRATED_TOUCH << std::endl;
    std::cout << "NID_MULTI_INPUT=" << NID_MULTI_INPUT << std::endl;
    std::cout << "NID_READY=" << NID_READY << std::endl;
    std::cout << "NIF_GUID=" << NIF_GUID << std::endl;
    std::cout << "NIF_ICON=" << NIF_ICON << std::endl;
    std::cout << "NIF_INFO=" << NIF_INFO << std::endl;
    std::cout << "NIF_MESSAGE=" << NIF_MESSAGE << std::endl;
    std::cout << "NIF_REALTIME=" << NIF_REALTIME << std::endl;
    std::cout << "NIF_SHOWTIP=" << NIF_SHOWTIP << std::endl;
    std::cout << "NIF_STATE=" << NIF_STATE << std::endl;
    std::cout << "NIF_TIP=" << NIF_TIP << std::endl;
    std::cout << "NIIF_ERROR=" << NIIF_ERROR << std::endl;
    std::cout << "NIIF_INFO=" << NIIF_INFO << std::endl;
    std::cout << "NIIF_LARGE_ICON=" << NIIF_LARGE_ICON << std::endl;
    std::cout << "NIIF_NONE=" << NIIF_NONE << std::endl;
    std::cout << "NIIF_NOSOUND=" << NIIF_NOSOUND << std::endl;
    std::cout << "NIIF_RESPECT_QUIET_TIME=" << NIIF_RESPECT_QUIET_TIME << std::endl;
    std::cout << "NIIF_USER=" << NIIF_USER << std::endl;
    std::cout << "NIIF_WARNING=" << NIIF_WARNING << std::endl;
    std::cout << "NIM_ADD=" << NIM_ADD << std::endl;
    std::cout << "NIM_DELETE=" << NIM_DELETE << std::endl;
    std::cout << "NIM_MODIFY=" << NIM_MODIFY << std::endl;
    std::cout << "NIM_SETFOCUS=" << NIM_SETFOCUS << std::endl;
    std::cout << "NIM_SETVERSION=" << NIM_SETVERSION << std::endl;
    std::cout << "NINF_KEY=" << NINF_KEY << std::endl;
    std::cout << "NIN_BALLOONHIDE=" << NIN_BALLOONHIDE << std::endl;
    std::cout << "NIN_BALLOONSHOW=" << NIN_BALLOONSHOW << std::endl;
    std::cout << "NIN_BALLOONTIMEOUT=" << NIN_BALLOONTIMEOUT << std::endl;
    std::cout << "NIN_BALLOONUSERCLICK=" << NIN_BALLOONUSERCLICK << std::endl;
    std::cout << "NIN_KEYSELECT=" << NIN_KEYSELECT << std::endl;
    std::cout << "NIN_POPUPCLOSE=" << NIN_POPUPCLOSE << std::endl;
    std::cout << "NIN_POPUPOPEN=" << NIN_POPUPOPEN << std::endl;
    std::cout << "NIN_SELECT=" << NIN_SELECT << std::endl;
    std::cout << "NIS_HIDDEN=" << NIS_HIDDEN << std::endl;
    std::cout << "NIS_SHAREDICON=" << NIS_SHAREDICON << std::endl;
    std::cout << "NI_CHANGECANDIDATELIST=" << NI_CHANGECANDIDATELIST << std::endl;
    std::cout << "NI_CLOSECANDIDATE=" << NI_CLOSECANDIDATE << std::endl;
    std::cout << "NI_COMPOSITIONSTR=" << NI_COMPOSITIONSTR << std::endl;
    std::cout << "NI_FINALIZECONVERSIONRESULT=" << NI_FINALIZECONVERSIONRESULT << std::endl;
    std::cout << "NI_IMEMENUSELECTED=" << NI_IMEMENUSELECTED << std::endl;
    std::cout << "NI_OPENCANDIDATE=" << NI_OPENCANDIDATE << std::endl;
    std::cout << "NI_SELECTCANDIDATESTR=" << NI_SELECTCANDIDATESTR << std::endl;
    std::cout << "NI_SETCANDIDATE_PAGESIZE=" << NI_SETCANDIDATE_PAGESIZE << std::endl;
    std::cout << "NI_SETCANDIDATE_PAGESTART=" << NI_SETCANDIDATE_PAGESTART << std::endl;
    std::cout << "NLS_ALPHANUMERIC=" << NLS_ALPHANUMERIC << std::endl;
    std::cout << "NLS_DBCSCHAR=" << NLS_DBCSCHAR << std::endl;
    std::cout << "NLS_HIRAGANA=" << NLS_HIRAGANA << std::endl;
    std::cout << "NLS_IME_CONVERSION=" << NLS_IME_CONVERSION << std::endl;
    std::cout << "NLS_IME_DISABLE=" << NLS_IME_DISABLE << std::endl;
    std::cout << "NLS_KATAKANA=" << NLS_KATAKANA << std::endl;
    std::cout << "NLS_ROMAN=" << NLS_ROMAN << std::endl;
    std::cout << "NMPWAIT_NOWAIT=" << NMPWAIT_NOWAIT << std::endl;
    std::cout << "NMPWAIT_USE_DEFAULT_WAIT=" << NMPWAIT_USE_DEFAULT_WAIT << std::endl;
    std::cout << "NOERROR=" << NOERROR << std::endl;
    std::cout << "NONAMELESSSTRUCT=" << NONAMELESSSTRUCT << std::endl;
    std::cout << "NONAMELESSUNION=" << NONAMELESSUNION << std::endl;
    std::cout << "NONANTIALIASED_QUALITY=" << NONANTIALIASED_QUALITY << std::endl;
    std::cout << "NONZEROLHND=" << NONZEROLHND << std::endl;
    std::cout << "NONZEROLPTR=" << NONZEROLPTR << std::endl;
    std::cout << "NON_PAGED_DEBUG_SIGNATURE=" << NON_PAGED_DEBUG_SIGNATURE << std::endl;
    std::cout << "NOPARITY=" << NOPARITY << std::endl;
    std::cout << "NORMAL_PRINT=" << NORMAL_PRINT << std::endl;
    std::cout << "NORMAL_PRIORITY_CLASS=" << NORMAL_PRIORITY_CLASS << std::endl;
    std::cout << "NORM_IGNORECASE=" << NORM_IGNORECASE << std::endl;
    std::cout << "NORM_IGNOREKANATYPE=" << NORM_IGNOREKANATYPE << std::endl;
    std::cout << "NORM_IGNORENONSPACE=" << NORM_IGNORENONSPACE << std::endl;
    std::cout << "NORM_IGNORESYMBOLS=" << NORM_IGNORESYMBOLS << std::endl;
    std::cout << "NORM_IGNOREWIDTH=" << NORM_IGNOREWIDTH << std::endl;
    std::cout << "NORM_LINGUISTIC_CASING=" << NORM_LINGUISTIC_CASING << std::endl;
    std::cout << "NOTIFYICON_VERSION=" << NOTIFYICON_VERSION << std::endl;
    std::cout << "NOTIFYICON_VERSION_4=" << NOTIFYICON_VERSION_4 << std::endl;
    std::cout << "NOWINBASEINTERLOCK=" << NOWINBASEINTERLOCK << std::endl;
    std::cout << "NO_ADDRESS=" << NO_ADDRESS << std::endl;
    std::cout << "NO_DATA=" << NO_DATA << std::endl;
    std::cout << "NO_PRIORITY=" << NO_PRIORITY << std::endl;
    std::cout << "NO_PROPAGATE_INHERIT_ACE=" << NO_PROPAGATE_INHERIT_ACE << std::endl;
    std::cout << "NO_RECOVERY=" << NO_RECOVERY << std::endl;
    std::cout << "NRC_BADDR=" << NRC_BADDR << std::endl;
    std::cout << "NRC_BRIDGE=" << NRC_BRIDGE << std::endl;
    std::cout << "NRC_BUFLEN=" << NRC_BUFLEN << std::endl;
    std::cout << "NRC_CANCEL=" << NRC_CANCEL << std::endl;
    std::cout << "NRC_CANOCCR=" << NRC_CANOCCR << std::endl;
    std::cout << "NRC_CMDTMO=" << NRC_CMDTMO << std::endl;
    std::cout << "NRC_DUPENV=" << NRC_DUPENV << std::endl;
    std::cout << "NRC_ENVNOTDEF=" << NRC_ENVNOTDEF << std::endl;
    std::cout << "NRC_GOODRET=" << NRC_GOODRET << std::endl;
    std::cout << "NRC_IFBUSY=" << NRC_IFBUSY << std::endl;
    std::cout << "NRC_ILLCMD=" << NRC_ILLCMD << std::endl;
    std::cout << "NRC_ILLNN=" << NRC_ILLNN << std::endl;
    std::cout << "NRC_INCOMP=" << NRC_INCOMP << std::endl;
    std::cout << "NRC_INUSE=" << NRC_INUSE << std::endl;
    std::cout << "NRC_INVADDRESS=" << NRC_INVADDRESS << std::endl;
    std::cout << "NRC_INVDDID=" << NRC_INVDDID << std::endl;
    std::cout << "NRC_LOCKFAIL=" << NRC_LOCKFAIL << std::endl;
    std::cout << "NRC_LOCTFUL=" << NRC_LOCTFUL << std::endl;
    std::cout << "NRC_MAXAPPS=" << NRC_MAXAPPS << std::endl;
    std::cout << "NRC_NAMCONF=" << NRC_NAMCONF << std::endl;
    std::cout << "NRC_NAMERR=" << NRC_NAMERR << std::endl;
    std::cout << "NRC_NOCALL=" << NRC_NOCALL << std::endl;
    std::cout << "NRC_NORES=" << NRC_NORES << std::endl;
    std::cout << "NRC_NORESOURCES=" << NRC_NORESOURCES << std::endl;
    std::cout << "NRC_NOSAPS=" << NRC_NOSAPS << std::endl;
    std::cout << "NRC_NOWILD=" << NRC_NOWILD << std::endl;
    std::cout << "NRC_OSRESNOTAV=" << NRC_OSRESNOTAV << std::endl;
    std::cout << "NRC_REMTFUL=" << NRC_REMTFUL << std::endl;
    std::cout << "NRC_SABORT=" << NRC_SABORT << std::endl;
    std::cout << "NRC_SNUMOUT=" << NRC_SNUMOUT << std::endl;
    std::cout << "NRC_SYSTEM=" << NRC_SYSTEM << std::endl;
    std::cout << "NRC_TOOMANY=" << NRC_TOOMANY << std::endl;
    std::cout << "NT351_INTERFACE_SIZE=" << NT351_INTERFACE_SIZE << std::endl;
    std::cout << "NTDDI_LONGHORN=" << NTDDI_LONGHORN << std::endl;
    std::cout << "NTDDI_VISTA=" << NTDDI_VISTA << std::endl;
    std::cout << "NTDDI_VISTASP1=" << NTDDI_VISTASP1 << std::endl;
    std::cout << "NTDDI_VISTASP2=" << NTDDI_VISTASP2 << std::endl;
    std::cout << "NTDDI_VISTASP3=" << NTDDI_VISTASP3 << std::endl;
    std::cout << "NTDDI_VISTASP4=" << NTDDI_VISTASP4 << std::endl;
    std::cout << "NTDDI_WIN10=" << NTDDI_WIN10 << std::endl;
    std::cout << "NTDDI_WIN10_19H1=" << NTDDI_WIN10_19H1 << std::endl;
    std::cout << "NTDDI_WIN10_FE=" << NTDDI_WIN10_FE << std::endl;
    std::cout << "NTDDI_WIN10_MN=" << NTDDI_WIN10_MN << std::endl;
    std::cout << "NTDDI_WIN10_RS1=" << NTDDI_WIN10_RS1 << std::endl;
    std::cout << "NTDDI_WIN10_RS2=" << NTDDI_WIN10_RS2 << std::endl;
    std::cout << "NTDDI_WIN10_RS3=" << NTDDI_WIN10_RS3 << std::endl;
    std::cout << "NTDDI_WIN10_RS4=" << NTDDI_WIN10_RS4 << std::endl;
    std::cout << "NTDDI_WIN10_RS5=" << NTDDI_WIN10_RS5 << std::endl;
    std::cout << "NTDDI_WIN10_TH2=" << NTDDI_WIN10_TH2 << std::endl;
    std::cout << "NTDDI_WIN10_VB=" << NTDDI_WIN10_VB << std::endl;
    std::cout << "NTDDI_WIN2K=" << NTDDI_WIN2K << std::endl;
    std::cout << "NTDDI_WIN2KSP1=" << NTDDI_WIN2KSP1 << std::endl;
    std::cout << "NTDDI_WIN2KSP2=" << NTDDI_WIN2KSP2 << std::endl;
    std::cout << "NTDDI_WIN2KSP3=" << NTDDI_WIN2KSP3 << std::endl;
    std::cout << "NTDDI_WIN2KSP4=" << NTDDI_WIN2KSP4 << std::endl;
    std::cout << "NTDDI_WIN6=" << NTDDI_WIN6 << std::endl;
    std::cout << "NTDDI_WIN6SP1=" << NTDDI_WIN6SP1 << std::endl;
    std::cout << "NTDDI_WIN6SP2=" << NTDDI_WIN6SP2 << std::endl;
    std::cout << "NTDDI_WIN6SP3=" << NTDDI_WIN6SP3 << std::endl;
    std::cout << "NTDDI_WIN6SP4=" << NTDDI_WIN6SP4 << std::endl;
    std::cout << "NTDDI_WIN7=" << NTDDI_WIN7 << std::endl;
    std::cout << "NTDDI_WIN8=" << NTDDI_WIN8 << std::endl;
    std::cout << "NTDDI_WINBLUE=" << NTDDI_WINBLUE << std::endl;
    std::cout << "NTDDI_WINTHRESHOLD=" << NTDDI_WINTHRESHOLD << std::endl;
    std::cout << "NTDDI_WINXP=" << NTDDI_WINXP << std::endl;
    std::cout << "NTDDI_WINXPSP1=" << NTDDI_WINXPSP1 << std::endl;
    std::cout << "NTDDI_WINXPSP2=" << NTDDI_WINXPSP2 << std::endl;
    std::cout << "NTDDI_WINXPSP3=" << NTDDI_WINXPSP3 << std::endl;
    std::cout << "NTDDI_WINXPSP4=" << NTDDI_WINXPSP4 << std::endl;
    std::cout << "NTDDI_WS03=" << NTDDI_WS03 << std::endl;
    std::cout << "NTDDI_WS03SP1=" << NTDDI_WS03SP1 << std::endl;
    std::cout << "NTDDI_WS03SP2=" << NTDDI_WS03SP2 << std::endl;
    std::cout << "NTDDI_WS03SP3=" << NTDDI_WS03SP3 << std::endl;
    std::cout << "NTDDI_WS03SP4=" << NTDDI_WS03SP4 << std::endl;
    std::cout << "NTDDI_WS08=" << NTDDI_WS08 << std::endl;
    std::cout << "NTDDI_WS08SP2=" << NTDDI_WS08SP2 << std::endl;
    std::cout << "NTDDI_WS08SP3=" << NTDDI_WS08SP3 << std::endl;
    std::cout << "NTDDI_WS08SP4=" << NTDDI_WS08SP4 << std::endl;
    std::cout << "NTE_OP_OK=" << NTE_OP_OK << std::endl;
    std::cout << "NTM_DSIG=" << NTM_DSIG << std::endl;
    std::cout << "NTM_MULTIPLEMASTER=" << NTM_MULTIPLEMASTER << std::endl;
    std::cout << "NTM_NONNEGATIVE_AC=" << NTM_NONNEGATIVE_AC << std::endl;
    std::cout << "NTM_PS_OPENTYPE=" << NTM_PS_OPENTYPE << std::endl;
    std::cout << "NTM_TT_OPENTYPE=" << NTM_TT_OPENTYPE << std::endl;
    std::cout << "NTM_TYPE1=" << NTM_TYPE1 << std::endl;
    std::cout << "NULL=" << NULL << std::endl;
    std::cout << "NULLREGION=" << NULLREGION << std::endl;
    std::cout << "NULL_BRUSH=" << NULL_BRUSH << std::endl;
    std::cout << "NULL_PEN=" << NULL_PEN << std::endl;
    std::cout << "NUMBRUSHES=" << NUMBRUSHES << std::endl;
    std::cout << "NUMCOLORS=" << NUMCOLORS << std::endl;
    std::cout << "NUMFONTS=" << NUMFONTS << std::endl;
    std::cout << "NUMLOCK_ON=" << NUMLOCK_ON << std::endl;
    std::cout << "NUMMARKERS=" << NUMMARKERS << std::endl;
    std::cout << "NUMPENS=" << NUMPENS << std::endl;
    std::cout << "NUMPRS_CURRENCY=" << NUMPRS_CURRENCY << std::endl;
    std::cout << "NUMPRS_DECIMAL=" << NUMPRS_DECIMAL << std::endl;
    std::cout << "NUMPRS_EXPONENT=" << NUMPRS_EXPONENT << std::endl;
    std::cout << "NUMPRS_HEX_OCT=" << NUMPRS_HEX_OCT << std::endl;
    std::cout << "NUMPRS_INEXACT=" << NUMPRS_INEXACT << std::endl;
    std::cout << "NUMPRS_LEADING_MINUS=" << NUMPRS_LEADING_MINUS << std::endl;
    std::cout << "NUMPRS_LEADING_PLUS=" << NUMPRS_LEADING_PLUS << std::endl;
    std::cout << "NUMPRS_LEADING_WHITE=" << NUMPRS_LEADING_WHITE << std::endl;
    std::cout << "NUMPRS_NEG=" << NUMPRS_NEG << std::endl;
    std::cout << "NUMPRS_PARENS=" << NUMPRS_PARENS << std::endl;
    std::cout << "NUMPRS_STD=" << NUMPRS_STD << std::endl;
    std::cout << "NUMPRS_THOUSANDS=" << NUMPRS_THOUSANDS << std::endl;
    std::cout << "NUMPRS_TRAILING_MINUS=" << NUMPRS_TRAILING_MINUS << std::endl;
    std::cout << "NUMPRS_TRAILING_PLUS=" << NUMPRS_TRAILING_PLUS << std::endl;
    std::cout << "NUMPRS_TRAILING_WHITE=" << NUMPRS_TRAILING_WHITE << std::endl;
    std::cout << "NUMPRS_USE_ALL=" << NUMPRS_USE_ALL << std::endl;
    std::cout << "NUMRESERVED=" << NUMRESERVED << std::endl;
    std::cout << "NUM_DISCHARGE_POLICIES=" << NUM_DISCHARGE_POLICIES << std::endl;
    std::cout << "N_BTMASK=" << N_BTMASK << std::endl;
    std::cout << "N_BTSHFT=" << N_BTSHFT << std::endl;
    std::cout << "N_TMASK=" << N_TMASK << std::endl;
    std::cout << "N_TMASK1=" << N_TMASK1 << std::endl;
    std::cout << "N_TMASK2=" << N_TMASK2 << std::endl;
    std::cout << "N_TSHIFT=" << N_TSHIFT << std::endl;
    std::cout << "OBJECT_INHERIT_ACE=" << OBJECT_INHERIT_ACE << std::endl;
    std::cout << "OBJ_BITMAP=" << OBJ_BITMAP << std::endl;
    std::cout << "OBJ_BRUSH=" << OBJ_BRUSH << std::endl;
    std::cout << "OBJ_COLORSPACE=" << OBJ_COLORSPACE << std::endl;
    std::cout << "OBJ_DC=" << OBJ_DC << std::endl;
    std::cout << "OBJ_ENHMETADC=" << OBJ_ENHMETADC << std::endl;
    std::cout << "OBJ_ENHMETAFILE=" << OBJ_ENHMETAFILE << std::endl;
    std::cout << "OBJ_EXTPEN=" << OBJ_EXTPEN << std::endl;
    std::cout << "OBJ_FONT=" << OBJ_FONT << std::endl;
    std::cout << "OBJ_MEMDC=" << OBJ_MEMDC << std::endl;
    std::cout << "OBJ_METADC=" << OBJ_METADC << std::endl;
    std::cout << "OBJ_METAFILE=" << OBJ_METAFILE << std::endl;
    std::cout << "OBJ_PAL=" << OBJ_PAL << std::endl;
    std::cout << "OBJ_PEN=" << OBJ_PEN << std::endl;
    std::cout << "OBJ_REGION=" << OBJ_REGION << std::endl;
    std::cout << "OBM_BTNCORNERS=" << OBM_BTNCORNERS << std::endl;
    std::cout << "OBM_BTSIZE=" << OBM_BTSIZE << std::endl;
    std::cout << "OBM_CHECK=" << OBM_CHECK << std::endl;
    std::cout << "OBM_CHECKBOXES=" << OBM_CHECKBOXES << std::endl;
    std::cout << "OBM_CLOSE=" << OBM_CLOSE << std::endl;
    std::cout << "OBM_COMBO=" << OBM_COMBO << std::endl;
    std::cout << "OBM_DNARROW=" << OBM_DNARROW << std::endl;
    std::cout << "OBM_DNARROWD=" << OBM_DNARROWD << std::endl;
    std::cout << "OBM_DNARROWI=" << OBM_DNARROWI << std::endl;
    std::cout << "OBM_LFARROW=" << OBM_LFARROW << std::endl;
    std::cout << "OBM_LFARROWD=" << OBM_LFARROWD << std::endl;
    std::cout << "OBM_LFARROWI=" << OBM_LFARROWI << std::endl;
    std::cout << "OBM_MNARROW=" << OBM_MNARROW << std::endl;
    std::cout << "OBM_OLD_CLOSE=" << OBM_OLD_CLOSE << std::endl;
    std::cout << "OBM_OLD_DNARROW=" << OBM_OLD_DNARROW << std::endl;
    std::cout << "OBM_OLD_LFARROW=" << OBM_OLD_LFARROW << std::endl;
    std::cout << "OBM_OLD_REDUCE=" << OBM_OLD_REDUCE << std::endl;
    std::cout << "OBM_OLD_RESTORE=" << OBM_OLD_RESTORE << std::endl;
    std::cout << "OBM_OLD_RGARROW=" << OBM_OLD_RGARROW << std::endl;
    std::cout << "OBM_OLD_UPARROW=" << OBM_OLD_UPARROW << std::endl;
    std::cout << "OBM_OLD_ZOOM=" << OBM_OLD_ZOOM << std::endl;
    std::cout << "OBM_REDUCE=" << OBM_REDUCE << std::endl;
    std::cout << "OBM_REDUCED=" << OBM_REDUCED << std::endl;
    std::cout << "OBM_RESTORE=" << OBM_RESTORE << std::endl;
    std::cout << "OBM_RESTORED=" << OBM_RESTORED << std::endl;
    std::cout << "OBM_RGARROW=" << OBM_RGARROW << std::endl;
    std::cout << "OBM_RGARROWD=" << OBM_RGARROWD << std::endl;
    std::cout << "OBM_RGARROWI=" << OBM_RGARROWI << std::endl;
    std::cout << "OBM_SIZE=" << OBM_SIZE << std::endl;
    std::cout << "OBM_UPARROW=" << OBM_UPARROW << std::endl;
    std::cout << "OBM_UPARROWD=" << OBM_UPARROWD << std::endl;
    std::cout << "OBM_UPARROWI=" << OBM_UPARROWI << std::endl;
    std::cout << "OBM_ZOOM=" << OBM_ZOOM << std::endl;
    std::cout << "OBM_ZOOMD=" << OBM_ZOOMD << std::endl;
    std::cout << "OCR_APPSTARTING=" << OCR_APPSTARTING << std::endl;
    std::cout << "OCR_CROSS=" << OCR_CROSS << std::endl;
    std::cout << "OCR_HAND=" << OCR_HAND << std::endl;
    std::cout << "OCR_IBEAM=" << OCR_IBEAM << std::endl;
    std::cout << "OCR_ICOCUR=" << OCR_ICOCUR << std::endl;
    std::cout << "OCR_ICON=" << OCR_ICON << std::endl;
    std::cout << "OCR_NO=" << OCR_NO << std::endl;
    std::cout << "OCR_NORMAL=" << OCR_NORMAL << std::endl;
    std::cout << "OCR_SIZE=" << OCR_SIZE << std::endl;
    std::cout << "OCR_SIZEALL=" << OCR_SIZEALL << std::endl;
    std::cout << "OCR_SIZENESW=" << OCR_SIZENESW << std::endl;
    std::cout << "OCR_SIZENS=" << OCR_SIZENS << std::endl;
    std::cout << "OCR_SIZENWSE=" << OCR_SIZENWSE << std::endl;
    std::cout << "OCR_SIZEWE=" << OCR_SIZEWE << std::endl;
    std::cout << "OCR_UP=" << OCR_UP << std::endl;
    std::cout << "OCR_WAIT=" << OCR_WAIT << std::endl;
    std::cout << "OCSP_BASIC_BY_KEY_RESPONDER_ID=" << OCSP_BASIC_BY_KEY_RESPONDER_ID << std::endl;
    std::cout << "OCSP_BASIC_BY_NAME_RESPONDER_ID=" << OCSP_BASIC_BY_NAME_RESPONDER_ID << std::endl;
    std::cout << "OCSP_BASIC_GOOD_CERT_STATUS=" << OCSP_BASIC_GOOD_CERT_STATUS << std::endl;
    std::cout << "OCSP_BASIC_RESPONSE=" << OCSP_BASIC_RESPONSE << std::endl;
    std::cout << "OCSP_BASIC_RESPONSE_V1=" << OCSP_BASIC_RESPONSE_V1 << std::endl;
    std::cout << "OCSP_BASIC_REVOKED_CERT_STATUS=" << OCSP_BASIC_REVOKED_CERT_STATUS << std::endl;
    std::cout << "OCSP_BASIC_SIGNED_RESPONSE=" << OCSP_BASIC_SIGNED_RESPONSE << std::endl;
    std::cout << "OCSP_BASIC_UNKNOWN_CERT_STATUS=" << OCSP_BASIC_UNKNOWN_CERT_STATUS << std::endl;
    std::cout << "OCSP_INTERNAL_ERROR_RESPONSE=" << OCSP_INTERNAL_ERROR_RESPONSE << std::endl;
    std::cout << "OCSP_MALFORMED_REQUEST_RESPONSE=" << OCSP_MALFORMED_REQUEST_RESPONSE << std::endl;
    std::cout << "OCSP_REQUEST=" << OCSP_REQUEST << std::endl;
    std::cout << "OCSP_REQUEST_V1=" << OCSP_REQUEST_V1 << std::endl;
    std::cout << "OCSP_RESPONSE=" << OCSP_RESPONSE << std::endl;
    std::cout << "OCSP_SIGNED_REQUEST=" << OCSP_SIGNED_REQUEST << std::endl;
    std::cout << "OCSP_SIG_REQUIRED_RESPONSE=" << OCSP_SIG_REQUIRED_RESPONSE << std::endl;
    std::cout << "OCSP_SUCCESSFUL_RESPONSE=" << OCSP_SUCCESSFUL_RESPONSE << std::endl;
    std::cout << "OCSP_TRY_LATER_RESPONSE=" << OCSP_TRY_LATER_RESPONSE << std::endl;
    std::cout << "OCSP_UNAUTHORIZED_RESPONSE=" << OCSP_UNAUTHORIZED_RESPONSE << std::endl;
    std::cout << "ODA_DRAWENTIRE=" << ODA_DRAWENTIRE << std::endl;
    std::cout << "ODA_FOCUS=" << ODA_FOCUS << std::endl;
    std::cout << "ODA_SELECT=" << ODA_SELECT << std::endl;
    std::cout << "ODDPARITY=" << ODDPARITY << std::endl;
    std::cout << "ODS_CHECKED=" << ODS_CHECKED << std::endl;
    std::cout << "ODS_COMBOBOXEDIT=" << ODS_COMBOBOXEDIT << std::endl;
    std::cout << "ODS_DEFAULT=" << ODS_DEFAULT << std::endl;
    std::cout << "ODS_DISABLED=" << ODS_DISABLED << std::endl;
    std::cout << "ODS_FOCUS=" << ODS_FOCUS << std::endl;
    std::cout << "ODS_GRAYED=" << ODS_GRAYED << std::endl;
    std::cout << "ODS_HOTLIGHT=" << ODS_HOTLIGHT << std::endl;
    std::cout << "ODS_INACTIVE=" << ODS_INACTIVE << std::endl;
    std::cout << "ODS_NOACCEL=" << ODS_NOACCEL << std::endl;
    std::cout << "ODS_NOFOCUSRECT=" << ODS_NOFOCUSRECT << std::endl;
    std::cout << "ODS_SELECTED=" << ODS_SELECTED << std::endl;
    std::cout << "ODT_BUTTON=" << ODT_BUTTON << std::endl;
    std::cout << "ODT_COMBOBOX=" << ODT_COMBOBOX << std::endl;
    std::cout << "ODT_LISTBOX=" << ODT_LISTBOX << std::endl;
    std::cout << "ODT_MENU=" << ODT_MENU << std::endl;
    std::cout << "ODT_STATIC=" << ODT_STATIC << std::endl;
    std::cout << "OEM_CHARSET=" << OEM_CHARSET << std::endl;
    std::cout << "OEM_FIXED_FONT=" << OEM_FIXED_FONT << std::endl;
    std::cout << "OFFLINE_STATUS_INCOMPLETE=" << OFFLINE_STATUS_INCOMPLETE << std::endl;
    std::cout << "OFFLINE_STATUS_LOCAL=" << OFFLINE_STATUS_LOCAL << std::endl;
    std::cout << "OFFLINE_STATUS_REMOTE=" << OFFLINE_STATUS_REMOTE << std::endl;
    std::cout << "OFN_ALLOWMULTISELECT=" << OFN_ALLOWMULTISELECT << std::endl;
    std::cout << "OFN_CREATEPROMPT=" << OFN_CREATEPROMPT << std::endl;
    std::cout << "OFN_DONTADDTORECENT=" << OFN_DONTADDTORECENT << std::endl;
    std::cout << "OFN_ENABLEHOOK=" << OFN_ENABLEHOOK << std::endl;
    std::cout << "OFN_ENABLEINCLUDENOTIFY=" << OFN_ENABLEINCLUDENOTIFY << std::endl;
    std::cout << "OFN_ENABLESIZING=" << OFN_ENABLESIZING << std::endl;
    std::cout << "OFN_ENABLETEMPLATE=" << OFN_ENABLETEMPLATE << std::endl;
    std::cout << "OFN_ENABLETEMPLATEHANDLE=" << OFN_ENABLETEMPLATEHANDLE << std::endl;
    std::cout << "OFN_EXPLORER=" << OFN_EXPLORER << std::endl;
    std::cout << "OFN_EXTENSIONDIFFERENT=" << OFN_EXTENSIONDIFFERENT << std::endl;
    std::cout << "OFN_EX_NOPLACESBAR=" << OFN_EX_NOPLACESBAR << std::endl;
    std::cout << "OFN_FILEMUSTEXIST=" << OFN_FILEMUSTEXIST << std::endl;
    std::cout << "OFN_FORCESHOWHIDDEN=" << OFN_FORCESHOWHIDDEN << std::endl;
    std::cout << "OFN_HIDEREADONLY=" << OFN_HIDEREADONLY << std::endl;
    std::cout << "OFN_LONGNAMES=" << OFN_LONGNAMES << std::endl;
    std::cout << "OFN_NOCHANGEDIR=" << OFN_NOCHANGEDIR << std::endl;
    std::cout << "OFN_NODEREFERENCELINKS=" << OFN_NODEREFERENCELINKS << std::endl;
    std::cout << "OFN_NOLONGNAMES=" << OFN_NOLONGNAMES << std::endl;
    std::cout << "OFN_NONETWORKBUTTON=" << OFN_NONETWORKBUTTON << std::endl;
    std::cout << "OFN_NOREADONLYRETURN=" << OFN_NOREADONLYRETURN << std::endl;
    std::cout << "OFN_NOTESTFILECREATE=" << OFN_NOTESTFILECREATE << std::endl;
    std::cout << "OFN_NOVALIDATE=" << OFN_NOVALIDATE << std::endl;
    std::cout << "OFN_OVERWRITEPROMPT=" << OFN_OVERWRITEPROMPT << std::endl;
    std::cout << "OFN_PATHMUSTEXIST=" << OFN_PATHMUSTEXIST << std::endl;
    std::cout << "OFN_READONLY=" << OFN_READONLY << std::endl;
    std::cout << "OFN_SHAREAWARE=" << OFN_SHAREAWARE << std::endl;
    std::cout << "OFN_SHAREFALLTHROUGH=" << OFN_SHAREFALLTHROUGH << std::endl;
    std::cout << "OFN_SHARENOWARN=" << OFN_SHARENOWARN << std::endl;
    std::cout << "OFN_SHAREWARN=" << OFN_SHAREWARN << std::endl;
    std::cout << "OFN_SHOWHELP=" << OFN_SHOWHELP << std::endl;
    std::cout << "OFS_MAXPATHNAME=" << OFS_MAXPATHNAME << std::endl;
    std::cout << "OF_CANCEL=" << OF_CANCEL << std::endl;
    std::cout << "OF_CREATE=" << OF_CREATE << std::endl;
    std::cout << "OF_DELETE=" << OF_DELETE << std::endl;
    std::cout << "OF_EXIST=" << OF_EXIST << std::endl;
    std::cout << "OF_GET=" << OF_GET << std::endl;
    std::cout << "OF_HANDLER=" << OF_HANDLER << std::endl;
    std::cout << "OF_PARSE=" << OF_PARSE << std::endl;
    std::cout << "OF_PROMPT=" << OF_PROMPT << std::endl;
    std::cout << "OF_READ=" << OF_READ << std::endl;
    std::cout << "OF_READWRITE=" << OF_READWRITE << std::endl;
    std::cout << "OF_REOPEN=" << OF_REOPEN << std::endl;
    std::cout << "OF_SET=" << OF_SET << std::endl;
    std::cout << "OF_SHARE_COMPAT=" << OF_SHARE_COMPAT << std::endl;
    std::cout << "OF_SHARE_DENY_NONE=" << OF_SHARE_DENY_NONE << std::endl;
    std::cout << "OF_SHARE_DENY_READ=" << OF_SHARE_DENY_READ << std::endl;
    std::cout << "OF_SHARE_DENY_WRITE=" << OF_SHARE_DENY_WRITE << std::endl;
    std::cout << "OF_SHARE_EXCLUSIVE=" << OF_SHARE_EXCLUSIVE << std::endl;
    std::cout << "OF_VERIFY=" << OF_VERIFY << std::endl;
    std::cout << "OF_WRITE=" << OF_WRITE << std::endl;
    std::cout << "OIC_BANG=" << OIC_BANG << std::endl;
    std::cout << "OIC_ERROR=" << OIC_ERROR << std::endl;
    std::cout << "OIC_HAND=" << OIC_HAND << std::endl;
    std::cout << "OIC_INFORMATION=" << OIC_INFORMATION << std::endl;
    std::cout << "OIC_NOTE=" << OIC_NOTE << std::endl;
    std::cout << "OIC_QUES=" << OIC_QUES << std::endl;
    std::cout << "OIC_SAMPLE=" << OIC_SAMPLE << std::endl;
    std::cout << "OIC_SHIELD=" << OIC_SHIELD << std::endl;
    std::cout << "OIC_WARNING=" << OIC_WARNING << std::endl;
    std::cout << "OIC_WINLOGO=" << OIC_WINLOGO << std::endl;
    std::cout << "OLECREATE_LEAVERUNNING=" << OLECREATE_LEAVERUNNING << std::endl;
    std::cout << "OLEVERB_PRIMARY=" << OLEVERB_PRIMARY << std::endl;
    std::cout << "OLE_LPCSTR=" << OLE_LPCSTR << std::endl;
    std::cout << "ONE5STOPBITS=" << ONE5STOPBITS << std::endl;
    std::cout << "ONESTOPBIT=" << ONESTOPBIT << std::endl;
    std::cout << "OPAQUE=" << OPAQUE << std::endl;
    std::cout << "OPAQUEKEYBLOB=" << OPAQUEKEYBLOB << std::endl;
    std::cout << "OPENCHANNEL=" << OPENCHANNEL << std::endl;
    std::cout << "OPEN_ALWAYS=" << OPEN_ALWAYS << std::endl;
    std::cout << "OPEN_EXISTING=" << OPEN_EXISTING << std::endl;
    std::cout << "OPEN_MAX=" << OPEN_MAX << std::endl;
    std::cout << "OPERATION_API_VERSION=" << OPERATION_API_VERSION << std::endl;
    std::cout << "OPERATION_END_DISCARD=" << OPERATION_END_DISCARD << std::endl;
    std::cout << "OPERATION_START_TRACE_CURRENT_THREAD=" << OPERATION_START_TRACE_CURRENT_THREAD << std::endl;
    std::cout << "ORD_LANGDRIVER=" << ORD_LANGDRIVER << std::endl;
    std::cout << "OUTPUT_DEBUG_STRING_EVENT=" << OUTPUT_DEBUG_STRING_EVENT << std::endl;
    std::cout << "OUT_CHARACTER_PRECIS=" << OUT_CHARACTER_PRECIS << std::endl;
    std::cout << "OUT_DEFAULT_PRECIS=" << OUT_DEFAULT_PRECIS << std::endl;
    std::cout << "OUT_DEVICE_PRECIS=" << OUT_DEVICE_PRECIS << std::endl;
    std::cout << "OUT_OUTLINE_PRECIS=" << OUT_OUTLINE_PRECIS << std::endl;
    std::cout << "OUT_PS_ONLY_PRECIS=" << OUT_PS_ONLY_PRECIS << std::endl;
    std::cout << "OUT_RASTER_PRECIS=" << OUT_RASTER_PRECIS << std::endl;
    std::cout << "OUT_SCREEN_OUTLINE_PRECIS=" << OUT_SCREEN_OUTLINE_PRECIS << std::endl;
    std::cout << "OUT_STRING_PRECIS=" << OUT_STRING_PRECIS << std::endl;
    std::cout << "OUT_STROKE_PRECIS=" << OUT_STROKE_PRECIS << std::endl;
    std::cout << "OUT_TT_ONLY_PRECIS=" << OUT_TT_ONLY_PRECIS << std::endl;
    std::cout << "OUT_TT_PRECIS=" << OUT_TT_PRECIS << std::endl;
    std::cout << "OVERWRITE_HIDDEN=" << OVERWRITE_HIDDEN << std::endl;
    std::cout << "PAGESETUPDLGORD=" << PAGESETUPDLGORD << std::endl;
    std::cout << "PAGESETUPDLGORDMOTIF=" << PAGESETUPDLGORDMOTIF << std::endl;
    std::cout << "PAGE_ENCLAVE_DECOMMIT=" << PAGE_ENCLAVE_DECOMMIT << std::endl;
    std::cout << "PAGE_ENCLAVE_THREAD_CONTROL=" << PAGE_ENCLAVE_THREAD_CONTROL << std::endl;
    std::cout << "PAGE_ENCLAVE_UNVALIDATED=" << PAGE_ENCLAVE_UNVALIDATED << std::endl;
    std::cout << "PAGE_EXECUTE=" << PAGE_EXECUTE << std::endl;
    std::cout << "PAGE_EXECUTE_READ=" << PAGE_EXECUTE_READ << std::endl;
    std::cout << "PAGE_EXECUTE_READWRITE=" << PAGE_EXECUTE_READWRITE << std::endl;
    std::cout << "PAGE_EXECUTE_WRITECOPY=" << PAGE_EXECUTE_WRITECOPY << std::endl;
    std::cout << "PAGE_GRAPHICS_COHERENT=" << PAGE_GRAPHICS_COHERENT << std::endl;
    std::cout << "PAGE_GRAPHICS_EXECUTE=" << PAGE_GRAPHICS_EXECUTE << std::endl;
    std::cout << "PAGE_GRAPHICS_EXECUTE_READ=" << PAGE_GRAPHICS_EXECUTE_READ << std::endl;
    std::cout << "PAGE_GRAPHICS_EXECUTE_READWRITE=" << PAGE_GRAPHICS_EXECUTE_READWRITE << std::endl;
    std::cout << "PAGE_GRAPHICS_NOACCESS=" << PAGE_GRAPHICS_NOACCESS << std::endl;
    std::cout << "PAGE_GRAPHICS_READONLY=" << PAGE_GRAPHICS_READONLY << std::endl;
    std::cout << "PAGE_GRAPHICS_READWRITE=" << PAGE_GRAPHICS_READWRITE << std::endl;
    std::cout << "PAGE_GUARD=" << PAGE_GUARD << std::endl;
    std::cout << "PAGE_NOACCESS=" << PAGE_NOACCESS << std::endl;
    std::cout << "PAGE_NOCACHE=" << PAGE_NOCACHE << std::endl;
    std::cout << "PAGE_READONLY=" << PAGE_READONLY << std::endl;
    std::cout << "PAGE_READWRITE=" << PAGE_READWRITE << std::endl;
    std::cout << "PAGE_REVERT_TO_FILE_MAP=" << PAGE_REVERT_TO_FILE_MAP << std::endl;
    std::cout << "PAGE_TARGETS_INVALID=" << PAGE_TARGETS_INVALID << std::endl;
    std::cout << "PAGE_TARGETS_NO_UPDATE=" << PAGE_TARGETS_NO_UPDATE << std::endl;
    std::cout << "PAGE_WRITECOMBINE=" << PAGE_WRITECOMBINE << std::endl;
    std::cout << "PAGE_WRITECOPY=" << PAGE_WRITECOPY << std::endl;
    std::cout << "PANOSE_COUNT=" << PANOSE_COUNT << std::endl;
    std::cout << "PAN_ANY=" << PAN_ANY << std::endl;
    std::cout << "PAN_ARMSTYLE_INDEX=" << PAN_ARMSTYLE_INDEX << std::endl;
    std::cout << "PAN_BENT_ARMS_DOUBLE_SERIF=" << PAN_BENT_ARMS_DOUBLE_SERIF << std::endl;
    std::cout << "PAN_BENT_ARMS_HORZ=" << PAN_BENT_ARMS_HORZ << std::endl;
    std::cout << "PAN_BENT_ARMS_SINGLE_SERIF=" << PAN_BENT_ARMS_SINGLE_SERIF << std::endl;
    std::cout << "PAN_BENT_ARMS_VERT=" << PAN_BENT_ARMS_VERT << std::endl;
    std::cout << "PAN_BENT_ARMS_WEDGE=" << PAN_BENT_ARMS_WEDGE << std::endl;
    std::cout << "PAN_CONTRAST_HIGH=" << PAN_CONTRAST_HIGH << std::endl;
    std::cout << "PAN_CONTRAST_INDEX=" << PAN_CONTRAST_INDEX << std::endl;
    std::cout << "PAN_CONTRAST_LOW=" << PAN_CONTRAST_LOW << std::endl;
    std::cout << "PAN_CONTRAST_MEDIUM=" << PAN_CONTRAST_MEDIUM << std::endl;
    std::cout << "PAN_CONTRAST_MEDIUM_HIGH=" << PAN_CONTRAST_MEDIUM_HIGH << std::endl;
    std::cout << "PAN_CONTRAST_MEDIUM_LOW=" << PAN_CONTRAST_MEDIUM_LOW << std::endl;
    std::cout << "PAN_CONTRAST_NONE=" << PAN_CONTRAST_NONE << std::endl;
    std::cout << "PAN_CONTRAST_VERY_HIGH=" << PAN_CONTRAST_VERY_HIGH << std::endl;
    std::cout << "PAN_CONTRAST_VERY_LOW=" << PAN_CONTRAST_VERY_LOW << std::endl;
    std::cout << "PAN_CULTURE_LATIN=" << PAN_CULTURE_LATIN << std::endl;
    std::cout << "PAN_FAMILYTYPE_INDEX=" << PAN_FAMILYTYPE_INDEX << std::endl;
    std::cout << "PAN_FAMILY_DECORATIVE=" << PAN_FAMILY_DECORATIVE << std::endl;
    std::cout << "PAN_FAMILY_PICTORIAL=" << PAN_FAMILY_PICTORIAL << std::endl;
    std::cout << "PAN_FAMILY_SCRIPT=" << PAN_FAMILY_SCRIPT << std::endl;
    std::cout << "PAN_FAMILY_TEXT_DISPLAY=" << PAN_FAMILY_TEXT_DISPLAY << std::endl;
    std::cout << "PAN_LETTERFORM_INDEX=" << PAN_LETTERFORM_INDEX << std::endl;
    std::cout << "PAN_LETT_NORMAL_BOXED=" << PAN_LETT_NORMAL_BOXED << std::endl;
    std::cout << "PAN_LETT_NORMAL_CONTACT=" << PAN_LETT_NORMAL_CONTACT << std::endl;
    std::cout << "PAN_LETT_NORMAL_FLATTENED=" << PAN_LETT_NORMAL_FLATTENED << std::endl;
    std::cout << "PAN_LETT_NORMAL_OFF_CENTER=" << PAN_LETT_NORMAL_OFF_CENTER << std::endl;
    std::cout << "PAN_LETT_NORMAL_ROUNDED=" << PAN_LETT_NORMAL_ROUNDED << std::endl;
    std::cout << "PAN_LETT_NORMAL_SQUARE=" << PAN_LETT_NORMAL_SQUARE << std::endl;
    std::cout << "PAN_LETT_NORMAL_WEIGHTED=" << PAN_LETT_NORMAL_WEIGHTED << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_BOXED=" << PAN_LETT_OBLIQUE_BOXED << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_CONTACT=" << PAN_LETT_OBLIQUE_CONTACT << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_FLATTENED=" << PAN_LETT_OBLIQUE_FLATTENED << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_OFF_CENTER=" << PAN_LETT_OBLIQUE_OFF_CENTER << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_ROUNDED=" << PAN_LETT_OBLIQUE_ROUNDED << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_SQUARE=" << PAN_LETT_OBLIQUE_SQUARE << std::endl;
    std::cout << "PAN_LETT_OBLIQUE_WEIGHTED=" << PAN_LETT_OBLIQUE_WEIGHTED << std::endl;
    std::cout << "PAN_MIDLINE_CONSTANT_POINTED=" << PAN_MIDLINE_CONSTANT_POINTED << std::endl;
    std::cout << "PAN_MIDLINE_CONSTANT_SERIFED=" << PAN_MIDLINE_CONSTANT_SERIFED << std::endl;
    std::cout << "PAN_MIDLINE_CONSTANT_TRIMMED=" << PAN_MIDLINE_CONSTANT_TRIMMED << std::endl;
    std::cout << "PAN_MIDLINE_HIGH_POINTED=" << PAN_MIDLINE_HIGH_POINTED << std::endl;
    std::cout << "PAN_MIDLINE_HIGH_SERIFED=" << PAN_MIDLINE_HIGH_SERIFED << std::endl;
    std::cout << "PAN_MIDLINE_HIGH_TRIMMED=" << PAN_MIDLINE_HIGH_TRIMMED << std::endl;
    std::cout << "PAN_MIDLINE_INDEX=" << PAN_MIDLINE_INDEX << std::endl;
    std::cout << "PAN_MIDLINE_LOW_POINTED=" << PAN_MIDLINE_LOW_POINTED << std::endl;
    std::cout << "PAN_MIDLINE_LOW_SERIFED=" << PAN_MIDLINE_LOW_SERIFED << std::endl;
    std::cout << "PAN_MIDLINE_LOW_TRIMMED=" << PAN_MIDLINE_LOW_TRIMMED << std::endl;
    std::cout << "PAN_MIDLINE_STANDARD_POINTED=" << PAN_MIDLINE_STANDARD_POINTED << std::endl;
    std::cout << "PAN_MIDLINE_STANDARD_SERIFED=" << PAN_MIDLINE_STANDARD_SERIFED << std::endl;
    std::cout << "PAN_MIDLINE_STANDARD_TRIMMED=" << PAN_MIDLINE_STANDARD_TRIMMED << std::endl;
    std::cout << "PAN_NO_FIT=" << PAN_NO_FIT << std::endl;
    std::cout << "PAN_PROPORTION_INDEX=" << PAN_PROPORTION_INDEX << std::endl;
    std::cout << "PAN_PROP_CONDENSED=" << PAN_PROP_CONDENSED << std::endl;
    std::cout << "PAN_PROP_EVEN_WIDTH=" << PAN_PROP_EVEN_WIDTH << std::endl;
    std::cout << "PAN_PROP_EXPANDED=" << PAN_PROP_EXPANDED << std::endl;
    std::cout << "PAN_PROP_MODERN=" << PAN_PROP_MODERN << std::endl;
    std::cout << "PAN_PROP_MONOSPACED=" << PAN_PROP_MONOSPACED << std::endl;
    std::cout << "PAN_PROP_OLD_STYLE=" << PAN_PROP_OLD_STYLE << std::endl;
    std::cout << "PAN_PROP_VERY_CONDENSED=" << PAN_PROP_VERY_CONDENSED << std::endl;
    std::cout << "PAN_PROP_VERY_EXPANDED=" << PAN_PROP_VERY_EXPANDED << std::endl;
    std::cout << "PAN_SERIFSTYLE_INDEX=" << PAN_SERIFSTYLE_INDEX << std::endl;
    std::cout << "PAN_SERIF_BONE=" << PAN_SERIF_BONE << std::endl;
    std::cout << "PAN_SERIF_COVE=" << PAN_SERIF_COVE << std::endl;
    std::cout << "PAN_SERIF_EXAGGERATED=" << PAN_SERIF_EXAGGERATED << std::endl;
    std::cout << "PAN_SERIF_FLARED=" << PAN_SERIF_FLARED << std::endl;
    std::cout << "PAN_SERIF_NORMAL_SANS=" << PAN_SERIF_NORMAL_SANS << std::endl;
    std::cout << "PAN_SERIF_OBTUSE_COVE=" << PAN_SERIF_OBTUSE_COVE << std::endl;
    std::cout << "PAN_SERIF_OBTUSE_SANS=" << PAN_SERIF_OBTUSE_SANS << std::endl;
    std::cout << "PAN_SERIF_OBTUSE_SQUARE_COVE=" << PAN_SERIF_OBTUSE_SQUARE_COVE << std::endl;
    std::cout << "PAN_SERIF_PERP_SANS=" << PAN_SERIF_PERP_SANS << std::endl;
    std::cout << "PAN_SERIF_ROUNDED=" << PAN_SERIF_ROUNDED << std::endl;
    std::cout << "PAN_SERIF_SQUARE=" << PAN_SERIF_SQUARE << std::endl;
    std::cout << "PAN_SERIF_SQUARE_COVE=" << PAN_SERIF_SQUARE_COVE << std::endl;
    std::cout << "PAN_SERIF_THIN=" << PAN_SERIF_THIN << std::endl;
    std::cout << "PAN_SERIF_TRIANGLE=" << PAN_SERIF_TRIANGLE << std::endl;
    std::cout << "PAN_STRAIGHT_ARMS_DOUBLE_SERIF=" << PAN_STRAIGHT_ARMS_DOUBLE_SERIF << std::endl;
    std::cout << "PAN_STRAIGHT_ARMS_HORZ=" << PAN_STRAIGHT_ARMS_HORZ << std::endl;
    std::cout << "PAN_STRAIGHT_ARMS_SINGLE_SERIF=" << PAN_STRAIGHT_ARMS_SINGLE_SERIF << std::endl;
    std::cout << "PAN_STRAIGHT_ARMS_VERT=" << PAN_STRAIGHT_ARMS_VERT << std::endl;
    std::cout << "PAN_STRAIGHT_ARMS_WEDGE=" << PAN_STRAIGHT_ARMS_WEDGE << std::endl;
    std::cout << "PAN_STROKEVARIATION_INDEX=" << PAN_STROKEVARIATION_INDEX << std::endl;
    std::cout << "PAN_STROKE_GRADUAL_DIAG=" << PAN_STROKE_GRADUAL_DIAG << std::endl;
    std::cout << "PAN_STROKE_GRADUAL_HORZ=" << PAN_STROKE_GRADUAL_HORZ << std::endl;
    std::cout << "PAN_STROKE_GRADUAL_TRAN=" << PAN_STROKE_GRADUAL_TRAN << std::endl;
    std::cout << "PAN_STROKE_GRADUAL_VERT=" << PAN_STROKE_GRADUAL_VERT << std::endl;
    std::cout << "PAN_STROKE_INSTANT_VERT=" << PAN_STROKE_INSTANT_VERT << std::endl;
    std::cout << "PAN_STROKE_RAPID_HORZ=" << PAN_STROKE_RAPID_HORZ << std::endl;
    std::cout << "PAN_STROKE_RAPID_VERT=" << PAN_STROKE_RAPID_VERT << std::endl;
    std::cout << "PAN_WEIGHT_BLACK=" << PAN_WEIGHT_BLACK << std::endl;
    std::cout << "PAN_WEIGHT_BOLD=" << PAN_WEIGHT_BOLD << std::endl;
    std::cout << "PAN_WEIGHT_BOOK=" << PAN_WEIGHT_BOOK << std::endl;
    std::cout << "PAN_WEIGHT_DEMI=" << PAN_WEIGHT_DEMI << std::endl;
    std::cout << "PAN_WEIGHT_HEAVY=" << PAN_WEIGHT_HEAVY << std::endl;
    std::cout << "PAN_WEIGHT_INDEX=" << PAN_WEIGHT_INDEX << std::endl;
    std::cout << "PAN_WEIGHT_LIGHT=" << PAN_WEIGHT_LIGHT << std::endl;
    std::cout << "PAN_WEIGHT_MEDIUM=" << PAN_WEIGHT_MEDIUM << std::endl;
    std::cout << "PAN_WEIGHT_NORD=" << PAN_WEIGHT_NORD << std::endl;
    std::cout << "PAN_WEIGHT_THIN=" << PAN_WEIGHT_THIN << std::endl;
    std::cout << "PAN_WEIGHT_VERY_LIGHT=" << PAN_WEIGHT_VERY_LIGHT << std::endl;
    std::cout << "PAN_XHEIGHT_CONSTANT_LARGE=" << PAN_XHEIGHT_CONSTANT_LARGE << std::endl;
    std::cout << "PAN_XHEIGHT_CONSTANT_SMALL=" << PAN_XHEIGHT_CONSTANT_SMALL << std::endl;
    std::cout << "PAN_XHEIGHT_CONSTANT_STD=" << PAN_XHEIGHT_CONSTANT_STD << std::endl;
    std::cout << "PAN_XHEIGHT_DUCKING_LARGE=" << PAN_XHEIGHT_DUCKING_LARGE << std::endl;
    std::cout << "PAN_XHEIGHT_DUCKING_SMALL=" << PAN_XHEIGHT_DUCKING_SMALL << std::endl;
    std::cout << "PAN_XHEIGHT_DUCKING_STD=" << PAN_XHEIGHT_DUCKING_STD << std::endl;
    std::cout << "PAN_XHEIGHT_INDEX=" << PAN_XHEIGHT_INDEX << std::endl;
    std::cout << "PARAMFLAG_FHASCUSTDATA=" << PARAMFLAG_FHASCUSTDATA << std::endl;
    std::cout << "PARAMFLAG_FHASDEFAULT=" << PARAMFLAG_FHASDEFAULT << std::endl;
    std::cout << "PARAMFLAG_FIN=" << PARAMFLAG_FIN << std::endl;
    std::cout << "PARAMFLAG_FLCID=" << PARAMFLAG_FLCID << std::endl;
    std::cout << "PARAMFLAG_FOPT=" << PARAMFLAG_FOPT << std::endl;
    std::cout << "PARAMFLAG_FOUT=" << PARAMFLAG_FOUT << std::endl;
    std::cout << "PARAMFLAG_FRETVAL=" << PARAMFLAG_FRETVAL << std::endl;
    std::cout << "PARAMFLAG_NONE=" << PARAMFLAG_NONE << std::endl;
    std::cout << "PARTITION_ENTRY_UNUSED=" << PARTITION_ENTRY_UNUSED << std::endl;
    std::cout << "PARTITION_EXTENDED=" << PARTITION_EXTENDED << std::endl;
    std::cout << "PARTITION_FAT32=" << PARTITION_FAT32 << std::endl;
    std::cout << "PARTITION_FAT32_XINT13=" << PARTITION_FAT32_XINT13 << std::endl;
    std::cout << "PARTITION_FAT_12=" << PARTITION_FAT_12 << std::endl;
    std::cout << "PARTITION_FAT_16=" << PARTITION_FAT_16 << std::endl;
    std::cout << "PARTITION_HUGE=" << PARTITION_HUGE << std::endl;
    std::cout << "PARTITION_IFS=" << PARTITION_IFS << std::endl;
    std::cout << "PARTITION_LDM=" << PARTITION_LDM << std::endl;
    std::cout << "PARTITION_NTFT=" << PARTITION_NTFT << std::endl;
    std::cout << "PARTITION_OS2BOOTMGR=" << PARTITION_OS2BOOTMGR << std::endl;
    std::cout << "PARTITION_PREP=" << PARTITION_PREP << std::endl;
    std::cout << "PARTITION_UNIX=" << PARTITION_UNIX << std::endl;
    std::cout << "PARTITION_XENIX_1=" << PARTITION_XENIX_1 << std::endl;
    std::cout << "PARTITION_XENIX_2=" << PARTITION_XENIX_2 << std::endl;
    std::cout << "PARTITION_XINT13=" << PARTITION_XINT13 << std::endl;
    std::cout << "PARTITION_XINT13_EXTENDED=" << PARTITION_XINT13_EXTENDED << std::endl;
    std::cout << "PASSTHROUGH=" << PASSTHROUGH << std::endl;
    std::cout << "PATH_MAX=" << PATH_MAX << std::endl;
    std::cout << "PA_ACTIVATE=" << PA_ACTIVATE << std::endl;
    std::cout << "PA_NOACTIVATE=" << PA_NOACTIVATE << std::endl;
    std::cout << "PBS_MARQUEE=" << PBS_MARQUEE << std::endl;
    std::cout << "PBS_SMOOTH=" << PBS_SMOOTH << std::endl;
    std::cout << "PBS_SMOOTHREVERSE=" << PBS_SMOOTHREVERSE << std::endl;
    std::cout << "PBS_VERTICAL=" << PBS_VERTICAL << std::endl;
    std::cout << "PBTF_APMRESUMEFROMFAILURE=" << PBTF_APMRESUMEFROMFAILURE << std::endl;
    std::cout << "PBT_APMBATTERYLOW=" << PBT_APMBATTERYLOW << std::endl;
    std::cout << "PBT_APMOEMEVENT=" << PBT_APMOEMEVENT << std::endl;
    std::cout << "PBT_APMPOWERSTATUSCHANGE=" << PBT_APMPOWERSTATUSCHANGE << std::endl;
    std::cout << "PBT_APMQUERYSTANDBY=" << PBT_APMQUERYSTANDBY << std::endl;
    std::cout << "PBT_APMQUERYSTANDBYFAILED=" << PBT_APMQUERYSTANDBYFAILED << std::endl;
    std::cout << "PBT_APMQUERYSUSPEND=" << PBT_APMQUERYSUSPEND << std::endl;
    std::cout << "PBT_APMQUERYSUSPENDFAILED=" << PBT_APMQUERYSUSPENDFAILED << std::endl;
    std::cout << "PBT_APMRESUMEAUTOMATIC=" << PBT_APMRESUMEAUTOMATIC << std::endl;
    std::cout << "PBT_APMRESUMECRITICAL=" << PBT_APMRESUMECRITICAL << std::endl;
    std::cout << "PBT_APMRESUMESTANDBY=" << PBT_APMRESUMESTANDBY << std::endl;
    std::cout << "PBT_APMRESUMESUSPEND=" << PBT_APMRESUMESUSPEND << std::endl;
    std::cout << "PBT_APMSTANDBY=" << PBT_APMSTANDBY << std::endl;
    std::cout << "PBT_APMSUSPEND=" << PBT_APMSUSPEND << std::endl;
    std::cout << "PBT_POWERSETTINGCHANGE=" << PBT_POWERSETTINGCHANGE << std::endl;
    std::cout << "PCLEANUI=" << PCLEANUI << std::endl;
    std::cout << "PC_EXPLICIT=" << PC_EXPLICIT << std::endl;
    std::cout << "PC_INTERIORS=" << PC_INTERIORS << std::endl;
    std::cout << "PC_NOCOLLAPSE=" << PC_NOCOLLAPSE << std::endl;
    std::cout << "PC_NONE=" << PC_NONE << std::endl;
    std::cout << "PC_PATHS=" << PC_PATHS << std::endl;
    std::cout << "PC_POLYGON=" << PC_POLYGON << std::endl;
    std::cout << "PC_POLYPOLYGON=" << PC_POLYPOLYGON << std::endl;
    std::cout << "PC_RECTANGLE=" << PC_RECTANGLE << std::endl;
    std::cout << "PC_RESERVED=" << PC_RESERVED << std::endl;
    std::cout << "PC_SCANLINE=" << PC_SCANLINE << std::endl;
    std::cout << "PC_STYLED=" << PC_STYLED << std::endl;
    std::cout << "PC_TRAPEZOID=" << PC_TRAPEZOID << std::endl;
    std::cout << "PC_WIDE=" << PC_WIDE << std::endl;
    std::cout << "PC_WIDESTYLED=" << PC_WIDESTYLED << std::endl;
    std::cout << "PC_WINDPOLYGON=" << PC_WINDPOLYGON << std::endl;
    std::cout << "PDCAP_D0_SUPPORTED=" << PDCAP_D0_SUPPORTED << std::endl;
    std::cout << "PDCAP_D1_SUPPORTED=" << PDCAP_D1_SUPPORTED << std::endl;
    std::cout << "PDCAP_D2_SUPPORTED=" << PDCAP_D2_SUPPORTED << std::endl;
    std::cout << "PDCAP_D3_SUPPORTED=" << PDCAP_D3_SUPPORTED << std::endl;
    std::cout << "PDCAP_WAKE_FROM_D0_SUPPORTED=" << PDCAP_WAKE_FROM_D0_SUPPORTED << std::endl;
    std::cout << "PDCAP_WAKE_FROM_D1_SUPPORTED=" << PDCAP_WAKE_FROM_D1_SUPPORTED << std::endl;
    std::cout << "PDCAP_WAKE_FROM_D2_SUPPORTED=" << PDCAP_WAKE_FROM_D2_SUPPORTED << std::endl;
    std::cout << "PDCAP_WAKE_FROM_D3_SUPPORTED=" << PDCAP_WAKE_FROM_D3_SUPPORTED << std::endl;
    std::cout << "PDCAP_WARM_EJECT_SUPPORTED=" << PDCAP_WARM_EJECT_SUPPORTED << std::endl;
    std::cout << "PDC_ARRIVAL=" << PDC_ARRIVAL << std::endl;
    std::cout << "PDC_MAPPING_CHANGE=" << PDC_MAPPING_CHANGE << std::endl;
    std::cout << "PDC_MODE_ASPECTRATIOPRESERVED=" << PDC_MODE_ASPECTRATIOPRESERVED << std::endl;
    std::cout << "PDC_MODE_CENTERED=" << PDC_MODE_CENTERED << std::endl;
    std::cout << "PDC_MODE_DEFAULT=" << PDC_MODE_DEFAULT << std::endl;
    std::cout << "PDC_ORIENTATION_0=" << PDC_ORIENTATION_0 << std::endl;
    std::cout << "PDC_ORIENTATION_180=" << PDC_ORIENTATION_180 << std::endl;
    std::cout << "PDC_ORIENTATION_270=" << PDC_ORIENTATION_270 << std::endl;
    std::cout << "PDC_ORIENTATION_90=" << PDC_ORIENTATION_90 << std::endl;
    std::cout << "PDC_ORIGIN=" << PDC_ORIGIN << std::endl;
    std::cout << "PDC_REMOVAL=" << PDC_REMOVAL << std::endl;
    std::cout << "PDC_RESOLUTION=" << PDC_RESOLUTION << std::endl;
    std::cout << "PDERR_CREATEICFAILURE=" << PDERR_CREATEICFAILURE << std::endl;
    std::cout << "PDERR_DEFAULTDIFFERENT=" << PDERR_DEFAULTDIFFERENT << std::endl;
    std::cout << "PDERR_DNDMMISMATCH=" << PDERR_DNDMMISMATCH << std::endl;
    std::cout << "PDERR_GETDEVMODEFAIL=" << PDERR_GETDEVMODEFAIL << std::endl;
    std::cout << "PDERR_INITFAILURE=" << PDERR_INITFAILURE << std::endl;
    std::cout << "PDERR_LOADDRVFAILURE=" << PDERR_LOADDRVFAILURE << std::endl;
    std::cout << "PDERR_NODEFAULTPRN=" << PDERR_NODEFAULTPRN << std::endl;
    std::cout << "PDERR_NODEVICES=" << PDERR_NODEVICES << std::endl;
    std::cout << "PDERR_PARSEFAILURE=" << PDERR_PARSEFAILURE << std::endl;
    std::cout << "PDERR_PRINTERCODES=" << PDERR_PRINTERCODES << std::endl;
    std::cout << "PDERR_PRINTERNOTFOUND=" << PDERR_PRINTERNOTFOUND << std::endl;
    std::cout << "PDERR_RETDEFFAILURE=" << PDERR_RETDEFFAILURE << std::endl;
    std::cout << "PDERR_SETUPFAILURE=" << PDERR_SETUPFAILURE << std::endl;
    std::cout << "PDEVICESIZE=" << PDEVICESIZE << std::endl;
    std::cout << "PDIRTYUI=" << PDIRTYUI << std::endl;
    std::cout << "PD_ALLPAGES=" << PD_ALLPAGES << std::endl;
    std::cout << "PD_COLLATE=" << PD_COLLATE << std::endl;
    std::cout << "PD_CURRENTPAGE=" << PD_CURRENTPAGE << std::endl;
    std::cout << "PD_DISABLEPRINTTOFILE=" << PD_DISABLEPRINTTOFILE << std::endl;
    std::cout << "PD_ENABLEPRINTHOOK=" << PD_ENABLEPRINTHOOK << std::endl;
    std::cout << "PD_ENABLEPRINTTEMPLATE=" << PD_ENABLEPRINTTEMPLATE << std::endl;
    std::cout << "PD_ENABLEPRINTTEMPLATEHANDLE=" << PD_ENABLEPRINTTEMPLATEHANDLE << std::endl;
    std::cout << "PD_ENABLESETUPHOOK=" << PD_ENABLESETUPHOOK << std::endl;
    std::cout << "PD_ENABLESETUPTEMPLATE=" << PD_ENABLESETUPTEMPLATE << std::endl;
    std::cout << "PD_ENABLESETUPTEMPLATEHANDLE=" << PD_ENABLESETUPTEMPLATEHANDLE << std::endl;
    std::cout << "PD_EXCLUSIONFLAGS=" << PD_EXCLUSIONFLAGS << std::endl;
    std::cout << "PD_HIDEPRINTTOFILE=" << PD_HIDEPRINTTOFILE << std::endl;
    std::cout << "PD_NOCURRENTPAGE=" << PD_NOCURRENTPAGE << std::endl;
    std::cout << "PD_NONETWORKBUTTON=" << PD_NONETWORKBUTTON << std::endl;
    std::cout << "PD_NOPAGENUMS=" << PD_NOPAGENUMS << std::endl;
    std::cout << "PD_NOSELECTION=" << PD_NOSELECTION << std::endl;
    std::cout << "PD_NOWARNING=" << PD_NOWARNING << std::endl;
    std::cout << "PD_PAGENUMS=" << PD_PAGENUMS << std::endl;
    std::cout << "PD_PRINTSETUP=" << PD_PRINTSETUP << std::endl;
    std::cout << "PD_PRINTTOFILE=" << PD_PRINTTOFILE << std::endl;
    std::cout << "PD_RESULT_APPLY=" << PD_RESULT_APPLY << std::endl;
    std::cout << "PD_RESULT_CANCEL=" << PD_RESULT_CANCEL << std::endl;
    std::cout << "PD_RESULT_PRINT=" << PD_RESULT_PRINT << std::endl;
    std::cout << "PD_RETURNDC=" << PD_RETURNDC << std::endl;
    std::cout << "PD_RETURNDEFAULT=" << PD_RETURNDEFAULT << std::endl;
    std::cout << "PD_RETURNIC=" << PD_RETURNIC << std::endl;
    std::cout << "PD_SELECTION=" << PD_SELECTION << std::endl;
    std::cout << "PD_SHOWHELP=" << PD_SHOWHELP << std::endl;
    std::cout << "PD_USEDEVMODECOPIES=" << PD_USEDEVMODECOPIES << std::endl;
    std::cout << "PD_USEDEVMODECOPIESANDCOLLATE=" << PD_USEDEVMODECOPIESANDCOLLATE << std::endl;
    std::cout << "PD_USELARGETEMPLATE=" << PD_USELARGETEMPLATE << std::endl;
    std::cout << "PENARBITRATIONTYPE_FIS=" << PENARBITRATIONTYPE_FIS << std::endl;
    std::cout << "PENARBITRATIONTYPE_MAX=" << PENARBITRATIONTYPE_MAX << std::endl;
    std::cout << "PENARBITRATIONTYPE_NONE=" << PENARBITRATIONTYPE_NONE << std::endl;
    std::cout << "PENARBITRATIONTYPE_SPT=" << PENARBITRATIONTYPE_SPT << std::endl;
    std::cout << "PENARBITRATIONTYPE_WIN8=" << PENARBITRATIONTYPE_WIN8 << std::endl;
    std::cout << "PENVISUALIZATION_CURSOR=" << PENVISUALIZATION_CURSOR << std::endl;
    std::cout << "PENVISUALIZATION_DOUBLETAP=" << PENVISUALIZATION_DOUBLETAP << std::endl;
    std::cout << "PENVISUALIZATION_OFF=" << PENVISUALIZATION_OFF << std::endl;
    std::cout << "PENVISUALIZATION_ON=" << PENVISUALIZATION_ON << std::endl;
    std::cout << "PENVISUALIZATION_TAP=" << PENVISUALIZATION_TAP << std::endl;
    std::cout << "PEN_FLAG_BARREL=" << PEN_FLAG_BARREL << std::endl;
    std::cout << "PEN_FLAG_ERASER=" << PEN_FLAG_ERASER << std::endl;
    std::cout << "PEN_FLAG_INVERTED=" << PEN_FLAG_INVERTED << std::endl;
    std::cout << "PEN_FLAG_NONE=" << PEN_FLAG_NONE << std::endl;
    std::cout << "PEN_MASK_NONE=" << PEN_MASK_NONE << std::endl;
    std::cout << "PEN_MASK_PRESSURE=" << PEN_MASK_PRESSURE << std::endl;
    std::cout << "PEN_MASK_ROTATION=" << PEN_MASK_ROTATION << std::endl;
    std::cout << "PEN_MASK_TILT_X=" << PEN_MASK_TILT_X << std::endl;
    std::cout << "PEN_MASK_TILT_Y=" << PEN_MASK_TILT_Y << std::endl;
    std::cout << "PERFORMANCE_DATA_VERSION=" << PERFORMANCE_DATA_VERSION << std::endl;
    std::cout << "PERFSTATE_POLICY_CHANGE_IDEAL=" << PERFSTATE_POLICY_CHANGE_IDEAL << std::endl;
    std::cout << "PERFSTATE_POLICY_CHANGE_MAX=" << PERFSTATE_POLICY_CHANGE_MAX << std::endl;
    std::cout << "PERFSTATE_POLICY_CHANGE_ROCKET=" << PERFSTATE_POLICY_CHANGE_ROCKET << std::endl;
    std::cout << "PERFSTATE_POLICY_CHANGE_SINGLE=" << PERFSTATE_POLICY_CHANGE_SINGLE << std::endl;
    std::cout << "PERF_100NSEC_MULTI_TIMER=" << PERF_100NSEC_MULTI_TIMER << std::endl;
    std::cout << "PERF_100NSEC_MULTI_TIMER_INV=" << PERF_100NSEC_MULTI_TIMER_INV << std::endl;
    std::cout << "PERF_100NSEC_TIMER=" << PERF_100NSEC_TIMER << std::endl;
    std::cout << "PERF_100NSEC_TIMER_INV=" << PERF_100NSEC_TIMER_INV << std::endl;
    std::cout << "PERF_AVERAGE_BASE=" << PERF_AVERAGE_BASE << std::endl;
    std::cout << "PERF_AVERAGE_BULK=" << PERF_AVERAGE_BULK << std::endl;
    std::cout << "PERF_AVERAGE_TIMER=" << PERF_AVERAGE_TIMER << std::endl;
    std::cout << "PERF_COUNTER_100NS_QUEUELEN_TYPE=" << PERF_COUNTER_100NS_QUEUELEN_TYPE << std::endl;
    std::cout << "PERF_COUNTER_BASE=" << PERF_COUNTER_BASE << std::endl;
    std::cout << "PERF_COUNTER_BULK_COUNT=" << PERF_COUNTER_BULK_COUNT << std::endl;
    std::cout << "PERF_COUNTER_COUNTER=" << PERF_COUNTER_COUNTER << std::endl;
    std::cout << "PERF_COUNTER_DELTA=" << PERF_COUNTER_DELTA << std::endl;
    std::cout << "PERF_COUNTER_ELAPSED=" << PERF_COUNTER_ELAPSED << std::endl;
    std::cout << "PERF_COUNTER_FRACTION=" << PERF_COUNTER_FRACTION << std::endl;
    std::cout << "PERF_COUNTER_HISTOGRAM=" << PERF_COUNTER_HISTOGRAM << std::endl;
    std::cout << "PERF_COUNTER_HISTOGRAM_TYPE=" << PERF_COUNTER_HISTOGRAM_TYPE << std::endl;
    std::cout << "PERF_COUNTER_LARGE_DELTA=" << PERF_COUNTER_LARGE_DELTA << std::endl;
    std::cout << "PERF_COUNTER_LARGE_QUEUELEN_TYPE=" << PERF_COUNTER_LARGE_QUEUELEN_TYPE << std::endl;
    std::cout << "PERF_COUNTER_LARGE_RAWCOUNT=" << PERF_COUNTER_LARGE_RAWCOUNT << std::endl;
    std::cout << "PERF_COUNTER_LARGE_RAWCOUNT_HEX=" << PERF_COUNTER_LARGE_RAWCOUNT_HEX << std::endl;
    std::cout << "PERF_COUNTER_MULTI_BASE=" << PERF_COUNTER_MULTI_BASE << std::endl;
    std::cout << "PERF_COUNTER_MULTI_TIMER=" << PERF_COUNTER_MULTI_TIMER << std::endl;
    std::cout << "PERF_COUNTER_MULTI_TIMER_INV=" << PERF_COUNTER_MULTI_TIMER_INV << std::endl;
    std::cout << "PERF_COUNTER_NODATA=" << PERF_COUNTER_NODATA << std::endl;
    std::cout << "PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE=" << PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE << std::endl;
    std::cout << "PERF_COUNTER_PRECISION=" << PERF_COUNTER_PRECISION << std::endl;
    std::cout << "PERF_COUNTER_QUEUELEN=" << PERF_COUNTER_QUEUELEN << std::endl;
    std::cout << "PERF_COUNTER_QUEUELEN_TYPE=" << PERF_COUNTER_QUEUELEN_TYPE << std::endl;
    std::cout << "PERF_COUNTER_RATE=" << PERF_COUNTER_RATE << std::endl;
    std::cout << "PERF_COUNTER_RAWCOUNT=" << PERF_COUNTER_RAWCOUNT << std::endl;
    std::cout << "PERF_COUNTER_RAWCOUNT_HEX=" << PERF_COUNTER_RAWCOUNT_HEX << std::endl;
    std::cout << "PERF_COUNTER_TEXT=" << PERF_COUNTER_TEXT << std::endl;
    std::cout << "PERF_COUNTER_TIMER=" << PERF_COUNTER_TIMER << std::endl;
    std::cout << "PERF_COUNTER_TIMER_INV=" << PERF_COUNTER_TIMER_INV << std::endl;
    std::cout << "PERF_COUNTER_VALUE=" << PERF_COUNTER_VALUE << std::endl;
    std::cout << "PERF_DATA_REVISION=" << PERF_DATA_REVISION << std::endl;
    std::cout << "PERF_DATA_VERSION=" << PERF_DATA_VERSION << std::endl;
    std::cout << "PERF_DELTA_BASE=" << PERF_DELTA_BASE << std::endl;
    std::cout << "PERF_DELTA_COUNTER=" << PERF_DELTA_COUNTER << std::endl;
    std::cout << "PERF_DETAIL_ADVANCED=" << PERF_DETAIL_ADVANCED << std::endl;
    std::cout << "PERF_DETAIL_EXPERT=" << PERF_DETAIL_EXPERT << std::endl;
    std::cout << "PERF_DETAIL_NOVICE=" << PERF_DETAIL_NOVICE << std::endl;
    std::cout << "PERF_DETAIL_WIZARD=" << PERF_DETAIL_WIZARD << std::endl;
    std::cout << "PERF_DISPLAY_NOSHOW=" << PERF_DISPLAY_NOSHOW << std::endl;
    std::cout << "PERF_DISPLAY_NO_SUFFIX=" << PERF_DISPLAY_NO_SUFFIX << std::endl;
    std::cout << "PERF_DISPLAY_PERCENT=" << PERF_DISPLAY_PERCENT << std::endl;
    std::cout << "PERF_DISPLAY_PER_SEC=" << PERF_DISPLAY_PER_SEC << std::endl;
    std::cout << "PERF_DISPLAY_SECONDS=" << PERF_DISPLAY_SECONDS << std::endl;
    std::cout << "PERF_ELAPSED_TIME=" << PERF_ELAPSED_TIME << std::endl;
    std::cout << "PERF_INVERSE_COUNTER=" << PERF_INVERSE_COUNTER << std::endl;
    std::cout << "PERF_LARGE_RAW_BASE=" << PERF_LARGE_RAW_BASE << std::endl;
    std::cout << "PERF_LARGE_RAW_FRACTION=" << PERF_LARGE_RAW_FRACTION << std::endl;
    std::cout << "PERF_MULTI_COUNTER=" << PERF_MULTI_COUNTER << std::endl;
    std::cout << "PERF_NO_INSTANCES=" << PERF_NO_INSTANCES << std::endl;
    std::cout << "PERF_NO_UNIQUE_ID=" << PERF_NO_UNIQUE_ID << std::endl;
    std::cout << "PERF_NUMBER_DECIMAL=" << PERF_NUMBER_DECIMAL << std::endl;
    std::cout << "PERF_NUMBER_DEC_1000=" << PERF_NUMBER_DEC_1000 << std::endl;
    std::cout << "PERF_NUMBER_HEX=" << PERF_NUMBER_HEX << std::endl;
    std::cout << "PERF_OBJECT_TIMER=" << PERF_OBJECT_TIMER << std::endl;
    std::cout << "PERF_OBJ_TIME_TIMER=" << PERF_OBJ_TIME_TIMER << std::endl;
    std::cout << "PERF_PRECISION_100NS_TIMER=" << PERF_PRECISION_100NS_TIMER << std::endl;
    std::cout << "PERF_PRECISION_OBJECT_TIMER=" << PERF_PRECISION_OBJECT_TIMER << std::endl;
    std::cout << "PERF_PRECISION_SYSTEM_TIMER=" << PERF_PRECISION_SYSTEM_TIMER << std::endl;
    std::cout << "PERF_PRECISION_TIMESTAMP=" << PERF_PRECISION_TIMESTAMP << std::endl;
    std::cout << "PERF_RAW_BASE=" << PERF_RAW_BASE << std::endl;
    std::cout << "PERF_RAW_FRACTION=" << PERF_RAW_FRACTION << std::endl;
    std::cout << "PERF_SAMPLE_BASE=" << PERF_SAMPLE_BASE << std::endl;
    std::cout << "PERF_SAMPLE_COUNTER=" << PERF_SAMPLE_COUNTER << std::endl;
    std::cout << "PERF_SAMPLE_FRACTION=" << PERF_SAMPLE_FRACTION << std::endl;
    std::cout << "PERF_SIZE_DWORD=" << PERF_SIZE_DWORD << std::endl;
    std::cout << "PERF_SIZE_LARGE=" << PERF_SIZE_LARGE << std::endl;
    std::cout << "PERF_SIZE_VARIABLE_LEN=" << PERF_SIZE_VARIABLE_LEN << std::endl;
    std::cout << "PERF_SIZE_ZERO=" << PERF_SIZE_ZERO << std::endl;
    std::cout << "PERF_TEXT_ASCII=" << PERF_TEXT_ASCII << std::endl;
    std::cout << "PERF_TEXT_UNICODE=" << PERF_TEXT_UNICODE << std::endl;
    std::cout << "PERF_TIMER_100NS=" << PERF_TIMER_100NS << std::endl;
    std::cout << "PERF_TIMER_TICK=" << PERF_TIMER_TICK << std::endl;
    std::cout << "PERF_TYPE_COUNTER=" << PERF_TYPE_COUNTER << std::endl;
    std::cout << "PERF_TYPE_NUMBER=" << PERF_TYPE_NUMBER << std::endl;
    std::cout << "PERF_TYPE_TEXT=" << PERF_TYPE_TEXT << std::endl;
    std::cout << "PERF_TYPE_ZERO=" << PERF_TYPE_ZERO << std::endl;
    std::cout << "PFD_DEPTH_DONTCARE=" << PFD_DEPTH_DONTCARE << std::endl;
    std::cout << "PFD_DIRECT3D_ACCELERATED=" << PFD_DIRECT3D_ACCELERATED << std::endl;
    std::cout << "PFD_DOUBLEBUFFER=" << PFD_DOUBLEBUFFER << std::endl;
    std::cout << "PFD_DOUBLEBUFFER_DONTCARE=" << PFD_DOUBLEBUFFER_DONTCARE << std::endl;
    std::cout << "PFD_DRAW_TO_BITMAP=" << PFD_DRAW_TO_BITMAP << std::endl;
    std::cout << "PFD_DRAW_TO_WINDOW=" << PFD_DRAW_TO_WINDOW << std::endl;
    std::cout << "PFD_GENERIC_ACCELERATED=" << PFD_GENERIC_ACCELERATED << std::endl;
    std::cout << "PFD_GENERIC_FORMAT=" << PFD_GENERIC_FORMAT << std::endl;
    std::cout << "PFD_MAIN_PLANE=" << PFD_MAIN_PLANE << std::endl;
    std::cout << "PFD_NEED_PALETTE=" << PFD_NEED_PALETTE << std::endl;
    std::cout << "PFD_NEED_SYSTEM_PALETTE=" << PFD_NEED_SYSTEM_PALETTE << std::endl;
    std::cout << "PFD_OVERLAY_PLANE=" << PFD_OVERLAY_PLANE << std::endl;
    std::cout << "PFD_STEREO=" << PFD_STEREO << std::endl;
    std::cout << "PFD_STEREO_DONTCARE=" << PFD_STEREO_DONTCARE << std::endl;
    std::cout << "PFD_SUPPORT_COMPOSITION=" << PFD_SUPPORT_COMPOSITION << std::endl;
    std::cout << "PFD_SUPPORT_DIRECTDRAW=" << PFD_SUPPORT_DIRECTDRAW << std::endl;
    std::cout << "PFD_SUPPORT_GDI=" << PFD_SUPPORT_GDI << std::endl;
    std::cout << "PFD_SUPPORT_OPENGL=" << PFD_SUPPORT_OPENGL << std::endl;
    std::cout << "PFD_SWAP_COPY=" << PFD_SWAP_COPY << std::endl;
    std::cout << "PFD_SWAP_EXCHANGE=" << PFD_SWAP_EXCHANGE << std::endl;
    std::cout << "PFD_SWAP_LAYER_BUFFERS=" << PFD_SWAP_LAYER_BUFFERS << std::endl;
    std::cout << "PFD_TYPE_COLORINDEX=" << PFD_TYPE_COLORINDEX << std::endl;
    std::cout << "PFD_TYPE_RGBA=" << PFD_TYPE_RGBA << std::endl;
    std::cout << "PFD_UNDERLAY_PLANE=" << PFD_UNDERLAY_PLANE << std::endl;
    std::cout << "PF_3DNOW_INSTRUCTIONS_AVAILABLE=" << PF_3DNOW_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ALPHA_BYTE_INSTRUCTIONS=" << PF_ALPHA_BYTE_INSTRUCTIONS << std::endl;
    std::cout << "PF_APPLETALK=" << PF_APPLETALK << std::endl;
    std::cout << "PF_ARM_64BIT_LOADSTORE_ATOMIC=" << PF_ARM_64BIT_LOADSTORE_ATOMIC << std::endl;
    std::cout << "PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE=" << PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE << std::endl;
    std::cout << "PF_ARM_EXTERNAL_CACHE_AVAILABLE=" << PF_ARM_EXTERNAL_CACHE_AVAILABLE << std::endl;
    std::cout << "PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE=" << PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ARM_NEON_INSTRUCTIONS_AVAILABLE=" << PF_ARM_NEON_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE=" << PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE=" << PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ARM_V8_INSTRUCTIONS_AVAILABLE=" << PF_ARM_V8_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_ARM_VFP_32_REGISTERS_AVAILABLE=" << PF_ARM_VFP_32_REGISTERS_AVAILABLE << std::endl;
    std::cout << "PF_BAN=" << PF_BAN << std::endl;
    std::cout << "PF_CCITT=" << PF_CCITT << std::endl;
    std::cout << "PF_CHANNELS_ENABLED=" << PF_CHANNELS_ENABLED << std::endl;
    std::cout << "PF_CHAOS=" << PF_CHAOS << std::endl;
    std::cout << "PF_COMPARE64_EXCHANGE128=" << PF_COMPARE64_EXCHANGE128 << std::endl;
    std::cout << "PF_COMPARE_EXCHANGE128=" << PF_COMPARE_EXCHANGE128 << std::endl;
    std::cout << "PF_COMPARE_EXCHANGE_DOUBLE=" << PF_COMPARE_EXCHANGE_DOUBLE << std::endl;
    std::cout << "PF_DATAKIT=" << PF_DATAKIT << std::endl;
    std::cout << "PF_DLI=" << PF_DLI << std::endl;
    std::cout << "PF_ECMA=" << PF_ECMA << std::endl;
    std::cout << "PF_FASTFAIL_AVAILABLE=" << PF_FASTFAIL_AVAILABLE << std::endl;
    std::cout << "PF_FIREFOX=" << PF_FIREFOX << std::endl;
    std::cout << "PF_FLOATING_POINT_EMULATED=" << PF_FLOATING_POINT_EMULATED << std::endl;
    std::cout << "PF_FLOATING_POINT_PRECISION_ERRATA=" << PF_FLOATING_POINT_PRECISION_ERRATA << std::endl;
    std::cout << "PF_HYLINK=" << PF_HYLINK << std::endl;
    std::cout << "PF_IMPLINK=" << PF_IMPLINK << std::endl;
    std::cout << "PF_INET=" << PF_INET << std::endl;
    std::cout << "PF_IPX=" << PF_IPX << std::endl;
    std::cout << "PF_ISO=" << PF_ISO << std::endl;
    std::cout << "PF_LAT=" << PF_LAT << std::endl;
    std::cout << "PF_MAX=" << PF_MAX << std::endl;
    std::cout << "PF_MMX_INSTRUCTIONS_AVAILABLE=" << PF_MMX_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_NS=" << PF_NS << std::endl;
    std::cout << "PF_NX_ENABLED=" << PF_NX_ENABLED << std::endl;
    std::cout << "PF_OSI=" << PF_OSI << std::endl;
    std::cout << "PF_PAE_ENABLED=" << PF_PAE_ENABLED << std::endl;
    std::cout << "PF_PPC_MOVEMEM_64BIT_OK=" << PF_PPC_MOVEMEM_64BIT_OK << std::endl;
    std::cout << "PF_PUP=" << PF_PUP << std::endl;
    std::cout << "PF_RDPID_INSTRUCTION_AVAILABLE=" << PF_RDPID_INSTRUCTION_AVAILABLE << std::endl;
    std::cout << "PF_RDRAND_INSTRUCTION_AVAILABLE=" << PF_RDRAND_INSTRUCTION_AVAILABLE << std::endl;
    std::cout << "PF_RDTSCP_INSTRUCTION_AVAILABLE=" << PF_RDTSCP_INSTRUCTION_AVAILABLE << std::endl;
    std::cout << "PF_RDTSC_INSTRUCTION_AVAILABLE=" << PF_RDTSC_INSTRUCTION_AVAILABLE << std::endl;
    std::cout << "PF_RDWRFSGSBASE_AVAILABLE=" << PF_RDWRFSGSBASE_AVAILABLE << std::endl;
    std::cout << "PF_SECOND_LEVEL_ADDRESS_TRANSLATION=" << PF_SECOND_LEVEL_ADDRESS_TRANSLATION << std::endl;
    std::cout << "PF_SNA=" << PF_SNA << std::endl;
    std::cout << "PF_SSE3_INSTRUCTIONS_AVAILABLE=" << PF_SSE3_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_SSE_DAZ_MODE_AVAILABLE=" << PF_SSE_DAZ_MODE_AVAILABLE << std::endl;
    std::cout << "PF_UNIX=" << PF_UNIX << std::endl;
    std::cout << "PF_UNKNOWN1=" << PF_UNKNOWN1 << std::endl;
    std::cout << "PF_UNSPEC=" << PF_UNSPEC << std::endl;
    std::cout << "PF_VIRT_FIRMWARE_ENABLED=" << PF_VIRT_FIRMWARE_ENABLED << std::endl;
    std::cout << "PF_VOICEVIEW=" << PF_VOICEVIEW << std::endl;
    std::cout << "PF_XMMI64_INSTRUCTIONS_AVAILABLE=" << PF_XMMI64_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_XMMI_INSTRUCTIONS_AVAILABLE=" << PF_XMMI_INSTRUCTIONS_AVAILABLE << std::endl;
    std::cout << "PF_XSAVE_ENABLED=" << PF_XSAVE_ENABLED << std::endl;
    std::cout << "PGS_AUTOSCROLL=" << PGS_AUTOSCROLL << std::endl;
    std::cout << "PGS_DRAGNDROP=" << PGS_DRAGNDROP << std::endl;
    std::cout << "PGS_HORZ=" << PGS_HORZ << std::endl;
    std::cout << "PGS_VERT=" << PGS_VERT << std::endl;
    std::cout << "PHYSICALHEIGHT=" << PHYSICALHEIGHT << std::endl;
    std::cout << "PHYSICALOFFSETX=" << PHYSICALOFFSETX << std::endl;
    std::cout << "PHYSICALOFFSETY=" << PHYSICALOFFSETY << std::endl;
    std::cout << "PHYSICALWIDTH=" << PHYSICALWIDTH << std::endl;
    std::cout << "PIDDSI_BYTECOUNT=" << PIDDSI_BYTECOUNT << std::endl;
    std::cout << "PIDDSI_CATEGORY=" << PIDDSI_CATEGORY << std::endl;
    std::cout << "PIDDSI_COMPANY=" << PIDDSI_COMPANY << std::endl;
    std::cout << "PIDDSI_DOCPARTS=" << PIDDSI_DOCPARTS << std::endl;
    std::cout << "PIDDSI_HEADINGPAIR=" << PIDDSI_HEADINGPAIR << std::endl;
    std::cout << "PIDDSI_HIDDENCOUNT=" << PIDDSI_HIDDENCOUNT << std::endl;
    std::cout << "PIDDSI_LINECOUNT=" << PIDDSI_LINECOUNT << std::endl;
    std::cout << "PIDDSI_LINKSDIRTY=" << PIDDSI_LINKSDIRTY << std::endl;
    std::cout << "PIDDSI_MANAGER=" << PIDDSI_MANAGER << std::endl;
    std::cout << "PIDDSI_MMCLIPCOUNT=" << PIDDSI_MMCLIPCOUNT << std::endl;
    std::cout << "PIDDSI_NOTECOUNT=" << PIDDSI_NOTECOUNT << std::endl;
    std::cout << "PIDDSI_PARCOUNT=" << PIDDSI_PARCOUNT << std::endl;
    std::cout << "PIDDSI_PRESFORMAT=" << PIDDSI_PRESFORMAT << std::endl;
    std::cout << "PIDDSI_SCALE=" << PIDDSI_SCALE << std::endl;
    std::cout << "PIDDSI_SLIDECOUNT=" << PIDDSI_SLIDECOUNT << std::endl;
    std::cout << "PID_BEHAVIOR=" << PID_BEHAVIOR << std::endl;
    std::cout << "PID_CODEPAGE=" << PID_CODEPAGE << std::endl;
    std::cout << "PID_DICTIONARY=" << PID_DICTIONARY << std::endl;
    std::cout << "PID_FIRST_USABLE=" << PID_FIRST_USABLE << std::endl;
    std::cout << "PID_LOCALE=" << PID_LOCALE << std::endl;
    std::cout << "PID_MIN_READONLY=" << PID_MIN_READONLY << std::endl;
    std::cout << "PID_MODIFY_TIME=" << PID_MODIFY_TIME << std::endl;
    std::cout << "PID_SECURITY=" << PID_SECURITY << std::endl;
    std::cout << "PIPE_ACCEPT_REMOTE_CLIENTS=" << PIPE_ACCEPT_REMOTE_CLIENTS << std::endl;
    std::cout << "PIPE_ACCESS_DUPLEX=" << PIPE_ACCESS_DUPLEX << std::endl;
    std::cout << "PIPE_ACCESS_INBOUND=" << PIPE_ACCESS_INBOUND << std::endl;
    std::cout << "PIPE_ACCESS_OUTBOUND=" << PIPE_ACCESS_OUTBOUND << std::endl;
    std::cout << "PIPE_BUF=" << PIPE_BUF << std::endl;
    std::cout << "PIPE_CLIENT_END=" << PIPE_CLIENT_END << std::endl;
    std::cout << "PIPE_NOWAIT=" << PIPE_NOWAIT << std::endl;
    std::cout << "PIPE_READMODE_BYTE=" << PIPE_READMODE_BYTE << std::endl;
    std::cout << "PIPE_READMODE_MESSAGE=" << PIPE_READMODE_MESSAGE << std::endl;
    std::cout << "PIPE_REJECT_REMOTE_CLIENTS=" << PIPE_REJECT_REMOTE_CLIENTS << std::endl;
    std::cout << "PIPE_SERVER_END=" << PIPE_SERVER_END << std::endl;
    std::cout << "PIPE_TYPE_BYTE=" << PIPE_TYPE_BYTE << std::endl;
    std::cout << "PIPE_TYPE_MESSAGE=" << PIPE_TYPE_MESSAGE << std::endl;
    std::cout << "PIPE_UNLIMITED_INSTANCES=" << PIPE_UNLIMITED_INSTANCES << std::endl;
    std::cout << "PIPE_WAIT=" << PIPE_WAIT << std::endl;
    std::cout << "PKCS12_ALLOW_OVERWRITE_KEY=" << PKCS12_ALLOW_OVERWRITE_KEY << std::endl;
    std::cout << "PKCS12_ALWAYS_CNG_KSP=" << PKCS12_ALWAYS_CNG_KSP << std::endl;
    std::cout << "PKCS12_DISABLE_ENCRYPT_CERTIFICATES=" << PKCS12_DISABLE_ENCRYPT_CERTIFICATES << std::endl;
    std::cout << "PKCS12_ENCRYPT_CERTIFICATES=" << PKCS12_ENCRYPT_CERTIFICATES << std::endl;
    std::cout << "PKCS12_EXPORT_ECC_CURVE_OID=" << PKCS12_EXPORT_ECC_CURVE_OID << std::endl;
    std::cout << "PKCS12_EXPORT_ECC_CURVE_PARAMETERS=" << PKCS12_EXPORT_ECC_CURVE_PARAMETERS << std::endl;
    std::cout << "PKCS12_EXPORT_PBES2_PARAMS=" << PKCS12_EXPORT_PBES2_PARAMS << std::endl;
    std::cout << "PKCS12_EXPORT_SILENT=" << PKCS12_EXPORT_SILENT << std::endl;
    std::cout << "PKCS12_IMPORT_SILENT=" << PKCS12_IMPORT_SILENT << std::endl;
    std::cout << "PKCS12_INCLUDE_EXTENDED_PROPERTIES=" << PKCS12_INCLUDE_EXTENDED_PROPERTIES << std::endl;
    std::cout << "PKCS12_NO_PERSIST_KEY=" << PKCS12_NO_PERSIST_KEY << std::endl;
    std::cout << "PKCS12_OBJECT_LOCATOR_ALL_IMPORT_FLAGS=" << PKCS12_OBJECT_LOCATOR_ALL_IMPORT_FLAGS << std::endl;
    std::cout << "PKCS12_ONLY_CERTIFICATES=" << PKCS12_ONLY_CERTIFICATES << std::endl;
    std::cout << "PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE=" << PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE << std::endl;
    std::cout << "PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES=" << PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES << std::endl;
    std::cout << "PKCS12_PREFER_CNG_KSP=" << PKCS12_PREFER_CNG_KSP << std::endl;
    std::cout << "PKCS12_PROTECT_TO_DOMAIN_SIDS=" << PKCS12_PROTECT_TO_DOMAIN_SIDS << std::endl;
    std::cout << "PKCS12_VIRTUAL_ISOLATION_KEY=" << PKCS12_VIRTUAL_ISOLATION_KEY << std::endl;
    std::cout << "PKCS5_PADDING=" << PKCS5_PADDING << std::endl;
    std::cout << "PKCS7_SIGNER_INFO=" << PKCS7_SIGNER_INFO << std::endl;
    std::cout << "PKCS_7_ASN_ENCODING=" << PKCS_7_ASN_ENCODING << std::endl;
    std::cout << "PKCS_7_NDR_ENCODING=" << PKCS_7_NDR_ENCODING << std::endl;
    std::cout << "PKCS_ATTRIBUTE=" << PKCS_ATTRIBUTE << std::endl;
    std::cout << "PKCS_ATTRIBUTES=" << PKCS_ATTRIBUTES << std::endl;
    std::cout << "PKCS_CONTENT_INFO=" << PKCS_CONTENT_INFO << std::endl;
    std::cout << "PKCS_CONTENT_INFO_SEQUENCE_OF_ANY=" << PKCS_CONTENT_INFO_SEQUENCE_OF_ANY << std::endl;
    std::cout << "PKCS_CTL=" << PKCS_CTL << std::endl;
    std::cout << "PKCS_ENCRYPTED_PRIVATE_KEY_INFO=" << PKCS_ENCRYPTED_PRIVATE_KEY_INFO << std::endl;
    std::cout << "PKCS_PRIVATE_KEY_INFO=" << PKCS_PRIVATE_KEY_INFO << std::endl;
    std::cout << "PKCS_RC2_CBC_PARAMETERS=" << PKCS_RC2_CBC_PARAMETERS << std::endl;
    std::cout << "PKCS_RSAES_OAEP_PARAMETERS=" << PKCS_RSAES_OAEP_PARAMETERS << std::endl;
    std::cout << "PKCS_RSA_PRIVATE_KEY=" << PKCS_RSA_PRIVATE_KEY << std::endl;
    std::cout << "PKCS_RSA_SSA_PSS_PARAMETERS=" << PKCS_RSA_SSA_PSS_PARAMETERS << std::endl;
    std::cout << "PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC=" << PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC << std::endl;
    std::cout << "PKCS_SMIME_CAPABILITIES=" << PKCS_SMIME_CAPABILITIES << std::endl;
    std::cout << "PKCS_SORTED_CTL=" << PKCS_SORTED_CTL << std::endl;
    std::cout << "PKCS_TIME_REQUEST=" << PKCS_TIME_REQUEST << std::endl;
    std::cout << "PKCS_UTC_TIME=" << PKCS_UTC_TIME << std::endl;
    std::cout << "PLAINTEXTKEYBLOB=" << PLAINTEXTKEYBLOB << std::endl;
    std::cout << "PLANES=" << PLANES << std::endl;
    std::cout << "PMB_ACTIVE=" << PMB_ACTIVE << std::endl;
    std::cout << "PM_NOREMOVE=" << PM_NOREMOVE << std::endl;
    std::cout << "PM_NOYIELD=" << PM_NOYIELD << std::endl;
    std::cout << "PM_QS_INPUT=" << PM_QS_INPUT << std::endl;
    std::cout << "PM_QS_PAINT=" << PM_QS_PAINT << std::endl;
    std::cout << "PM_QS_POSTMESSAGE=" << PM_QS_POSTMESSAGE << std::endl;
    std::cout << "PM_QS_SENDMESSAGE=" << PM_QS_SENDMESSAGE << std::endl;
    std::cout << "PM_REMOVE=" << PM_REMOVE << std::endl;
    std::cout << "POINTER_DEVICE_PRODUCT_STRING_MAX=" << POINTER_DEVICE_PRODUCT_STRING_MAX << std::endl;
    std::cout << "POINTER_FLAG_CANCELED=" << POINTER_FLAG_CANCELED << std::endl;
    std::cout << "POINTER_FLAG_CAPTURECHANGED=" << POINTER_FLAG_CAPTURECHANGED << std::endl;
    std::cout << "POINTER_FLAG_CONFIDENCE=" << POINTER_FLAG_CONFIDENCE << std::endl;
    std::cout << "POINTER_FLAG_DOWN=" << POINTER_FLAG_DOWN << std::endl;
    std::cout << "POINTER_FLAG_FIFTHBUTTON=" << POINTER_FLAG_FIFTHBUTTON << std::endl;
    std::cout << "POINTER_FLAG_FIRSTBUTTON=" << POINTER_FLAG_FIRSTBUTTON << std::endl;
    std::cout << "POINTER_FLAG_FOURTHBUTTON=" << POINTER_FLAG_FOURTHBUTTON << std::endl;
    std::cout << "POINTER_FLAG_HASTRANSFORM=" << POINTER_FLAG_HASTRANSFORM << std::endl;
    std::cout << "POINTER_FLAG_HWHEEL=" << POINTER_FLAG_HWHEEL << std::endl;
    std::cout << "POINTER_FLAG_INCONTACT=" << POINTER_FLAG_INCONTACT << std::endl;
    std::cout << "POINTER_FLAG_INRANGE=" << POINTER_FLAG_INRANGE << std::endl;
    std::cout << "POINTER_FLAG_NEW=" << POINTER_FLAG_NEW << std::endl;
    std::cout << "POINTER_FLAG_NONE=" << POINTER_FLAG_NONE << std::endl;
    std::cout << "POINTER_FLAG_PRIMARY=" << POINTER_FLAG_PRIMARY << std::endl;
    std::cout << "POINTER_FLAG_SECONDBUTTON=" << POINTER_FLAG_SECONDBUTTON << std::endl;
    std::cout << "POINTER_FLAG_THIRDBUTTON=" << POINTER_FLAG_THIRDBUTTON << std::endl;
    std::cout << "POINTER_FLAG_UP=" << POINTER_FLAG_UP << std::endl;
    std::cout << "POINTER_FLAG_UPDATE=" << POINTER_FLAG_UPDATE << std::endl;
    std::cout << "POINTER_FLAG_WHEEL=" << POINTER_FLAG_WHEEL << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_CANCELED=" << POINTER_MESSAGE_FLAG_CANCELED << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_CONFIDENCE=" << POINTER_MESSAGE_FLAG_CONFIDENCE << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_FIFTHBUTTON=" << POINTER_MESSAGE_FLAG_FIFTHBUTTON << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_FIRSTBUTTON=" << POINTER_MESSAGE_FLAG_FIRSTBUTTON << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_FOURTHBUTTON=" << POINTER_MESSAGE_FLAG_FOURTHBUTTON << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_INCONTACT=" << POINTER_MESSAGE_FLAG_INCONTACT << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_INRANGE=" << POINTER_MESSAGE_FLAG_INRANGE << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_NEW=" << POINTER_MESSAGE_FLAG_NEW << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_PRIMARY=" << POINTER_MESSAGE_FLAG_PRIMARY << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_SECONDBUTTON=" << POINTER_MESSAGE_FLAG_SECONDBUTTON << std::endl;
    std::cout << "POINTER_MESSAGE_FLAG_THIRDBUTTON=" << POINTER_MESSAGE_FLAG_THIRDBUTTON << std::endl;
    std::cout << "POINTER_MOD_CTRL=" << POINTER_MOD_CTRL << std::endl;
    std::cout << "POINTER_MOD_SHIFT=" << POINTER_MOD_SHIFT << std::endl;
    std::cout << "POLICY_AUDIT_SUBCATEGORY_COUNT=" << POLICY_AUDIT_SUBCATEGORY_COUNT << std::endl;
    std::cout << "POLICY_SHOWREASONUI_ALWAYS=" << POLICY_SHOWREASONUI_ALWAYS << std::endl;
    std::cout << "POLICY_SHOWREASONUI_NEVER=" << POLICY_SHOWREASONUI_NEVER << std::endl;
    std::cout << "POLICY_SHOWREASONUI_SERVERONLY=" << POLICY_SHOWREASONUI_SERVERONLY << std::endl;
    std::cout << "POLICY_SHOWREASONUI_WORKSTATIONONLY=" << POLICY_SHOWREASONUI_WORKSTATIONONLY << std::endl;
    std::cout << "POLYFILL_LAST=" << POLYFILL_LAST << std::endl;
    std::cout << "POLYGONALCAPS=" << POLYGONALCAPS << std::endl;
    std::cout << "PORT_STATUS_DOOR_OPEN=" << PORT_STATUS_DOOR_OPEN << std::endl;
    std::cout << "PORT_STATUS_NO_TONER=" << PORT_STATUS_NO_TONER << std::endl;
    std::cout << "PORT_STATUS_OFFLINE=" << PORT_STATUS_OFFLINE << std::endl;
    std::cout << "PORT_STATUS_OUTPUT_BIN_FULL=" << PORT_STATUS_OUTPUT_BIN_FULL << std::endl;
    std::cout << "PORT_STATUS_OUT_OF_MEMORY=" << PORT_STATUS_OUT_OF_MEMORY << std::endl;
    std::cout << "PORT_STATUS_PAPER_JAM=" << PORT_STATUS_PAPER_JAM << std::endl;
    std::cout << "PORT_STATUS_PAPER_OUT=" << PORT_STATUS_PAPER_OUT << std::endl;
    std::cout << "PORT_STATUS_PAPER_PROBLEM=" << PORT_STATUS_PAPER_PROBLEM << std::endl;
    std::cout << "PORT_STATUS_POWER_SAVE=" << PORT_STATUS_POWER_SAVE << std::endl;
    std::cout << "PORT_STATUS_TONER_LOW=" << PORT_STATUS_TONER_LOW << std::endl;
    std::cout << "PORT_STATUS_TYPE_ERROR=" << PORT_STATUS_TYPE_ERROR << std::endl;
    std::cout << "PORT_STATUS_TYPE_INFO=" << PORT_STATUS_TYPE_INFO << std::endl;
    std::cout << "PORT_STATUS_TYPE_WARNING=" << PORT_STATUS_TYPE_WARNING << std::endl;
    std::cout << "PORT_STATUS_USER_INTERVENTION=" << PORT_STATUS_USER_INTERVENTION << std::endl;
    std::cout << "PORT_STATUS_WARMING_UP=" << PORT_STATUS_WARMING_UP << std::endl;
    std::cout << "PORT_TYPE_NET_ATTACHED=" << PORT_TYPE_NET_ATTACHED << std::endl;
    std::cout << "PORT_TYPE_READ=" << PORT_TYPE_READ << std::endl;
    std::cout << "PORT_TYPE_REDIRECTED=" << PORT_TYPE_REDIRECTED << std::endl;
    std::cout << "PORT_TYPE_WRITE=" << PORT_TYPE_WRITE << std::endl;
    std::cout << "POSTSCRIPT_DATA=" << POSTSCRIPT_DATA << std::endl;
    std::cout << "POSTSCRIPT_IDENTIFY=" << POSTSCRIPT_IDENTIFY << std::endl;
    std::cout << "POSTSCRIPT_IGNORE=" << POSTSCRIPT_IGNORE << std::endl;
    std::cout << "POSTSCRIPT_INJECTION=" << POSTSCRIPT_INJECTION << std::endl;
    std::cout << "POSTSCRIPT_PASSTHROUGH=" << POSTSCRIPT_PASSTHROUGH << std::endl;
    std::cout << "POWERBUTTON_ACTION_INDEX_HIBERNATE=" << POWERBUTTON_ACTION_INDEX_HIBERNATE << std::endl;
    std::cout << "POWERBUTTON_ACTION_INDEX_NOTHING=" << POWERBUTTON_ACTION_INDEX_NOTHING << std::endl;
    std::cout << "POWERBUTTON_ACTION_INDEX_SHUTDOWN=" << POWERBUTTON_ACTION_INDEX_SHUTDOWN << std::endl;
    std::cout << "POWERBUTTON_ACTION_INDEX_SLEEP=" << POWERBUTTON_ACTION_INDEX_SLEEP << std::endl;
    std::cout << "POWERBUTTON_ACTION_VALUE_HIBERNATE=" << POWERBUTTON_ACTION_VALUE_HIBERNATE << std::endl;
    std::cout << "POWERBUTTON_ACTION_VALUE_NOTHING=" << POWERBUTTON_ACTION_VALUE_NOTHING << std::endl;
    std::cout << "POWERBUTTON_ACTION_VALUE_SHUTDOWN=" << POWERBUTTON_ACTION_VALUE_SHUTDOWN << std::endl;
    std::cout << "POWERBUTTON_ACTION_VALUE_SLEEP=" << POWERBUTTON_ACTION_VALUE_SLEEP << std::endl;
    std::cout << "POWER_ACTION_CRITICAL=" << POWER_ACTION_CRITICAL << std::endl;
    std::cout << "POWER_ACTION_DISABLE_WAKES=" << POWER_ACTION_DISABLE_WAKES << std::endl;
    std::cout << "POWER_ACTION_HIBERBOOT=" << POWER_ACTION_HIBERBOOT << std::endl;
    std::cout << "POWER_ACTION_LIGHTEST_FIRST=" << POWER_ACTION_LIGHTEST_FIRST << std::endl;
    std::cout << "POWER_ACTION_LOCK_CONSOLE=" << POWER_ACTION_LOCK_CONSOLE << std::endl;
    std::cout << "POWER_ACTION_OVERRIDE_APPS=" << POWER_ACTION_OVERRIDE_APPS << std::endl;
    std::cout << "POWER_ACTION_PSEUDO_TRANSITION=" << POWER_ACTION_PSEUDO_TRANSITION << std::endl;
    std::cout << "POWER_ACTION_QUERY_ALLOWED=" << POWER_ACTION_QUERY_ALLOWED << std::endl;
    std::cout << "POWER_ACTION_UI_ALLOWED=" << POWER_ACTION_UI_ALLOWED << std::endl;
    std::cout << "POWER_DEVICE_IDLE_POLICY_CONSERVATIVE=" << POWER_DEVICE_IDLE_POLICY_CONSERVATIVE << std::endl;
    std::cout << "POWER_DEVICE_IDLE_POLICY_PERFORMANCE=" << POWER_DEVICE_IDLE_POLICY_PERFORMANCE << std::endl;
    std::cout << "POWER_FORCE_TRIGGER_RESET=" << POWER_FORCE_TRIGGER_RESET << std::endl;
    std::cout << "POWER_LEVEL_USER_NOTIFY_EXEC=" << POWER_LEVEL_USER_NOTIFY_EXEC << std::endl;
    std::cout << "POWER_LEVEL_USER_NOTIFY_SOUND=" << POWER_LEVEL_USER_NOTIFY_SOUND << std::endl;
    std::cout << "POWER_LEVEL_USER_NOTIFY_TEXT=" << POWER_LEVEL_USER_NOTIFY_TEXT << std::endl;
    std::cout << "POWER_PLATFORM_ROLE_V1=" << POWER_PLATFORM_ROLE_V1 << std::endl;
    std::cout << "POWER_PLATFORM_ROLE_V2=" << POWER_PLATFORM_ROLE_V2 << std::endl;
    std::cout << "POWER_PLATFORM_ROLE_VERSION=" << POWER_PLATFORM_ROLE_VERSION << std::endl;
    std::cout << "POWER_REQUEST_CONTEXT_DETAILED_STRING=" << POWER_REQUEST_CONTEXT_DETAILED_STRING << std::endl;
    std::cout << "POWER_REQUEST_CONTEXT_SIMPLE_STRING=" << POWER_REQUEST_CONTEXT_SIMPLE_STRING << std::endl;
    std::cout << "POWER_REQUEST_CONTEXT_VERSION=" << POWER_REQUEST_CONTEXT_VERSION << std::endl;
    std::cout << "POWER_SETTING_VALUE_VERSION=" << POWER_SETTING_VALUE_VERSION << std::endl;
    std::cout << "POWER_SYSTEM_MAXIMUM=" << POWER_SYSTEM_MAXIMUM << std::endl;
    std::cout << "POWER_USER_NOTIFY_BUTTON=" << POWER_USER_NOTIFY_BUTTON << std::endl;
    std::cout << "POWER_USER_NOTIFY_FORCED_SHUTDOWN=" << POWER_USER_NOTIFY_FORCED_SHUTDOWN << std::endl;
    std::cout << "POWER_USER_NOTIFY_SHUTDOWN=" << POWER_USER_NOTIFY_SHUTDOWN << std::endl;
    std::cout << "PO_DELETE=" << PO_DELETE << std::endl;
    std::cout << "PO_PORTCHANGE=" << PO_PORTCHANGE << std::endl;
    std::cout << "PO_RENAME=" << PO_RENAME << std::endl;
    std::cout << "PO_REN_PORT=" << PO_REN_PORT << std::endl;
    std::cout << "PO_THROTTLE_ADAPTIVE=" << PO_THROTTLE_ADAPTIVE << std::endl;
    std::cout << "PO_THROTTLE_CONSTANT=" << PO_THROTTLE_CONSTANT << std::endl;
    std::cout << "PO_THROTTLE_DEGRADE=" << PO_THROTTLE_DEGRADE << std::endl;
    std::cout << "PO_THROTTLE_MAXIMUM=" << PO_THROTTLE_MAXIMUM << std::endl;
    std::cout << "PO_THROTTLE_NONE=" << PO_THROTTLE_NONE << std::endl;
    std::cout << "PPM_FIRMWARE_ACPI1C2=" << PPM_FIRMWARE_ACPI1C2 << std::endl;
    std::cout << "PPM_FIRMWARE_ACPI1C3=" << PPM_FIRMWARE_ACPI1C3 << std::endl;
    std::cout << "PPM_FIRMWARE_ACPI1TSTATES=" << PPM_FIRMWARE_ACPI1TSTATES << std::endl;
    std::cout << "PPM_FIRMWARE_CPC=" << PPM_FIRMWARE_CPC << std::endl;
    std::cout << "PPM_FIRMWARE_CSD=" << PPM_FIRMWARE_CSD << std::endl;
    std::cout << "PPM_FIRMWARE_CST=" << PPM_FIRMWARE_CST << std::endl;
    std::cout << "PPM_FIRMWARE_OSC=" << PPM_FIRMWARE_OSC << std::endl;
    std::cout << "PPM_FIRMWARE_PCCH=" << PPM_FIRMWARE_PCCH << std::endl;
    std::cout << "PPM_FIRMWARE_PCCP=" << PPM_FIRMWARE_PCCP << std::endl;
    std::cout << "PPM_FIRMWARE_PCT=" << PPM_FIRMWARE_PCT << std::endl;
    std::cout << "PPM_FIRMWARE_PDC=" << PPM_FIRMWARE_PDC << std::endl;
    std::cout << "PPM_FIRMWARE_PPC=" << PPM_FIRMWARE_PPC << std::endl;
    std::cout << "PPM_FIRMWARE_PSD=" << PPM_FIRMWARE_PSD << std::endl;
    std::cout << "PPM_FIRMWARE_PSS=" << PPM_FIRMWARE_PSS << std::endl;
    std::cout << "PPM_FIRMWARE_PTC=" << PPM_FIRMWARE_PTC << std::endl;
    std::cout << "PPM_FIRMWARE_TPC=" << PPM_FIRMWARE_TPC << std::endl;
    std::cout << "PPM_FIRMWARE_TSD=" << PPM_FIRMWARE_TSD << std::endl;
    std::cout << "PPM_FIRMWARE_TSS=" << PPM_FIRMWARE_TSS << std::endl;
    std::cout << "PPM_FIRMWARE_XPSS=" << PPM_FIRMWARE_XPSS << std::endl;
    std::cout << "PPM_IDLE_IMPLEMENTATION_CSTATES=" << PPM_IDLE_IMPLEMENTATION_CSTATES << std::endl;
    std::cout << "PPM_IDLE_IMPLEMENTATION_NONE=" << PPM_IDLE_IMPLEMENTATION_NONE << std::endl;
    std::cout << "PPM_IDLE_IMPLEMENTATION_PEP=" << PPM_IDLE_IMPLEMENTATION_PEP << std::endl;
    std::cout << "PPM_PERFORMANCE_IMPLEMENTATION_CPPC=" << PPM_PERFORMANCE_IMPLEMENTATION_CPPC << std::endl;
    std::cout << "PPM_PERFORMANCE_IMPLEMENTATION_NONE=" << PPM_PERFORMANCE_IMPLEMENTATION_NONE << std::endl;
    std::cout << "PPM_PERFORMANCE_IMPLEMENTATION_PCCV1=" << PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 << std::endl;
    std::cout << "PPM_PERFORMANCE_IMPLEMENTATION_PEP=" << PPM_PERFORMANCE_IMPLEMENTATION_PEP << std::endl;
    std::cout << "PPM_PERFORMANCE_IMPLEMENTATION_PSTATES=" << PPM_PERFORMANCE_IMPLEMENTATION_PSTATES << std::endl;
    std::cout << "PP_ADMIN_PIN=" << PP_ADMIN_PIN << std::endl;
    std::cout << "PP_APPLI_CERT=" << PP_APPLI_CERT << std::endl;
    std::cout << "PP_CERTCHAIN=" << PP_CERTCHAIN << std::endl;
    std::cout << "PP_CHANGE_PASSWORD=" << PP_CHANGE_PASSWORD << std::endl;
    std::cout << "PP_CLIENT_HWND=" << PP_CLIENT_HWND << std::endl;
    std::cout << "PP_CONTAINER=" << PP_CONTAINER << std::endl;
    std::cout << "PP_CONTEXT_INFO=" << PP_CONTEXT_INFO << std::endl;
    std::cout << "PP_CRYPT_COUNT_KEY_USE=" << PP_CRYPT_COUNT_KEY_USE << std::endl;
    std::cout << "PP_DELETEKEY=" << PP_DELETEKEY << std::endl;
    std::cout << "PP_DISMISS_PIN_UI_SEC=" << PP_DISMISS_PIN_UI_SEC << std::endl;
    std::cout << "PP_DISPLAYERRORS=" << PP_DISPLAYERRORS << std::endl;
    std::cout << "PP_ENUMALGS=" << PP_ENUMALGS << std::endl;
    std::cout << "PP_ENUMALGS_EX=" << PP_ENUMALGS_EX << std::endl;
    std::cout << "PP_ENUMCONTAINERS=" << PP_ENUMCONTAINERS << std::endl;
    std::cout << "PP_ENUMELECTROOTS=" << PP_ENUMELECTROOTS << std::endl;
    std::cout << "PP_ENUMEX_SIGNING_PROT=" << PP_ENUMEX_SIGNING_PROT << std::endl;
    std::cout << "PP_ENUMMANDROOTS=" << PP_ENUMMANDROOTS << std::endl;
    std::cout << "PP_IMPTYPE=" << PP_IMPTYPE << std::endl;
    std::cout << "PP_KEYEXCHANGE_ALG=" << PP_KEYEXCHANGE_ALG << std::endl;
    std::cout << "PP_KEYEXCHANGE_KEYSIZE=" << PP_KEYEXCHANGE_KEYSIZE << std::endl;
    std::cout << "PP_KEYEXCHANGE_PIN=" << PP_KEYEXCHANGE_PIN << std::endl;
    std::cout << "PP_KEYSET_SEC_DESCR=" << PP_KEYSET_SEC_DESCR << std::endl;
    std::cout << "PP_KEYSET_TYPE=" << PP_KEYSET_TYPE << std::endl;
    std::cout << "PP_KEYSPEC=" << PP_KEYSPEC << std::endl;
    std::cout << "PP_KEYSTORAGE=" << PP_KEYSTORAGE << std::endl;
    std::cout << "PP_KEYX_KEYSIZE_INC=" << PP_KEYX_KEYSIZE_INC << std::endl;
    std::cout << "PP_KEY_TYPE_SUBTYPE=" << PP_KEY_TYPE_SUBTYPE << std::endl;
    std::cout << "PP_NAME=" << PP_NAME << std::endl;
    std::cout << "PP_PIN_PROMPT_STRING=" << PP_PIN_PROMPT_STRING << std::endl;
    std::cout << "PP_PROVTYPE=" << PP_PROVTYPE << std::endl;
    std::cout << "PP_ROOT_CERTSTORE=" << PP_ROOT_CERTSTORE << std::endl;
    std::cout << "PP_SECURE_KEYEXCHANGE_PIN=" << PP_SECURE_KEYEXCHANGE_PIN << std::endl;
    std::cout << "PP_SECURE_SIGNATURE_PIN=" << PP_SECURE_SIGNATURE_PIN << std::endl;
    std::cout << "PP_SESSION_KEYSIZE=" << PP_SESSION_KEYSIZE << std::endl;
    std::cout << "PP_SGC_INFO=" << PP_SGC_INFO << std::endl;
    std::cout << "PP_SIGNATURE_ALG=" << PP_SIGNATURE_ALG << std::endl;
    std::cout << "PP_SIGNATURE_KEYSIZE=" << PP_SIGNATURE_KEYSIZE << std::endl;
    std::cout << "PP_SIGNATURE_PIN=" << PP_SIGNATURE_PIN << std::endl;
    std::cout << "PP_SIG_KEYSIZE_INC=" << PP_SIG_KEYSIZE_INC << std::endl;
    std::cout << "PP_SMARTCARD_GUID=" << PP_SMARTCARD_GUID << std::endl;
    std::cout << "PP_SMARTCARD_READER=" << PP_SMARTCARD_READER << std::endl;
    std::cout << "PP_SMARTCARD_READER_ICON=" << PP_SMARTCARD_READER_ICON << std::endl;
    std::cout << "PP_SYM_KEYSIZE=" << PP_SYM_KEYSIZE << std::endl;
    std::cout << "PP_UI_PROMPT=" << PP_UI_PROMPT << std::endl;
    std::cout << "PP_UNIQUE_CONTAINER=" << PP_UNIQUE_CONTAINER << std::endl;
    std::cout << "PP_USER_CERTSTORE=" << PP_USER_CERTSTORE << std::endl;
    std::cout << "PP_USE_HARDWARE_RNG=" << PP_USE_HARDWARE_RNG << std::endl;
    std::cout << "PP_VERSION=" << PP_VERSION << std::endl;
    std::cout << "PRAGMA_DEPRECATED_DDK=" << PRAGMA_DEPRECATED_DDK << std::endl;
    std::cout << "PRINTACTION_DOCUMENTDEFAULTS=" << PRINTACTION_DOCUMENTDEFAULTS << std::endl;
    std::cout << "PRINTACTION_NETINSTALL=" << PRINTACTION_NETINSTALL << std::endl;
    std::cout << "PRINTACTION_NETINSTALLLINK=" << PRINTACTION_NETINSTALLLINK << std::endl;
    std::cout << "PRINTACTION_OPEN=" << PRINTACTION_OPEN << std::endl;
    std::cout << "PRINTACTION_OPENNETPRN=" << PRINTACTION_OPENNETPRN << std::endl;
    std::cout << "PRINTACTION_PROPERTIES=" << PRINTACTION_PROPERTIES << std::endl;
    std::cout << "PRINTACTION_SERVERPROPERTIES=" << PRINTACTION_SERVERPROPERTIES << std::endl;
    std::cout << "PRINTACTION_TESTPAGE=" << PRINTACTION_TESTPAGE << std::endl;
    std::cout << "PRINTDLGEXORD=" << PRINTDLGEXORD << std::endl;
    std::cout << "PRINTDLGORD=" << PRINTDLGORD << std::endl;
    std::cout << "PRINTER_ACCESS_ADMINISTER=" << PRINTER_ACCESS_ADMINISTER << std::endl;
    std::cout << "PRINTER_ACCESS_USE=" << PRINTER_ACCESS_USE << std::endl;
    std::cout << "PRINTER_ALL_ACCESS=" << PRINTER_ALL_ACCESS << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_DEFAULT=" << PRINTER_ATTRIBUTE_DEFAULT << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_DIRECT=" << PRINTER_ATTRIBUTE_DIRECT << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST=" << PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_ENABLE_BIDI=" << PRINTER_ATTRIBUTE_ENABLE_BIDI << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_ENABLE_DEVQ=" << PRINTER_ATTRIBUTE_ENABLE_DEVQ << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_FAX=" << PRINTER_ATTRIBUTE_FAX << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_HIDDEN=" << PRINTER_ATTRIBUTE_HIDDEN << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS=" << PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_LOCAL=" << PRINTER_ATTRIBUTE_LOCAL << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_NETWORK=" << PRINTER_ATTRIBUTE_NETWORK << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_PUBLISHED=" << PRINTER_ATTRIBUTE_PUBLISHED << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_QUEUED=" << PRINTER_ATTRIBUTE_QUEUED << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_RAW_ONLY=" << PRINTER_ATTRIBUTE_RAW_ONLY << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_SHARED=" << PRINTER_ATTRIBUTE_SHARED << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_TS=" << PRINTER_ATTRIBUTE_TS << std::endl;
    std::cout << "PRINTER_ATTRIBUTE_WORK_OFFLINE=" << PRINTER_ATTRIBUTE_WORK_OFFLINE << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_FORM=" << PRINTER_CHANGE_ADD_FORM << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_JOB=" << PRINTER_CHANGE_ADD_JOB << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_PORT=" << PRINTER_CHANGE_ADD_PORT << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_PRINTER=" << PRINTER_CHANGE_ADD_PRINTER << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_PRINTER_DRIVER=" << PRINTER_CHANGE_ADD_PRINTER_DRIVER << std::endl;
    std::cout << "PRINTER_CHANGE_ADD_PRINT_PROCESSOR=" << PRINTER_CHANGE_ADD_PRINT_PROCESSOR << std::endl;
    std::cout << "PRINTER_CHANGE_ALL=" << PRINTER_CHANGE_ALL << std::endl;
    std::cout << "PRINTER_CHANGE_CONFIGURE_PORT=" << PRINTER_CHANGE_CONFIGURE_PORT << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_FORM=" << PRINTER_CHANGE_DELETE_FORM << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_JOB=" << PRINTER_CHANGE_DELETE_JOB << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_PORT=" << PRINTER_CHANGE_DELETE_PORT << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_PRINTER=" << PRINTER_CHANGE_DELETE_PRINTER << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_PRINTER_DRIVER=" << PRINTER_CHANGE_DELETE_PRINTER_DRIVER << std::endl;
    std::cout << "PRINTER_CHANGE_DELETE_PRINT_PROCESSOR=" << PRINTER_CHANGE_DELETE_PRINT_PROCESSOR << std::endl;
    std::cout << "PRINTER_CHANGE_FAILED_CONNECTION_PRINTER=" << PRINTER_CHANGE_FAILED_CONNECTION_PRINTER << std::endl;
    std::cout << "PRINTER_CHANGE_FORM=" << PRINTER_CHANGE_FORM << std::endl;
    std::cout << "PRINTER_CHANGE_JOB=" << PRINTER_CHANGE_JOB << std::endl;
    std::cout << "PRINTER_CHANGE_PORT=" << PRINTER_CHANGE_PORT << std::endl;
    std::cout << "PRINTER_CHANGE_PRINTER=" << PRINTER_CHANGE_PRINTER << std::endl;
    std::cout << "PRINTER_CHANGE_PRINTER_DRIVER=" << PRINTER_CHANGE_PRINTER_DRIVER << std::endl;
    std::cout << "PRINTER_CHANGE_PRINT_PROCESSOR=" << PRINTER_CHANGE_PRINT_PROCESSOR << std::endl;
    std::cout << "PRINTER_CHANGE_SET_FORM=" << PRINTER_CHANGE_SET_FORM << std::endl;
    std::cout << "PRINTER_CHANGE_SET_JOB=" << PRINTER_CHANGE_SET_JOB << std::endl;
    std::cout << "PRINTER_CHANGE_SET_PRINTER=" << PRINTER_CHANGE_SET_PRINTER << std::endl;
    std::cout << "PRINTER_CHANGE_SET_PRINTER_DRIVER=" << PRINTER_CHANGE_SET_PRINTER_DRIVER << std::endl;
    std::cout << "PRINTER_CHANGE_TIMEOUT=" << PRINTER_CHANGE_TIMEOUT << std::endl;
    std::cout << "PRINTER_CHANGE_WRITE_JOB=" << PRINTER_CHANGE_WRITE_JOB << std::endl;
    std::cout << "PRINTER_CONNECTION_MISMATCH=" << PRINTER_CONNECTION_MISMATCH << std::endl;
    std::cout << "PRINTER_CONNECTION_NO_UI=" << PRINTER_CONNECTION_NO_UI << std::endl;
    std::cout << "PRINTER_CONTROL_PAUSE=" << PRINTER_CONTROL_PAUSE << std::endl;
    std::cout << "PRINTER_CONTROL_PURGE=" << PRINTER_CONTROL_PURGE << std::endl;
    std::cout << "PRINTER_CONTROL_RESUME=" << PRINTER_CONTROL_RESUME << std::endl;
    std::cout << "PRINTER_CONTROL_SET_STATUS=" << PRINTER_CONTROL_SET_STATUS << std::endl;
    std::cout << "PRINTER_ENUM_CONNECTIONS=" << PRINTER_ENUM_CONNECTIONS << std::endl;
    std::cout << "PRINTER_ENUM_CONTAINER=" << PRINTER_ENUM_CONTAINER << std::endl;
    std::cout << "PRINTER_ENUM_DEFAULT=" << PRINTER_ENUM_DEFAULT << std::endl;
    std::cout << "PRINTER_ENUM_EXPAND=" << PRINTER_ENUM_EXPAND << std::endl;
    std::cout << "PRINTER_ENUM_FAVORITE=" << PRINTER_ENUM_FAVORITE << std::endl;
    std::cout << "PRINTER_ENUM_HIDE=" << PRINTER_ENUM_HIDE << std::endl;
    std::cout << "PRINTER_ENUM_ICON1=" << PRINTER_ENUM_ICON1 << std::endl;
    std::cout << "PRINTER_ENUM_ICON2=" << PRINTER_ENUM_ICON2 << std::endl;
    std::cout << "PRINTER_ENUM_ICON3=" << PRINTER_ENUM_ICON3 << std::endl;
    std::cout << "PRINTER_ENUM_ICON4=" << PRINTER_ENUM_ICON4 << std::endl;
    std::cout << "PRINTER_ENUM_ICON5=" << PRINTER_ENUM_ICON5 << std::endl;
    std::cout << "PRINTER_ENUM_ICON6=" << PRINTER_ENUM_ICON6 << std::endl;
    std::cout << "PRINTER_ENUM_ICON7=" << PRINTER_ENUM_ICON7 << std::endl;
    std::cout << "PRINTER_ENUM_ICON8=" << PRINTER_ENUM_ICON8 << std::endl;
    std::cout << "PRINTER_ENUM_LOCAL=" << PRINTER_ENUM_LOCAL << std::endl;
    std::cout << "PRINTER_ENUM_NAME=" << PRINTER_ENUM_NAME << std::endl;
    std::cout << "PRINTER_ENUM_NETWORK=" << PRINTER_ENUM_NETWORK << std::endl;
    std::cout << "PRINTER_ENUM_REMOTE=" << PRINTER_ENUM_REMOTE << std::endl;
    std::cout << "PRINTER_ENUM_SHARED=" << PRINTER_ENUM_SHARED << std::endl;
    std::cout << "PRINTER_ERROR_INFORMATION=" << PRINTER_ERROR_INFORMATION << std::endl;
    std::cout << "PRINTER_ERROR_JAM=" << PRINTER_ERROR_JAM << std::endl;
    std::cout << "PRINTER_ERROR_OUTOFPAPER=" << PRINTER_ERROR_OUTOFPAPER << std::endl;
    std::cout << "PRINTER_ERROR_OUTOFTONER=" << PRINTER_ERROR_OUTOFTONER << std::endl;
    std::cout << "PRINTER_ERROR_SEVERE=" << PRINTER_ERROR_SEVERE << std::endl;
    std::cout << "PRINTER_ERROR_WARNING=" << PRINTER_ERROR_WARNING << std::endl;
    std::cout << "PRINTER_EXECUTE=" << PRINTER_EXECUTE << std::endl;
    std::cout << "PRINTER_FONTTYPE=" << PRINTER_FONTTYPE << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_ATTRIBUTES=" << PRINTER_NOTIFY_FIELD_ATTRIBUTES << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_AVERAGE_PPM=" << PRINTER_NOTIFY_FIELD_AVERAGE_PPM << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_BYTES_PRINTED=" << PRINTER_NOTIFY_FIELD_BYTES_PRINTED << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_CJOBS=" << PRINTER_NOTIFY_FIELD_CJOBS << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_COMMENT=" << PRINTER_NOTIFY_FIELD_COMMENT << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_DATATYPE=" << PRINTER_NOTIFY_FIELD_DATATYPE << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY=" << PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_DEVMODE=" << PRINTER_NOTIFY_FIELD_DEVMODE << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_DRIVER_NAME=" << PRINTER_NOTIFY_FIELD_DRIVER_NAME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_LOCATION=" << PRINTER_NOTIFY_FIELD_LOCATION << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_OBJECT_GUID=" << PRINTER_NOTIFY_FIELD_OBJECT_GUID << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PAGES_PRINTED=" << PRINTER_NOTIFY_FIELD_PAGES_PRINTED << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PARAMETERS=" << PRINTER_NOTIFY_FIELD_PARAMETERS << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PORT_NAME=" << PRINTER_NOTIFY_FIELD_PORT_NAME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PRINTER_NAME=" << PRINTER_NOTIFY_FIELD_PRINTER_NAME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR=" << PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_PRIORITY=" << PRINTER_NOTIFY_FIELD_PRIORITY << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR=" << PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_SEPFILE=" << PRINTER_NOTIFY_FIELD_SEPFILE << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_SERVER_NAME=" << PRINTER_NOTIFY_FIELD_SERVER_NAME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_SHARE_NAME=" << PRINTER_NOTIFY_FIELD_SHARE_NAME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_START_TIME=" << PRINTER_NOTIFY_FIELD_START_TIME << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_STATUS=" << PRINTER_NOTIFY_FIELD_STATUS << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_STATUS_STRING=" << PRINTER_NOTIFY_FIELD_STATUS_STRING << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_TOTAL_BYTES=" << PRINTER_NOTIFY_FIELD_TOTAL_BYTES << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_TOTAL_PAGES=" << PRINTER_NOTIFY_FIELD_TOTAL_PAGES << std::endl;
    std::cout << "PRINTER_NOTIFY_FIELD_UNTIL_TIME=" << PRINTER_NOTIFY_FIELD_UNTIL_TIME << std::endl;
    std::cout << "PRINTER_NOTIFY_INFO_DISCARDED=" << PRINTER_NOTIFY_INFO_DISCARDED << std::endl;
    std::cout << "PRINTER_NOTIFY_OPTIONS_REFRESH=" << PRINTER_NOTIFY_OPTIONS_REFRESH << std::endl;
    std::cout << "PRINTER_NOTIFY_TYPE=" << PRINTER_NOTIFY_TYPE << std::endl;
    std::cout << "PRINTER_READ=" << PRINTER_READ << std::endl;
    std::cout << "PRINTER_STATUS_BUSY=" << PRINTER_STATUS_BUSY << std::endl;
    std::cout << "PRINTER_STATUS_DOOR_OPEN=" << PRINTER_STATUS_DOOR_OPEN << std::endl;
    std::cout << "PRINTER_STATUS_ERROR=" << PRINTER_STATUS_ERROR << std::endl;
    std::cout << "PRINTER_STATUS_INITIALIZING=" << PRINTER_STATUS_INITIALIZING << std::endl;
    std::cout << "PRINTER_STATUS_IO_ACTIVE=" << PRINTER_STATUS_IO_ACTIVE << std::endl;
    std::cout << "PRINTER_STATUS_MANUAL_FEED=" << PRINTER_STATUS_MANUAL_FEED << std::endl;
    std::cout << "PRINTER_STATUS_NOT_AVAILABLE=" << PRINTER_STATUS_NOT_AVAILABLE << std::endl;
    std::cout << "PRINTER_STATUS_NO_TONER=" << PRINTER_STATUS_NO_TONER << std::endl;
    std::cout << "PRINTER_STATUS_OFFLINE=" << PRINTER_STATUS_OFFLINE << std::endl;
    std::cout << "PRINTER_STATUS_OUTPUT_BIN_FULL=" << PRINTER_STATUS_OUTPUT_BIN_FULL << std::endl;
    std::cout << "PRINTER_STATUS_OUT_OF_MEMORY=" << PRINTER_STATUS_OUT_OF_MEMORY << std::endl;
    std::cout << "PRINTER_STATUS_PAGE_PUNT=" << PRINTER_STATUS_PAGE_PUNT << std::endl;
    std::cout << "PRINTER_STATUS_PAPER_JAM=" << PRINTER_STATUS_PAPER_JAM << std::endl;
    std::cout << "PRINTER_STATUS_PAPER_OUT=" << PRINTER_STATUS_PAPER_OUT << std::endl;
    std::cout << "PRINTER_STATUS_PAPER_PROBLEM=" << PRINTER_STATUS_PAPER_PROBLEM << std::endl;
    std::cout << "PRINTER_STATUS_PAUSED=" << PRINTER_STATUS_PAUSED << std::endl;
    std::cout << "PRINTER_STATUS_PENDING_DELETION=" << PRINTER_STATUS_PENDING_DELETION << std::endl;
    std::cout << "PRINTER_STATUS_POWER_SAVE=" << PRINTER_STATUS_POWER_SAVE << std::endl;
    std::cout << "PRINTER_STATUS_PRINTING=" << PRINTER_STATUS_PRINTING << std::endl;
    std::cout << "PRINTER_STATUS_PROCESSING=" << PRINTER_STATUS_PROCESSING << std::endl;
    std::cout << "PRINTER_STATUS_SERVER_UNKNOWN=" << PRINTER_STATUS_SERVER_UNKNOWN << std::endl;
    std::cout << "PRINTER_STATUS_TONER_LOW=" << PRINTER_STATUS_TONER_LOW << std::endl;
    std::cout << "PRINTER_STATUS_USER_INTERVENTION=" << PRINTER_STATUS_USER_INTERVENTION << std::endl;
    std::cout << "PRINTER_STATUS_WAITING=" << PRINTER_STATUS_WAITING << std::endl;
    std::cout << "PRINTER_STATUS_WARMING_UP=" << PRINTER_STATUS_WARMING_UP << std::endl;
    std::cout << "PRINTER_WRITE=" << PRINTER_WRITE << std::endl;
    std::cout << "PRINTRATEUNIT_CPS=" << PRINTRATEUNIT_CPS << std::endl;
    std::cout << "PRINTRATEUNIT_IPM=" << PRINTRATEUNIT_IPM << std::endl;
    std::cout << "PRINTRATEUNIT_LPM=" << PRINTRATEUNIT_LPM << std::endl;
    std::cout << "PRINTRATEUNIT_PPM=" << PRINTRATEUNIT_PPM << std::endl;
    std::cout << "PRINT_PROP_FORCE_NAME=" << PRINT_PROP_FORCE_NAME << std::endl;
    std::cout << "PRIVATEKEYBLOB=" << PRIVATEKEYBLOB << std::endl;
    std::cout << "PRIVATE_NAMESPACE_FLAG_DESTROY=" << PRIVATE_NAMESPACE_FLAG_DESTROY << std::endl;
    std::cout << "PRIVILEGE_SET_ALL_NECESSARY=" << PRIVILEGE_SET_ALL_NECESSARY << std::endl;
    std::cout << "PRNSETUPDLGORD=" << PRNSETUPDLGORD << std::endl;
    std::cout << "PROCESSOR_ALPHA_21064=" << PROCESSOR_ALPHA_21064 << std::endl;
    std::cout << "PROCESSOR_AMD_X8664=" << PROCESSOR_AMD_X8664 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_ALPHA=" << PROCESSOR_ARCHITECTURE_ALPHA << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_ALPHA64=" << PROCESSOR_ARCHITECTURE_ALPHA64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_AMD64=" << PROCESSOR_ARCHITECTURE_AMD64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_ARM=" << PROCESSOR_ARCHITECTURE_ARM << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64=" << PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_ARM64=" << PROCESSOR_ARCHITECTURE_ARM64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_IA32_ON_ARM64=" << PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_IA32_ON_WIN64=" << PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_IA64=" << PROCESSOR_ARCHITECTURE_IA64 << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_INTEL=" << PROCESSOR_ARCHITECTURE_INTEL << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_MIPS=" << PROCESSOR_ARCHITECTURE_MIPS << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_MSIL=" << PROCESSOR_ARCHITECTURE_MSIL << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_NEUTRAL=" << PROCESSOR_ARCHITECTURE_NEUTRAL << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_PPC=" << PROCESSOR_ARCHITECTURE_PPC << std::endl;
    std::cout << "PROCESSOR_ARCHITECTURE_SHX=" << PROCESSOR_ARCHITECTURE_SHX << std::endl;
    std::cout << "PROCESSOR_ARM720=" << PROCESSOR_ARM720 << std::endl;
    std::cout << "PROCESSOR_ARM820=" << PROCESSOR_ARM820 << std::endl;
    std::cout << "PROCESSOR_ARM920=" << PROCESSOR_ARM920 << std::endl;
    std::cout << "PROCESSOR_ARM_7TDMI=" << PROCESSOR_ARM_7TDMI << std::endl;
    std::cout << "PROCESSOR_HITACHI_SH3=" << PROCESSOR_HITACHI_SH3 << std::endl;
    std::cout << "PROCESSOR_HITACHI_SH3E=" << PROCESSOR_HITACHI_SH3E << std::endl;
    std::cout << "PROCESSOR_HITACHI_SH4=" << PROCESSOR_HITACHI_SH4 << std::endl;
    std::cout << "PROCESSOR_IDLESTATE_POLICY_COUNT=" << PROCESSOR_IDLESTATE_POLICY_COUNT << std::endl;
    std::cout << "PROCESSOR_INTEL_386=" << PROCESSOR_INTEL_386 << std::endl;
    std::cout << "PROCESSOR_INTEL_486=" << PROCESSOR_INTEL_486 << std::endl;
    std::cout << "PROCESSOR_INTEL_IA64=" << PROCESSOR_INTEL_IA64 << std::endl;
    std::cout << "PROCESSOR_INTEL_PENTIUM=" << PROCESSOR_INTEL_PENTIUM << std::endl;
    std::cout << "PROCESSOR_MIPS_R4000=" << PROCESSOR_MIPS_R4000 << std::endl;
    std::cout << "PROCESSOR_MOTOROLA_821=" << PROCESSOR_MOTOROLA_821 << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE=" << PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_DISABLED=" << PROCESSOR_PERF_BOOST_MODE_DISABLED << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE=" << PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED=" << PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_ENABLED=" << PROCESSOR_PERF_BOOST_MODE_ENABLED << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_MODE_MAX=" << PROCESSOR_PERF_BOOST_MODE_MAX << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_POLICY_DISABLED=" << PROCESSOR_PERF_BOOST_POLICY_DISABLED << std::endl;
    std::cout << "PROCESSOR_PERF_BOOST_POLICY_MAX=" << PROCESSOR_PERF_BOOST_POLICY_MAX << std::endl;
    std::cout << "PROCESSOR_PPC_601=" << PROCESSOR_PPC_601 << std::endl;
    std::cout << "PROCESSOR_PPC_603=" << PROCESSOR_PPC_603 << std::endl;
    std::cout << "PROCESSOR_PPC_604=" << PROCESSOR_PPC_604 << std::endl;
    std::cout << "PROCESSOR_PPC_620=" << PROCESSOR_PPC_620 << std::endl;
    std::cout << "PROCESSOR_STRONGARM=" << PROCESSOR_STRONGARM << std::endl;
    std::cout << "PROCESS_CREATE_PROCESS=" << PROCESS_CREATE_PROCESS << std::endl;
    std::cout << "PROCESS_CREATE_THREAD=" << PROCESS_CREATE_THREAD << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED=" << PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE=" << PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE=" << PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS=" << PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED=" << PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED=" << PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE=" << PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED=" << PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF=" << PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON=" << PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER=" << PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK=" << PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK << std::endl;
    std::cout << "PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED=" << PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED << std::endl;
    std::cout << "PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION=" << PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION << std::endl;
    std::cout << "PROCESS_DEP_ENABLE=" << PROCESS_DEP_ENABLE << std::endl;
    std::cout << "PROCESS_DUP_HANDLE=" << PROCESS_DUP_HANDLE << std::endl;
    std::cout << "PROCESS_HEAP_ENTRY_BUSY=" << PROCESS_HEAP_ENTRY_BUSY << std::endl;
    std::cout << "PROCESS_HEAP_ENTRY_DDESHARE=" << PROCESS_HEAP_ENTRY_DDESHARE << std::endl;
    std::cout << "PROCESS_HEAP_ENTRY_MOVEABLE=" << PROCESS_HEAP_ENTRY_MOVEABLE << std::endl;
    std::cout << "PROCESS_HEAP_REGION=" << PROCESS_HEAP_REGION << std::endl;
    std::cout << "PROCESS_HEAP_SEG_ALLOC=" << PROCESS_HEAP_SEG_ALLOC << std::endl;
    std::cout << "PROCESS_HEAP_UNCOMMITTED_RANGE=" << PROCESS_HEAP_UNCOMMITTED_RANGE << std::endl;
    std::cout << "PROCESS_MODE_BACKGROUND_BEGIN=" << PROCESS_MODE_BACKGROUND_BEGIN << std::endl;
    std::cout << "PROCESS_MODE_BACKGROUND_END=" << PROCESS_MODE_BACKGROUND_END << std::endl;
    std::cout << "PROCESS_NAME_NATIVE=" << PROCESS_NAME_NATIVE << std::endl;
    std::cout << "PROCESS_QUERY_INFORMATION=" << PROCESS_QUERY_INFORMATION << std::endl;
    std::cout << "PROCESS_QUERY_LIMITED_INFORMATION=" << PROCESS_QUERY_LIMITED_INFORMATION << std::endl;
    std::cout << "PROCESS_SET_INFORMATION=" << PROCESS_SET_INFORMATION << std::endl;
    std::cout << "PROCESS_SET_QUOTA=" << PROCESS_SET_QUOTA << std::endl;
    std::cout << "PROCESS_SET_SESSIONID=" << PROCESS_SET_SESSIONID << std::endl;
    std::cout << "PROCESS_SUSPEND_RESUME=" << PROCESS_SUSPEND_RESUME << std::endl;
    std::cout << "PROCESS_TERMINATE=" << PROCESS_TERMINATE << std::endl;
    std::cout << "PROCESS_VM_OPERATION=" << PROCESS_VM_OPERATION << std::endl;
    std::cout << "PROCESS_VM_READ=" << PROCESS_VM_READ << std::endl;
    std::cout << "PROCESS_VM_WRITE=" << PROCESS_VM_WRITE << std::endl;
    std::cout << "PROC_IDLE_BUCKET_COUNT=" << PROC_IDLE_BUCKET_COUNT << std::endl;
    std::cout << "PROC_IDLE_BUCKET_COUNT_EX=" << PROC_IDLE_BUCKET_COUNT_EX << std::endl;
    std::cout << "PROC_THREAD_ATTRIBUTE_ADDITIVE=" << PROC_THREAD_ATTRIBUTE_ADDITIVE << std::endl;
    std::cout << "PROC_THREAD_ATTRIBUTE_INPUT=" << PROC_THREAD_ATTRIBUTE_INPUT << std::endl;
    std::cout << "PROC_THREAD_ATTRIBUTE_REPLACE_VALUE=" << PROC_THREAD_ATTRIBUTE_REPLACE_VALUE << std::endl;
    std::cout << "PROC_THREAD_ATTRIBUTE_THREAD=" << PROC_THREAD_ATTRIBUTE_THREAD << std::endl;
    std::cout << "PRODUCT_ARM64_SERVER=" << PRODUCT_ARM64_SERVER << std::endl;
    std::cout << "PRODUCT_BUSINESS=" << PRODUCT_BUSINESS << std::endl;
    std::cout << "PRODUCT_BUSINESS_N=" << PRODUCT_BUSINESS_N << std::endl;
    std::cout << "PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER=" << PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER << std::endl;
    std::cout << "PRODUCT_CLOUD_STORAGE_SERVER=" << PRODUCT_CLOUD_STORAGE_SERVER << std::endl;
    std::cout << "PRODUCT_CLUSTER_SERVER=" << PRODUCT_CLUSTER_SERVER << std::endl;
    std::cout << "PRODUCT_CLUSTER_SERVER_V=" << PRODUCT_CLUSTER_SERVER_V << std::endl;
    std::cout << "PRODUCT_CONNECTED_CAR=" << PRODUCT_CONNECTED_CAR << std::endl;
    std::cout << "PRODUCT_CORE=" << PRODUCT_CORE << std::endl;
    std::cout << "PRODUCT_CORE_ARM=" << PRODUCT_CORE_ARM << std::endl;
    std::cout << "PRODUCT_CORE_CONNECTED=" << PRODUCT_CORE_CONNECTED << std::endl;
    std::cout << "PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC=" << PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC << std::endl;
    std::cout << "PRODUCT_CORE_CONNECTED_N=" << PRODUCT_CORE_CONNECTED_N << std::endl;
    std::cout << "PRODUCT_CORE_CONNECTED_SINGLELANGUAGE=" << PRODUCT_CORE_CONNECTED_SINGLELANGUAGE << std::endl;
    std::cout << "PRODUCT_CORE_COUNTRYSPECIFIC=" << PRODUCT_CORE_COUNTRYSPECIFIC << std::endl;
    std::cout << "PRODUCT_CORE_LANGUAGESPECIFIC=" << PRODUCT_CORE_LANGUAGESPECIFIC << std::endl;
    std::cout << "PRODUCT_CORE_N=" << PRODUCT_CORE_N << std::endl;
    std::cout << "PRODUCT_CORE_SINGLELANGUAGE=" << PRODUCT_CORE_SINGLELANGUAGE << std::endl;
    std::cout << "PRODUCT_DATACENTER_EVALUATION_SERVER=" << PRODUCT_DATACENTER_EVALUATION_SERVER << std::endl;
    std::cout << "PRODUCT_DATACENTER_SERVER=" << PRODUCT_DATACENTER_SERVER << std::endl;
    std::cout << "PRODUCT_DATACENTER_SERVER_CORE_V=" << PRODUCT_DATACENTER_SERVER_CORE_V << std::endl;
    std::cout << "PRODUCT_DATACENTER_SERVER_V=" << PRODUCT_DATACENTER_SERVER_V << std::endl;
    std::cout << "PRODUCT_EDUCATION=" << PRODUCT_EDUCATION << std::endl;
    std::cout << "PRODUCT_EMBEDDED=" << PRODUCT_EMBEDDED << std::endl;
    std::cout << "PRODUCT_EMBEDDED_A=" << PRODUCT_EMBEDDED_A << std::endl;
    std::cout << "PRODUCT_EMBEDDED_AUTOMOTIVE=" << PRODUCT_EMBEDDED_AUTOMOTIVE << std::endl;
    std::cout << "PRODUCT_EMBEDDED_E=" << PRODUCT_EMBEDDED_E << std::endl;
    std::cout << "PRODUCT_EMBEDDED_EVAL=" << PRODUCT_EMBEDDED_EVAL << std::endl;
    std::cout << "PRODUCT_EMBEDDED_E_EVAL=" << PRODUCT_EMBEDDED_E_EVAL << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY=" << PRODUCT_EMBEDDED_INDUSTRY << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY_A=" << PRODUCT_EMBEDDED_INDUSTRY_A << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY_A_E=" << PRODUCT_EMBEDDED_INDUSTRY_A_E << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY_E=" << PRODUCT_EMBEDDED_INDUSTRY_E << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY_EVAL=" << PRODUCT_EMBEDDED_INDUSTRY_EVAL << std::endl;
    std::cout << "PRODUCT_EMBEDDED_INDUSTRY_E_EVAL=" << PRODUCT_EMBEDDED_INDUSTRY_E_EVAL << std::endl;
    std::cout << "PRODUCT_ENTERPRISE=" << PRODUCT_ENTERPRISE << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_E=" << PRODUCT_ENTERPRISE_E << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_EVALUATION=" << PRODUCT_ENTERPRISE_EVALUATION << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_N_EVALUATION=" << PRODUCT_ENTERPRISE_N_EVALUATION << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_S=" << PRODUCT_ENTERPRISE_S << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_SERVER_CORE_V=" << PRODUCT_ENTERPRISE_SERVER_CORE_V << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_SERVER_V=" << PRODUCT_ENTERPRISE_SERVER_V << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_S_EVALUATION=" << PRODUCT_ENTERPRISE_S_EVALUATION << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_S_N=" << PRODUCT_ENTERPRISE_S_N << std::endl;
    std::cout << "PRODUCT_ENTERPRISE_S_N_EVALUATION=" << PRODUCT_ENTERPRISE_S_N_EVALUATION << std::endl;
    std::cout << "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL=" << PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL << std::endl;
    std::cout << "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC=" << PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC << std::endl;
    std::cout << "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT=" << PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT << std::endl;
    std::cout << "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC=" << PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC << std::endl;
    std::cout << "PRODUCT_HOME_BASIC=" << PRODUCT_HOME_BASIC << std::endl;
    std::cout << "PRODUCT_HOME_BASIC_E=" << PRODUCT_HOME_BASIC_E << std::endl;
    std::cout << "PRODUCT_HOME_BASIC_N=" << PRODUCT_HOME_BASIC_N << std::endl;
    std::cout << "PRODUCT_HOME_PREMIUM=" << PRODUCT_HOME_PREMIUM << std::endl;
    std::cout << "PRODUCT_HOME_PREMIUM_E=" << PRODUCT_HOME_PREMIUM_E << std::endl;
    std::cout << "PRODUCT_HOME_PREMIUM_SERVER=" << PRODUCT_HOME_PREMIUM_SERVER << std::endl;
    std::cout << "PRODUCT_HOME_SERVER=" << PRODUCT_HOME_SERVER << std::endl;
    std::cout << "PRODUCT_ID_LENGTH=" << PRODUCT_ID_LENGTH << std::endl;
    std::cout << "PRODUCT_INDUSTRY_HANDHELD=" << PRODUCT_INDUSTRY_HANDHELD << std::endl;
    std::cout << "PRODUCT_IOTUAP=" << PRODUCT_IOTUAP << std::endl;
    std::cout << "PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING=" << PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING << std::endl;
    std::cout << "PRODUCT_MOBILE_CORE=" << PRODUCT_MOBILE_CORE << std::endl;
    std::cout << "PRODUCT_MOBILE_ENTERPRISE=" << PRODUCT_MOBILE_ENTERPRISE << std::endl;
    std::cout << "PRODUCT_MULTIPOINT_PREMIUM_SERVER=" << PRODUCT_MULTIPOINT_PREMIUM_SERVER << std::endl;
    std::cout << "PRODUCT_MULTIPOINT_STANDARD_SERVER=" << PRODUCT_MULTIPOINT_STANDARD_SERVER << std::endl;
    std::cout << "PRODUCT_NANO_SERVER=" << PRODUCT_NANO_SERVER << std::endl;
    std::cout << "PRODUCT_PPI_PRO=" << PRODUCT_PPI_PRO << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL=" << PRODUCT_PROFESSIONAL << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_E=" << PRODUCT_PROFESSIONAL_E << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_EMBEDDED=" << PRODUCT_PROFESSIONAL_EMBEDDED << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_N=" << PRODUCT_PROFESSIONAL_N << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_S=" << PRODUCT_PROFESSIONAL_S << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_STUDENT=" << PRODUCT_PROFESSIONAL_STUDENT << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_STUDENT_N=" << PRODUCT_PROFESSIONAL_STUDENT_N << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_S_N=" << PRODUCT_PROFESSIONAL_S_N << std::endl;
    std::cout << "PRODUCT_PROFESSIONAL_WMC=" << PRODUCT_PROFESSIONAL_WMC << std::endl;
    std::cout << "PRODUCT_SB_SOLUTION_SERVER=" << PRODUCT_SB_SOLUTION_SERVER << std::endl;
    std::cout << "PRODUCT_SB_SOLUTION_SERVER_EM=" << PRODUCT_SB_SOLUTION_SERVER_EM << std::endl;
    std::cout << "PRODUCT_SERVER_FOR_SB_SOLUTIONS=" << PRODUCT_SERVER_FOR_SB_SOLUTIONS << std::endl;
    std::cout << "PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM=" << PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM << std::endl;
    std::cout << "PRODUCT_SERVER_FOR_SMALLBUSINESS=" << PRODUCT_SERVER_FOR_SMALLBUSINESS << std::endl;
    std::cout << "PRODUCT_SERVER_FOR_SMALLBUSINESS_V=" << PRODUCT_SERVER_FOR_SMALLBUSINESS_V << std::endl;
    std::cout << "PRODUCT_SERVER_FOUNDATION=" << PRODUCT_SERVER_FOUNDATION << std::endl;
    std::cout << "PRODUCT_SERVER_V=" << PRODUCT_SERVER_V << std::endl;
    std::cout << "PRODUCT_SMALLBUSINESS_SERVER=" << PRODUCT_SMALLBUSINESS_SERVER << std::endl;
    std::cout << "PRODUCT_SMALLBUSINESS_SERVER_PREMIUM=" << PRODUCT_SMALLBUSINESS_SERVER_PREMIUM << std::endl;
    std::cout << "PRODUCT_SOLUTION_EMBEDDEDSERVER=" << PRODUCT_SOLUTION_EMBEDDEDSERVER << std::endl;
    std::cout << "PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE=" << PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE << std::endl;
    std::cout << "PRODUCT_STANDARD_EVALUATION_SERVER=" << PRODUCT_STANDARD_EVALUATION_SERVER << std::endl;
    std::cout << "PRODUCT_STANDARD_SERVER=" << PRODUCT_STANDARD_SERVER << std::endl;
    std::cout << "PRODUCT_STANDARD_SERVER_CORE_V=" << PRODUCT_STANDARD_SERVER_CORE_V << std::endl;
    std::cout << "PRODUCT_STANDARD_SERVER_SOLUTIONS=" << PRODUCT_STANDARD_SERVER_SOLUTIONS << std::endl;
    std::cout << "PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE=" << PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE << std::endl;
    std::cout << "PRODUCT_STANDARD_SERVER_V=" << PRODUCT_STANDARD_SERVER_V << std::endl;
    std::cout << "PRODUCT_STARTER_E=" << PRODUCT_STARTER_E << std::endl;
    std::cout << "PRODUCT_STORAGE_ENTERPRISE_SERVER=" << PRODUCT_STORAGE_ENTERPRISE_SERVER << std::endl;
    std::cout << "PRODUCT_STORAGE_EXPRESS_SERVER=" << PRODUCT_STORAGE_EXPRESS_SERVER << std::endl;
    std::cout << "PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER=" << PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER << std::endl;
    std::cout << "PRODUCT_STORAGE_STANDARD_SERVER=" << PRODUCT_STORAGE_STANDARD_SERVER << std::endl;
    std::cout << "PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER=" << PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER << std::endl;
    std::cout << "PRODUCT_STORAGE_WORKGROUP_SERVER=" << PRODUCT_STORAGE_WORKGROUP_SERVER << std::endl;
    std::cout << "PRODUCT_THINPC=" << PRODUCT_THINPC << std::endl;
    std::cout << "PRODUCT_ULTIMATE=" << PRODUCT_ULTIMATE << std::endl;
    std::cout << "PRODUCT_ULTIMATE_E=" << PRODUCT_ULTIMATE_E << std::endl;
    std::cout << "PRODUCT_UNDEFINED=" << PRODUCT_UNDEFINED << std::endl;
    std::cout << "PRODUCT_WEB_SERVER=" << PRODUCT_WEB_SERVER << std::endl;
    std::cout << "PROFILE_KERNEL=" << PROFILE_KERNEL << std::endl;
    std::cout << "PROFILE_SERVER=" << PROFILE_SERVER << std::endl;
    std::cout << "PROFILE_USER=" << PROFILE_USER << std::endl;
    std::cout << "PROGRESS_CANCEL=" << PROGRESS_CANCEL << std::endl;
    std::cout << "PROGRESS_CONTINUE=" << PROGRESS_CONTINUE << std::endl;
    std::cout << "PROGRESS_QUIET=" << PROGRESS_QUIET << std::endl;
    std::cout << "PROGRESS_STOP=" << PROGRESS_STOP << std::endl;
    std::cout << "PROOF_QUALITY=" << PROOF_QUALITY << std::endl;
    std::cout << "PROPSETFLAG_ANSI=" << PROPSETFLAG_ANSI << std::endl;
    std::cout << "PROPSETFLAG_CASE_SENSITIVE=" << PROPSETFLAG_CASE_SENSITIVE << std::endl;
    std::cout << "PROPSETFLAG_DEFAULT=" << PROPSETFLAG_DEFAULT << std::endl;
    std::cout << "PROPSETFLAG_NONSIMPLE=" << PROPSETFLAG_NONSIMPLE << std::endl;
    std::cout << "PROPSETFLAG_UNBUFFERED=" << PROPSETFLAG_UNBUFFERED << std::endl;
    std::cout << "PROPSET_BEHAVIOR_CASE_SENSITIVE=" << PROPSET_BEHAVIOR_CASE_SENSITIVE << std::endl;
    std::cout << "PROP_LG_CXDLG=" << PROP_LG_CXDLG << std::endl;
    std::cout << "PROP_LG_CYDLG=" << PROP_LG_CYDLG << std::endl;
    std::cout << "PROP_MED_CXDLG=" << PROP_MED_CXDLG << std::endl;
    std::cout << "PROP_MED_CYDLG=" << PROP_MED_CYDLG << std::endl;
    std::cout << "PROP_SM_CXDLG=" << PROP_SM_CXDLG << std::endl;
    std::cout << "PROP_SM_CYDLG=" << PROP_SM_CYDLG << std::endl;
    std::cout << "PROTOCOLFLAG_NO_PICS_CHECK=" << PROTOCOLFLAG_NO_PICS_CHECK << std::endl;
    std::cout << "PROVIDER_KEEPS_VALUE_LENGTH=" << PROVIDER_KEEPS_VALUE_LENGTH << std::endl;
    std::cout << "PROV_DH_SCHANNEL=" << PROV_DH_SCHANNEL << std::endl;
    std::cout << "PROV_DSS=" << PROV_DSS << std::endl;
    std::cout << "PROV_DSS_DH=" << PROV_DSS_DH << std::endl;
    std::cout << "PROV_EC_ECDSA_FULL=" << PROV_EC_ECDSA_FULL << std::endl;
    std::cout << "PROV_EC_ECDSA_SIG=" << PROV_EC_ECDSA_SIG << std::endl;
    std::cout << "PROV_EC_ECNRA_FULL=" << PROV_EC_ECNRA_FULL << std::endl;
    std::cout << "PROV_EC_ECNRA_SIG=" << PROV_EC_ECNRA_SIG << std::endl;
    std::cout << "PROV_FORTEZZA=" << PROV_FORTEZZA << std::endl;
    std::cout << "PROV_INTEL_SEC=" << PROV_INTEL_SEC << std::endl;
    std::cout << "PROV_MS_EXCHANGE=" << PROV_MS_EXCHANGE << std::endl;
    std::cout << "PROV_REPLACE_OWF=" << PROV_REPLACE_OWF << std::endl;
    std::cout << "PROV_RNG=" << PROV_RNG << std::endl;
    std::cout << "PROV_RSA_AES=" << PROV_RSA_AES << std::endl;
    std::cout << "PROV_RSA_FULL=" << PROV_RSA_FULL << std::endl;
    std::cout << "PROV_RSA_SCHANNEL=" << PROV_RSA_SCHANNEL << std::endl;
    std::cout << "PROV_RSA_SIG=" << PROV_RSA_SIG << std::endl;
    std::cout << "PROV_SPYRUS_LYNKS=" << PROV_SPYRUS_LYNKS << std::endl;
    std::cout << "PROV_SSL=" << PROV_SSL << std::endl;
    std::cout << "PROV_STT_ACQ=" << PROV_STT_ACQ << std::endl;
    std::cout << "PROV_STT_BRND=" << PROV_STT_BRND << std::endl;
    std::cout << "PROV_STT_ISS=" << PROV_STT_ISS << std::endl;
    std::cout << "PROV_STT_MER=" << PROV_STT_MER << std::endl;
    std::cout << "PROV_STT_ROOT=" << PROV_STT_ROOT << std::endl;
    std::cout << "PRSPEC_LPWSTR=" << PRSPEC_LPWSTR << std::endl;
    std::cout << "PRSPEC_PROPID=" << PRSPEC_PROPID << std::endl;
    std::cout << "PR_JOBSTATUS=" << PR_JOBSTATUS << std::endl;
    std::cout << "PSBTN_APPLYNOW=" << PSBTN_APPLYNOW << std::endl;
    std::cout << "PSBTN_BACK=" << PSBTN_BACK << std::endl;
    std::cout << "PSBTN_CANCEL=" << PSBTN_CANCEL << std::endl;
    std::cout << "PSBTN_FINISH=" << PSBTN_FINISH << std::endl;
    std::cout << "PSBTN_HELP=" << PSBTN_HELP << std::endl;
    std::cout << "PSBTN_MAX=" << PSBTN_MAX << std::endl;
    std::cout << "PSBTN_NEXT=" << PSBTN_NEXT << std::endl;
    std::cout << "PSBTN_OK=" << PSBTN_OK << std::endl;
    std::cout << "PSCB_BUTTONPRESSED=" << PSCB_BUTTONPRESSED << std::endl;
    std::cout << "PSCB_INITIALIZED=" << PSCB_INITIALIZED << std::endl;
    std::cout << "PSCB_PRECREATE=" << PSCB_PRECREATE << std::endl;
    std::cout << "PSD_DEFAULTMINMARGINS=" << PSD_DEFAULTMINMARGINS << std::endl;
    std::cout << "PSD_DISABLEMARGINS=" << PSD_DISABLEMARGINS << std::endl;
    std::cout << "PSD_DISABLEORIENTATION=" << PSD_DISABLEORIENTATION << std::endl;
    std::cout << "PSD_DISABLEPAGEPAINTING=" << PSD_DISABLEPAGEPAINTING << std::endl;
    std::cout << "PSD_DISABLEPAPER=" << PSD_DISABLEPAPER << std::endl;
    std::cout << "PSD_DISABLEPRINTER=" << PSD_DISABLEPRINTER << std::endl;
    std::cout << "PSD_ENABLEPAGEPAINTHOOK=" << PSD_ENABLEPAGEPAINTHOOK << std::endl;
    std::cout << "PSD_ENABLEPAGESETUPHOOK=" << PSD_ENABLEPAGESETUPHOOK << std::endl;
    std::cout << "PSD_ENABLEPAGESETUPTEMPLATE=" << PSD_ENABLEPAGESETUPTEMPLATE << std::endl;
    std::cout << "PSD_ENABLEPAGESETUPTEMPLATEHANDLE=" << PSD_ENABLEPAGESETUPTEMPLATEHANDLE << std::endl;
    std::cout << "PSD_INHUNDREDTHSOFMILLIMETERS=" << PSD_INHUNDREDTHSOFMILLIMETERS << std::endl;
    std::cout << "PSD_INTHOUSANDTHSOFINCHES=" << PSD_INTHOUSANDTHSOFINCHES << std::endl;
    std::cout << "PSD_INWININIINTLMEASURE=" << PSD_INWININIINTLMEASURE << std::endl;
    std::cout << "PSD_MARGINS=" << PSD_MARGINS << std::endl;
    std::cout << "PSD_MINMARGINS=" << PSD_MINMARGINS << std::endl;
    std::cout << "PSD_NONETWORKBUTTON=" << PSD_NONETWORKBUTTON << std::endl;
    std::cout << "PSD_NOWARNING=" << PSD_NOWARNING << std::endl;
    std::cout << "PSD_RETURNDEFAULT=" << PSD_RETURNDEFAULT << std::endl;
    std::cout << "PSD_SHOWHELP=" << PSD_SHOWHELP << std::endl;
    std::cout << "PSEUDOCONSOLE_INHERIT_CURSOR=" << PSEUDOCONSOLE_INHERIT_CURSOR << std::endl;
    std::cout << "PSH_DEFAULT=" << PSH_DEFAULT << std::endl;
    std::cout << "PSH_HASHELP=" << PSH_HASHELP << std::endl;
    std::cout << "PSH_HEADER=" << PSH_HEADER << std::endl;
    std::cout << "PSH_MODELESS=" << PSH_MODELESS << std::endl;
    std::cout << "PSH_NOAPPLYNOW=" << PSH_NOAPPLYNOW << std::endl;
    std::cout << "PSH_NOCONTEXTHELP=" << PSH_NOCONTEXTHELP << std::endl;
    std::cout << "PSH_PROPSHEETPAGE=" << PSH_PROPSHEETPAGE << std::endl;
    std::cout << "PSH_PROPTITLE=" << PSH_PROPTITLE << std::endl;
    std::cout << "PSH_RTLREADING=" << PSH_RTLREADING << std::endl;
    std::cout << "PSH_STRETCHWATERMARK=" << PSH_STRETCHWATERMARK << std::endl;
    std::cout << "PSH_USECALLBACK=" << PSH_USECALLBACK << std::endl;
    std::cout << "PSH_USEHBMHEADER=" << PSH_USEHBMHEADER << std::endl;
    std::cout << "PSH_USEHBMWATERMARK=" << PSH_USEHBMWATERMARK << std::endl;
    std::cout << "PSH_USEHICON=" << PSH_USEHICON << std::endl;
    std::cout << "PSH_USEHPLWATERMARK=" << PSH_USEHPLWATERMARK << std::endl;
    std::cout << "PSH_USEICONID=" << PSH_USEICONID << std::endl;
    std::cout << "PSH_USEPAGELANG=" << PSH_USEPAGELANG << std::endl;
    std::cout << "PSH_USEPSTARTPAGE=" << PSH_USEPSTARTPAGE << std::endl;
    std::cout << "PSH_WATERMARK=" << PSH_WATERMARK << std::endl;
    std::cout << "PSH_WIZARD=" << PSH_WIZARD << std::endl;
    std::cout << "PSH_WIZARD97=" << PSH_WIZARD97 << std::endl;
    std::cout << "PSH_WIZARDCONTEXTHELP=" << PSH_WIZARDCONTEXTHELP << std::endl;
    std::cout << "PSH_WIZARDHASFINISH=" << PSH_WIZARDHASFINISH << std::endl;
    std::cout << "PSH_WIZARD_LITE=" << PSH_WIZARD_LITE << std::endl;
    std::cout << "PSIDENT_GDICENTRIC=" << PSIDENT_GDICENTRIC << std::endl;
    std::cout << "PSIDENT_PSCENTRIC=" << PSIDENT_PSCENTRIC << std::endl;
    std::cout << "PSINJECT_BEGINDEFAULTS=" << PSINJECT_BEGINDEFAULTS << std::endl;
    std::cout << "PSINJECT_BEGINPAGESETUP=" << PSINJECT_BEGINPAGESETUP << std::endl;
    std::cout << "PSINJECT_BEGINPROLOG=" << PSINJECT_BEGINPROLOG << std::endl;
    std::cout << "PSINJECT_BEGINSETUP=" << PSINJECT_BEGINSETUP << std::endl;
    std::cout << "PSINJECT_BEGINSTREAM=" << PSINJECT_BEGINSTREAM << std::endl;
    std::cout << "PSINJECT_BOUNDINGBOX=" << PSINJECT_BOUNDINGBOX << std::endl;
    std::cout << "PSINJECT_COMMENTS=" << PSINJECT_COMMENTS << std::endl;
    std::cout << "PSINJECT_DOCNEEDEDRES=" << PSINJECT_DOCNEEDEDRES << std::endl;
    std::cout << "PSINJECT_DOCSUPPLIEDRES=" << PSINJECT_DOCSUPPLIEDRES << std::endl;
    std::cout << "PSINJECT_DOCUMENTPROCESSCOLORS=" << PSINJECT_DOCUMENTPROCESSCOLORS << std::endl;
    std::cout << "PSINJECT_DOCUMENTPROCESSCOLORSATEND=" << PSINJECT_DOCUMENTPROCESSCOLORSATEND << std::endl;
    std::cout << "PSINJECT_ENDDEFAULTS=" << PSINJECT_ENDDEFAULTS << std::endl;
    std::cout << "PSINJECT_ENDPAGECOMMENTS=" << PSINJECT_ENDPAGECOMMENTS << std::endl;
    std::cout << "PSINJECT_ENDPAGESETUP=" << PSINJECT_ENDPAGESETUP << std::endl;
    std::cout << "PSINJECT_ENDPROLOG=" << PSINJECT_ENDPROLOG << std::endl;
    std::cout << "PSINJECT_ENDSETUP=" << PSINJECT_ENDSETUP << std::endl;
    std::cout << "PSINJECT_ENDSTREAM=" << PSINJECT_ENDSTREAM << std::endl;
    std::cout << "PSINJECT_EOF=" << PSINJECT_EOF << std::endl;
    std::cout << "PSINJECT_ORIENTATION=" << PSINJECT_ORIENTATION << std::endl;
    std::cout << "PSINJECT_PAGEBBOX=" << PSINJECT_PAGEBBOX << std::endl;
    std::cout << "PSINJECT_PAGENUMBER=" << PSINJECT_PAGENUMBER << std::endl;
    std::cout << "PSINJECT_PAGEORDER=" << PSINJECT_PAGEORDER << std::endl;
    std::cout << "PSINJECT_PAGES=" << PSINJECT_PAGES << std::endl;
    std::cout << "PSINJECT_PAGESATEND=" << PSINJECT_PAGESATEND << std::endl;
    std::cout << "PSINJECT_PAGETRAILER=" << PSINJECT_PAGETRAILER << std::endl;
    std::cout << "PSINJECT_PLATECOLOR=" << PSINJECT_PLATECOLOR << std::endl;
    std::cout << "PSINJECT_PSADOBE=" << PSINJECT_PSADOBE << std::endl;
    std::cout << "PSINJECT_SHOWPAGE=" << PSINJECT_SHOWPAGE << std::endl;
    std::cout << "PSINJECT_TRAILER=" << PSINJECT_TRAILER << std::endl;
    std::cout << "PSINJECT_VMRESTORE=" << PSINJECT_VMRESTORE << std::endl;
    std::cout << "PSINJECT_VMSAVE=" << PSINJECT_VMSAVE << std::endl;
    std::cout << "PSM_ADDPAGE=" << PSM_ADDPAGE << std::endl;
    std::cout << "PSM_APPLY=" << PSM_APPLY << std::endl;
    std::cout << "PSM_CANCELTOCLOSE=" << PSM_CANCELTOCLOSE << std::endl;
    std::cout << "PSM_CHANGED=" << PSM_CHANGED << std::endl;
    std::cout << "PSM_GETCURRENTPAGEHWND=" << PSM_GETCURRENTPAGEHWND << std::endl;
    std::cout << "PSM_GETRESULT=" << PSM_GETRESULT << std::endl;
    std::cout << "PSM_GETTABCONTROL=" << PSM_GETTABCONTROL << std::endl;
    std::cout << "PSM_HWNDTOINDEX=" << PSM_HWNDTOINDEX << std::endl;
    std::cout << "PSM_IDTOINDEX=" << PSM_IDTOINDEX << std::endl;
    std::cout << "PSM_INDEXTOHWND=" << PSM_INDEXTOHWND << std::endl;
    std::cout << "PSM_INDEXTOID=" << PSM_INDEXTOID << std::endl;
    std::cout << "PSM_INDEXTOPAGE=" << PSM_INDEXTOPAGE << std::endl;
    std::cout << "PSM_INSERTPAGE=" << PSM_INSERTPAGE << std::endl;
    std::cout << "PSM_ISDIALOGMESSAGE=" << PSM_ISDIALOGMESSAGE << std::endl;
    std::cout << "PSM_PAGETOINDEX=" << PSM_PAGETOINDEX << std::endl;
    std::cout << "PSM_PRESSBUTTON=" << PSM_PRESSBUTTON << std::endl;
    std::cout << "PSM_QUERYSIBLINGS=" << PSM_QUERYSIBLINGS << std::endl;
    std::cout << "PSM_REBOOTSYSTEM=" << PSM_REBOOTSYSTEM << std::endl;
    std::cout << "PSM_RECALCPAGESIZES=" << PSM_RECALCPAGESIZES << std::endl;
    std::cout << "PSM_REMOVEPAGE=" << PSM_REMOVEPAGE << std::endl;
    std::cout << "PSM_RESTARTWINDOWS=" << PSM_RESTARTWINDOWS << std::endl;
    std::cout << "PSM_SETCURSEL=" << PSM_SETCURSEL << std::endl;
    std::cout << "PSM_SETCURSELID=" << PSM_SETCURSELID << std::endl;
    std::cout << "PSM_SETFINISHTEXTA=" << PSM_SETFINISHTEXTA << std::endl;
    std::cout << "PSM_SETFINISHTEXTW=" << PSM_SETFINISHTEXTW << std::endl;
    std::cout << "PSM_SETHEADERSUBTITLEA=" << PSM_SETHEADERSUBTITLEA << std::endl;
    std::cout << "PSM_SETHEADERSUBTITLEW=" << PSM_SETHEADERSUBTITLEW << std::endl;
    std::cout << "PSM_SETHEADERTITLEA=" << PSM_SETHEADERTITLEA << std::endl;
    std::cout << "PSM_SETHEADERTITLEW=" << PSM_SETHEADERTITLEW << std::endl;
    std::cout << "PSM_SETTITLEA=" << PSM_SETTITLEA << std::endl;
    std::cout << "PSM_SETTITLEW=" << PSM_SETTITLEW << std::endl;
    std::cout << "PSM_SETWIZBUTTONS=" << PSM_SETWIZBUTTONS << std::endl;
    std::cout << "PSM_UNCHANGED=" << PSM_UNCHANGED << std::endl;
    std::cout << "PSNRET_INVALID=" << PSNRET_INVALID << std::endl;
    std::cout << "PSNRET_INVALID_NOCHANGEPAGE=" << PSNRET_INVALID_NOCHANGEPAGE << std::endl;
    std::cout << "PSNRET_MESSAGEHANDLED=" << PSNRET_MESSAGEHANDLED << std::endl;
    std::cout << "PSNRET_NOERROR=" << PSNRET_NOERROR << std::endl;
    std::cout << "PSN_APPLY=" << PSN_APPLY << std::endl;
    std::cout << "PSN_GETOBJECT=" << PSN_GETOBJECT << std::endl;
    std::cout << "PSN_HELP=" << PSN_HELP << std::endl;
    std::cout << "PSN_KILLACTIVE=" << PSN_KILLACTIVE << std::endl;
    std::cout << "PSN_QUERYCANCEL=" << PSN_QUERYCANCEL << std::endl;
    std::cout << "PSN_QUERYINITIALFOCUS=" << PSN_QUERYINITIALFOCUS << std::endl;
    std::cout << "PSN_RESET=" << PSN_RESET << std::endl;
    std::cout << "PSN_SETACTIVE=" << PSN_SETACTIVE << std::endl;
    std::cout << "PSN_TRANSLATEACCELERATOR=" << PSN_TRANSLATEACCELERATOR << std::endl;
    std::cout << "PSN_WIZBACK=" << PSN_WIZBACK << std::endl;
    std::cout << "PSN_WIZFINISH=" << PSN_WIZFINISH << std::endl;
    std::cout << "PSN_WIZNEXT=" << PSN_WIZNEXT << std::endl;
    std::cout << "PSPCB_ADDREF=" << PSPCB_ADDREF << std::endl;
    std::cout << "PSPCB_CREATE=" << PSPCB_CREATE << std::endl;
    std::cout << "PSPCB_RELEASE=" << PSPCB_RELEASE << std::endl;
    std::cout << "PSPROTOCOL_ASCII=" << PSPROTOCOL_ASCII << std::endl;
    std::cout << "PSPROTOCOL_BCP=" << PSPROTOCOL_BCP << std::endl;
    std::cout << "PSPROTOCOL_BINARY=" << PSPROTOCOL_BINARY << std::endl;
    std::cout << "PSPROTOCOL_TBCP=" << PSPROTOCOL_TBCP << std::endl;
    std::cout << "PSP_DEFAULT=" << PSP_DEFAULT << std::endl;
    std::cout << "PSP_DLGINDIRECT=" << PSP_DLGINDIRECT << std::endl;
    std::cout << "PSP_HASHELP=" << PSP_HASHELP << std::endl;
    std::cout << "PSP_HIDEHEADER=" << PSP_HIDEHEADER << std::endl;
    std::cout << "PSP_PREMATURE=" << PSP_PREMATURE << std::endl;
    std::cout << "PSP_RTLREADING=" << PSP_RTLREADING << std::endl;
    std::cout << "PSP_USECALLBACK=" << PSP_USECALLBACK << std::endl;
    std::cout << "PSP_USEFUSIONCONTEXT=" << PSP_USEFUSIONCONTEXT << std::endl;
    std::cout << "PSP_USEHEADERSUBTITLE=" << PSP_USEHEADERSUBTITLE << std::endl;
    std::cout << "PSP_USEHEADERTITLE=" << PSP_USEHEADERTITLE << std::endl;
    std::cout << "PSP_USEHICON=" << PSP_USEHICON << std::endl;
    std::cout << "PSP_USEICONID=" << PSP_USEICONID << std::endl;
    std::cout << "PSP_USEREFPARENT=" << PSP_USEREFPARENT << std::endl;
    std::cout << "PSP_USETITLE=" << PSP_USETITLE << std::endl;
    std::cout << "PSWIZB_BACK=" << PSWIZB_BACK << std::endl;
    std::cout << "PSWIZB_DISABLEDFINISH=" << PSWIZB_DISABLEDFINISH << std::endl;
    std::cout << "PSWIZB_FINISH=" << PSWIZB_FINISH << std::endl;
    std::cout << "PSWIZB_NEXT=" << PSWIZB_NEXT << std::endl;
    std::cout << "PS_ALTERNATE=" << PS_ALTERNATE << std::endl;
    std::cout << "PS_COSMETIC=" << PS_COSMETIC << std::endl;
    std::cout << "PS_DASH=" << PS_DASH << std::endl;
    std::cout << "PS_DASHDOT=" << PS_DASHDOT << std::endl;
    std::cout << "PS_DASHDOTDOT=" << PS_DASHDOTDOT << std::endl;
    std::cout << "PS_DOT=" << PS_DOT << std::endl;
    std::cout << "PS_ENDCAP_FLAT=" << PS_ENDCAP_FLAT << std::endl;
    std::cout << "PS_ENDCAP_MASK=" << PS_ENDCAP_MASK << std::endl;
    std::cout << "PS_ENDCAP_ROUND=" << PS_ENDCAP_ROUND << std::endl;
    std::cout << "PS_ENDCAP_SQUARE=" << PS_ENDCAP_SQUARE << std::endl;
    std::cout << "PS_GEOMETRIC=" << PS_GEOMETRIC << std::endl;
    std::cout << "PS_INSIDEFRAME=" << PS_INSIDEFRAME << std::endl;
    std::cout << "PS_JOIN_BEVEL=" << PS_JOIN_BEVEL << std::endl;
    std::cout << "PS_JOIN_MASK=" << PS_JOIN_MASK << std::endl;
    std::cout << "PS_JOIN_MITER=" << PS_JOIN_MITER << std::endl;
    std::cout << "PS_JOIN_ROUND=" << PS_JOIN_ROUND << std::endl;
    std::cout << "PS_NULL=" << PS_NULL << std::endl;
    std::cout << "PS_OPENTYPE_FONTTYPE=" << PS_OPENTYPE_FONTTYPE << std::endl;
    std::cout << "PS_SOLID=" << PS_SOLID << std::endl;
    std::cout << "PS_STYLE_MASK=" << PS_STYLE_MASK << std::endl;
    std::cout << "PS_TYPE_MASK=" << PS_TYPE_MASK << std::endl;
    std::cout << "PS_USERSTYLE=" << PS_USERSTYLE << std::endl;
    std::cout << "PT_BEZIERTO=" << PT_BEZIERTO << std::endl;
    std::cout << "PT_CLOSEFIGURE=" << PT_CLOSEFIGURE << std::endl;
    std::cout << "PT_LINETO=" << PT_LINETO << std::endl;
    std::cout << "PT_MOVETO=" << PT_MOVETO << std::endl;
    std::cout << "PUBLICKEYBLOB=" << PUBLICKEYBLOB << std::endl;
    std::cout << "PURE=" << PURE << std::endl;
    std::cout << "PURGE_RXABORT=" << PURGE_RXABORT << std::endl;
    std::cout << "PURGE_RXCLEAR=" << PURGE_RXCLEAR << std::endl;
    std::cout << "PURGE_TXABORT=" << PURGE_TXABORT << std::endl;
    std::cout << "PURGE_TXCLEAR=" << PURGE_TXCLEAR << std::endl;
    std::cout << "PWR_CRITICALRESUME=" << PWR_CRITICALRESUME << std::endl;
    std::cout << "PWR_FAIL=" << PWR_FAIL << std::endl;
    std::cout << "PWR_OK=" << PWR_OK << std::endl;
    std::cout << "PWR_SUSPENDREQUEST=" << PWR_SUSPENDREQUEST << std::endl;
    std::cout << "PWR_SUSPENDRESUME=" << PWR_SUSPENDRESUME << std::endl;
    std::cout << "PW_CLIENTONLY=" << PW_CLIENTONLY << std::endl;
    std::cout << "QDC_ALL_PATHS=" << QDC_ALL_PATHS << std::endl;
    std::cout << "QDC_DATABASE_CURRENT=" << QDC_DATABASE_CURRENT << std::endl;
    std::cout << "QDC_INCLUDE_HMD=" << QDC_INCLUDE_HMD << std::endl;
    std::cout << "QDC_ONLY_ACTIVE_PATHS=" << QDC_ONLY_ACTIVE_PATHS << std::endl;
    std::cout << "QDC_VIRTUAL_MODE_AWARE=" << QDC_VIRTUAL_MODE_AWARE << std::endl;
    std::cout << "QDI_DIBTOSCREEN=" << QDI_DIBTOSCREEN << std::endl;
    std::cout << "QDI_GETDIBITS=" << QDI_GETDIBITS << std::endl;
    std::cout << "QDI_SETDIBITS=" << QDI_SETDIBITS << std::endl;
    std::cout << "QDI_STRETCHDIB=" << QDI_STRETCHDIB << std::endl;
    std::cout << "QID_SYNC=" << QID_SYNC << std::endl;
    std::cout << "QS_ALLEVENTS=" << QS_ALLEVENTS << std::endl;
    std::cout << "QS_ALLINPUT=" << QS_ALLINPUT << std::endl;
    std::cout << "QS_ALLPOSTMESSAGE=" << QS_ALLPOSTMESSAGE << std::endl;
    std::cout << "QS_HOTKEY=" << QS_HOTKEY << std::endl;
    std::cout << "QS_INPUT=" << QS_INPUT << std::endl;
    std::cout << "QS_KEY=" << QS_KEY << std::endl;
    std::cout << "QS_MOUSE=" << QS_MOUSE << std::endl;
    std::cout << "QS_MOUSEBUTTON=" << QS_MOUSEBUTTON << std::endl;
    std::cout << "QS_MOUSEMOVE=" << QS_MOUSEMOVE << std::endl;
    std::cout << "QS_PAINT=" << QS_PAINT << std::endl;
    std::cout << "QS_POINTER=" << QS_POINTER << std::endl;
    std::cout << "QS_POSTMESSAGE=" << QS_POSTMESSAGE << std::endl;
    std::cout << "QS_RAWINPUT=" << QS_RAWINPUT << std::endl;
    std::cout << "QS_SENDMESSAGE=" << QS_SENDMESSAGE << std::endl;
    std::cout << "QS_TIMER=" << QS_TIMER << std::endl;
    std::cout << "QS_TOUCH=" << QS_TOUCH << std::endl;
    std::cout << "QUERYDIBSUPPORT=" << QUERYDIBSUPPORT << std::endl;
    std::cout << "QUERYESCSUPPORT=" << QUERYESCSUPPORT << std::endl;
    std::cout << "QUERYROPSUPPORT=" << QUERYROPSUPPORT << std::endl;
    std::cout << "QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS=" << QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS << std::endl;
    std::cout << "QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE=" << QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE << std::endl;
    std::cout << "QUERY_ACTCTX_FLAG_NO_ADDREF=" << QUERY_ACTCTX_FLAG_NO_ADDREF << std::endl;
    std::cout << "QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX=" << QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX << std::endl;
    std::cout << "QUOTA_LIMITS_HARDWS_MAX_DISABLE=" << QUOTA_LIMITS_HARDWS_MAX_DISABLE << std::endl;
    std::cout << "QUOTA_LIMITS_HARDWS_MAX_ENABLE=" << QUOTA_LIMITS_HARDWS_MAX_ENABLE << std::endl;
    std::cout << "QUOTA_LIMITS_HARDWS_MIN_DISABLE=" << QUOTA_LIMITS_HARDWS_MIN_DISABLE << std::endl;
    std::cout << "QUOTA_LIMITS_HARDWS_MIN_ENABLE=" << QUOTA_LIMITS_HARDWS_MIN_ENABLE << std::endl;
    std::cout << "QUOTA_LIMITS_USE_DEFAULT_LIMITS=" << QUOTA_LIMITS_USE_DEFAULT_LIMITS << std::endl;
    std::cout << "R2_BLACK=" << R2_BLACK << std::endl;
    std::cout << "R2_COPYPEN=" << R2_COPYPEN << std::endl;
    std::cout << "R2_LAST=" << R2_LAST << std::endl;
    std::cout << "R2_MASKNOTPEN=" << R2_MASKNOTPEN << std::endl;
    std::cout << "R2_MASKPEN=" << R2_MASKPEN << std::endl;
    std::cout << "R2_MASKPENNOT=" << R2_MASKPENNOT << std::endl;
    std::cout << "R2_MERGENOTPEN=" << R2_MERGENOTPEN << std::endl;
    std::cout << "R2_MERGEPEN=" << R2_MERGEPEN << std::endl;
    std::cout << "R2_MERGEPENNOT=" << R2_MERGEPENNOT << std::endl;
    std::cout << "R2_NOP=" << R2_NOP << std::endl;
    std::cout << "R2_NOT=" << R2_NOT << std::endl;
    std::cout << "R2_NOTCOPYPEN=" << R2_NOTCOPYPEN << std::endl;
    std::cout << "R2_NOTMASKPEN=" << R2_NOTMASKPEN << std::endl;
    std::cout << "R2_NOTMERGEPEN=" << R2_NOTMERGEPEN << std::endl;
    std::cout << "R2_NOTXORPEN=" << R2_NOTXORPEN << std::endl;
    std::cout << "R2_WHITE=" << R2_WHITE << std::endl;
    std::cout << "R2_XORPEN=" << R2_XORPEN << std::endl;
    std::cout << "RANDOM_PADDING=" << RANDOM_PADDING << std::endl;
    std::cout << "RASTERCAPS=" << RASTERCAPS << std::endl;
    std::cout << "RASTER_FONTTYPE=" << RASTER_FONTTYPE << std::endl;
    std::cout << "RBS_AUTOSIZE=" << RBS_AUTOSIZE << std::endl;
    std::cout << "RBS_BANDBORDERS=" << RBS_BANDBORDERS << std::endl;
    std::cout << "RBS_DBLCLKTOGGLE=" << RBS_DBLCLKTOGGLE << std::endl;
    std::cout << "RBS_FIXEDORDER=" << RBS_FIXEDORDER << std::endl;
    std::cout << "RBS_REGISTERDROP=" << RBS_REGISTERDROP << std::endl;
    std::cout << "RBS_TOOLTIPS=" << RBS_TOOLTIPS << std::endl;
    std::cout << "RBS_VARHEIGHT=" << RBS_VARHEIGHT << std::endl;
    std::cout << "RBS_VERTICALGRIPPER=" << RBS_VERTICALGRIPPER << std::endl;
    std::cout << "RC_BANDING=" << RC_BANDING << std::endl;
    std::cout << "RC_BIGFONT=" << RC_BIGFONT << std::endl;
    std::cout << "RC_BITBLT=" << RC_BITBLT << std::endl;
    std::cout << "RC_BITMAP64=" << RC_BITMAP64 << std::endl;
    std::cout << "RC_DEVBITS=" << RC_DEVBITS << std::endl;
    std::cout << "RC_DIBTODEV=" << RC_DIBTODEV << std::endl;
    std::cout << "RC_DI_BITMAP=" << RC_DI_BITMAP << std::endl;
    std::cout << "RC_FLOODFILL=" << RC_FLOODFILL << std::endl;
    std::cout << "RC_GDI20_OUTPUT=" << RC_GDI20_OUTPUT << std::endl;
    std::cout << "RC_GDI20_STATE=" << RC_GDI20_STATE << std::endl;
    std::cout << "RC_OP_DX_OUTPUT=" << RC_OP_DX_OUTPUT << std::endl;
    std::cout << "RC_PALETTE=" << RC_PALETTE << std::endl;
    std::cout << "RC_SAVEBITMAP=" << RC_SAVEBITMAP << std::endl;
    std::cout << "RC_SCALING=" << RC_SCALING << std::endl;
    std::cout << "RC_STRETCHBLT=" << RC_STRETCHBLT << std::endl;
    std::cout << "RC_STRETCHDIB=" << RC_STRETCHDIB << std::endl;
    std::cout << "RDH_RECTANGLES=" << RDH_RECTANGLES << std::endl;
    std::cout << "RDW_ALLCHILDREN=" << RDW_ALLCHILDREN << std::endl;
    std::cout << "RDW_ERASE=" << RDW_ERASE << std::endl;
    std::cout << "RDW_ERASENOW=" << RDW_ERASENOW << std::endl;
    std::cout << "RDW_FRAME=" << RDW_FRAME << std::endl;
    std::cout << "RDW_INTERNALPAINT=" << RDW_INTERNALPAINT << std::endl;
    std::cout << "RDW_INVALIDATE=" << RDW_INVALIDATE << std::endl;
    std::cout << "RDW_NOCHILDREN=" << RDW_NOCHILDREN << std::endl;
    std::cout << "RDW_NOERASE=" << RDW_NOERASE << std::endl;
    std::cout << "RDW_NOFRAME=" << RDW_NOFRAME << std::endl;
    std::cout << "RDW_NOINTERNALPAINT=" << RDW_NOINTERNALPAINT << std::endl;
    std::cout << "RDW_UPDATENOW=" << RDW_UPDATENOW << std::endl;
    std::cout << "RDW_VALIDATE=" << RDW_VALIDATE << std::endl;
    std::cout << "READ_ATTRIBUTES=" << READ_ATTRIBUTES << std::endl;
    std::cout << "READ_ATTRIBUTE_BUFFER_SIZE=" << READ_ATTRIBUTE_BUFFER_SIZE << std::endl;
    std::cout << "READ_COMPRESSION_INFO_VALID=" << READ_COMPRESSION_INFO_VALID << std::endl;
    std::cout << "READ_THREAD_PROFILING_FLAG_DISPATCHING=" << READ_THREAD_PROFILING_FLAG_DISPATCHING << std::endl;
    std::cout << "READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS=" << READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS << std::endl;
    std::cout << "READ_THRESHOLDS=" << READ_THRESHOLDS << std::endl;
    std::cout << "READ_THRESHOLD_BUFFER_SIZE=" << READ_THRESHOLD_BUFFER_SIZE << std::endl;
    std::cout << "REALTIME_PRIORITY_CLASS=" << REALTIME_PRIORITY_CLASS << std::endl;
    std::cout << "REASON_HWINSTALL=" << REASON_HWINSTALL << std::endl;
    std::cout << "REASON_LEGACY_API=" << REASON_LEGACY_API << std::endl;
    std::cout << "REASON_OTHER=" << REASON_OTHER << std::endl;
    std::cout << "REASON_PLANNED_FLAG=" << REASON_PLANNED_FLAG << std::endl;
    std::cout << "REASON_SERVICEHANG=" << REASON_SERVICEHANG << std::endl;
    std::cout << "REASON_SWHWRECONF=" << REASON_SWHWRECONF << std::endl;
    std::cout << "REASON_SWINSTALL=" << REASON_SWINSTALL << std::endl;
    std::cout << "REASON_UNKNOWN=" << REASON_UNKNOWN << std::endl;
    std::cout << "REASON_UNSTABLE=" << REASON_UNSTABLE << std::endl;
    std::cout << "RECOVERED_READS_VALID=" << RECOVERED_READS_VALID << std::endl;
    std::cout << "RECOVERED_WRITES_VALID=" << RECOVERED_WRITES_VALID << std::endl;
    std::cout << "RECOVERY_DEFAULT_PING_INTERVAL=" << RECOVERY_DEFAULT_PING_INTERVAL << std::endl;
    std::cout << "RECOVERY_MAX_PING_INTERVAL=" << RECOVERY_MAX_PING_INTERVAL << std::endl;
    std::cout << "REGISTERED=" << REGISTERED << std::endl;
    std::cout << "REGISTERING=" << REGISTERING << std::endl;
    std::cout << "REGULAR_FONTTYPE=" << REGULAR_FONTTYPE << std::endl;
    std::cout << "REG_BINARY=" << REG_BINARY << std::endl;
    std::cout << "REG_DWORD=" << REG_DWORD << std::endl;
    std::cout << "REG_DWORD_BIG_ENDIAN=" << REG_DWORD_BIG_ENDIAN << std::endl;
    std::cout << "REG_DWORD_LITTLE_ENDIAN=" << REG_DWORD_LITTLE_ENDIAN << std::endl;
    std::cout << "REG_EXPAND_SZ=" << REG_EXPAND_SZ << std::endl;
    std::cout << "REG_FORCE_UNLOAD=" << REG_FORCE_UNLOAD << std::endl;
    std::cout << "REG_FULL_RESOURCE_DESCRIPTOR=" << REG_FULL_RESOURCE_DESCRIPTOR << std::endl;
    std::cout << "REG_LATEST_FORMAT=" << REG_LATEST_FORMAT << std::endl;
    std::cout << "REG_LEGAL_CHANGE_FILTER=" << REG_LEGAL_CHANGE_FILTER << std::endl;
    std::cout << "REG_LEGAL_OPTION=" << REG_LEGAL_OPTION << std::endl;
    std::cout << "REG_LINK=" << REG_LINK << std::endl;
    std::cout << "REG_MUI_STRING_TRUNCATE=" << REG_MUI_STRING_TRUNCATE << std::endl;
    std::cout << "REG_MULTI_SZ=" << REG_MULTI_SZ << std::endl;
    std::cout << "REG_NONE=" << REG_NONE << std::endl;
    std::cout << "REG_NO_COMPRESSION=" << REG_NO_COMPRESSION << std::endl;
    std::cout << "REG_PROCESS_APPKEY=" << REG_PROCESS_APPKEY << std::endl;
    std::cout << "REG_QWORD=" << REG_QWORD << std::endl;
    std::cout << "REG_QWORD_LITTLE_ENDIAN=" << REG_QWORD_LITTLE_ENDIAN << std::endl;
    std::cout << "REG_RESOURCE_LIST=" << REG_RESOURCE_LIST << std::endl;
    std::cout << "REG_RESOURCE_REQUIREMENTS_LIST=" << REG_RESOURCE_REQUIREMENTS_LIST << std::endl;
    std::cout << "REG_SECURE_CONNECTION=" << REG_SECURE_CONNECTION << std::endl;
    std::cout << "REG_STANDARD_FORMAT=" << REG_STANDARD_FORMAT << std::endl;
    std::cout << "REG_SZ=" << REG_SZ << std::endl;
    std::cout << "RELATIVE=" << RELATIVE << std::endl;
    std::cout << "REMOTE_NAME_INFO_LEVEL=" << REMOTE_NAME_INFO_LEVEL << std::endl;
    std::cout << "REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK=" << REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK << std::endl;
    std::cout << "REMOTE_PROTOCOL_INFO_FLAG_OFFLINE=" << REMOTE_PROTOCOL_INFO_FLAG_OFFLINE << std::endl;
    std::cout << "REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE=" << REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE << std::endl;
    std::cout << "REPLACEDLGORD=" << REPLACEDLGORD << std::endl;
    std::cout << "REPLACEFILE_IGNORE_ACL_ERRORS=" << REPLACEFILE_IGNORE_ACL_ERRORS << std::endl;
    std::cout << "REPLACEFILE_IGNORE_MERGE_ERRORS=" << REPLACEFILE_IGNORE_MERGE_ERRORS << std::endl;
    std::cout << "REPLACEFILE_WRITE_THROUGH=" << REPLACEFILE_WRITE_THROUGH << std::endl;
    std::cout << "REPLACE_ALTERNATE=" << REPLACE_ALTERNATE << std::endl;
    std::cout << "REPLACE_PRIMARY=" << REPLACE_PRIMARY << std::endl;
    std::cout << "REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY=" << REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY << std::endl;
    std::cout << "REPORT_NO_PRIVATE_KEY=" << REPORT_NO_PRIVATE_KEY << std::endl;
    std::cout << "RESETDEV=" << RESETDEV << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_DIRECTORY=" << RESOURCEDISPLAYTYPE_DIRECTORY << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_DOMAIN=" << RESOURCEDISPLAYTYPE_DOMAIN << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_FILE=" << RESOURCEDISPLAYTYPE_FILE << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_GENERIC=" << RESOURCEDISPLAYTYPE_GENERIC << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_GROUP=" << RESOURCEDISPLAYTYPE_GROUP << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_NETWORK=" << RESOURCEDISPLAYTYPE_NETWORK << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_ROOT=" << RESOURCEDISPLAYTYPE_ROOT << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_SERVER=" << RESOURCEDISPLAYTYPE_SERVER << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_SHARE=" << RESOURCEDISPLAYTYPE_SHARE << std::endl;
    std::cout << "RESOURCEDISPLAYTYPE_SHAREADMIN=" << RESOURCEDISPLAYTYPE_SHAREADMIN << std::endl;
    std::cout << "RESOURCEMANAGER_ALL_ACCESS=" << RESOURCEMANAGER_ALL_ACCESS << std::endl;
    std::cout << "RESOURCEMANAGER_COMPLETE_PROPAGATION=" << RESOURCEMANAGER_COMPLETE_PROPAGATION << std::endl;
    std::cout << "RESOURCEMANAGER_ENLIST=" << RESOURCEMANAGER_ENLIST << std::endl;
    std::cout << "RESOURCEMANAGER_GENERIC_EXECUTE=" << RESOURCEMANAGER_GENERIC_EXECUTE << std::endl;
    std::cout << "RESOURCEMANAGER_GENERIC_READ=" << RESOURCEMANAGER_GENERIC_READ << std::endl;
    std::cout << "RESOURCEMANAGER_GENERIC_WRITE=" << RESOURCEMANAGER_GENERIC_WRITE << std::endl;
    std::cout << "RESOURCEMANAGER_GET_NOTIFICATION=" << RESOURCEMANAGER_GET_NOTIFICATION << std::endl;
    std::cout << "RESOURCEMANAGER_QUERY_INFORMATION=" << RESOURCEMANAGER_QUERY_INFORMATION << std::endl;
    std::cout << "RESOURCEMANAGER_RECOVER=" << RESOURCEMANAGER_RECOVER << std::endl;
    std::cout << "RESOURCEMANAGER_REGISTER_PROTOCOL=" << RESOURCEMANAGER_REGISTER_PROTOCOL << std::endl;
    std::cout << "RESOURCEMANAGER_SET_INFORMATION=" << RESOURCEMANAGER_SET_INFORMATION << std::endl;
    std::cout << "RESOURCETYPE_ANY=" << RESOURCETYPE_ANY << std::endl;
    std::cout << "RESOURCETYPE_DISK=" << RESOURCETYPE_DISK << std::endl;
    std::cout << "RESOURCETYPE_PRINT=" << RESOURCETYPE_PRINT << std::endl;
    std::cout << "RESOURCETYPE_RESERVED=" << RESOURCETYPE_RESERVED << std::endl;
    std::cout << "RESOURCETYPE_UNKNOWN=" << RESOURCETYPE_UNKNOWN << std::endl;
    std::cout << "RESOURCEUSAGE_ALL=" << RESOURCEUSAGE_ALL << std::endl;
    std::cout << "RESOURCEUSAGE_ATTACHED=" << RESOURCEUSAGE_ATTACHED << std::endl;
    std::cout << "RESOURCEUSAGE_CONNECTABLE=" << RESOURCEUSAGE_CONNECTABLE << std::endl;
    std::cout << "RESOURCEUSAGE_CONTAINER=" << RESOURCEUSAGE_CONTAINER << std::endl;
    std::cout << "RESOURCEUSAGE_NOLOCALDEVICE=" << RESOURCEUSAGE_NOLOCALDEVICE << std::endl;
    std::cout << "RESOURCEUSAGE_RESERVED=" << RESOURCEUSAGE_RESERVED << std::endl;
    std::cout << "RESOURCEUSAGE_SIBLING=" << RESOURCEUSAGE_SIBLING << std::endl;
    std::cout << "RESOURCE_CONNECTED=" << RESOURCE_CONNECTED << std::endl;
    std::cout << "RESOURCE_CONTEXT=" << RESOURCE_CONTEXT << std::endl;
    std::cout << "RESOURCE_ENUM_LN=" << RESOURCE_ENUM_LN << std::endl;
    std::cout << "RESOURCE_ENUM_MODULE_EXACT=" << RESOURCE_ENUM_MODULE_EXACT << std::endl;
    std::cout << "RESOURCE_ENUM_MUI=" << RESOURCE_ENUM_MUI << std::endl;
    std::cout << "RESOURCE_ENUM_MUI_SYSTEM=" << RESOURCE_ENUM_MUI_SYSTEM << std::endl;
    std::cout << "RESOURCE_ENUM_VALIDATE=" << RESOURCE_ENUM_VALIDATE << std::endl;
    std::cout << "RESOURCE_GLOBALNET=" << RESOURCE_GLOBALNET << std::endl;
    std::cout << "RESOURCE_MANAGER_COMMUNICATION=" << RESOURCE_MANAGER_COMMUNICATION << std::endl;
    std::cout << "RESOURCE_MANAGER_MAXIMUM_OPTION=" << RESOURCE_MANAGER_MAXIMUM_OPTION << std::endl;
    std::cout << "RESOURCE_MANAGER_VOLATILE=" << RESOURCE_MANAGER_VOLATILE << std::endl;
    std::cout << "RESOURCE_RECENT=" << RESOURCE_RECENT << std::endl;
    std::cout << "RESOURCE_REMEMBERED=" << RESOURCE_REMEMBERED << std::endl;
    std::cout << "RESTART_MAX_CMD_LINE=" << RESTART_MAX_CMD_LINE << std::endl;
    std::cout << "RESTART_NO_CRASH=" << RESTART_NO_CRASH << std::endl;
    std::cout << "RESTART_NO_HANG=" << RESTART_NO_HANG << std::endl;
    std::cout << "RESTART_NO_PATCH=" << RESTART_NO_PATCH << std::endl;
    std::cout << "RESTART_NO_REBOOT=" << RESTART_NO_REBOOT << std::endl;
    std::cout << "RESTORE_CTM=" << RESTORE_CTM << std::endl;
    std::cout << "RES_CURSOR=" << RES_CURSOR << std::endl;
    std::cout << "RES_ICON=" << RES_ICON << std::endl;
    std::cout << "RETRACT_IEPORT=" << RETRACT_IEPORT << std::endl;
    std::cout << "RETURN_SMART_STATUS=" << RETURN_SMART_STATUS << std::endl;
    std::cout << "REVERSE_PRINT=" << REVERSE_PRINT << std::endl;
    std::cout << "REVISION_LENGTH=" << REVISION_LENGTH << std::endl;
    std::cout << "REVOCATION_OID_CRL_REVOCATION=" << REVOCATION_OID_CRL_REVOCATION << std::endl;
    std::cout << "RGN_AND=" << RGN_AND << std::endl;
    std::cout << "RGN_COPY=" << RGN_COPY << std::endl;
    std::cout << "RGN_DIFF=" << RGN_DIFF << std::endl;
    std::cout << "RGN_ERROR=" << RGN_ERROR << std::endl;
    std::cout << "RGN_MAX=" << RGN_MAX << std::endl;
    std::cout << "RGN_MIN=" << RGN_MIN << std::endl;
    std::cout << "RGN_OR=" << RGN_OR << std::endl;
    std::cout << "RGN_XOR=" << RGN_XOR << std::endl;
    std::cout << "RIDEV_APPKEYS=" << RIDEV_APPKEYS << std::endl;
    std::cout << "RIDEV_CAPTUREMOUSE=" << RIDEV_CAPTUREMOUSE << std::endl;
    std::cout << "RIDEV_DEVNOTIFY=" << RIDEV_DEVNOTIFY << std::endl;
    std::cout << "RIDEV_EXCLUDE=" << RIDEV_EXCLUDE << std::endl;
    std::cout << "RIDEV_EXINPUTSINK=" << RIDEV_EXINPUTSINK << std::endl;
    std::cout << "RIDEV_EXMODEMASK=" << RIDEV_EXMODEMASK << std::endl;
    std::cout << "RIDEV_INPUTSINK=" << RIDEV_INPUTSINK << std::endl;
    std::cout << "RIDEV_NOHOTKEYS=" << RIDEV_NOHOTKEYS << std::endl;
    std::cout << "RIDEV_NOLEGACY=" << RIDEV_NOLEGACY << std::endl;
    std::cout << "RIDEV_PAGEONLY=" << RIDEV_PAGEONLY << std::endl;
    std::cout << "RIDEV_REMOVE=" << RIDEV_REMOVE << std::endl;
    std::cout << "RIDI_DEVICENAME=" << RIDI_DEVICENAME << std::endl;
    std::cout << "RIDI_PREPARSEDDATA=" << RIDI_PREPARSEDDATA << std::endl;
    std::cout << "RID_HEADER=" << RID_HEADER << std::endl;
    std::cout << "RID_INPUT=" << RID_INPUT << std::endl;
    std::cout << "RIGHTMOST_BUTTON_PRESSED=" << RIGHTMOST_BUTTON_PRESSED << std::endl;
    std::cout << "RIGHT_ALT_PRESSED=" << RIGHT_ALT_PRESSED << std::endl;
    std::cout << "RIGHT_CTRL_PRESSED=" << RIGHT_CTRL_PRESSED << std::endl;
    std::cout << "RIM_INPUT=" << RIM_INPUT << std::endl;
    std::cout << "RIM_INPUTSINK=" << RIM_INPUTSINK << std::endl;
    std::cout << "RIM_TYPEHID=" << RIM_TYPEHID << std::endl;
    std::cout << "RIM_TYPEKEYBOARD=" << RIM_TYPEKEYBOARD << std::endl;
    std::cout << "RIM_TYPEMAX=" << RIM_TYPEMAX << std::endl;
    std::cout << "RIM_TYPEMOUSE=" << RIM_TYPEMOUSE << std::endl;
    std::cout << "RIP_EVENT=" << RIP_EVENT << std::endl;
    std::cout << "RI_KEY_BREAK=" << RI_KEY_BREAK << std::endl;
    std::cout << "RI_KEY_E0=" << RI_KEY_E0 << std::endl;
    std::cout << "RI_KEY_E1=" << RI_KEY_E1 << std::endl;
    std::cout << "RI_KEY_MAKE=" << RI_KEY_MAKE << std::endl;
    std::cout << "RI_KEY_TERMSRV_SET_LED=" << RI_KEY_TERMSRV_SET_LED << std::endl;
    std::cout << "RI_KEY_TERMSRV_SHADOW=" << RI_KEY_TERMSRV_SHADOW << std::endl;
    std::cout << "RI_MOUSE_BUTTON_1_DOWN=" << RI_MOUSE_BUTTON_1_DOWN << std::endl;
    std::cout << "RI_MOUSE_BUTTON_1_UP=" << RI_MOUSE_BUTTON_1_UP << std::endl;
    std::cout << "RI_MOUSE_BUTTON_2_DOWN=" << RI_MOUSE_BUTTON_2_DOWN << std::endl;
    std::cout << "RI_MOUSE_BUTTON_2_UP=" << RI_MOUSE_BUTTON_2_UP << std::endl;
    std::cout << "RI_MOUSE_BUTTON_3_DOWN=" << RI_MOUSE_BUTTON_3_DOWN << std::endl;
    std::cout << "RI_MOUSE_BUTTON_3_UP=" << RI_MOUSE_BUTTON_3_UP << std::endl;
    std::cout << "RI_MOUSE_BUTTON_4_DOWN=" << RI_MOUSE_BUTTON_4_DOWN << std::endl;
    std::cout << "RI_MOUSE_BUTTON_4_UP=" << RI_MOUSE_BUTTON_4_UP << std::endl;
    std::cout << "RI_MOUSE_BUTTON_5_DOWN=" << RI_MOUSE_BUTTON_5_DOWN << std::endl;
    std::cout << "RI_MOUSE_BUTTON_5_UP=" << RI_MOUSE_BUTTON_5_UP << std::endl;
    std::cout << "RI_MOUSE_HWHEEL=" << RI_MOUSE_HWHEEL << std::endl;
    std::cout << "RI_MOUSE_LEFT_BUTTON_DOWN=" << RI_MOUSE_LEFT_BUTTON_DOWN << std::endl;
    std::cout << "RI_MOUSE_LEFT_BUTTON_UP=" << RI_MOUSE_LEFT_BUTTON_UP << std::endl;
    std::cout << "RI_MOUSE_MIDDLE_BUTTON_DOWN=" << RI_MOUSE_MIDDLE_BUTTON_DOWN << std::endl;
    std::cout << "RI_MOUSE_MIDDLE_BUTTON_UP=" << RI_MOUSE_MIDDLE_BUTTON_UP << std::endl;
    std::cout << "RI_MOUSE_RIGHT_BUTTON_DOWN=" << RI_MOUSE_RIGHT_BUTTON_DOWN << std::endl;
    std::cout << "RI_MOUSE_RIGHT_BUTTON_UP=" << RI_MOUSE_RIGHT_BUTTON_UP << std::endl;
    std::cout << "RI_MOUSE_WHEEL=" << RI_MOUSE_WHEEL << std::endl;
    std::cout << "ROTFLAGS_ALLOWANYCLIENT=" << ROTFLAGS_ALLOWANYCLIENT << std::endl;
    std::cout << "ROTFLAGS_REGISTRATIONKEEPSALIVE=" << ROTFLAGS_REGISTRATIONKEEPSALIVE << std::endl;
    std::cout << "ROTREGFLAGS_ALLOWANYCLIENT=" << ROTREGFLAGS_ALLOWANYCLIENT << std::endl;
    std::cout << "ROT_COMPARE_MAX=" << ROT_COMPARE_MAX << std::endl;
    std::cout << "RPC_BUFFER_ASYNC=" << RPC_BUFFER_ASYNC << std::endl;
    std::cout << "RPC_BUFFER_COMPLETE=" << RPC_BUFFER_COMPLETE << std::endl;
    std::cout << "RPC_BUFFER_EXTRA=" << RPC_BUFFER_EXTRA << std::endl;
    std::cout << "RPC_BUFFER_NONOTIFY=" << RPC_BUFFER_NONOTIFY << std::endl;
    std::cout << "RPC_BUFFER_PARTIAL=" << RPC_BUFFER_PARTIAL << std::endl;
    std::cout << "RPC_CALL_ATTRIBUTES_VERSION=" << RPC_CALL_ATTRIBUTES_VERSION << std::endl;
    std::cout << "RPC_CALL_STATUS_CANCELLED=" << RPC_CALL_STATUS_CANCELLED << std::endl;
    std::cout << "RPC_CALL_STATUS_DISCONNECTED=" << RPC_CALL_STATUS_DISCONNECTED << std::endl;
    std::cout << "RPC_CALL_STATUS_IN_PROGRESS=" << RPC_CALL_STATUS_IN_PROGRESS << std::endl;
    std::cout << "RPC_C_AUTHN_DCE_PRIVATE=" << RPC_C_AUTHN_DCE_PRIVATE << std::endl;
    std::cout << "RPC_C_AUTHN_DCE_PUBLIC=" << RPC_C_AUTHN_DCE_PUBLIC << std::endl;
    std::cout << "RPC_C_AUTHN_DEC_PUBLIC=" << RPC_C_AUTHN_DEC_PUBLIC << std::endl;
    std::cout << "RPC_C_AUTHN_DIGEST=" << RPC_C_AUTHN_DIGEST << std::endl;
    std::cout << "RPC_C_AUTHN_DPA=" << RPC_C_AUTHN_DPA << std::endl;
    std::cout << "RPC_C_AUTHN_GSS_KERBEROS=" << RPC_C_AUTHN_GSS_KERBEROS << std::endl;
    std::cout << "RPC_C_AUTHN_GSS_NEGOTIATE=" << RPC_C_AUTHN_GSS_NEGOTIATE << std::endl;
    std::cout << "RPC_C_AUTHN_GSS_SCHANNEL=" << RPC_C_AUTHN_GSS_SCHANNEL << std::endl;
    std::cout << "RPC_C_AUTHN_INFO_TYPE_HTTP=" << RPC_C_AUTHN_INFO_TYPE_HTTP << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_CALL=" << RPC_C_AUTHN_LEVEL_CALL << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_CONNECT=" << RPC_C_AUTHN_LEVEL_CONNECT << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_DEFAULT=" << RPC_C_AUTHN_LEVEL_DEFAULT << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_NONE=" << RPC_C_AUTHN_LEVEL_NONE << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_PKT=" << RPC_C_AUTHN_LEVEL_PKT << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_PKT_INTEGRITY=" << RPC_C_AUTHN_LEVEL_PKT_INTEGRITY << std::endl;
    std::cout << "RPC_C_AUTHN_LEVEL_PKT_PRIVACY=" << RPC_C_AUTHN_LEVEL_PKT_PRIVACY << std::endl;
    std::cout << "RPC_C_AUTHN_MQ=" << RPC_C_AUTHN_MQ << std::endl;
    std::cout << "RPC_C_AUTHN_MSN=" << RPC_C_AUTHN_MSN << std::endl;
    std::cout << "RPC_C_AUTHN_NONE=" << RPC_C_AUTHN_NONE << std::endl;
    std::cout << "RPC_C_AUTHN_WINNT=" << RPC_C_AUTHN_WINNT << std::endl;
    std::cout << "RPC_C_AUTHZ_DCE=" << RPC_C_AUTHZ_DCE << std::endl;
    std::cout << "RPC_C_AUTHZ_NAME=" << RPC_C_AUTHZ_NAME << std::endl;
    std::cout << "RPC_C_AUTHZ_NONE=" << RPC_C_AUTHZ_NONE << std::endl;
    std::cout << "RPC_C_BINDING_DEFAULT_TIMEOUT=" << RPC_C_BINDING_DEFAULT_TIMEOUT << std::endl;
    std::cout << "RPC_C_BINDING_INFINITE_TIMEOUT=" << RPC_C_BINDING_INFINITE_TIMEOUT << std::endl;
    std::cout << "RPC_C_BINDING_MAX_TIMEOUT=" << RPC_C_BINDING_MAX_TIMEOUT << std::endl;
    std::cout << "RPC_C_BINDING_MIN_TIMEOUT=" << RPC_C_BINDING_MIN_TIMEOUT << std::endl;
    std::cout << "RPC_C_BIND_TO_ALL_NICS=" << RPC_C_BIND_TO_ALL_NICS << std::endl;
    std::cout << "RPC_C_CANCEL_INFINITE_TIMEOUT=" << RPC_C_CANCEL_INFINITE_TIMEOUT << std::endl;
    std::cout << "RPC_C_DONT_FAIL=" << RPC_C_DONT_FAIL << std::endl;
    std::cout << "RPC_C_EP_ALL_ELTS=" << RPC_C_EP_ALL_ELTS << std::endl;
    std::cout << "RPC_C_EP_MATCH_BY_BOTH=" << RPC_C_EP_MATCH_BY_BOTH << std::endl;
    std::cout << "RPC_C_EP_MATCH_BY_IF=" << RPC_C_EP_MATCH_BY_IF << std::endl;
    std::cout << "RPC_C_EP_MATCH_BY_OBJ=" << RPC_C_EP_MATCH_BY_OBJ << std::endl;
    std::cout << "RPC_C_FULL_CERT_CHAIN=" << RPC_C_FULL_CERT_CHAIN << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_BASIC=" << RPC_C_HTTP_AUTHN_SCHEME_BASIC << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_CERT=" << RPC_C_HTTP_AUTHN_SCHEME_CERT << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_DIGEST=" << RPC_C_HTTP_AUTHN_SCHEME_DIGEST << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE=" << RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_NTLM=" << RPC_C_HTTP_AUTHN_SCHEME_NTLM << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_SCHEME_PASSPORT=" << RPC_C_HTTP_AUTHN_SCHEME_PASSPORT << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_TARGET_PROXY=" << RPC_C_HTTP_AUTHN_TARGET_PROXY << std::endl;
    std::cout << "RPC_C_HTTP_AUTHN_TARGET_SERVER=" << RPC_C_HTTP_AUTHN_TARGET_SERVER << std::endl;
    std::cout << "RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID=" << RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID << std::endl;
    std::cout << "RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME=" << RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME << std::endl;
    std::cout << "RPC_C_HTTP_FLAG_USE_SSL=" << RPC_C_HTTP_FLAG_USE_SSL << std::endl;
    std::cout << "RPC_C_IMP_LEVEL_ANONYMOUS=" << RPC_C_IMP_LEVEL_ANONYMOUS << std::endl;
    std::cout << "RPC_C_IMP_LEVEL_DEFAULT=" << RPC_C_IMP_LEVEL_DEFAULT << std::endl;
    std::cout << "RPC_C_IMP_LEVEL_DELEGATE=" << RPC_C_IMP_LEVEL_DELEGATE << std::endl;
    std::cout << "RPC_C_IMP_LEVEL_IDENTIFY=" << RPC_C_IMP_LEVEL_IDENTIFY << std::endl;
    std::cout << "RPC_C_IMP_LEVEL_IMPERSONATE=" << RPC_C_IMP_LEVEL_IMPERSONATE << std::endl;
    std::cout << "RPC_C_LISTEN_MAX_CALLS_DEFAULT=" << RPC_C_LISTEN_MAX_CALLS_DEFAULT << std::endl;
    std::cout << "RPC_C_MGMT_INQ_IF_IDS=" << RPC_C_MGMT_INQ_IF_IDS << std::endl;
    std::cout << "RPC_C_MGMT_INQ_PRINC_NAME=" << RPC_C_MGMT_INQ_PRINC_NAME << std::endl;
    std::cout << "RPC_C_MGMT_INQ_STATS=" << RPC_C_MGMT_INQ_STATS << std::endl;
    std::cout << "RPC_C_MGMT_IS_SERVER_LISTEN=" << RPC_C_MGMT_IS_SERVER_LISTEN << std::endl;
    std::cout << "RPC_C_MGMT_STOP_SERVER_LISTEN=" << RPC_C_MGMT_STOP_SERVER_LISTEN << std::endl;
    std::cout << "RPC_C_MQ_AUTHN_LEVEL_NONE=" << RPC_C_MQ_AUTHN_LEVEL_NONE << std::endl;
    std::cout << "RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY=" << RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY << std::endl;
    std::cout << "RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY=" << RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY << std::endl;
    std::cout << "RPC_C_MQ_CLEAR_ON_OPEN=" << RPC_C_MQ_CLEAR_ON_OPEN << std::endl;
    std::cout << "RPC_C_MQ_EXPRESS=" << RPC_C_MQ_EXPRESS << std::endl;
    std::cout << "RPC_C_MQ_JOURNAL_ALWAYS=" << RPC_C_MQ_JOURNAL_ALWAYS << std::endl;
    std::cout << "RPC_C_MQ_JOURNAL_DEADLETTER=" << RPC_C_MQ_JOURNAL_DEADLETTER << std::endl;
    std::cout << "RPC_C_MQ_JOURNAL_NONE=" << RPC_C_MQ_JOURNAL_NONE << std::endl;
    std::cout << "RPC_C_MQ_PERMANENT=" << RPC_C_MQ_PERMANENT << std::endl;
    std::cout << "RPC_C_MQ_RECOVERABLE=" << RPC_C_MQ_RECOVERABLE << std::endl;
    std::cout << "RPC_C_MQ_TEMPORARY=" << RPC_C_MQ_TEMPORARY << std::endl;
    std::cout << "RPC_C_MQ_USE_EXISTING_SECURITY=" << RPC_C_MQ_USE_EXISTING_SECURITY << std::endl;
    std::cout << "RPC_C_NOTIFY_ON_SEND_COMPLETE=" << RPC_C_NOTIFY_ON_SEND_COMPLETE << std::endl;
    std::cout << "RPC_C_NS_DEFAULT_EXP_AGE=" << RPC_C_NS_DEFAULT_EXP_AGE << std::endl;
    std::cout << "RPC_C_NS_SYNTAX_DCE=" << RPC_C_NS_SYNTAX_DCE << std::endl;
    std::cout << "RPC_C_NS_SYNTAX_DEFAULT=" << RPC_C_NS_SYNTAX_DEFAULT << std::endl;
    std::cout << "RPC_C_OPT_BINDING_NONCAUSAL=" << RPC_C_OPT_BINDING_NONCAUSAL << std::endl;
    std::cout << "RPC_C_OPT_CALL_TIMEOUT=" << RPC_C_OPT_CALL_TIMEOUT << std::endl;
    std::cout << "RPC_C_OPT_DONT_LINGER=" << RPC_C_OPT_DONT_LINGER << std::endl;
    std::cout << "RPC_C_OPT_MAX_OPTIONS=" << RPC_C_OPT_MAX_OPTIONS << std::endl;
    std::cout << "RPC_C_OPT_MQ_ACKNOWLEDGE=" << RPC_C_OPT_MQ_ACKNOWLEDGE << std::endl;
    std::cout << "RPC_C_OPT_MQ_AUTHN_LEVEL=" << RPC_C_OPT_MQ_AUTHN_LEVEL << std::endl;
    std::cout << "RPC_C_OPT_MQ_AUTHN_SERVICE=" << RPC_C_OPT_MQ_AUTHN_SERVICE << std::endl;
    std::cout << "RPC_C_OPT_MQ_DELIVERY=" << RPC_C_OPT_MQ_DELIVERY << std::endl;
    std::cout << "RPC_C_OPT_MQ_JOURNAL=" << RPC_C_OPT_MQ_JOURNAL << std::endl;
    std::cout << "RPC_C_OPT_MQ_PRIORITY=" << RPC_C_OPT_MQ_PRIORITY << std::endl;
    std::cout << "RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED=" << RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED << std::endl;
    std::cout << "RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE=" << RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE << std::endl;
    std::cout << "RPC_C_OPT_SECURITY_CALLBACK=" << RPC_C_OPT_SECURITY_CALLBACK << std::endl;
    std::cout << "RPC_C_OPT_UNIQUE_BINDING=" << RPC_C_OPT_UNIQUE_BINDING << std::endl;
    std::cout << "RPC_C_PARM_BUFFER_LENGTH=" << RPC_C_PARM_BUFFER_LENGTH << std::endl;
    std::cout << "RPC_C_PARM_MAX_PACKET_LENGTH=" << RPC_C_PARM_MAX_PACKET_LENGTH << std::endl;
    std::cout << "RPC_C_PROFILE_ALL_ELT=" << RPC_C_PROFILE_ALL_ELT << std::endl;
    std::cout << "RPC_C_PROFILE_ALL_ELTS=" << RPC_C_PROFILE_ALL_ELTS << std::endl;
    std::cout << "RPC_C_PROFILE_DEFAULT_ELT=" << RPC_C_PROFILE_DEFAULT_ELT << std::endl;
    std::cout << "RPC_C_PROFILE_MATCH_BY_BOTH=" << RPC_C_PROFILE_MATCH_BY_BOTH << std::endl;
    std::cout << "RPC_C_PROFILE_MATCH_BY_IF=" << RPC_C_PROFILE_MATCH_BY_IF << std::endl;
    std::cout << "RPC_C_PROFILE_MATCH_BY_MBR=" << RPC_C_PROFILE_MATCH_BY_MBR << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_CALL=" << RPC_C_PROTECT_LEVEL_CALL << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_CONNECT=" << RPC_C_PROTECT_LEVEL_CONNECT << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_DEFAULT=" << RPC_C_PROTECT_LEVEL_DEFAULT << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_NONE=" << RPC_C_PROTECT_LEVEL_NONE << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_PKT=" << RPC_C_PROTECT_LEVEL_PKT << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_PKT_INTEGRITY=" << RPC_C_PROTECT_LEVEL_PKT_INTEGRITY << std::endl;
    std::cout << "RPC_C_PROTECT_LEVEL_PKT_PRIVACY=" << RPC_C_PROTECT_LEVEL_PKT_PRIVACY << std::endl;
    std::cout << "RPC_C_PROTSEQ_MAX_REQS_DEFAULT=" << RPC_C_PROTSEQ_MAX_REQS_DEFAULT << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY=" << RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_DEFAULT=" << RPC_C_QOS_CAPABILITIES_DEFAULT << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE=" << RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT=" << RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC=" << RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC << std::endl;
    std::cout << "RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH=" << RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH << std::endl;
    std::cout << "RPC_C_QOS_IDENTITY_DYNAMIC=" << RPC_C_QOS_IDENTITY_DYNAMIC << std::endl;
    std::cout << "RPC_C_QOS_IDENTITY_STATIC=" << RPC_C_QOS_IDENTITY_STATIC << std::endl;
    std::cout << "RPC_C_STATS_CALLS_IN=" << RPC_C_STATS_CALLS_IN << std::endl;
    std::cout << "RPC_C_STATS_CALLS_OUT=" << RPC_C_STATS_CALLS_OUT << std::endl;
    std::cout << "RPC_C_STATS_PKTS_IN=" << RPC_C_STATS_PKTS_IN << std::endl;
    std::cout << "RPC_C_STATS_PKTS_OUT=" << RPC_C_STATS_PKTS_OUT << std::endl;
    std::cout << "RPC_C_USE_INTERNET_PORT=" << RPC_C_USE_INTERNET_PORT << std::endl;
    std::cout << "RPC_C_USE_INTRANET_PORT=" << RPC_C_USE_INTRANET_PORT << std::endl;
    std::cout << "RPC_C_VERS_ALL=" << RPC_C_VERS_ALL << std::endl;
    std::cout << "RPC_C_VERS_COMPATIBLE=" << RPC_C_VERS_COMPATIBLE << std::endl;
    std::cout << "RPC_C_VERS_EXACT=" << RPC_C_VERS_EXACT << std::endl;
    std::cout << "RPC_C_VERS_MAJOR_ONLY=" << RPC_C_VERS_MAJOR_ONLY << std::endl;
    std::cout << "RPC_C_VERS_UPTO=" << RPC_C_VERS_UPTO << std::endl;
    std::cout << "RPC_EEINFO_VERSION=" << RPC_EEINFO_VERSION << std::endl;
    std::cout << "RPC_FLAGS_VALID_BIT=" << RPC_FLAGS_VALID_BIT << std::endl;
    std::cout << "RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH=" << RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH << std::endl;
    std::cout << "RPC_IF_ALLOW_LOCAL_ONLY=" << RPC_IF_ALLOW_LOCAL_ONLY << std::endl;
    std::cout << "RPC_IF_ALLOW_SECURE_ONLY=" << RPC_IF_ALLOW_SECURE_ONLY << std::endl;
    std::cout << "RPC_IF_ALLOW_UNKNOWN_AUTHORITY=" << RPC_IF_ALLOW_UNKNOWN_AUTHORITY << std::endl;
    std::cout << "RPC_IF_AUTOLISTEN=" << RPC_IF_AUTOLISTEN << std::endl;
    std::cout << "RPC_IF_OLE=" << RPC_IF_OLE << std::endl;
    std::cout << "RPC_IF_SEC_NO_CACHE=" << RPC_IF_SEC_NO_CACHE << std::endl;
    std::cout << "RPC_INTERFACE_HAS_PIPES=" << RPC_INTERFACE_HAS_PIPES << std::endl;
    std::cout << "RPC_NCA_FLAGS_BROADCAST=" << RPC_NCA_FLAGS_BROADCAST << std::endl;
    std::cout << "RPC_NCA_FLAGS_DEFAULT=" << RPC_NCA_FLAGS_DEFAULT << std::endl;
    std::cout << "RPC_NCA_FLAGS_IDEMPOTENT=" << RPC_NCA_FLAGS_IDEMPOTENT << std::endl;
    std::cout << "RPC_NCA_FLAGS_MAYBE=" << RPC_NCA_FLAGS_MAYBE << std::endl;
    std::cout << "RPC_PROXY_CONNECTION_TYPE_IN_PROXY=" << RPC_PROXY_CONNECTION_TYPE_IN_PROXY << std::endl;
    std::cout << "RPC_PROXY_CONNECTION_TYPE_OUT_PROXY=" << RPC_PROXY_CONNECTION_TYPE_OUT_PROXY << std::endl;
    std::cout << "RPC_P_ADDR_FORMAT_TCP_IPV4=" << RPC_P_ADDR_FORMAT_TCP_IPV4 << std::endl;
    std::cout << "RPC_P_ADDR_FORMAT_TCP_IPV6=" << RPC_P_ADDR_FORMAT_TCP_IPV6 << std::endl;
    std::cout << "RPC_QUERY_CLIENT_PRINCIPAL_NAME=" << RPC_QUERY_CLIENT_PRINCIPAL_NAME << std::endl;
    std::cout << "RPC_QUERY_SERVER_PRINCIPAL_NAME=" << RPC_QUERY_SERVER_PRINCIPAL_NAME << std::endl;
    std::cout << "RPC_X_NO_MEMORY=" << RPC_X_NO_MEMORY << std::endl;
    std::cout << "RPI_FLAG_SMB2_SHARECAP_CLUSTER=" << RPI_FLAG_SMB2_SHARECAP_CLUSTER << std::endl;
    std::cout << "RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY=" << RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY << std::endl;
    std::cout << "RPI_FLAG_SMB2_SHARECAP_DFS=" << RPI_FLAG_SMB2_SHARECAP_DFS << std::endl;
    std::cout << "RPI_FLAG_SMB2_SHARECAP_SCALEOUT=" << RPI_FLAG_SMB2_SHARECAP_SCALEOUT << std::endl;
    std::cout << "RPI_FLAG_SMB2_SHARECAP_TIMEWARP=" << RPI_FLAG_SMB2_SHARECAP_TIMEWARP << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_DFS=" << RPI_SMB2_FLAG_SERVERCAP_DFS << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_DIRECTORY_LEASING=" << RPI_SMB2_FLAG_SERVERCAP_DIRECTORY_LEASING << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_LARGEMTU=" << RPI_SMB2_FLAG_SERVERCAP_LARGEMTU << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_LEASING=" << RPI_SMB2_FLAG_SERVERCAP_LEASING << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_MULTICHANNEL=" << RPI_SMB2_FLAG_SERVERCAP_MULTICHANNEL << std::endl;
    std::cout << "RPI_SMB2_FLAG_SERVERCAP_PERSISTENT_HANDLES=" << RPI_SMB2_FLAG_SERVERCAP_PERSISTENT_HANDLES << std::endl;
    std::cout << "RP_INIFILE=" << RP_INIFILE << std::endl;
    std::cout << "RP_LOGON=" << RP_LOGON << std::endl;
    std::cout << "RRF_NOEXPAND=" << RRF_NOEXPAND << std::endl;
    std::cout << "RRF_RT_DWORD=" << RRF_RT_DWORD << std::endl;
    std::cout << "RRF_RT_QWORD=" << RRF_RT_QWORD << std::endl;
    std::cout << "RRF_RT_REG_BINARY=" << RRF_RT_REG_BINARY << std::endl;
    std::cout << "RRF_RT_REG_DWORD=" << RRF_RT_REG_DWORD << std::endl;
    std::cout << "RRF_RT_REG_EXPAND_SZ=" << RRF_RT_REG_EXPAND_SZ << std::endl;
    std::cout << "RRF_RT_REG_MULTI_SZ=" << RRF_RT_REG_MULTI_SZ << std::endl;
    std::cout << "RRF_RT_REG_NONE=" << RRF_RT_REG_NONE << std::endl;
    std::cout << "RRF_RT_REG_QWORD=" << RRF_RT_REG_QWORD << std::endl;
    std::cout << "RRF_RT_REG_SZ=" << RRF_RT_REG_SZ << std::endl;
    std::cout << "RRF_SUBKEY_WOW6432KEY=" << RRF_SUBKEY_WOW6432KEY << std::endl;
    std::cout << "RRF_SUBKEY_WOW6464KEY=" << RRF_SUBKEY_WOW6464KEY << std::endl;
    std::cout << "RRF_WOW64_MASK=" << RRF_WOW64_MASK << std::endl;
    std::cout << "RRF_ZEROONFAILURE=" << RRF_ZEROONFAILURE << std::endl;
    std::cout << "RSA1024BIT_KEY=" << RSA1024BIT_KEY << std::endl;
    std::cout << "RSA_CSP_PUBLICKEYBLOB=" << RSA_CSP_PUBLICKEYBLOB << std::endl;
    std::cout << "RTL_CONDITION_VARIABLE_LOCKMODE_SHARED=" << RTL_CONDITION_VARIABLE_LOCKMODE_SHARED << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT=" << RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN=" << RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO=" << RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO=" << RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE=" << RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE << std::endl;
    std::cout << "RTL_CRITICAL_SECTION_FLAG_STATIC_INIT=" << RTL_CRITICAL_SECTION_FLAG_STATIC_INIT << std::endl;
    std::cout << "RTL_CRITSECT_TYPE=" << RTL_CRITSECT_TYPE << std::endl;
    std::cout << "RTL_RESOURCE_TYPE=" << RTL_RESOURCE_TYPE << std::endl;
    std::cout << "RTL_RUN_ONCE_CTX_RESERVED_BITS=" << RTL_RUN_ONCE_CTX_RESERVED_BITS << std::endl;
    std::cout << "RTL_UMS_VERSION=" << RTL_UMS_VERSION << std::endl;
    std::cout << "RTL_VRF_FLG_APPCOMPAT_CHECKS=" << RTL_VRF_FLG_APPCOMPAT_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_COM_CHECKS=" << RTL_VRF_FLG_COM_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_DANGEROUS_APIS=" << RTL_VRF_FLG_DANGEROUS_APIS << std::endl;
    std::cout << "RTL_VRF_FLG_DEADLOCK_CHECKS=" << RTL_VRF_FLG_DEADLOCK_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_DIRTY_STACKS=" << RTL_VRF_FLG_DIRTY_STACKS << std::endl;
    std::cout << "RTL_VRF_FLG_ENABLED_SYSTEM_WIDE=" << RTL_VRF_FLG_ENABLED_SYSTEM_WIDE << std::endl;
    std::cout << "RTL_VRF_FLG_ENABLE_LOGGING=" << RTL_VRF_FLG_ENABLE_LOGGING << std::endl;
    std::cout << "RTL_VRF_FLG_FAST_FILL_HEAP=" << RTL_VRF_FLG_FAST_FILL_HEAP << std::endl;
    std::cout << "RTL_VRF_FLG_FIRST_CHANCE_EXCEPTION_CHECKS=" << RTL_VRF_FLG_FIRST_CHANCE_EXCEPTION_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_FULL_PAGE_HEAP=" << RTL_VRF_FLG_FULL_PAGE_HEAP << std::endl;
    std::cout << "RTL_VRF_FLG_HANDLE_CHECKS=" << RTL_VRF_FLG_HANDLE_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_LOCK_CHECKS=" << RTL_VRF_FLG_LOCK_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_MISCELLANEOUS_CHECKS=" << RTL_VRF_FLG_MISCELLANEOUS_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_RACE_CHECKS=" << RTL_VRF_FLG_RACE_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_RESERVED_DONOTUSE=" << RTL_VRF_FLG_RESERVED_DONOTUSE << std::endl;
    std::cout << "RTL_VRF_FLG_RPC_CHECKS=" << RTL_VRF_FLG_RPC_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_STACK_CHECKS=" << RTL_VRF_FLG_STACK_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_TLS_CHECKS=" << RTL_VRF_FLG_TLS_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_VIRTUAL_MEM_CHECKS=" << RTL_VRF_FLG_VIRTUAL_MEM_CHECKS << std::endl;
    std::cout << "RTL_VRF_FLG_VIRTUAL_SPACE_TRACKING=" << RTL_VRF_FLG_VIRTUAL_SPACE_TRACKING << std::endl;
    std::cout << "RTS_CONTROL_DISABLE=" << RTS_CONTROL_DISABLE << std::endl;
    std::cout << "RTS_CONTROL_ENABLE=" << RTS_CONTROL_ENABLE << std::endl;
    std::cout << "RTS_CONTROL_HANDSHAKE=" << RTS_CONTROL_HANDSHAKE << std::endl;
    std::cout << "RTS_CONTROL_TOGGLE=" << RTS_CONTROL_TOGGLE << std::endl;
    std::cout << "RT_MANIFEST=" << RT_MANIFEST << std::endl;
    std::cout << "RUNDLGORD=" << RUNDLGORD << std::endl;
    std::cout << "RUNTIME_FUNCTION_INDIRECT=" << RUNTIME_FUNCTION_INDIRECT << std::endl;
    std::cout << "RUSSIAN_CHARSET=" << RUSSIAN_CHARSET << std::endl;
    std::cout << "SANDBOX_INERT=" << SANDBOX_INERT << std::endl;
    std::cout << "SAVE_ATTRIBUTE_VALUES=" << SAVE_ATTRIBUTE_VALUES << std::endl;
    std::cout << "SAVE_CTM=" << SAVE_CTM << std::endl;
    std::cout << "SBARS_SIZEGRIP=" << SBARS_SIZEGRIP << std::endl;
    std::cout << "SBARS_TOOLTIPS=" << SBARS_TOOLTIPS << std::endl;
    std::cout << "SBM_ENABLE_ARROWS=" << SBM_ENABLE_ARROWS << std::endl;
    std::cout << "SBM_GETPOS=" << SBM_GETPOS << std::endl;
    std::cout << "SBM_GETRANGE=" << SBM_GETRANGE << std::endl;
    std::cout << "SBM_GETSCROLLBARINFO=" << SBM_GETSCROLLBARINFO << std::endl;
    std::cout << "SBM_GETSCROLLINFO=" << SBM_GETSCROLLINFO << std::endl;
    std::cout << "SBM_SETPOS=" << SBM_SETPOS << std::endl;
    std::cout << "SBM_SETRANGE=" << SBM_SETRANGE << std::endl;
    std::cout << "SBM_SETRANGEREDRAW=" << SBM_SETRANGEREDRAW << std::endl;
    std::cout << "SBM_SETSCROLLINFO=" << SBM_SETSCROLLINFO << std::endl;
    std::cout << "SBT_TOOLTIPS=" << SBT_TOOLTIPS << std::endl;
    std::cout << "SB_BOTH=" << SB_BOTH << std::endl;
    std::cout << "SB_BOTTOM=" << SB_BOTTOM << std::endl;
    std::cout << "SB_CONST_ALPHA=" << SB_CONST_ALPHA << std::endl;
    std::cout << "SB_CTL=" << SB_CTL << std::endl;
    std::cout << "SB_ENDSCROLL=" << SB_ENDSCROLL << std::endl;
    std::cout << "SB_GRAD_RECT=" << SB_GRAD_RECT << std::endl;
    std::cout << "SB_GRAD_TRI=" << SB_GRAD_TRI << std::endl;
    std::cout << "SB_HORZ=" << SB_HORZ << std::endl;
    std::cout << "SB_LEFT=" << SB_LEFT << std::endl;
    std::cout << "SB_LINEDOWN=" << SB_LINEDOWN << std::endl;
    std::cout << "SB_LINELEFT=" << SB_LINELEFT << std::endl;
    std::cout << "SB_LINERIGHT=" << SB_LINERIGHT << std::endl;
    std::cout << "SB_LINEUP=" << SB_LINEUP << std::endl;
    std::cout << "SB_NONE=" << SB_NONE << std::endl;
    std::cout << "SB_PAGEDOWN=" << SB_PAGEDOWN << std::endl;
    std::cout << "SB_PAGELEFT=" << SB_PAGELEFT << std::endl;
    std::cout << "SB_PAGERIGHT=" << SB_PAGERIGHT << std::endl;
    std::cout << "SB_PAGEUP=" << SB_PAGEUP << std::endl;
    std::cout << "SB_PIXEL_ALPHA=" << SB_PIXEL_ALPHA << std::endl;
    std::cout << "SB_PREMULT_ALPHA=" << SB_PREMULT_ALPHA << std::endl;
    std::cout << "SB_RIGHT=" << SB_RIGHT << std::endl;
    std::cout << "SB_THUMBPOSITION=" << SB_THUMBPOSITION << std::endl;
    std::cout << "SB_THUMBTRACK=" << SB_THUMBTRACK << std::endl;
    std::cout << "SB_TOP=" << SB_TOP << std::endl;
    std::cout << "SB_VERT=" << SB_VERT << std::endl;
    std::cout << "SCALINGFACTORX=" << SCALINGFACTORX << std::endl;
    std::cout << "SCALINGFACTORY=" << SCALINGFACTORY << std::endl;
    std::cout << "SCARD_ABSENT=" << SCARD_ABSENT << std::endl;
    std::cout << "SCARD_ATR_LENGTH=" << SCARD_ATR_LENGTH << std::endl;
    std::cout << "SCARD_CLASS_COMMUNICATIONS=" << SCARD_CLASS_COMMUNICATIONS << std::endl;
    std::cout << "SCARD_CLASS_ICC_STATE=" << SCARD_CLASS_ICC_STATE << std::endl;
    std::cout << "SCARD_CLASS_IFD_PROTOCOL=" << SCARD_CLASS_IFD_PROTOCOL << std::endl;
    std::cout << "SCARD_CLASS_MECHANICAL=" << SCARD_CLASS_MECHANICAL << std::endl;
    std::cout << "SCARD_CLASS_POWER_MGMT=" << SCARD_CLASS_POWER_MGMT << std::endl;
    std::cout << "SCARD_CLASS_PROTOCOL=" << SCARD_CLASS_PROTOCOL << std::endl;
    std::cout << "SCARD_CLASS_SECURITY=" << SCARD_CLASS_SECURITY << std::endl;
    std::cout << "SCARD_CLASS_VENDOR_DEFINED=" << SCARD_CLASS_VENDOR_DEFINED << std::endl;
    std::cout << "SCARD_CLASS_VENDOR_INFO=" << SCARD_CLASS_VENDOR_INFO << std::endl;
    std::cout << "SCARD_COLD_RESET=" << SCARD_COLD_RESET << std::endl;
    std::cout << "SCARD_EJECT_CARD=" << SCARD_EJECT_CARD << std::endl;
    std::cout << "SCARD_LEAVE_CARD=" << SCARD_LEAVE_CARD << std::endl;
    std::cout << "SCARD_NEGOTIABLE=" << SCARD_NEGOTIABLE << std::endl;
    std::cout << "SCARD_POWERED=" << SCARD_POWERED << std::endl;
    std::cout << "SCARD_POWER_DOWN=" << SCARD_POWER_DOWN << std::endl;
    std::cout << "SCARD_PRESENT=" << SCARD_PRESENT << std::endl;
    std::cout << "SCARD_PROTOCOL_DEFAULT=" << SCARD_PROTOCOL_DEFAULT << std::endl;
    std::cout << "SCARD_PROTOCOL_OPTIMAL=" << SCARD_PROTOCOL_OPTIMAL << std::endl;
    std::cout << "SCARD_PROTOCOL_RAW=" << SCARD_PROTOCOL_RAW << std::endl;
    std::cout << "SCARD_PROTOCOL_T0=" << SCARD_PROTOCOL_T0 << std::endl;
    std::cout << "SCARD_PROTOCOL_T1=" << SCARD_PROTOCOL_T1 << std::endl;
    std::cout << "SCARD_PROTOCOL_UNDEFINED=" << SCARD_PROTOCOL_UNDEFINED << std::endl;
    std::cout << "SCARD_PROVIDER_CSP=" << SCARD_PROVIDER_CSP << std::endl;
    std::cout << "SCARD_PROVIDER_PRIMARY=" << SCARD_PROVIDER_PRIMARY << std::endl;
    std::cout << "SCARD_READER_CONFISCATES=" << SCARD_READER_CONFISCATES << std::endl;
    std::cout << "SCARD_READER_EJECTS=" << SCARD_READER_EJECTS << std::endl;
    std::cout << "SCARD_READER_SWALLOWS=" << SCARD_READER_SWALLOWS << std::endl;
    std::cout << "SCARD_READER_TYPE_IDE=" << SCARD_READER_TYPE_IDE << std::endl;
    std::cout << "SCARD_READER_TYPE_KEYBOARD=" << SCARD_READER_TYPE_KEYBOARD << std::endl;
    std::cout << "SCARD_READER_TYPE_PARALELL=" << SCARD_READER_TYPE_PARALELL << std::endl;
    std::cout << "SCARD_READER_TYPE_PCMCIA=" << SCARD_READER_TYPE_PCMCIA << std::endl;
    std::cout << "SCARD_READER_TYPE_SCSI=" << SCARD_READER_TYPE_SCSI << std::endl;
    std::cout << "SCARD_READER_TYPE_SERIAL=" << SCARD_READER_TYPE_SERIAL << std::endl;
    std::cout << "SCARD_READER_TYPE_USB=" << SCARD_READER_TYPE_USB << std::endl;
    std::cout << "SCARD_READER_TYPE_VENDOR=" << SCARD_READER_TYPE_VENDOR << std::endl;
    std::cout << "SCARD_RESET_CARD=" << SCARD_RESET_CARD << std::endl;
    std::cout << "SCARD_SCOPE_SYSTEM=" << SCARD_SCOPE_SYSTEM << std::endl;
    std::cout << "SCARD_SCOPE_TERMINAL=" << SCARD_SCOPE_TERMINAL << std::endl;
    std::cout << "SCARD_SCOPE_USER=" << SCARD_SCOPE_USER << std::endl;
    std::cout << "SCARD_SHARE_DIRECT=" << SCARD_SHARE_DIRECT << std::endl;
    std::cout << "SCARD_SHARE_EXCLUSIVE=" << SCARD_SHARE_EXCLUSIVE << std::endl;
    std::cout << "SCARD_SHARE_SHARED=" << SCARD_SHARE_SHARED << std::endl;
    std::cout << "SCARD_SPECIFIC=" << SCARD_SPECIFIC << std::endl;
    std::cout << "SCARD_STATE_ATRMATCH=" << SCARD_STATE_ATRMATCH << std::endl;
    std::cout << "SCARD_STATE_CHANGED=" << SCARD_STATE_CHANGED << std::endl;
    std::cout << "SCARD_STATE_EMPTY=" << SCARD_STATE_EMPTY << std::endl;
    std::cout << "SCARD_STATE_EXCLUSIVE=" << SCARD_STATE_EXCLUSIVE << std::endl;
    std::cout << "SCARD_STATE_IGNORE=" << SCARD_STATE_IGNORE << std::endl;
    std::cout << "SCARD_STATE_INUSE=" << SCARD_STATE_INUSE << std::endl;
    std::cout << "SCARD_STATE_MUTE=" << SCARD_STATE_MUTE << std::endl;
    std::cout << "SCARD_STATE_PRESENT=" << SCARD_STATE_PRESENT << std::endl;
    std::cout << "SCARD_STATE_UNAVAILABLE=" << SCARD_STATE_UNAVAILABLE << std::endl;
    std::cout << "SCARD_STATE_UNAWARE=" << SCARD_STATE_UNAWARE << std::endl;
    std::cout << "SCARD_STATE_UNKNOWN=" << SCARD_STATE_UNKNOWN << std::endl;
    std::cout << "SCARD_STATE_UNPOWERED=" << SCARD_STATE_UNPOWERED << std::endl;
    std::cout << "SCARD_SWALLOWED=" << SCARD_SWALLOWED << std::endl;
    std::cout << "SCARD_T0_CMD_LENGTH=" << SCARD_T0_CMD_LENGTH << std::endl;
    std::cout << "SCARD_T0_HEADER_LENGTH=" << SCARD_T0_HEADER_LENGTH << std::endl;
    std::cout << "SCARD_T1_EPILOGUE_LENGTH=" << SCARD_T1_EPILOGUE_LENGTH << std::endl;
    std::cout << "SCARD_T1_MAX_IFS=" << SCARD_T1_MAX_IFS << std::endl;
    std::cout << "SCARD_T1_PROLOGUE_LENGTH=" << SCARD_T1_PROLOGUE_LENGTH << std::endl;
    std::cout << "SCARD_UNKNOWN=" << SCARD_UNKNOWN << std::endl;
    std::cout << "SCARD_UNPOWER_CARD=" << SCARD_UNPOWER_CARD << std::endl;
    std::cout << "SCARD_WARM_RESET=" << SCARD_WARM_RESET << std::endl;
    std::cout << "SCERR_NOCARDNAME=" << SCERR_NOCARDNAME << std::endl;
    std::cout << "SCERR_NOGUIDS=" << SCERR_NOGUIDS << std::endl;
    std::cout << "SCF_ISSECURE=" << SCF_ISSECURE << std::endl;
    std::cout << "SCHANNEL_ENC_KEY=" << SCHANNEL_ENC_KEY << std::endl;
    std::cout << "SCHANNEL_MAC_KEY=" << SCHANNEL_MAC_KEY << std::endl;
    std::cout << "SCHAR_MAX=" << SCHAR_MAX << std::endl;
    std::cout << "SCHAR_MIN=" << SCHAR_MIN << std::endl;
    std::cout << "SCREEN_FONTTYPE=" << SCREEN_FONTTYPE << std::endl;
    std::cout << "SCROLLLOCK_ON=" << SCROLLLOCK_ON << std::endl;
    std::cout << "SCRUB_DATA_INPUT_FLAG_RESUME=" << SCRUB_DATA_INPUT_FLAG_RESUME << std::endl;
    std::cout << "SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC=" << SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC << std::endl;
    std::cout << "SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA=" << SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA << std::endl;
    std::cout << "SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE=" << SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE << std::endl;
    std::cout << "SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE=" << SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE << std::endl;
    std::cout << "SCS_32BIT_BINARY=" << SCS_32BIT_BINARY << std::endl;
    std::cout << "SCS_64BIT_BINARY=" << SCS_64BIT_BINARY << std::endl;
    std::cout << "SCS_CAP_COMPSTR=" << SCS_CAP_COMPSTR << std::endl;
    std::cout << "SCS_CAP_MAKEREAD=" << SCS_CAP_MAKEREAD << std::endl;
    std::cout << "SCS_CAP_SETRECONVERTSTRING=" << SCS_CAP_SETRECONVERTSTRING << std::endl;
    std::cout << "SCS_CHANGEATTR=" << SCS_CHANGEATTR << std::endl;
    std::cout << "SCS_CHANGECLAUSE=" << SCS_CHANGECLAUSE << std::endl;
    std::cout << "SCS_DOS_BINARY=" << SCS_DOS_BINARY << std::endl;
    std::cout << "SCS_OS216_BINARY=" << SCS_OS216_BINARY << std::endl;
    std::cout << "SCS_PIF_BINARY=" << SCS_PIF_BINARY << std::endl;
    std::cout << "SCS_POSIX_BINARY=" << SCS_POSIX_BINARY << std::endl;
    std::cout << "SCS_QUERYRECONVERTSTRING=" << SCS_QUERYRECONVERTSTRING << std::endl;
    std::cout << "SCS_SETRECONVERTSTRING=" << SCS_SETRECONVERTSTRING << std::endl;
    std::cout << "SCS_SETSTR=" << SCS_SETSTR << std::endl;
    std::cout << "SCS_THIS_PLATFORM_BINARY=" << SCS_THIS_PLATFORM_BINARY << std::endl;
    std::cout << "SCS_WOW_BINARY=" << SCS_WOW_BINARY << std::endl;
    std::cout << "SC_ARRANGE=" << SC_ARRANGE << std::endl;
    std::cout << "SC_CLOSE=" << SC_CLOSE << std::endl;
    std::cout << "SC_CONTEXTHELP=" << SC_CONTEXTHELP << std::endl;
    std::cout << "SC_DEFAULT=" << SC_DEFAULT << std::endl;
    std::cout << "SC_DLG_FORCE_UI=" << SC_DLG_FORCE_UI << std::endl;
    std::cout << "SC_DLG_MINIMAL_UI=" << SC_DLG_MINIMAL_UI << std::endl;
    std::cout << "SC_DLG_NO_UI=" << SC_DLG_NO_UI << std::endl;
    std::cout << "SC_HOTKEY=" << SC_HOTKEY << std::endl;
    std::cout << "SC_HSCROLL=" << SC_HSCROLL << std::endl;
    std::cout << "SC_ICON=" << SC_ICON << std::endl;
    std::cout << "SC_KEYMENU=" << SC_KEYMENU << std::endl;
    std::cout << "SC_MANAGER_ALL_ACCESS=" << SC_MANAGER_ALL_ACCESS << std::endl;
    std::cout << "SC_MANAGER_CONNECT=" << SC_MANAGER_CONNECT << std::endl;
    std::cout << "SC_MANAGER_CREATE_SERVICE=" << SC_MANAGER_CREATE_SERVICE << std::endl;
    std::cout << "SC_MANAGER_ENUMERATE_SERVICE=" << SC_MANAGER_ENUMERATE_SERVICE << std::endl;
    std::cout << "SC_MANAGER_LOCK=" << SC_MANAGER_LOCK << std::endl;
    std::cout << "SC_MANAGER_MODIFY_BOOT_CONFIG=" << SC_MANAGER_MODIFY_BOOT_CONFIG << std::endl;
    std::cout << "SC_MANAGER_QUERY_LOCK_STATUS=" << SC_MANAGER_QUERY_LOCK_STATUS << std::endl;
    std::cout << "SC_MAXIMIZE=" << SC_MAXIMIZE << std::endl;
    std::cout << "SC_MINIMIZE=" << SC_MINIMIZE << std::endl;
    std::cout << "SC_MONITORPOWER=" << SC_MONITORPOWER << std::endl;
    std::cout << "SC_MOUSEMENU=" << SC_MOUSEMENU << std::endl;
    std::cout << "SC_MOVE=" << SC_MOVE << std::endl;
    std::cout << "SC_NEXTWINDOW=" << SC_NEXTWINDOW << std::endl;
    std::cout << "SC_PREVWINDOW=" << SC_PREVWINDOW << std::endl;
    std::cout << "SC_RESTORE=" << SC_RESTORE << std::endl;
    std::cout << "SC_SCREENSAVE=" << SC_SCREENSAVE << std::endl;
    std::cout << "SC_SEPARATOR=" << SC_SEPARATOR << std::endl;
    std::cout << "SC_SIZE=" << SC_SIZE << std::endl;
    std::cout << "SC_TASKLIST=" << SC_TASKLIST << std::endl;
    std::cout << "SC_VSCROLL=" << SC_VSCROLL << std::endl;
    std::cout << "SC_ZOOM=" << SC_ZOOM << std::endl;
    std::cout << "SDC_ALLOW_CHANGES=" << SDC_ALLOW_CHANGES << std::endl;
    std::cout << "SDC_ALLOW_PATH_ORDER_CHANGES=" << SDC_ALLOW_PATH_ORDER_CHANGES << std::endl;
    std::cout << "SDC_APPLY=" << SDC_APPLY << std::endl;
    std::cout << "SDC_FORCE_MODE_ENUMERATION=" << SDC_FORCE_MODE_ENUMERATION << std::endl;
    std::cout << "SDC_NO_OPTIMIZATION=" << SDC_NO_OPTIMIZATION << std::endl;
    std::cout << "SDC_PATH_PERSIST_IF_REQUIRED=" << SDC_PATH_PERSIST_IF_REQUIRED << std::endl;
    std::cout << "SDC_SAVE_TO_DATABASE=" << SDC_SAVE_TO_DATABASE << std::endl;
    std::cout << "SDC_TOPOLOGY_CLONE=" << SDC_TOPOLOGY_CLONE << std::endl;
    std::cout << "SDC_TOPOLOGY_EXTEND=" << SDC_TOPOLOGY_EXTEND << std::endl;
    std::cout << "SDC_TOPOLOGY_EXTERNAL=" << SDC_TOPOLOGY_EXTERNAL << std::endl;
    std::cout << "SDC_TOPOLOGY_INTERNAL=" << SDC_TOPOLOGY_INTERNAL << std::endl;
    std::cout << "SDC_TOPOLOGY_SUPPLIED=" << SDC_TOPOLOGY_SUPPLIED << std::endl;
    std::cout << "SDC_USE_DATABASE_CURRENT=" << SDC_USE_DATABASE_CURRENT << std::endl;
    std::cout << "SDC_USE_SUPPLIED_DISPLAY_CONFIG=" << SDC_USE_SUPPLIED_DISPLAY_CONFIG << std::endl;
    std::cout << "SDC_VALIDATE=" << SDC_VALIDATE << std::endl;
    std::cout << "SDC_VIRTUAL_MODE_AWARE=" << SDC_VIRTUAL_MODE_AWARE << std::endl;
    std::cout << "SEARCH_ALL=" << SEARCH_ALL << std::endl;
    std::cout << "SEARCH_ALL_NO_SEQ=" << SEARCH_ALL_NO_SEQ << std::endl;
    std::cout << "SEARCH_ALTERNATE=" << SEARCH_ALTERNATE << std::endl;
    std::cout << "SEARCH_ALT_NO_SEQ=" << SEARCH_ALT_NO_SEQ << std::endl;
    std::cout << "SEARCH_PRIMARY=" << SEARCH_PRIMARY << std::endl;
    std::cout << "SEARCH_PRI_NO_SEQ=" << SEARCH_PRI_NO_SEQ << std::endl;
    std::cout << "SECTION_ALL_ACCESS=" << SECTION_ALL_ACCESS << std::endl;
    std::cout << "SECTION_EXTEND_SIZE=" << SECTION_EXTEND_SIZE << std::endl;
    std::cout << "SECTION_MAP_EXECUTE=" << SECTION_MAP_EXECUTE << std::endl;
    std::cout << "SECTION_MAP_EXECUTE_EXPLICIT=" << SECTION_MAP_EXECUTE_EXPLICIT << std::endl;
    std::cout << "SECTION_MAP_READ=" << SECTION_MAP_READ << std::endl;
    std::cout << "SECTION_MAP_WRITE=" << SECTION_MAP_WRITE << std::endl;
    std::cout << "SECTION_QUERY=" << SECTION_QUERY << std::endl;
    std::cout << "SECURITY_CONTEXT_TRACKING=" << SECURITY_CONTEXT_TRACKING << std::endl;
    std::cout << "SECURITY_DESCRIPTOR_REVISION=" << SECURITY_DESCRIPTOR_REVISION << std::endl;
    std::cout << "SECURITY_DESCRIPTOR_REVISION1=" << SECURITY_DESCRIPTOR_REVISION1 << std::endl;
    std::cout << "SECURITY_DYNAMIC_TRACKING=" << SECURITY_DYNAMIC_TRACKING << std::endl;
    std::cout << "SECURITY_EFFECTIVE_ONLY=" << SECURITY_EFFECTIVE_ONLY << std::endl;
    std::cout << "SECURITY_IE_STATE_GREEN=" << SECURITY_IE_STATE_GREEN << std::endl;
    std::cout << "SECURITY_IE_STATE_RED=" << SECURITY_IE_STATE_RED << std::endl;
    std::cout << "SECURITY_MANDATORY_MAXIMUM_USER_RID=" << SECURITY_MANDATORY_MAXIMUM_USER_RID << std::endl;
    std::cout << "SECURITY_SERVER_LOGON_RID=" << SECURITY_SERVER_LOGON_RID << std::endl;
    std::cout << "SECURITY_SQOS_PRESENT=" << SECURITY_SQOS_PRESENT << std::endl;
    std::cout << "SECURITY_STATIC_TRACKING=" << SECURITY_STATIC_TRACKING << std::endl;
    std::cout << "SECURITY_TRUSTED_INSTALLER_RID1=" << SECURITY_TRUSTED_INSTALLER_RID1 << std::endl;
    std::cout << "SECURITY_TRUSTED_INSTALLER_RID2=" << SECURITY_TRUSTED_INSTALLER_RID2 << std::endl;
    std::cout << "SECURITY_TRUSTED_INSTALLER_RID3=" << SECURITY_TRUSTED_INSTALLER_RID3 << std::endl;
    std::cout << "SECURITY_TRUSTED_INSTALLER_RID4=" << SECURITY_TRUSTED_INSTALLER_RID4 << std::endl;
    std::cout << "SECURITY_TRUSTED_INSTALLER_RID5=" << SECURITY_TRUSTED_INSTALLER_RID5 << std::endl;
    std::cout << "SEC_64K_PAGES=" << SEC_64K_PAGES << std::endl;
    std::cout << "SEC_COMMIT=" << SEC_COMMIT << std::endl;
    std::cout << "SEC_FILE=" << SEC_FILE << std::endl;
    std::cout << "SEC_IMAGE=" << SEC_IMAGE << std::endl;
    std::cout << "SEC_IMAGE_NO_EXECUTE=" << SEC_IMAGE_NO_EXECUTE << std::endl;
    std::cout << "SEC_LARGE_PAGES=" << SEC_LARGE_PAGES << std::endl;
    std::cout << "SEC_NOCACHE=" << SEC_NOCACHE << std::endl;
    std::cout << "SEC_PARTITION_OWNER_HANDLE=" << SEC_PARTITION_OWNER_HANDLE << std::endl;
    std::cout << "SEC_PROTECTED_IMAGE=" << SEC_PROTECTED_IMAGE << std::endl;
    std::cout << "SEC_RESERVE=" << SEC_RESERVE << std::endl;
    std::cout << "SEC_WINNT_AUTH_IDENTITY_ANSI=" << SEC_WINNT_AUTH_IDENTITY_ANSI << std::endl;
    std::cout << "SEC_WINNT_AUTH_IDENTITY_UNICODE=" << SEC_WINNT_AUTH_IDENTITY_UNICODE << std::endl;
    std::cout << "SEC_WRITECOMBINE=" << SEC_WRITECOMBINE << std::endl;
    std::cout << "SEEK_CUR=" << SEEK_CUR << std::endl;
    std::cout << "SEEK_END=" << SEEK_END << std::endl;
    std::cout << "SEEK_SET=" << SEEK_SET << std::endl;
    std::cout << "SEE_MASK_ASYNCOK=" << SEE_MASK_ASYNCOK << std::endl;
    std::cout << "SEE_MASK_CLASSKEY=" << SEE_MASK_CLASSKEY << std::endl;
    std::cout << "SEE_MASK_CLASSNAME=" << SEE_MASK_CLASSNAME << std::endl;
    std::cout << "SEE_MASK_CONNECTNETDRV=" << SEE_MASK_CONNECTNETDRV << std::endl;
    std::cout << "SEE_MASK_DEFAULT=" << SEE_MASK_DEFAULT << std::endl;
    std::cout << "SEE_MASK_DOENVSUBST=" << SEE_MASK_DOENVSUBST << std::endl;
    std::cout << "SEE_MASK_FLAG_DDEWAIT=" << SEE_MASK_FLAG_DDEWAIT << std::endl;
    std::cout << "SEE_MASK_FLAG_HINST_IS_SITE=" << SEE_MASK_FLAG_HINST_IS_SITE << std::endl;
    std::cout << "SEE_MASK_FLAG_LOG_USAGE=" << SEE_MASK_FLAG_LOG_USAGE << std::endl;
    std::cout << "SEE_MASK_FLAG_NO_UI=" << SEE_MASK_FLAG_NO_UI << std::endl;
    std::cout << "SEE_MASK_HMONITOR=" << SEE_MASK_HMONITOR << std::endl;
    std::cout << "SEE_MASK_HOTKEY=" << SEE_MASK_HOTKEY << std::endl;
    std::cout << "SEE_MASK_ICON=" << SEE_MASK_ICON << std::endl;
    std::cout << "SEE_MASK_IDLIST=" << SEE_MASK_IDLIST << std::endl;
    std::cout << "SEE_MASK_NOASYNC=" << SEE_MASK_NOASYNC << std::endl;
    std::cout << "SEE_MASK_NOCLOSEPROCESS=" << SEE_MASK_NOCLOSEPROCESS << std::endl;
    std::cout << "SEE_MASK_NOQUERYCLASSSTORE=" << SEE_MASK_NOQUERYCLASSSTORE << std::endl;
    std::cout << "SEE_MASK_NOZONECHECKS=" << SEE_MASK_NOZONECHECKS << std::endl;
    std::cout << "SEE_MASK_NO_CONSOLE=" << SEE_MASK_NO_CONSOLE << std::endl;
    std::cout << "SEE_MASK_UNICODE=" << SEE_MASK_UNICODE << std::endl;
    std::cout << "SEE_MASK_WAITFORINPUTIDLE=" << SEE_MASK_WAITFORINPUTIDLE << std::endl;
    std::cout << "SEF_AVOID_OWNER_CHECK=" << SEF_AVOID_OWNER_CHECK << std::endl;
    std::cout << "SEF_AVOID_OWNER_RESTRICTION=" << SEF_AVOID_OWNER_RESTRICTION << std::endl;
    std::cout << "SEF_AVOID_PRIVILEGE_CHECK=" << SEF_AVOID_PRIVILEGE_CHECK << std::endl;
    std::cout << "SEF_DACL_AUTO_INHERIT=" << SEF_DACL_AUTO_INHERIT << std::endl;
    std::cout << "SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT=" << SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT << std::endl;
    std::cout << "SEF_DEFAULT_GROUP_FROM_PARENT=" << SEF_DEFAULT_GROUP_FROM_PARENT << std::endl;
    std::cout << "SEF_DEFAULT_OWNER_FROM_PARENT=" << SEF_DEFAULT_OWNER_FROM_PARENT << std::endl;
    std::cout << "SEF_MACL_NO_EXECUTE_UP=" << SEF_MACL_NO_EXECUTE_UP << std::endl;
    std::cout << "SEF_MACL_NO_READ_UP=" << SEF_MACL_NO_READ_UP << std::endl;
    std::cout << "SEF_MACL_NO_WRITE_UP=" << SEF_MACL_NO_WRITE_UP << std::endl;
    std::cout << "SEF_MACL_VALID_FLAGS=" << SEF_MACL_VALID_FLAGS << std::endl;
    std::cout << "SEF_SACL_AUTO_INHERIT=" << SEF_SACL_AUTO_INHERIT << std::endl;
    std::cout << "SELECTDIB=" << SELECTDIB << std::endl;
    std::cout << "SELECTPAPERSOURCE=" << SELECTPAPERSOURCE << std::endl;
    std::cout << "SELECT_CAP_CONVERSION=" << SELECT_CAP_CONVERSION << std::endl;
    std::cout << "SELECT_CAP_SENTENCE=" << SELECT_CAP_SENTENCE << std::endl;
    std::cout << "SEMAPHORE_ALL_ACCESS=" << SEMAPHORE_ALL_ACCESS << std::endl;
    std::cout << "SEMAPHORE_MODIFY_STATE=" << SEMAPHORE_MODIFY_STATE << std::endl;
    std::cout << "SEM_FAILCRITICALERRORS=" << SEM_FAILCRITICALERRORS << std::endl;
    std::cout << "SEM_NOALIGNMENTFAULTEXCEPT=" << SEM_NOALIGNMENTFAULTEXCEPT << std::endl;
    std::cout << "SEM_NOGPFAULTERRORBOX=" << SEM_NOGPFAULTERRORBOX << std::endl;
    std::cout << "SEM_NOOPENFILEERRORBOX=" << SEM_NOOPENFILEERRORBOX << std::endl;
    std::cout << "SERIAL_NUMBER_LENGTH=" << SERIAL_NUMBER_LENGTH << std::endl;
    std::cout << "SERKF_AVAILABLE=" << SERKF_AVAILABLE << std::endl;
    std::cout << "SERKF_INDICATOR=" << SERKF_INDICATOR << std::endl;
    std::cout << "SERKF_SERIALKEYSON=" << SERKF_SERIALKEYSON << std::endl;
    std::cout << "SERVER_ACCESS_ADMINISTER=" << SERVER_ACCESS_ADMINISTER << std::endl;
    std::cout << "SERVER_ACCESS_ENUMERATE=" << SERVER_ACCESS_ENUMERATE << std::endl;
    std::cout << "SERVER_ALL_ACCESS=" << SERVER_ALL_ACCESS << std::endl;
    std::cout << "SERVER_EXECUTE=" << SERVER_EXECUTE << std::endl;
    std::cout << "SERVER_READ=" << SERVER_READ << std::endl;
    std::cout << "SERVER_WRITE=" << SERVER_WRITE << std::endl;
    std::cout << "SERVICE_ACCEPT_HARDWAREPROFILECHANGE=" << SERVICE_ACCEPT_HARDWAREPROFILECHANGE << std::endl;
    std::cout << "SERVICE_ACCEPT_NETBINDCHANGE=" << SERVICE_ACCEPT_NETBINDCHANGE << std::endl;
    std::cout << "SERVICE_ACCEPT_PARAMCHANGE=" << SERVICE_ACCEPT_PARAMCHANGE << std::endl;
    std::cout << "SERVICE_ACCEPT_PAUSE_CONTINUE=" << SERVICE_ACCEPT_PAUSE_CONTINUE << std::endl;
    std::cout << "SERVICE_ACCEPT_POWEREVENT=" << SERVICE_ACCEPT_POWEREVENT << std::endl;
    std::cout << "SERVICE_ACCEPT_SESSIONCHANGE=" << SERVICE_ACCEPT_SESSIONCHANGE << std::endl;
    std::cout << "SERVICE_ACCEPT_SHUTDOWN=" << SERVICE_ACCEPT_SHUTDOWN << std::endl;
    std::cout << "SERVICE_ACCEPT_STOP=" << SERVICE_ACCEPT_STOP << std::endl;
    std::cout << "SERVICE_ACTIVE=" << SERVICE_ACTIVE << std::endl;
    std::cout << "SERVICE_ADAPTER=" << SERVICE_ADAPTER << std::endl;
    std::cout << "SERVICE_ALL_ACCESS=" << SERVICE_ALL_ACCESS << std::endl;
    std::cout << "SERVICE_AUTO_START=" << SERVICE_AUTO_START << std::endl;
    std::cout << "SERVICE_BOOT_START=" << SERVICE_BOOT_START << std::endl;
    std::cout << "SERVICE_CHANGE_CONFIG=" << SERVICE_CHANGE_CONFIG << std::endl;
    std::cout << "SERVICE_CONFIG_DELAYED_AUTO_START_INFO=" << SERVICE_CONFIG_DELAYED_AUTO_START_INFO << std::endl;
    std::cout << "SERVICE_CONFIG_DESCRIPTION=" << SERVICE_CONFIG_DESCRIPTION << std::endl;
    std::cout << "SERVICE_CONFIG_FAILURE_ACTIONS=" << SERVICE_CONFIG_FAILURE_ACTIONS << std::endl;
    std::cout << "SERVICE_CONFIG_FAILURE_ACTIONS_FLAG=" << SERVICE_CONFIG_FAILURE_ACTIONS_FLAG << std::endl;
    std::cout << "SERVICE_CONFIG_PRESHUTDOWN_INFO=" << SERVICE_CONFIG_PRESHUTDOWN_INFO << std::endl;
    std::cout << "SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO=" << SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO << std::endl;
    std::cout << "SERVICE_CONFIG_SERVICE_SID_INFO=" << SERVICE_CONFIG_SERVICE_SID_INFO << std::endl;
    std::cout << "SERVICE_CONTINUE_PENDING=" << SERVICE_CONTINUE_PENDING << std::endl;
    std::cout << "SERVICE_CONTROL_CONTINUE=" << SERVICE_CONTROL_CONTINUE << std::endl;
    std::cout << "SERVICE_CONTROL_DEVICEEVENT=" << SERVICE_CONTROL_DEVICEEVENT << std::endl;
    std::cout << "SERVICE_CONTROL_HARDWAREPROFILECHANGE=" << SERVICE_CONTROL_HARDWAREPROFILECHANGE << std::endl;
    std::cout << "SERVICE_CONTROL_INTERROGATE=" << SERVICE_CONTROL_INTERROGATE << std::endl;
    std::cout << "SERVICE_CONTROL_NETBINDADD=" << SERVICE_CONTROL_NETBINDADD << std::endl;
    std::cout << "SERVICE_CONTROL_NETBINDDISABLE=" << SERVICE_CONTROL_NETBINDDISABLE << std::endl;
    std::cout << "SERVICE_CONTROL_NETBINDENABLE=" << SERVICE_CONTROL_NETBINDENABLE << std::endl;
    std::cout << "SERVICE_CONTROL_NETBINDREMOVE=" << SERVICE_CONTROL_NETBINDREMOVE << std::endl;
    std::cout << "SERVICE_CONTROL_PARAMCHANGE=" << SERVICE_CONTROL_PARAMCHANGE << std::endl;
    std::cout << "SERVICE_CONTROL_PAUSE=" << SERVICE_CONTROL_PAUSE << std::endl;
    std::cout << "SERVICE_CONTROL_POWEREVENT=" << SERVICE_CONTROL_POWEREVENT << std::endl;
    std::cout << "SERVICE_CONTROL_SESSIONCHANGE=" << SERVICE_CONTROL_SESSIONCHANGE << std::endl;
    std::cout << "SERVICE_CONTROL_SHUTDOWN=" << SERVICE_CONTROL_SHUTDOWN << std::endl;
    std::cout << "SERVICE_CONTROL_STOP=" << SERVICE_CONTROL_STOP << std::endl;
    std::cout << "SERVICE_DEMAND_START=" << SERVICE_DEMAND_START << std::endl;
    std::cout << "SERVICE_DISABLED=" << SERVICE_DISABLED << std::endl;
    std::cout << "SERVICE_DRIVER=" << SERVICE_DRIVER << std::endl;
    std::cout << "SERVICE_ENUMERATE_DEPENDENTS=" << SERVICE_ENUMERATE_DEPENDENTS << std::endl;
    std::cout << "SERVICE_ERROR_CRITICAL=" << SERVICE_ERROR_CRITICAL << std::endl;
    std::cout << "SERVICE_ERROR_IGNORE=" << SERVICE_ERROR_IGNORE << std::endl;
    std::cout << "SERVICE_ERROR_NORMAL=" << SERVICE_ERROR_NORMAL << std::endl;
    std::cout << "SERVICE_ERROR_SEVERE=" << SERVICE_ERROR_SEVERE << std::endl;
    std::cout << "SERVICE_FILE_SYSTEM_DRIVER=" << SERVICE_FILE_SYSTEM_DRIVER << std::endl;
    std::cout << "SERVICE_INACTIVE=" << SERVICE_INACTIVE << std::endl;
    std::cout << "SERVICE_INTERACTIVE_PROCESS=" << SERVICE_INTERACTIVE_PROCESS << std::endl;
    std::cout << "SERVICE_INTERROGATE=" << SERVICE_INTERROGATE << std::endl;
    std::cout << "SERVICE_KERNEL_DRIVER=" << SERVICE_KERNEL_DRIVER << std::endl;
    std::cout << "SERVICE_PAUSED=" << SERVICE_PAUSED << std::endl;
    std::cout << "SERVICE_PAUSE_CONTINUE=" << SERVICE_PAUSE_CONTINUE << std::endl;
    std::cout << "SERVICE_PAUSE_PENDING=" << SERVICE_PAUSE_PENDING << std::endl;
    std::cout << "SERVICE_QUERY_CONFIG=" << SERVICE_QUERY_CONFIG << std::endl;
    std::cout << "SERVICE_QUERY_STATUS=" << SERVICE_QUERY_STATUS << std::endl;
    std::cout << "SERVICE_RECOGNIZER_DRIVER=" << SERVICE_RECOGNIZER_DRIVER << std::endl;
    std::cout << "SERVICE_RUNNING=" << SERVICE_RUNNING << std::endl;
    std::cout << "SERVICE_RUNS_IN_SYSTEM_PROCESS=" << SERVICE_RUNS_IN_SYSTEM_PROCESS << std::endl;
    std::cout << "SERVICE_SID_TYPE_NONE=" << SERVICE_SID_TYPE_NONE << std::endl;
    std::cout << "SERVICE_SID_TYPE_RESTRICTED=" << SERVICE_SID_TYPE_RESTRICTED << std::endl;
    std::cout << "SERVICE_SID_TYPE_UNRESTRICTED=" << SERVICE_SID_TYPE_UNRESTRICTED << std::endl;
    std::cout << "SERVICE_START=" << SERVICE_START << std::endl;
    std::cout << "SERVICE_START_PENDING=" << SERVICE_START_PENDING << std::endl;
    std::cout << "SERVICE_STATE_ALL=" << SERVICE_STATE_ALL << std::endl;
    std::cout << "SERVICE_STOP=" << SERVICE_STOP << std::endl;
    std::cout << "SERVICE_STOPPED=" << SERVICE_STOPPED << std::endl;
    std::cout << "SERVICE_STOP_PENDING=" << SERVICE_STOP_PENDING << std::endl;
    std::cout << "SERVICE_STOP_REASON_FLAG_CUSTOM=" << SERVICE_STOP_REASON_FLAG_CUSTOM << std::endl;
    std::cout << "SERVICE_STOP_REASON_FLAG_PLANNED=" << SERVICE_STOP_REASON_FLAG_PLANNED << std::endl;
    std::cout << "SERVICE_STOP_REASON_FLAG_UNPLANNED=" << SERVICE_STOP_REASON_FLAG_UNPLANNED << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_APPLICATION=" << SERVICE_STOP_REASON_MAJOR_APPLICATION << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_HARDWARE=" << SERVICE_STOP_REASON_MAJOR_HARDWARE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_NONE=" << SERVICE_STOP_REASON_MAJOR_NONE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM=" << SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_OTHER=" << SERVICE_STOP_REASON_MAJOR_OTHER << std::endl;
    std::cout << "SERVICE_STOP_REASON_MAJOR_SOFTWARE=" << SERVICE_STOP_REASON_MAJOR_SOFTWARE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_DISK=" << SERVICE_STOP_REASON_MINOR_DISK << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_HUNG=" << SERVICE_STOP_REASON_MINOR_HUNG << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_INSTALLATION=" << SERVICE_STOP_REASON_MINOR_INSTALLATION << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_MAINTENANCE=" << SERVICE_STOP_REASON_MINOR_MAINTENANCE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_MMC=" << SERVICE_STOP_REASON_MINOR_MMC << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_NETWORKCARD=" << SERVICE_STOP_REASON_MINOR_NETWORKCARD << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY=" << SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_NONE=" << SERVICE_STOP_REASON_MINOR_NONE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_OTHER=" << SERVICE_STOP_REASON_MINOR_OTHER << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_RECONFIG=" << SERVICE_STOP_REASON_MINOR_RECONFIG << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_SECURITY=" << SERVICE_STOP_REASON_MINOR_SECURITY << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL=" << SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL=" << SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_UNSTABLE=" << SERVICE_STOP_REASON_MINOR_UNSTABLE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_UPGRADE=" << SERVICE_STOP_REASON_MINOR_UPGRADE << std::endl;
    std::cout << "SERVICE_STOP_REASON_MINOR_WMI=" << SERVICE_STOP_REASON_MINOR_WMI << std::endl;
    std::cout << "SERVICE_SYSTEM_START=" << SERVICE_SYSTEM_START << std::endl;
    std::cout << "SERVICE_TYPE_ALL=" << SERVICE_TYPE_ALL << std::endl;
    std::cout << "SERVICE_USER_DEFINED_CONTROL=" << SERVICE_USER_DEFINED_CONTROL << std::endl;
    std::cout << "SERVICE_WIN32=" << SERVICE_WIN32 << std::endl;
    std::cout << "SERVICE_WIN32_OWN_PROCESS=" << SERVICE_WIN32_OWN_PROCESS << std::endl;
    std::cout << "SERVICE_WIN32_SHARE_PROCESS=" << SERVICE_WIN32_SHARE_PROCESS << std::endl;
    std::cout << "SESSION_ABORTED=" << SESSION_ABORTED << std::endl;
    std::cout << "SESSION_ALL_ACCESS=" << SESSION_ALL_ACCESS << std::endl;
    std::cout << "SESSION_ESTABLISHED=" << SESSION_ESTABLISHED << std::endl;
    std::cout << "SESSION_MODIFY_ACCESS=" << SESSION_MODIFY_ACCESS << std::endl;
    std::cout << "SESSION_QUERY_ACCESS=" << SESSION_QUERY_ACCESS << std::endl;
    std::cout << "SETABORTPROC=" << SETABORTPROC << std::endl;
    std::cout << "SETALLJUSTVALUES=" << SETALLJUSTVALUES << std::endl;
    std::cout << "SETBREAK=" << SETBREAK << std::endl;
    std::cout << "SETCHARSET=" << SETCHARSET << std::endl;
    std::cout << "SETCOLORTABLE=" << SETCOLORTABLE << std::endl;
    std::cout << "SETCOPYCOUNT=" << SETCOPYCOUNT << std::endl;
    std::cout << "SETDIBSCALING=" << SETDIBSCALING << std::endl;
    std::cout << "SETDTR=" << SETDTR << std::endl;
    std::cout << "SETICMPROFILE_EMBEDED=" << SETICMPROFILE_EMBEDED << std::endl;
    std::cout << "SETKERNTRACK=" << SETKERNTRACK << std::endl;
    std::cout << "SETLINECAP=" << SETLINECAP << std::endl;
    std::cout << "SETLINEJOIN=" << SETLINEJOIN << std::endl;
    std::cout << "SETMITERLIMIT=" << SETMITERLIMIT << std::endl;
    std::cout << "SETRTS=" << SETRTS << std::endl;
    std::cout << "SETXOFF=" << SETXOFF << std::endl;
    std::cout << "SETXON=" << SETXON << std::endl;
    std::cout << "SET_ARC_DIRECTION=" << SET_ARC_DIRECTION << std::endl;
    std::cout << "SET_BACKGROUND_COLOR=" << SET_BACKGROUND_COLOR << std::endl;
    std::cout << "SET_BOUNDS=" << SET_BOUNDS << std::endl;
    std::cout << "SET_CLIP_BOX=" << SET_CLIP_BOX << std::endl;
    std::cout << "SET_FEATURE_IN_REGISTRY=" << SET_FEATURE_IN_REGISTRY << std::endl;
    std::cout << "SET_FEATURE_ON_PROCESS=" << SET_FEATURE_ON_PROCESS << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD=" << SET_FEATURE_ON_THREAD << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD_INTERNET=" << SET_FEATURE_ON_THREAD_INTERNET << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD_INTRANET=" << SET_FEATURE_ON_THREAD_INTRANET << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD_LOCALMACHINE=" << SET_FEATURE_ON_THREAD_LOCALMACHINE << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD_RESTRICTED=" << SET_FEATURE_ON_THREAD_RESTRICTED << std::endl;
    std::cout << "SET_FEATURE_ON_THREAD_TRUSTED=" << SET_FEATURE_ON_THREAD_TRUSTED << std::endl;
    std::cout << "SET_MIRROR_MODE=" << SET_MIRROR_MODE << std::endl;
    std::cout << "SET_POLY_MODE=" << SET_POLY_MODE << std::endl;
    std::cout << "SET_REPAIR_DELETE_CROSSLINK=" << SET_REPAIR_DELETE_CROSSLINK << std::endl;
    std::cout << "SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT=" << SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT << std::endl;
    std::cout << "SET_REPAIR_ENABLED=" << SET_REPAIR_ENABLED << std::endl;
    std::cout << "SET_REPAIR_VALID_MASK=" << SET_REPAIR_VALID_MASK << std::endl;
    std::cout << "SET_REPAIR_VOLUME_BITMAP_SCAN=" << SET_REPAIR_VOLUME_BITMAP_SCAN << std::endl;
    std::cout << "SET_REPAIR_WARN_ABOUT_DATA_LOSS=" << SET_REPAIR_WARN_ABOUT_DATA_LOSS << std::endl;
    std::cout << "SET_SCREEN_ANGLE=" << SET_SCREEN_ANGLE << std::endl;
    std::cout << "SET_SPREAD=" << SET_SPREAD << std::endl;
    std::cout << "SET_TAPE_DRIVE_INFORMATION=" << SET_TAPE_DRIVE_INFORMATION << std::endl;
    std::cout << "SET_TAPE_MEDIA_INFORMATION=" << SET_TAPE_MEDIA_INFORMATION << std::endl;
    std::cout << "SEVERITY_ERROR=" << SEVERITY_ERROR << std::endl;
    std::cout << "SEVERITY_SUCCESS=" << SEVERITY_SUCCESS << std::endl;
    std::cout << "SE_DACL_AUTO_INHERITED=" << SE_DACL_AUTO_INHERITED << std::endl;
    std::cout << "SE_DACL_AUTO_INHERIT_REQ=" << SE_DACL_AUTO_INHERIT_REQ << std::endl;
    std::cout << "SE_DACL_DEFAULTED=" << SE_DACL_DEFAULTED << std::endl;
    std::cout << "SE_DACL_PRESENT=" << SE_DACL_PRESENT << std::endl;
    std::cout << "SE_DACL_PROTECTED=" << SE_DACL_PROTECTED << std::endl;
    std::cout << "SE_ERR_ACCESSDENIED=" << SE_ERR_ACCESSDENIED << std::endl;
    std::cout << "SE_ERR_ASSOCINCOMPLETE=" << SE_ERR_ASSOCINCOMPLETE << std::endl;
    std::cout << "SE_ERR_DDEBUSY=" << SE_ERR_DDEBUSY << std::endl;
    std::cout << "SE_ERR_DDEFAIL=" << SE_ERR_DDEFAIL << std::endl;
    std::cout << "SE_ERR_DDETIMEOUT=" << SE_ERR_DDETIMEOUT << std::endl;
    std::cout << "SE_ERR_DLLNOTFOUND=" << SE_ERR_DLLNOTFOUND << std::endl;
    std::cout << "SE_ERR_FNF=" << SE_ERR_FNF << std::endl;
    std::cout << "SE_ERR_NOASSOC=" << SE_ERR_NOASSOC << std::endl;
    std::cout << "SE_ERR_OOM=" << SE_ERR_OOM << std::endl;
    std::cout << "SE_ERR_PNF=" << SE_ERR_PNF << std::endl;
    std::cout << "SE_ERR_SHARE=" << SE_ERR_SHARE << std::endl;
    std::cout << "SE_GROUP_DEFAULTED=" << SE_GROUP_DEFAULTED << std::endl;
    std::cout << "SE_GROUP_VALID_ATTRIBUTES=" << SE_GROUP_VALID_ATTRIBUTES << std::endl;
    std::cout << "SE_LEARNING_MODE_FLAG_PERMISSIVE=" << SE_LEARNING_MODE_FLAG_PERMISSIVE << std::endl;
    std::cout << "SE_OWNER_DEFAULTED=" << SE_OWNER_DEFAULTED << std::endl;
    std::cout << "SE_PRIVILEGE_VALID_ATTRIBUTES=" << SE_PRIVILEGE_VALID_ATTRIBUTES << std::endl;
    std::cout << "SE_RM_CONTROL_VALID=" << SE_RM_CONTROL_VALID << std::endl;
    std::cout << "SE_SACL_AUTO_INHERITED=" << SE_SACL_AUTO_INHERITED << std::endl;
    std::cout << "SE_SACL_AUTO_INHERIT_REQ=" << SE_SACL_AUTO_INHERIT_REQ << std::endl;
    std::cout << "SE_SACL_DEFAULTED=" << SE_SACL_DEFAULTED << std::endl;
    std::cout << "SE_SACL_PRESENT=" << SE_SACL_PRESENT << std::endl;
    std::cout << "SE_SACL_PROTECTED=" << SE_SACL_PROTECTED << std::endl;
    std::cout << "SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE=" << SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE << std::endl;
    std::cout << "SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE=" << SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE << std::endl;
    std::cout << "SE_SECURITY_DESCRIPTOR_VALID_FLAGS=" << SE_SECURITY_DESCRIPTOR_VALID_FLAGS << std::endl;
    std::cout << "SE_SELF_RELATIVE=" << SE_SELF_RELATIVE << std::endl;
    std::cout << "SHADEBLENDCAPS=" << SHADEBLENDCAPS << std::endl;
    std::cout << "SHERB_NOCONFIRMATION=" << SHERB_NOCONFIRMATION << std::endl;
    std::cout << "SHERB_NOPROGRESSUI=" << SHERB_NOPROGRESSUI << std::endl;
    std::cout << "SHERB_NOSOUND=" << SHERB_NOSOUND << std::endl;
    std::cout << "SHGFI_ADDOVERLAYS=" << SHGFI_ADDOVERLAYS << std::endl;
    std::cout << "SHGFI_ATTRIBUTES=" << SHGFI_ATTRIBUTES << std::endl;
    std::cout << "SHGFI_ATTR_SPECIFIED=" << SHGFI_ATTR_SPECIFIED << std::endl;
    std::cout << "SHGFI_DISPLAYNAME=" << SHGFI_DISPLAYNAME << std::endl;
    std::cout << "SHGFI_EXETYPE=" << SHGFI_EXETYPE << std::endl;
    std::cout << "SHGFI_ICON=" << SHGFI_ICON << std::endl;
    std::cout << "SHGFI_ICONLOCATION=" << SHGFI_ICONLOCATION << std::endl;
    std::cout << "SHGFI_LARGEICON=" << SHGFI_LARGEICON << std::endl;
    std::cout << "SHGFI_LINKOVERLAY=" << SHGFI_LINKOVERLAY << std::endl;
    std::cout << "SHGFI_OPENICON=" << SHGFI_OPENICON << std::endl;
    std::cout << "SHGFI_OVERLAYINDEX=" << SHGFI_OVERLAYINDEX << std::endl;
    std::cout << "SHGFI_PIDL=" << SHGFI_PIDL << std::endl;
    std::cout << "SHGFI_SELECTED=" << SHGFI_SELECTED << std::endl;
    std::cout << "SHGFI_SHELLICONSIZE=" << SHGFI_SHELLICONSIZE << std::endl;
    std::cout << "SHGFI_SMALLICON=" << SHGFI_SMALLICON << std::endl;
    std::cout << "SHGFI_SYSICONINDEX=" << SHGFI_SYSICONINDEX << std::endl;
    std::cout << "SHGFI_TYPENAME=" << SHGFI_TYPENAME << std::endl;
    std::cout << "SHGFI_USEFILEATTRIBUTES=" << SHGFI_USEFILEATTRIBUTES << std::endl;
    std::cout << "SHGNLI_NOLNK=" << SHGNLI_NOLNK << std::endl;
    std::cout << "SHGNLI_NOLOCNAME=" << SHGNLI_NOLOCNAME << std::endl;
    std::cout << "SHGNLI_NOUNIQUE=" << SHGNLI_NOUNIQUE << std::endl;
    std::cout << "SHGNLI_PIDL=" << SHGNLI_PIDL << std::endl;
    std::cout << "SHGNLI_PREFIXNAME=" << SHGNLI_PREFIXNAME << std::endl;
    std::cout << "SHGNLI_USEURLEXT=" << SHGNLI_USEURLEXT << std::endl;
    std::cout << "SHGSI_ICON=" << SHGSI_ICON << std::endl;
    std::cout << "SHGSI_ICONLOCATION=" << SHGSI_ICONLOCATION << std::endl;
    std::cout << "SHGSI_LARGEICON=" << SHGSI_LARGEICON << std::endl;
    std::cout << "SHGSI_LINKOVERLAY=" << SHGSI_LINKOVERLAY << std::endl;
    std::cout << "SHGSI_SELECTED=" << SHGSI_SELECTED << std::endl;
    std::cout << "SHGSI_SHELLICONSIZE=" << SHGSI_SHELLICONSIZE << std::endl;
    std::cout << "SHGSI_SMALLICON=" << SHGSI_SMALLICON << std::endl;
    std::cout << "SHGSI_SYSICONINDEX=" << SHGSI_SYSICONINDEX << std::endl;
    std::cout << "SHIFTJIS_CHARSET=" << SHIFTJIS_CHARSET << std::endl;
    std::cout << "SHIFT_PRESSED=" << SHIFT_PRESSED << std::endl;
    std::cout << "SHIL_EXTRALARGE=" << SHIL_EXTRALARGE << std::endl;
    std::cout << "SHIL_JUMBO=" << SHIL_JUMBO << std::endl;
    std::cout << "SHIL_LARGE=" << SHIL_LARGE << std::endl;
    std::cout << "SHIL_LAST=" << SHIL_LAST << std::endl;
    std::cout << "SHIL_SMALL=" << SHIL_SMALL << std::endl;
    std::cout << "SHIL_SYSSMALL=" << SHIL_SYSSMALL << std::endl;
    std::cout << "SHOW_FULLSCREEN=" << SHOW_FULLSCREEN << std::endl;
    std::cout << "SHOW_ICONWINDOW=" << SHOW_ICONWINDOW << std::endl;
    std::cout << "SHOW_OPENNOACTIVATE=" << SHOW_OPENNOACTIVATE << std::endl;
    std::cout << "SHOW_OPENWINDOW=" << SHOW_OPENWINDOW << std::endl;
    std::cout << "SHRT_MAX=" << SHRT_MAX << std::endl;
    std::cout << "SHRT_MIN=" << SHRT_MIN << std::endl;
    std::cout << "SHTDN_REASON_FLAG_CLEAN_UI=" << SHTDN_REASON_FLAG_CLEAN_UI << std::endl;
    std::cout << "SHTDN_REASON_FLAG_COMMENT_REQUIRED=" << SHTDN_REASON_FLAG_COMMENT_REQUIRED << std::endl;
    std::cout << "SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED=" << SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED << std::endl;
    std::cout << "SHTDN_REASON_FLAG_DIRTY_UI=" << SHTDN_REASON_FLAG_DIRTY_UI << std::endl;
    std::cout << "SHTDN_REASON_FLAG_PLANNED=" << SHTDN_REASON_FLAG_PLANNED << std::endl;
    std::cout << "SHTDN_REASON_FLAG_USER_DEFINED=" << SHTDN_REASON_FLAG_USER_DEFINED << std::endl;
    std::cout << "SHTDN_REASON_LEGACY_API=" << SHTDN_REASON_LEGACY_API << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_APPLICATION=" << SHTDN_REASON_MAJOR_APPLICATION << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_HARDWARE=" << SHTDN_REASON_MAJOR_HARDWARE << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_LEGACY_API=" << SHTDN_REASON_MAJOR_LEGACY_API << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_NONE=" << SHTDN_REASON_MAJOR_NONE << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_OPERATINGSYSTEM=" << SHTDN_REASON_MAJOR_OPERATINGSYSTEM << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_OTHER=" << SHTDN_REASON_MAJOR_OTHER << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_POWER=" << SHTDN_REASON_MAJOR_POWER << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_SOFTWARE=" << SHTDN_REASON_MAJOR_SOFTWARE << std::endl;
    std::cout << "SHTDN_REASON_MAJOR_SYSTEM=" << SHTDN_REASON_MAJOR_SYSTEM << std::endl;
    std::cout << "SHTDN_REASON_MINOR_BLUESCREEN=" << SHTDN_REASON_MINOR_BLUESCREEN << std::endl;
    std::cout << "SHTDN_REASON_MINOR_DC_DEMOTION=" << SHTDN_REASON_MINOR_DC_DEMOTION << std::endl;
    std::cout << "SHTDN_REASON_MINOR_DC_PROMOTION=" << SHTDN_REASON_MINOR_DC_PROMOTION << std::endl;
    std::cout << "SHTDN_REASON_MINOR_DISK=" << SHTDN_REASON_MINOR_DISK << std::endl;
    std::cout << "SHTDN_REASON_MINOR_HOTFIX=" << SHTDN_REASON_MINOR_HOTFIX << std::endl;
    std::cout << "SHTDN_REASON_MINOR_HOTFIX_UNINSTALL=" << SHTDN_REASON_MINOR_HOTFIX_UNINSTALL << std::endl;
    std::cout << "SHTDN_REASON_MINOR_HUNG=" << SHTDN_REASON_MINOR_HUNG << std::endl;
    std::cout << "SHTDN_REASON_MINOR_INSTALLATION=" << SHTDN_REASON_MINOR_INSTALLATION << std::endl;
    std::cout << "SHTDN_REASON_MINOR_MAINTENANCE=" << SHTDN_REASON_MINOR_MAINTENANCE << std::endl;
    std::cout << "SHTDN_REASON_MINOR_MMC=" << SHTDN_REASON_MINOR_MMC << std::endl;
    std::cout << "SHTDN_REASON_MINOR_NETWORKCARD=" << SHTDN_REASON_MINOR_NETWORKCARD << std::endl;
    std::cout << "SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY=" << SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY << std::endl;
    std::cout << "SHTDN_REASON_MINOR_OTHER=" << SHTDN_REASON_MINOR_OTHER << std::endl;
    std::cout << "SHTDN_REASON_MINOR_PROCESSOR=" << SHTDN_REASON_MINOR_PROCESSOR << std::endl;
    std::cout << "SHTDN_REASON_MINOR_RECONFIG=" << SHTDN_REASON_MINOR_RECONFIG << std::endl;
    std::cout << "SHTDN_REASON_MINOR_SECURITY=" << SHTDN_REASON_MINOR_SECURITY << std::endl;
    std::cout << "SHTDN_REASON_MINOR_SECURITYFIX=" << SHTDN_REASON_MINOR_SECURITYFIX << std::endl;
    std::cout << "SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL=" << SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL << std::endl;
    std::cout << "SHTDN_REASON_MINOR_SERVICEPACK=" << SHTDN_REASON_MINOR_SERVICEPACK << std::endl;
    std::cout << "SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL=" << SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL << std::endl;
    std::cout << "SHTDN_REASON_MINOR_TERMSRV=" << SHTDN_REASON_MINOR_TERMSRV << std::endl;
    std::cout << "SHTDN_REASON_MINOR_UNSTABLE=" << SHTDN_REASON_MINOR_UNSTABLE << std::endl;
    std::cout << "SHTDN_REASON_MINOR_UPGRADE=" << SHTDN_REASON_MINOR_UPGRADE << std::endl;
    std::cout << "SHTDN_REASON_MINOR_WMI=" << SHTDN_REASON_MINOR_WMI << std::endl;
    std::cout << "SHUTDOWN_ARSO=" << SHUTDOWN_ARSO << std::endl;
    std::cout << "SHUTDOWN_FORCE_OTHERS=" << SHUTDOWN_FORCE_OTHERS << std::endl;
    std::cout << "SHUTDOWN_FORCE_SELF=" << SHUTDOWN_FORCE_SELF << std::endl;
    std::cout << "SHUTDOWN_GRACE_OVERRIDE=" << SHUTDOWN_GRACE_OVERRIDE << std::endl;
    std::cout << "SHUTDOWN_HYBRID=" << SHUTDOWN_HYBRID << std::endl;
    std::cout << "SHUTDOWN_INSTALL_UPDATES=" << SHUTDOWN_INSTALL_UPDATES << std::endl;
    std::cout << "SHUTDOWN_MOBILE_UI=" << SHUTDOWN_MOBILE_UI << std::endl;
    std::cout << "SHUTDOWN_NOREBOOT=" << SHUTDOWN_NOREBOOT << std::endl;
    std::cout << "SHUTDOWN_NORETRY=" << SHUTDOWN_NORETRY << std::endl;
    std::cout << "SHUTDOWN_POWEROFF=" << SHUTDOWN_POWEROFF << std::endl;
    std::cout << "SHUTDOWN_RESTART=" << SHUTDOWN_RESTART << std::endl;
    std::cout << "SHUTDOWN_RESTARTAPPS=" << SHUTDOWN_RESTARTAPPS << std::endl;
    std::cout << "SHUTDOWN_RESTART_BOOTOPTIONS=" << SHUTDOWN_RESTART_BOOTOPTIONS << std::endl;
    std::cout << "SHUTDOWN_SKIP_SVC_PRESHUTDOWN=" << SHUTDOWN_SKIP_SVC_PRESHUTDOWN << std::endl;
    std::cout << "SHUTDOWN_SOFT_REBOOT=" << SHUTDOWN_SOFT_REBOOT << std::endl;
    std::cout << "SHUTDOWN_TYPE_LEN=" << SHUTDOWN_TYPE_LEN << std::endl;
    std::cout << "SID_HASH_SIZE=" << SID_HASH_SIZE << std::endl;
    std::cout << "SID_MAX_SUB_AUTHORITIES=" << SID_MAX_SUB_AUTHORITIES << std::endl;
    std::cout << "SID_RECOMMENDED_SUB_AUTHORITIES=" << SID_RECOMMENDED_SUB_AUTHORITIES << std::endl;
    std::cout << "SID_REVISION=" << SID_REVISION << std::endl;
    std::cout << "SIF_ALL=" << SIF_ALL << std::endl;
    std::cout << "SIF_DISABLENOSCROLL=" << SIF_DISABLENOSCROLL << std::endl;
    std::cout << "SIF_PAGE=" << SIF_PAGE << std::endl;
    std::cout << "SIF_POS=" << SIF_POS << std::endl;
    std::cout << "SIF_RANGE=" << SIF_RANGE << std::endl;
    std::cout << "SIF_TRACKPOS=" << SIF_TRACKPOS << std::endl;
    std::cout << "SIGNATURE_RESOURCE_NUMBER=" << SIGNATURE_RESOURCE_NUMBER << std::endl;
    std::cout << "SIMPLEBLOB=" << SIMPLEBLOB << std::endl;
    std::cout << "SIMPLEREGION=" << SIMPLEREGION << std::endl;
    std::cout << "SIMULATED_FONTTYPE=" << SIMULATED_FONTTYPE << std::endl;
    std::cout << "SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG=" << SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG << std::endl;
    std::cout << "SIZEFULLSCREEN=" << SIZEFULLSCREEN << std::endl;
    std::cout << "SIZEICONIC=" << SIZEICONIC << std::endl;
    std::cout << "SIZENORMAL=" << SIZENORMAL << std::endl;
    std::cout << "SIZEOF_RFPO_DATA=" << SIZEOF_RFPO_DATA << std::endl;
    std::cout << "SIZEPALETTE=" << SIZEPALETTE << std::endl;
    std::cout << "SIZEZOOMHIDE=" << SIZEZOOMHIDE << std::endl;
    std::cout << "SIZEZOOMSHOW=" << SIZEZOOMSHOW << std::endl;
    std::cout << "SIZE_MAXHIDE=" << SIZE_MAXHIDE << std::endl;
    std::cout << "SIZE_MAXIMIZED=" << SIZE_MAXIMIZED << std::endl;
    std::cout << "SIZE_MAXSHOW=" << SIZE_MAXSHOW << std::endl;
    std::cout << "SIZE_MINIMIZED=" << SIZE_MINIMIZED << std::endl;
    std::cout << "SIZE_OF_80387_REGISTERS=" << SIZE_OF_80387_REGISTERS << std::endl;
    std::cout << "SIZE_RESTORED=" << SIZE_RESTORED << std::endl;
    std::cout << "SKF_AUDIBLEFEEDBACK=" << SKF_AUDIBLEFEEDBACK << std::endl;
    std::cout << "SKF_AVAILABLE=" << SKF_AVAILABLE << std::endl;
    std::cout << "SKF_CONFIRMHOTKEY=" << SKF_CONFIRMHOTKEY << std::endl;
    std::cout << "SKF_HOTKEYACTIVE=" << SKF_HOTKEYACTIVE << std::endl;
    std::cout << "SKF_HOTKEYSOUND=" << SKF_HOTKEYSOUND << std::endl;
    std::cout << "SKF_INDICATOR=" << SKF_INDICATOR << std::endl;
    std::cout << "SKF_LALTLATCHED=" << SKF_LALTLATCHED << std::endl;
    std::cout << "SKF_LALTLOCKED=" << SKF_LALTLOCKED << std::endl;
    std::cout << "SKF_LCTLLATCHED=" << SKF_LCTLLATCHED << std::endl;
    std::cout << "SKF_LCTLLOCKED=" << SKF_LCTLLOCKED << std::endl;
    std::cout << "SKF_LSHIFTLATCHED=" << SKF_LSHIFTLATCHED << std::endl;
    std::cout << "SKF_LSHIFTLOCKED=" << SKF_LSHIFTLOCKED << std::endl;
    std::cout << "SKF_LWINLATCHED=" << SKF_LWINLATCHED << std::endl;
    std::cout << "SKF_LWINLOCKED=" << SKF_LWINLOCKED << std::endl;
    std::cout << "SKF_RALTLATCHED=" << SKF_RALTLATCHED << std::endl;
    std::cout << "SKF_RALTLOCKED=" << SKF_RALTLOCKED << std::endl;
    std::cout << "SKF_RCTLLATCHED=" << SKF_RCTLLATCHED << std::endl;
    std::cout << "SKF_RCTLLOCKED=" << SKF_RCTLLOCKED << std::endl;
    std::cout << "SKF_RSHIFTLATCHED=" << SKF_RSHIFTLATCHED << std::endl;
    std::cout << "SKF_RSHIFTLOCKED=" << SKF_RSHIFTLOCKED << std::endl;
    std::cout << "SKF_RWINLATCHED=" << SKF_RWINLATCHED << std::endl;
    std::cout << "SKF_RWINLOCKED=" << SKF_RWINLOCKED << std::endl;
    std::cout << "SKF_STICKYKEYSON=" << SKF_STICKYKEYSON << std::endl;
    std::cout << "SKF_TRISTATE=" << SKF_TRISTATE << std::endl;
    std::cout << "SKF_TWOKEYSOFF=" << SKF_TWOKEYSOFF << std::endl;
    std::cout << "SLE_ERROR=" << SLE_ERROR << std::endl;
    std::cout << "SLE_MINORERROR=" << SLE_MINORERROR << std::endl;
    std::cout << "SLE_WARNING=" << SLE_WARNING << std::endl;
    std::cout << "SMART_ABORT_OFFLINE_SELFTEST=" << SMART_ABORT_OFFLINE_SELFTEST << std::endl;
    std::cout << "SMART_CMD=" << SMART_CMD << std::endl;
    std::cout << "SMART_CYL_HI=" << SMART_CYL_HI << std::endl;
    std::cout << "SMART_CYL_LOW=" << SMART_CYL_LOW << std::endl;
    std::cout << "SMART_ERROR_NO_MEM=" << SMART_ERROR_NO_MEM << std::endl;
    std::cout << "SMART_EXTENDED_SELFTEST_CAPTIVE=" << SMART_EXTENDED_SELFTEST_CAPTIVE << std::endl;
    std::cout << "SMART_EXTENDED_SELFTEST_OFFLINE=" << SMART_EXTENDED_SELFTEST_OFFLINE << std::endl;
    std::cout << "SMART_IDE_ERROR=" << SMART_IDE_ERROR << std::endl;
    std::cout << "SMART_INVALID_BUFFER=" << SMART_INVALID_BUFFER << std::endl;
    std::cout << "SMART_INVALID_COMMAND=" << SMART_INVALID_COMMAND << std::endl;
    std::cout << "SMART_INVALID_DRIVE=" << SMART_INVALID_DRIVE << std::endl;
    std::cout << "SMART_INVALID_FLAG=" << SMART_INVALID_FLAG << std::endl;
    std::cout << "SMART_INVALID_IOCTL=" << SMART_INVALID_IOCTL << std::endl;
    std::cout << "SMART_INVALID_REGISTER=" << SMART_INVALID_REGISTER << std::endl;
    std::cout << "SMART_LOG_SECTOR_SIZE=" << SMART_LOG_SECTOR_SIZE << std::endl;
    std::cout << "SMART_NOT_SUPPORTED=" << SMART_NOT_SUPPORTED << std::endl;
    std::cout << "SMART_NO_ERROR=" << SMART_NO_ERROR << std::endl;
    std::cout << "SMART_NO_IDE_DEVICE=" << SMART_NO_IDE_DEVICE << std::endl;
    std::cout << "SMART_OFFLINE_ROUTINE_OFFLINE=" << SMART_OFFLINE_ROUTINE_OFFLINE << std::endl;
    std::cout << "SMART_READ_LOG=" << SMART_READ_LOG << std::endl;
    std::cout << "SMART_SHORT_SELFTEST_CAPTIVE=" << SMART_SHORT_SELFTEST_CAPTIVE << std::endl;
    std::cout << "SMART_SHORT_SELFTEST_OFFLINE=" << SMART_SHORT_SELFTEST_OFFLINE << std::endl;
    std::cout << "SMTO_ABORTIFHUNG=" << SMTO_ABORTIFHUNG << std::endl;
    std::cout << "SMTO_BLOCK=" << SMTO_BLOCK << std::endl;
    std::cout << "SMTO_ERRORONEXIT=" << SMTO_ERRORONEXIT << std::endl;
    std::cout << "SMTO_NORMAL=" << SMTO_NORMAL << std::endl;
    std::cout << "SMTO_NOTIMEOUTIFNOTHUNG=" << SMTO_NOTIMEOUTIFNOTHUNG << std::endl;
    std::cout << "SM_ARRANGE=" << SM_ARRANGE << std::endl;
    std::cout << "SM_CARETBLINKINGENABLED=" << SM_CARETBLINKINGENABLED << std::endl;
    std::cout << "SM_CLEANBOOT=" << SM_CLEANBOOT << std::endl;
    std::cout << "SM_CMETRICS=" << SM_CMETRICS << std::endl;
    std::cout << "SM_CMONITORS=" << SM_CMONITORS << std::endl;
    std::cout << "SM_CMOUSEBUTTONS=" << SM_CMOUSEBUTTONS << std::endl;
    std::cout << "SM_CONVERTIBLESLATEMODE=" << SM_CONVERTIBLESLATEMODE << std::endl;
    std::cout << "SM_CXBORDER=" << SM_CXBORDER << std::endl;
    std::cout << "SM_CXCURSOR=" << SM_CXCURSOR << std::endl;
    std::cout << "SM_CXDLGFRAME=" << SM_CXDLGFRAME << std::endl;
    std::cout << "SM_CXDOUBLECLK=" << SM_CXDOUBLECLK << std::endl;
    std::cout << "SM_CXDRAG=" << SM_CXDRAG << std::endl;
    std::cout << "SM_CXEDGE=" << SM_CXEDGE << std::endl;
    std::cout << "SM_CXFIXEDFRAME=" << SM_CXFIXEDFRAME << std::endl;
    std::cout << "SM_CXFOCUSBORDER=" << SM_CXFOCUSBORDER << std::endl;
    std::cout << "SM_CXFRAME=" << SM_CXFRAME << std::endl;
    std::cout << "SM_CXFULLSCREEN=" << SM_CXFULLSCREEN << std::endl;
    std::cout << "SM_CXHSCROLL=" << SM_CXHSCROLL << std::endl;
    std::cout << "SM_CXHTHUMB=" << SM_CXHTHUMB << std::endl;
    std::cout << "SM_CXICON=" << SM_CXICON << std::endl;
    std::cout << "SM_CXICONSPACING=" << SM_CXICONSPACING << std::endl;
    std::cout << "SM_CXMAXIMIZED=" << SM_CXMAXIMIZED << std::endl;
    std::cout << "SM_CXMAXTRACK=" << SM_CXMAXTRACK << std::endl;
    std::cout << "SM_CXMENUCHECK=" << SM_CXMENUCHECK << std::endl;
    std::cout << "SM_CXMENUSIZE=" << SM_CXMENUSIZE << std::endl;
    std::cout << "SM_CXMIN=" << SM_CXMIN << std::endl;
    std::cout << "SM_CXMINIMIZED=" << SM_CXMINIMIZED << std::endl;
    std::cout << "SM_CXMINSPACING=" << SM_CXMINSPACING << std::endl;
    std::cout << "SM_CXMINTRACK=" << SM_CXMINTRACK << std::endl;
    std::cout << "SM_CXPADDEDBORDER=" << SM_CXPADDEDBORDER << std::endl;
    std::cout << "SM_CXSCREEN=" << SM_CXSCREEN << std::endl;
    std::cout << "SM_CXSIZE=" << SM_CXSIZE << std::endl;
    std::cout << "SM_CXSIZEFRAME=" << SM_CXSIZEFRAME << std::endl;
    std::cout << "SM_CXSMICON=" << SM_CXSMICON << std::endl;
    std::cout << "SM_CXSMSIZE=" << SM_CXSMSIZE << std::endl;
    std::cout << "SM_CXVIRTUALSCREEN=" << SM_CXVIRTUALSCREEN << std::endl;
    std::cout << "SM_CXVSCROLL=" << SM_CXVSCROLL << std::endl;
    std::cout << "SM_CYBORDER=" << SM_CYBORDER << std::endl;
    std::cout << "SM_CYCAPTION=" << SM_CYCAPTION << std::endl;
    std::cout << "SM_CYCURSOR=" << SM_CYCURSOR << std::endl;
    std::cout << "SM_CYDLGFRAME=" << SM_CYDLGFRAME << std::endl;
    std::cout << "SM_CYDOUBLECLK=" << SM_CYDOUBLECLK << std::endl;
    std::cout << "SM_CYDRAG=" << SM_CYDRAG << std::endl;
    std::cout << "SM_CYEDGE=" << SM_CYEDGE << std::endl;
    std::cout << "SM_CYFIXEDFRAME=" << SM_CYFIXEDFRAME << std::endl;
    std::cout << "SM_CYFOCUSBORDER=" << SM_CYFOCUSBORDER << std::endl;
    std::cout << "SM_CYFRAME=" << SM_CYFRAME << std::endl;
    std::cout << "SM_CYFULLSCREEN=" << SM_CYFULLSCREEN << std::endl;
    std::cout << "SM_CYHSCROLL=" << SM_CYHSCROLL << std::endl;
    std::cout << "SM_CYICON=" << SM_CYICON << std::endl;
    std::cout << "SM_CYICONSPACING=" << SM_CYICONSPACING << std::endl;
    std::cout << "SM_CYKANJIWINDOW=" << SM_CYKANJIWINDOW << std::endl;
    std::cout << "SM_CYMAXIMIZED=" << SM_CYMAXIMIZED << std::endl;
    std::cout << "SM_CYMAXTRACK=" << SM_CYMAXTRACK << std::endl;
    std::cout << "SM_CYMENU=" << SM_CYMENU << std::endl;
    std::cout << "SM_CYMENUCHECK=" << SM_CYMENUCHECK << std::endl;
    std::cout << "SM_CYMENUSIZE=" << SM_CYMENUSIZE << std::endl;
    std::cout << "SM_CYMIN=" << SM_CYMIN << std::endl;
    std::cout << "SM_CYMINIMIZED=" << SM_CYMINIMIZED << std::endl;
    std::cout << "SM_CYMINSPACING=" << SM_CYMINSPACING << std::endl;
    std::cout << "SM_CYMINTRACK=" << SM_CYMINTRACK << std::endl;
    std::cout << "SM_CYSCREEN=" << SM_CYSCREEN << std::endl;
    std::cout << "SM_CYSIZE=" << SM_CYSIZE << std::endl;
    std::cout << "SM_CYSIZEFRAME=" << SM_CYSIZEFRAME << std::endl;
    std::cout << "SM_CYSMCAPTION=" << SM_CYSMCAPTION << std::endl;
    std::cout << "SM_CYSMICON=" << SM_CYSMICON << std::endl;
    std::cout << "SM_CYSMSIZE=" << SM_CYSMSIZE << std::endl;
    std::cout << "SM_CYVIRTUALSCREEN=" << SM_CYVIRTUALSCREEN << std::endl;
    std::cout << "SM_CYVSCROLL=" << SM_CYVSCROLL << std::endl;
    std::cout << "SM_CYVTHUMB=" << SM_CYVTHUMB << std::endl;
    std::cout << "SM_DBCSENABLED=" << SM_DBCSENABLED << std::endl;
    std::cout << "SM_DEBUG=" << SM_DEBUG << std::endl;
    std::cout << "SM_DIGITIZER=" << SM_DIGITIZER << std::endl;
    std::cout << "SM_IMMENABLED=" << SM_IMMENABLED << std::endl;
    std::cout << "SM_MAXIMUMTOUCHES=" << SM_MAXIMUMTOUCHES << std::endl;
    std::cout << "SM_MEDIACENTER=" << SM_MEDIACENTER << std::endl;
    std::cout << "SM_MENUDROPALIGNMENT=" << SM_MENUDROPALIGNMENT << std::endl;
    std::cout << "SM_MIDEASTENABLED=" << SM_MIDEASTENABLED << std::endl;
    std::cout << "SM_MOUSEHORIZONTALWHEELPRESENT=" << SM_MOUSEHORIZONTALWHEELPRESENT << std::endl;
    std::cout << "SM_MOUSEPRESENT=" << SM_MOUSEPRESENT << std::endl;
    std::cout << "SM_MOUSEWHEELPRESENT=" << SM_MOUSEWHEELPRESENT << std::endl;
    std::cout << "SM_NETWORK=" << SM_NETWORK << std::endl;
    std::cout << "SM_PENWINDOWS=" << SM_PENWINDOWS << std::endl;
    std::cout << "SM_REMOTECONTROL=" << SM_REMOTECONTROL << std::endl;
    std::cout << "SM_REMOTESESSION=" << SM_REMOTESESSION << std::endl;
    std::cout << "SM_RESERVED1=" << SM_RESERVED1 << std::endl;
    std::cout << "SM_RESERVED2=" << SM_RESERVED2 << std::endl;
    std::cout << "SM_RESERVED3=" << SM_RESERVED3 << std::endl;
    std::cout << "SM_RESERVED4=" << SM_RESERVED4 << std::endl;
    std::cout << "SM_SAMEDISPLAYFORMAT=" << SM_SAMEDISPLAYFORMAT << std::endl;
    std::cout << "SM_SECURE=" << SM_SECURE << std::endl;
    std::cout << "SM_SERVERR2=" << SM_SERVERR2 << std::endl;
    std::cout << "SM_SHOWSOUNDS=" << SM_SHOWSOUNDS << std::endl;
    std::cout << "SM_SHUTTINGDOWN=" << SM_SHUTTINGDOWN << std::endl;
    std::cout << "SM_SLOWMACHINE=" << SM_SLOWMACHINE << std::endl;
    std::cout << "SM_STARTER=" << SM_STARTER << std::endl;
    std::cout << "SM_SWAPBUTTON=" << SM_SWAPBUTTON << std::endl;
    std::cout << "SM_SYSTEMDOCKED=" << SM_SYSTEMDOCKED << std::endl;
    std::cout << "SM_TABLETPC=" << SM_TABLETPC << std::endl;
    std::cout << "SM_XVIRTUALSCREEN=" << SM_XVIRTUALSCREEN << std::endl;
    std::cout << "SM_YVIRTUALSCREEN=" << SM_YVIRTUALSCREEN << std::endl;
    std::cout << "SNAPSHOT_POLICY_ALWAYS=" << SNAPSHOT_POLICY_ALWAYS << std::endl;
    std::cout << "SNAPSHOT_POLICY_NEVER=" << SNAPSHOT_POLICY_NEVER << std::endl;
    std::cout << "SNAPSHOT_POLICY_UNPLANNED=" << SNAPSHOT_POLICY_UNPLANNED << std::endl;
    std::cout << "SND_ALIAS_START=" << SND_ALIAS_START << std::endl;
    std::cout << "SND_APPLICATION=" << SND_APPLICATION << std::endl;
    std::cout << "SND_ASYNC=" << SND_ASYNC << std::endl;
    std::cout << "SND_LOOP=" << SND_LOOP << std::endl;
    std::cout << "SND_MEMORY=" << SND_MEMORY << std::endl;
    std::cout << "SND_NODEFAULT=" << SND_NODEFAULT << std::endl;
    std::cout << "SND_NOSTOP=" << SND_NOSTOP << std::endl;
    std::cout << "SND_PURGE=" << SND_PURGE << std::endl;
    std::cout << "SND_SYNC=" << SND_SYNC << std::endl;
    std::cout << "SOCKET_ERROR=" << SOCKET_ERROR << std::endl;
    std::cout << "SOCK_DGRAM=" << SOCK_DGRAM << std::endl;
    std::cout << "SOCK_RAW=" << SOCK_RAW << std::endl;
    std::cout << "SOCK_RDM=" << SOCK_RDM << std::endl;
    std::cout << "SOCK_SEQPACKET=" << SOCK_SEQPACKET << std::endl;
    std::cout << "SOCK_STREAM=" << SOCK_STREAM << std::endl;
    std::cout << "SOFTDIST_ADSTATE_AVAILABLE=" << SOFTDIST_ADSTATE_AVAILABLE << std::endl;
    std::cout << "SOFTDIST_ADSTATE_DOWNLOADED=" << SOFTDIST_ADSTATE_DOWNLOADED << std::endl;
    std::cout << "SOFTDIST_ADSTATE_INSTALLED=" << SOFTDIST_ADSTATE_INSTALLED << std::endl;
    std::cout << "SOFTDIST_ADSTATE_NONE=" << SOFTDIST_ADSTATE_NONE << std::endl;
    std::cout << "SOFTDIST_FLAG_DELETE_SUBSCRIPTION=" << SOFTDIST_FLAG_DELETE_SUBSCRIPTION << std::endl;
    std::cout << "SOFTDIST_FLAG_USAGE_AUTOINSTALL=" << SOFTDIST_FLAG_USAGE_AUTOINSTALL << std::endl;
    std::cout << "SOFTDIST_FLAG_USAGE_EMAIL=" << SOFTDIST_FLAG_USAGE_EMAIL << std::endl;
    std::cout << "SOFTDIST_FLAG_USAGE_PRECACHE=" << SOFTDIST_FLAG_USAGE_PRECACHE << std::endl;
    std::cout << "SOFTKEYBOARD_TYPE_C1=" << SOFTKEYBOARD_TYPE_C1 << std::endl;
    std::cout << "SOFTKEYBOARD_TYPE_T1=" << SOFTKEYBOARD_TYPE_T1 << std::endl;
    std::cout << "SOMAXCONN=" << SOMAXCONN << std::endl;
    std::cout << "SORTED_CTL_EXT_COUNT_OFFSET=" << SORTED_CTL_EXT_COUNT_OFFSET << std::endl;
    std::cout << "SORTED_CTL_EXT_FLAGS_OFFSET=" << SORTED_CTL_EXT_FLAGS_OFFSET << std::endl;
    std::cout << "SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG=" << SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG << std::endl;
    std::cout << "SORTED_CTL_EXT_HASH_BUCKET_OFFSET=" << SORTED_CTL_EXT_HASH_BUCKET_OFFSET << std::endl;
    std::cout << "SORTED_CTL_EXT_MAX_COLLISION_OFFSET=" << SORTED_CTL_EXT_MAX_COLLISION_OFFSET << std::endl;
    std::cout << "SORT_CHINESE_BIG5=" << SORT_CHINESE_BIG5 << std::endl;
    std::cout << "SORT_CHINESE_BOPOMOFO=" << SORT_CHINESE_BOPOMOFO << std::endl;
    std::cout << "SORT_CHINESE_PRC=" << SORT_CHINESE_PRC << std::endl;
    std::cout << "SORT_CHINESE_PRCP=" << SORT_CHINESE_PRCP << std::endl;
    std::cout << "SORT_CHINESE_RADICALSTROKE=" << SORT_CHINESE_RADICALSTROKE << std::endl;
    std::cout << "SORT_CHINESE_UNICODE=" << SORT_CHINESE_UNICODE << std::endl;
    std::cout << "SORT_DEFAULT=" << SORT_DEFAULT << std::endl;
    std::cout << "SORT_DIGITSASNUMBERS=" << SORT_DIGITSASNUMBERS << std::endl;
    std::cout << "SORT_GEORGIAN_MODERN=" << SORT_GEORGIAN_MODERN << std::endl;
    std::cout << "SORT_GEORGIAN_TRADITIONAL=" << SORT_GEORGIAN_TRADITIONAL << std::endl;
    std::cout << "SORT_GERMAN_PHONE_BOOK=" << SORT_GERMAN_PHONE_BOOK << std::endl;
    std::cout << "SORT_HUNGARIAN_DEFAULT=" << SORT_HUNGARIAN_DEFAULT << std::endl;
    std::cout << "SORT_HUNGARIAN_TECHNICAL=" << SORT_HUNGARIAN_TECHNICAL << std::endl;
    std::cout << "SORT_INVARIANT_MATH=" << SORT_INVARIANT_MATH << std::endl;
    std::cout << "SORT_JAPANESE_RADICALSTROKE=" << SORT_JAPANESE_RADICALSTROKE << std::endl;
    std::cout << "SORT_JAPANESE_UNICODE=" << SORT_JAPANESE_UNICODE << std::endl;
    std::cout << "SORT_JAPANESE_XJIS=" << SORT_JAPANESE_XJIS << std::endl;
    std::cout << "SORT_KOREAN_KSC=" << SORT_KOREAN_KSC << std::endl;
    std::cout << "SORT_KOREAN_UNICODE=" << SORT_KOREAN_UNICODE << std::endl;
    std::cout << "SORT_STRINGSORT=" << SORT_STRINGSORT << std::endl;
    std::cout << "SOUND_SYSTEM_APPEND=" << SOUND_SYSTEM_APPEND << std::endl;
    std::cout << "SOUND_SYSTEM_APPSTART=" << SOUND_SYSTEM_APPSTART << std::endl;
    std::cout << "SOUND_SYSTEM_BEEP=" << SOUND_SYSTEM_BEEP << std::endl;
    std::cout << "SOUND_SYSTEM_ERROR=" << SOUND_SYSTEM_ERROR << std::endl;
    std::cout << "SOUND_SYSTEM_FAULT=" << SOUND_SYSTEM_FAULT << std::endl;
    std::cout << "SOUND_SYSTEM_INFORMATION=" << SOUND_SYSTEM_INFORMATION << std::endl;
    std::cout << "SOUND_SYSTEM_MAXIMIZE=" << SOUND_SYSTEM_MAXIMIZE << std::endl;
    std::cout << "SOUND_SYSTEM_MENUCOMMAND=" << SOUND_SYSTEM_MENUCOMMAND << std::endl;
    std::cout << "SOUND_SYSTEM_MENUPOPUP=" << SOUND_SYSTEM_MENUPOPUP << std::endl;
    std::cout << "SOUND_SYSTEM_MINIMIZE=" << SOUND_SYSTEM_MINIMIZE << std::endl;
    std::cout << "SOUND_SYSTEM_QUESTION=" << SOUND_SYSTEM_QUESTION << std::endl;
    std::cout << "SOUND_SYSTEM_RESTOREDOWN=" << SOUND_SYSTEM_RESTOREDOWN << std::endl;
    std::cout << "SOUND_SYSTEM_RESTOREUP=" << SOUND_SYSTEM_RESTOREUP << std::endl;
    std::cout << "SOUND_SYSTEM_SHUTDOWN=" << SOUND_SYSTEM_SHUTDOWN << std::endl;
    std::cout << "SOUND_SYSTEM_STARTUP=" << SOUND_SYSTEM_STARTUP << std::endl;
    std::cout << "SOUND_SYSTEM_WARNING=" << SOUND_SYSTEM_WARNING << std::endl;
    std::cout << "SO_ACCEPTCONN=" << SO_ACCEPTCONN << std::endl;
    std::cout << "SO_BROADCAST=" << SO_BROADCAST << std::endl;
    std::cout << "SO_CONNDATA=" << SO_CONNDATA << std::endl;
    std::cout << "SO_CONNDATALEN=" << SO_CONNDATALEN << std::endl;
    std::cout << "SO_CONNECT_TIME=" << SO_CONNECT_TIME << std::endl;
    std::cout << "SO_CONNOPT=" << SO_CONNOPT << std::endl;
    std::cout << "SO_CONNOPTLEN=" << SO_CONNOPTLEN << std::endl;
    std::cout << "SO_DEBUG=" << SO_DEBUG << std::endl;
    std::cout << "SO_DISCDATA=" << SO_DISCDATA << std::endl;
    std::cout << "SO_DISCDATALEN=" << SO_DISCDATALEN << std::endl;
    std::cout << "SO_DISCOPT=" << SO_DISCOPT << std::endl;
    std::cout << "SO_DISCOPTLEN=" << SO_DISCOPTLEN << std::endl;
    std::cout << "SO_DONTROUTE=" << SO_DONTROUTE << std::endl;
    std::cout << "SO_ERROR=" << SO_ERROR << std::endl;
    std::cout << "SO_KEEPALIVE=" << SO_KEEPALIVE << std::endl;
    std::cout << "SO_LINGER=" << SO_LINGER << std::endl;
    std::cout << "SO_MAXDG=" << SO_MAXDG << std::endl;
    std::cout << "SO_MAXPATHDG=" << SO_MAXPATHDG << std::endl;
    std::cout << "SO_OOBINLINE=" << SO_OOBINLINE << std::endl;
    std::cout << "SO_OPENTYPE=" << SO_OPENTYPE << std::endl;
    std::cout << "SO_RCVBUF=" << SO_RCVBUF << std::endl;
    std::cout << "SO_RCVLOWAT=" << SO_RCVLOWAT << std::endl;
    std::cout << "SO_RCVTIMEO=" << SO_RCVTIMEO << std::endl;
    std::cout << "SO_REUSEADDR=" << SO_REUSEADDR << std::endl;
    std::cout << "SO_SNDBUF=" << SO_SNDBUF << std::endl;
    std::cout << "SO_SNDLOWAT=" << SO_SNDLOWAT << std::endl;
    std::cout << "SO_SNDTIMEO=" << SO_SNDTIMEO << std::endl;
    std::cout << "SO_SYNCHRONOUS_ALERT=" << SO_SYNCHRONOUS_ALERT << std::endl;
    std::cout << "SO_SYNCHRONOUS_NONALERT=" << SO_SYNCHRONOUS_NONALERT << std::endl;
    std::cout << "SO_TYPE=" << SO_TYPE << std::endl;
    std::cout << "SO_UPDATE_ACCEPT_CONTEXT=" << SO_UPDATE_ACCEPT_CONTEXT << std::endl;
    std::cout << "SO_USELOOPBACK=" << SO_USELOOPBACK << std::endl;
    std::cout << "SPACEPARITY=" << SPACEPARITY << std::endl;
    std::cout << "SPCLPASSTHROUGH2=" << SPCLPASSTHROUGH2 << std::endl;
    std::cout << "SPIF_SENDCHANGE=" << SPIF_SENDCHANGE << std::endl;
    std::cout << "SPIF_SENDWININICHANGE=" << SPIF_SENDWININICHANGE << std::endl;
    std::cout << "SPIF_UPDATEINIFILE=" << SPIF_UPDATEINIFILE << std::endl;
    std::cout << "SPI_GETACCESSTIMEOUT=" << SPI_GETACCESSTIMEOUT << std::endl;
    std::cout << "SPI_GETACTIVEWINDOWTRACKING=" << SPI_GETACTIVEWINDOWTRACKING << std::endl;
    std::cout << "SPI_GETACTIVEWNDTRKTIMEOUT=" << SPI_GETACTIVEWNDTRKTIMEOUT << std::endl;
    std::cout << "SPI_GETACTIVEWNDTRKZORDER=" << SPI_GETACTIVEWNDTRKZORDER << std::endl;
    std::cout << "SPI_GETANIMATION=" << SPI_GETANIMATION << std::endl;
    std::cout << "SPI_GETAUDIODESCRIPTION=" << SPI_GETAUDIODESCRIPTION << std::endl;
    std::cout << "SPI_GETBEEP=" << SPI_GETBEEP << std::endl;
    std::cout << "SPI_GETBLOCKSENDINPUTRESETS=" << SPI_GETBLOCKSENDINPUTRESETS << std::endl;
    std::cout << "SPI_GETBORDER=" << SPI_GETBORDER << std::endl;
    std::cout << "SPI_GETCARETTIMEOUT=" << SPI_GETCARETTIMEOUT << std::endl;
    std::cout << "SPI_GETCARETWIDTH=" << SPI_GETCARETWIDTH << std::endl;
    std::cout << "SPI_GETCLEARTYPE=" << SPI_GETCLEARTYPE << std::endl;
    std::cout << "SPI_GETCLIENTAREAANIMATION=" << SPI_GETCLIENTAREAANIMATION << std::endl;
    std::cout << "SPI_GETCOMBOBOXANIMATION=" << SPI_GETCOMBOBOXANIMATION << std::endl;
    std::cout << "SPI_GETCONTACTVISUALIZATION=" << SPI_GETCONTACTVISUALIZATION << std::endl;
    std::cout << "SPI_GETCURSORSHADOW=" << SPI_GETCURSORSHADOW << std::endl;
    std::cout << "SPI_GETDEFAULTINPUTLANG=" << SPI_GETDEFAULTINPUTLANG << std::endl;
    std::cout << "SPI_GETDESKWALLPAPER=" << SPI_GETDESKWALLPAPER << std::endl;
    std::cout << "SPI_GETDISABLEOVERLAPPEDCONTENT=" << SPI_GETDISABLEOVERLAPPEDCONTENT << std::endl;
    std::cout << "SPI_GETDOCKMOVING=" << SPI_GETDOCKMOVING << std::endl;
    std::cout << "SPI_GETDRAGFULLWINDOWS=" << SPI_GETDRAGFULLWINDOWS << std::endl;
    std::cout << "SPI_GETDROPSHADOW=" << SPI_GETDROPSHADOW << std::endl;
    std::cout << "SPI_GETFASTTASKSWITCH=" << SPI_GETFASTTASKSWITCH << std::endl;
    std::cout << "SPI_GETFILTERKEYS=" << SPI_GETFILTERKEYS << std::endl;
    std::cout << "SPI_GETFLATMENU=" << SPI_GETFLATMENU << std::endl;
    std::cout << "SPI_GETFOCUSBORDERHEIGHT=" << SPI_GETFOCUSBORDERHEIGHT << std::endl;
    std::cout << "SPI_GETFOCUSBORDERWIDTH=" << SPI_GETFOCUSBORDERWIDTH << std::endl;
    std::cout << "SPI_GETFONTSMOOTHING=" << SPI_GETFONTSMOOTHING << std::endl;
    std::cout << "SPI_GETFONTSMOOTHINGCONTRAST=" << SPI_GETFONTSMOOTHINGCONTRAST << std::endl;
    std::cout << "SPI_GETFONTSMOOTHINGORIENTATION=" << SPI_GETFONTSMOOTHINGORIENTATION << std::endl;
    std::cout << "SPI_GETFONTSMOOTHINGTYPE=" << SPI_GETFONTSMOOTHINGTYPE << std::endl;
    std::cout << "SPI_GETFOREGROUNDFLASHCOUNT=" << SPI_GETFOREGROUNDFLASHCOUNT << std::endl;
    std::cout << "SPI_GETFOREGROUNDLOCKTIMEOUT=" << SPI_GETFOREGROUNDLOCKTIMEOUT << std::endl;
    std::cout << "SPI_GETGRADIENTCAPTIONS=" << SPI_GETGRADIENTCAPTIONS << std::endl;
    std::cout << "SPI_GETGRIDGRANULARITY=" << SPI_GETGRIDGRANULARITY << std::endl;
    std::cout << "SPI_GETHANDEDNESS=" << SPI_GETHANDEDNESS << std::endl;
    std::cout << "SPI_GETHIGHCONTRAST=" << SPI_GETHIGHCONTRAST << std::endl;
    std::cout << "SPI_GETHOTTRACKING=" << SPI_GETHOTTRACKING << std::endl;
    std::cout << "SPI_GETHUNGAPPTIMEOUT=" << SPI_GETHUNGAPPTIMEOUT << std::endl;
    std::cout << "SPI_GETICONMETRICS=" << SPI_GETICONMETRICS << std::endl;
    std::cout << "SPI_GETICONTITLELOGFONT=" << SPI_GETICONTITLELOGFONT << std::endl;
    std::cout << "SPI_GETICONTITLEWRAP=" << SPI_GETICONTITLEWRAP << std::endl;
    std::cout << "SPI_GETKEYBOARDCUES=" << SPI_GETKEYBOARDCUES << std::endl;
    std::cout << "SPI_GETKEYBOARDDELAY=" << SPI_GETKEYBOARDDELAY << std::endl;
    std::cout << "SPI_GETKEYBOARDPREF=" << SPI_GETKEYBOARDPREF << std::endl;
    std::cout << "SPI_GETKEYBOARDSPEED=" << SPI_GETKEYBOARDSPEED << std::endl;
    std::cout << "SPI_GETLISTBOXSMOOTHSCROLLING=" << SPI_GETLISTBOXSMOOTHSCROLLING << std::endl;
    std::cout << "SPI_GETLOWPOWERACTIVE=" << SPI_GETLOWPOWERACTIVE << std::endl;
    std::cout << "SPI_GETLOWPOWERTIMEOUT=" << SPI_GETLOWPOWERTIMEOUT << std::endl;
    std::cout << "SPI_GETMENUANIMATION=" << SPI_GETMENUANIMATION << std::endl;
    std::cout << "SPI_GETMENUDROPALIGNMENT=" << SPI_GETMENUDROPALIGNMENT << std::endl;
    std::cout << "SPI_GETMENUFADE=" << SPI_GETMENUFADE << std::endl;
    std::cout << "SPI_GETMENUSHOWDELAY=" << SPI_GETMENUSHOWDELAY << std::endl;
    std::cout << "SPI_GETMENUUNDERLINES=" << SPI_GETMENUUNDERLINES << std::endl;
    std::cout << "SPI_GETMESSAGEDURATION=" << SPI_GETMESSAGEDURATION << std::endl;
    std::cout << "SPI_GETMINIMIZEDMETRICS=" << SPI_GETMINIMIZEDMETRICS << std::endl;
    std::cout << "SPI_GETMINIMUMHITRADIUS=" << SPI_GETMINIMUMHITRADIUS << std::endl;
    std::cout << "SPI_GETMOUSE=" << SPI_GETMOUSE << std::endl;
    std::cout << "SPI_GETMOUSECLICKLOCK=" << SPI_GETMOUSECLICKLOCK << std::endl;
    std::cout << "SPI_GETMOUSECLICKLOCKTIME=" << SPI_GETMOUSECLICKLOCKTIME << std::endl;
    std::cout << "SPI_GETMOUSEDRAGOUTTHRESHOLD=" << SPI_GETMOUSEDRAGOUTTHRESHOLD << std::endl;
    std::cout << "SPI_GETMOUSEHOVERHEIGHT=" << SPI_GETMOUSEHOVERHEIGHT << std::endl;
    std::cout << "SPI_GETMOUSEHOVERTIME=" << SPI_GETMOUSEHOVERTIME << std::endl;
    std::cout << "SPI_GETMOUSEHOVERWIDTH=" << SPI_GETMOUSEHOVERWIDTH << std::endl;
    std::cout << "SPI_GETMOUSEKEYS=" << SPI_GETMOUSEKEYS << std::endl;
    std::cout << "SPI_GETMOUSESIDEMOVETHRESHOLD=" << SPI_GETMOUSESIDEMOVETHRESHOLD << std::endl;
    std::cout << "SPI_GETMOUSESONAR=" << SPI_GETMOUSESONAR << std::endl;
    std::cout << "SPI_GETMOUSESPEED=" << SPI_GETMOUSESPEED << std::endl;
    std::cout << "SPI_GETMOUSETRAILS=" << SPI_GETMOUSETRAILS << std::endl;
    std::cout << "SPI_GETMOUSEVANISH=" << SPI_GETMOUSEVANISH << std::endl;
    std::cout << "SPI_GETMOUSEWHEELROUTING=" << SPI_GETMOUSEWHEELROUTING << std::endl;
    std::cout << "SPI_GETNONCLIENTMETRICS=" << SPI_GETNONCLIENTMETRICS << std::endl;
    std::cout << "SPI_GETPENARBITRATIONTYPE=" << SPI_GETPENARBITRATIONTYPE << std::endl;
    std::cout << "SPI_GETPENDOCKTHRESHOLD=" << SPI_GETPENDOCKTHRESHOLD << std::endl;
    std::cout << "SPI_GETPENDRAGOUTTHRESHOLD=" << SPI_GETPENDRAGOUTTHRESHOLD << std::endl;
    std::cout << "SPI_GETPENVISUALIZATION=" << SPI_GETPENVISUALIZATION << std::endl;
    std::cout << "SPI_GETPOWEROFFACTIVE=" << SPI_GETPOWEROFFACTIVE << std::endl;
    std::cout << "SPI_GETPOWEROFFTIMEOUT=" << SPI_GETPOWEROFFTIMEOUT << std::endl;
    std::cout << "SPI_GETSCREENREADER=" << SPI_GETSCREENREADER << std::endl;
    std::cout << "SPI_GETSCREENSAVEACTIVE=" << SPI_GETSCREENSAVEACTIVE << std::endl;
    std::cout << "SPI_GETSCREENSAVERRUNNING=" << SPI_GETSCREENSAVERRUNNING << std::endl;
    std::cout << "SPI_GETSCREENSAVESECURE=" << SPI_GETSCREENSAVESECURE << std::endl;
    std::cout << "SPI_GETSCREENSAVETIMEOUT=" << SPI_GETSCREENSAVETIMEOUT << std::endl;
    std::cout << "SPI_GETSELECTIONFADE=" << SPI_GETSELECTIONFADE << std::endl;
    std::cout << "SPI_GETSERIALKEYS=" << SPI_GETSERIALKEYS << std::endl;
    std::cout << "SPI_GETSHOWIMEUI=" << SPI_GETSHOWIMEUI << std::endl;
    std::cout << "SPI_GETSHOWSOUNDS=" << SPI_GETSHOWSOUNDS << std::endl;
    std::cout << "SPI_GETSNAPTODEFBUTTON=" << SPI_GETSNAPTODEFBUTTON << std::endl;
    std::cout << "SPI_GETSOUNDSENTRY=" << SPI_GETSOUNDSENTRY << std::endl;
    std::cout << "SPI_GETSTICKYKEYS=" << SPI_GETSTICKYKEYS << std::endl;
    std::cout << "SPI_GETSYSTEMLANGUAGEBAR=" << SPI_GETSYSTEMLANGUAGEBAR << std::endl;
    std::cout << "SPI_GETTOGGLEKEYS=" << SPI_GETTOGGLEKEYS << std::endl;
    std::cout << "SPI_GETTOOLTIPANIMATION=" << SPI_GETTOOLTIPANIMATION << std::endl;
    std::cout << "SPI_GETTOOLTIPFADE=" << SPI_GETTOOLTIPFADE << std::endl;
    std::cout << "SPI_GETUIEFFECTS=" << SPI_GETUIEFFECTS << std::endl;
    std::cout << "SPI_GETWHEELSCROLLCHARS=" << SPI_GETWHEELSCROLLCHARS << std::endl;
    std::cout << "SPI_GETWHEELSCROLLLINES=" << SPI_GETWHEELSCROLLLINES << std::endl;
    std::cout << "SPI_GETWINARRANGING=" << SPI_GETWINARRANGING << std::endl;
    std::cout << "SPI_GETWINDOWSEXTENSION=" << SPI_GETWINDOWSEXTENSION << std::endl;
    std::cout << "SPI_GETWORKAREA=" << SPI_GETWORKAREA << std::endl;
    std::cout << "SPI_ICONHORIZONTALSPACING=" << SPI_ICONHORIZONTALSPACING << std::endl;
    std::cout << "SPI_ICONVERTICALSPACING=" << SPI_ICONVERTICALSPACING << std::endl;
    std::cout << "SPI_LANGDRIVER=" << SPI_LANGDRIVER << std::endl;
    std::cout << "SPI_SCREENSAVERRUNNING=" << SPI_SCREENSAVERRUNNING << std::endl;
    std::cout << "SPI_SETACCESSTIMEOUT=" << SPI_SETACCESSTIMEOUT << std::endl;
    std::cout << "SPI_SETACTIVEWINDOWTRACKING=" << SPI_SETACTIVEWINDOWTRACKING << std::endl;
    std::cout << "SPI_SETACTIVEWNDTRKTIMEOUT=" << SPI_SETACTIVEWNDTRKTIMEOUT << std::endl;
    std::cout << "SPI_SETACTIVEWNDTRKZORDER=" << SPI_SETACTIVEWNDTRKZORDER << std::endl;
    std::cout << "SPI_SETANIMATION=" << SPI_SETANIMATION << std::endl;
    std::cout << "SPI_SETAUDIODESCRIPTION=" << SPI_SETAUDIODESCRIPTION << std::endl;
    std::cout << "SPI_SETBEEP=" << SPI_SETBEEP << std::endl;
    std::cout << "SPI_SETBLOCKSENDINPUTRESETS=" << SPI_SETBLOCKSENDINPUTRESETS << std::endl;
    std::cout << "SPI_SETBORDER=" << SPI_SETBORDER << std::endl;
    std::cout << "SPI_SETCARETTIMEOUT=" << SPI_SETCARETTIMEOUT << std::endl;
    std::cout << "SPI_SETCARETWIDTH=" << SPI_SETCARETWIDTH << std::endl;
    std::cout << "SPI_SETCLEARTYPE=" << SPI_SETCLEARTYPE << std::endl;
    std::cout << "SPI_SETCLIENTAREAANIMATION=" << SPI_SETCLIENTAREAANIMATION << std::endl;
    std::cout << "SPI_SETCOMBOBOXANIMATION=" << SPI_SETCOMBOBOXANIMATION << std::endl;
    std::cout << "SPI_SETCONTACTVISUALIZATION=" << SPI_SETCONTACTVISUALIZATION << std::endl;
    std::cout << "SPI_SETCURSORS=" << SPI_SETCURSORS << std::endl;
    std::cout << "SPI_SETCURSORSHADOW=" << SPI_SETCURSORSHADOW << std::endl;
    std::cout << "SPI_SETDEFAULTINPUTLANG=" << SPI_SETDEFAULTINPUTLANG << std::endl;
    std::cout << "SPI_SETDESKPATTERN=" << SPI_SETDESKPATTERN << std::endl;
    std::cout << "SPI_SETDESKWALLPAPER=" << SPI_SETDESKWALLPAPER << std::endl;
    std::cout << "SPI_SETDISABLEOVERLAPPEDCONTENT=" << SPI_SETDISABLEOVERLAPPEDCONTENT << std::endl;
    std::cout << "SPI_SETDOCKMOVING=" << SPI_SETDOCKMOVING << std::endl;
    std::cout << "SPI_SETDOUBLECLICKTIME=" << SPI_SETDOUBLECLICKTIME << std::endl;
    std::cout << "SPI_SETDOUBLECLKHEIGHT=" << SPI_SETDOUBLECLKHEIGHT << std::endl;
    std::cout << "SPI_SETDOUBLECLKWIDTH=" << SPI_SETDOUBLECLKWIDTH << std::endl;
    std::cout << "SPI_SETDRAGFULLWINDOWS=" << SPI_SETDRAGFULLWINDOWS << std::endl;
    std::cout << "SPI_SETDRAGHEIGHT=" << SPI_SETDRAGHEIGHT << std::endl;
    std::cout << "SPI_SETDRAGWIDTH=" << SPI_SETDRAGWIDTH << std::endl;
    std::cout << "SPI_SETDROPSHADOW=" << SPI_SETDROPSHADOW << std::endl;
    std::cout << "SPI_SETFASTTASKSWITCH=" << SPI_SETFASTTASKSWITCH << std::endl;
    std::cout << "SPI_SETFILTERKEYS=" << SPI_SETFILTERKEYS << std::endl;
    std::cout << "SPI_SETFLATMENU=" << SPI_SETFLATMENU << std::endl;
    std::cout << "SPI_SETFOCUSBORDERHEIGHT=" << SPI_SETFOCUSBORDERHEIGHT << std::endl;
    std::cout << "SPI_SETFOCUSBORDERWIDTH=" << SPI_SETFOCUSBORDERWIDTH << std::endl;
    std::cout << "SPI_SETFONTSMOOTHING=" << SPI_SETFONTSMOOTHING << std::endl;
    std::cout << "SPI_SETFONTSMOOTHINGCONTRAST=" << SPI_SETFONTSMOOTHINGCONTRAST << std::endl;
    std::cout << "SPI_SETFONTSMOOTHINGORIENTATION=" << SPI_SETFONTSMOOTHINGORIENTATION << std::endl;
    std::cout << "SPI_SETFONTSMOOTHINGTYPE=" << SPI_SETFONTSMOOTHINGTYPE << std::endl;
    std::cout << "SPI_SETFOREGROUNDFLASHCOUNT=" << SPI_SETFOREGROUNDFLASHCOUNT << std::endl;
    std::cout << "SPI_SETFOREGROUNDLOCKTIMEOUT=" << SPI_SETFOREGROUNDLOCKTIMEOUT << std::endl;
    std::cout << "SPI_SETGRADIENTCAPTIONS=" << SPI_SETGRADIENTCAPTIONS << std::endl;
    std::cout << "SPI_SETGRIDGRANULARITY=" << SPI_SETGRIDGRANULARITY << std::endl;
    std::cout << "SPI_SETHANDEDNESS=" << SPI_SETHANDEDNESS << std::endl;
    std::cout << "SPI_SETHANDHELD=" << SPI_SETHANDHELD << std::endl;
    std::cout << "SPI_SETHIGHCONTRAST=" << SPI_SETHIGHCONTRAST << std::endl;
    std::cout << "SPI_SETHOTTRACKING=" << SPI_SETHOTTRACKING << std::endl;
    std::cout << "SPI_SETHUNGAPPTIMEOUT=" << SPI_SETHUNGAPPTIMEOUT << std::endl;
    std::cout << "SPI_SETICONMETRICS=" << SPI_SETICONMETRICS << std::endl;
    std::cout << "SPI_SETICONS=" << SPI_SETICONS << std::endl;
    std::cout << "SPI_SETICONTITLELOGFONT=" << SPI_SETICONTITLELOGFONT << std::endl;
    std::cout << "SPI_SETICONTITLEWRAP=" << SPI_SETICONTITLEWRAP << std::endl;
    std::cout << "SPI_SETKEYBOARDCUES=" << SPI_SETKEYBOARDCUES << std::endl;
    std::cout << "SPI_SETKEYBOARDDELAY=" << SPI_SETKEYBOARDDELAY << std::endl;
    std::cout << "SPI_SETKEYBOARDPREF=" << SPI_SETKEYBOARDPREF << std::endl;
    std::cout << "SPI_SETKEYBOARDSPEED=" << SPI_SETKEYBOARDSPEED << std::endl;
    std::cout << "SPI_SETLANGTOGGLE=" << SPI_SETLANGTOGGLE << std::endl;
    std::cout << "SPI_SETLISTBOXSMOOTHSCROLLING=" << SPI_SETLISTBOXSMOOTHSCROLLING << std::endl;
    std::cout << "SPI_SETLOWPOWERACTIVE=" << SPI_SETLOWPOWERACTIVE << std::endl;
    std::cout << "SPI_SETLOWPOWERTIMEOUT=" << SPI_SETLOWPOWERTIMEOUT << std::endl;
    std::cout << "SPI_SETMENUANIMATION=" << SPI_SETMENUANIMATION << std::endl;
    std::cout << "SPI_SETMENUDROPALIGNMENT=" << SPI_SETMENUDROPALIGNMENT << std::endl;
    std::cout << "SPI_SETMENUFADE=" << SPI_SETMENUFADE << std::endl;
    std::cout << "SPI_SETMENUSHOWDELAY=" << SPI_SETMENUSHOWDELAY << std::endl;
    std::cout << "SPI_SETMENUUNDERLINES=" << SPI_SETMENUUNDERLINES << std::endl;
    std::cout << "SPI_SETMESSAGEDURATION=" << SPI_SETMESSAGEDURATION << std::endl;
    std::cout << "SPI_SETMINIMIZEDMETRICS=" << SPI_SETMINIMIZEDMETRICS << std::endl;
    std::cout << "SPI_SETMINIMUMHITRADIUS=" << SPI_SETMINIMUMHITRADIUS << std::endl;
    std::cout << "SPI_SETMOUSE=" << SPI_SETMOUSE << std::endl;
    std::cout << "SPI_SETMOUSEBUTTONSWAP=" << SPI_SETMOUSEBUTTONSWAP << std::endl;
    std::cout << "SPI_SETMOUSECLICKLOCK=" << SPI_SETMOUSECLICKLOCK << std::endl;
    std::cout << "SPI_SETMOUSECLICKLOCKTIME=" << SPI_SETMOUSECLICKLOCKTIME << std::endl;
    std::cout << "SPI_SETMOUSEDRAGOUTTHRESHOLD=" << SPI_SETMOUSEDRAGOUTTHRESHOLD << std::endl;
    std::cout << "SPI_SETMOUSEHOVERHEIGHT=" << SPI_SETMOUSEHOVERHEIGHT << std::endl;
    std::cout << "SPI_SETMOUSEHOVERTIME=" << SPI_SETMOUSEHOVERTIME << std::endl;
    std::cout << "SPI_SETMOUSEHOVERWIDTH=" << SPI_SETMOUSEHOVERWIDTH << std::endl;
    std::cout << "SPI_SETMOUSEKEYS=" << SPI_SETMOUSEKEYS << std::endl;
    std::cout << "SPI_SETMOUSESIDEMOVETHRESHOLD=" << SPI_SETMOUSESIDEMOVETHRESHOLD << std::endl;
    std::cout << "SPI_SETMOUSESONAR=" << SPI_SETMOUSESONAR << std::endl;
    std::cout << "SPI_SETMOUSESPEED=" << SPI_SETMOUSESPEED << std::endl;
    std::cout << "SPI_SETMOUSETRAILS=" << SPI_SETMOUSETRAILS << std::endl;
    std::cout << "SPI_SETMOUSEVANISH=" << SPI_SETMOUSEVANISH << std::endl;
    std::cout << "SPI_SETMOUSEWHEELROUTING=" << SPI_SETMOUSEWHEELROUTING << std::endl;
    std::cout << "SPI_SETNONCLIENTMETRICS=" << SPI_SETNONCLIENTMETRICS << std::endl;
    std::cout << "SPI_SETPENARBITRATIONTYPE=" << SPI_SETPENARBITRATIONTYPE << std::endl;
    std::cout << "SPI_SETPENDOCKTHRESHOLD=" << SPI_SETPENDOCKTHRESHOLD << std::endl;
    std::cout << "SPI_SETPENDRAGOUTTHRESHOLD=" << SPI_SETPENDRAGOUTTHRESHOLD << std::endl;
    std::cout << "SPI_SETPENVISUALIZATION=" << SPI_SETPENVISUALIZATION << std::endl;
    std::cout << "SPI_SETPENWINDOWS=" << SPI_SETPENWINDOWS << std::endl;
    std::cout << "SPI_SETPOWEROFFACTIVE=" << SPI_SETPOWEROFFACTIVE << std::endl;
    std::cout << "SPI_SETPOWEROFFTIMEOUT=" << SPI_SETPOWEROFFTIMEOUT << std::endl;
    std::cout << "SPI_SETSCREENREADER=" << SPI_SETSCREENREADER << std::endl;
    std::cout << "SPI_SETSCREENSAVEACTIVE=" << SPI_SETSCREENSAVEACTIVE << std::endl;
    std::cout << "SPI_SETSCREENSAVERRUNNING=" << SPI_SETSCREENSAVERRUNNING << std::endl;
    std::cout << "SPI_SETSCREENSAVESECURE=" << SPI_SETSCREENSAVESECURE << std::endl;
    std::cout << "SPI_SETSCREENSAVETIMEOUT=" << SPI_SETSCREENSAVETIMEOUT << std::endl;
    std::cout << "SPI_SETSELECTIONFADE=" << SPI_SETSELECTIONFADE << std::endl;
    std::cout << "SPI_SETSERIALKEYS=" << SPI_SETSERIALKEYS << std::endl;
    std::cout << "SPI_SETSHOWIMEUI=" << SPI_SETSHOWIMEUI << std::endl;
    std::cout << "SPI_SETSHOWSOUNDS=" << SPI_SETSHOWSOUNDS << std::endl;
    std::cout << "SPI_SETSNAPTODEFBUTTON=" << SPI_SETSNAPTODEFBUTTON << std::endl;
    std::cout << "SPI_SETSOUNDSENTRY=" << SPI_SETSOUNDSENTRY << std::endl;
    std::cout << "SPI_SETSTICKYKEYS=" << SPI_SETSTICKYKEYS << std::endl;
    std::cout << "SPI_SETSYSTEMLANGUAGEBAR=" << SPI_SETSYSTEMLANGUAGEBAR << std::endl;
    std::cout << "SPI_SETTOGGLEKEYS=" << SPI_SETTOGGLEKEYS << std::endl;
    std::cout << "SPI_SETTOOLTIPANIMATION=" << SPI_SETTOOLTIPANIMATION << std::endl;
    std::cout << "SPI_SETTOOLTIPFADE=" << SPI_SETTOOLTIPFADE << std::endl;
    std::cout << "SPI_SETUIEFFECTS=" << SPI_SETUIEFFECTS << std::endl;
    std::cout << "SPI_SETWHEELSCROLLCHARS=" << SPI_SETWHEELSCROLLCHARS << std::endl;
    std::cout << "SPI_SETWHEELSCROLLLINES=" << SPI_SETWHEELSCROLLLINES << std::endl;
    std::cout << "SPI_SETWINARRANGING=" << SPI_SETWINARRANGING << std::endl;
    std::cout << "SPI_SETWORKAREA=" << SPI_SETWORKAREA << std::endl;
    std::cout << "SPOOL_FILE_PERSISTENT=" << SPOOL_FILE_PERSISTENT << std::endl;
    std::cout << "SPOOL_FILE_TEMPORARY=" << SPOOL_FILE_TEMPORARY << std::endl;
    std::cout << "SPVERSION_MASK=" << SPVERSION_MASK << std::endl;
    std::cout << "SP_APPABORT=" << SP_APPABORT << std::endl;
    std::cout << "SP_ERROR=" << SP_ERROR << std::endl;
    std::cout << "SP_NOTREPORTED=" << SP_NOTREPORTED << std::endl;
    std::cout << "SP_OUTOFDISK=" << SP_OUTOFDISK << std::endl;
    std::cout << "SP_OUTOFMEMORY=" << SP_OUTOFMEMORY << std::endl;
    std::cout << "SP_USERABORT=" << SP_USERABORT << std::endl;
    std::cout << "SSF_AVAILABLE=" << SSF_AVAILABLE << std::endl;
    std::cout << "SSF_INDICATOR=" << SSF_INDICATOR << std::endl;
    std::cout << "SSF_SOUNDSENTRYON=" << SSF_SOUNDSENTRYON << std::endl;
    std::cout << "SSGF_DISPLAY=" << SSGF_DISPLAY << std::endl;
    std::cout << "SSGF_NONE=" << SSGF_NONE << std::endl;
    std::cout << "SSL_F12_ERROR_TEXT_LENGTH=" << SSL_F12_ERROR_TEXT_LENGTH << std::endl;
    std::cout << "SSL_HPKP_HEADER_COUNT=" << SSL_HPKP_HEADER_COUNT << std::endl;
    std::cout << "SSL_HPKP_PKP_HEADER_INDEX=" << SSL_HPKP_PKP_HEADER_INDEX << std::endl;
    std::cout << "SSL_HPKP_PKP_RO_HEADER_INDEX=" << SSL_HPKP_PKP_RO_HEADER_INDEX << std::endl;
    std::cout << "SSL_KEY_PIN_ERROR_TEXT_LENGTH=" << SSL_KEY_PIN_ERROR_TEXT_LENGTH << std::endl;
    std::cout << "SSTF_BORDER=" << SSTF_BORDER << std::endl;
    std::cout << "SSTF_CHARS=" << SSTF_CHARS << std::endl;
    std::cout << "SSTF_DISPLAY=" << SSTF_DISPLAY << std::endl;
    std::cout << "SSTF_NONE=" << SSTF_NONE << std::endl;
    std::cout << "SSWF_CUSTOM=" << SSWF_CUSTOM << std::endl;
    std::cout << "SSWF_DISPLAY=" << SSWF_DISPLAY << std::endl;
    std::cout << "SSWF_NONE=" << SSWF_NONE << std::endl;
    std::cout << "SSWF_TITLE=" << SSWF_TITLE << std::endl;
    std::cout << "SSWF_WINDOW=" << SSWF_WINDOW << std::endl;
    std::cout << "STACK_SIZE_PARAM_IS_A_RESERVATION=" << STACK_SIZE_PARAM_IS_A_RESERVATION << std::endl;
    std::cout << "STANDARD_RIGHTS_EXECUTE=" << STANDARD_RIGHTS_EXECUTE << std::endl;
    std::cout << "STANDARD_RIGHTS_READ=" << STANDARD_RIGHTS_READ << std::endl;
    std::cout << "STANDARD_RIGHTS_WRITE=" << STANDARD_RIGHTS_WRITE << std::endl;
    std::cout << "STARTDOC=" << STARTDOC << std::endl;
    std::cout << "STARTF_FORCEOFFFEEDBACK=" << STARTF_FORCEOFFFEEDBACK << std::endl;
    std::cout << "STARTF_FORCEONFEEDBACK=" << STARTF_FORCEONFEEDBACK << std::endl;
    std::cout << "STARTF_PREVENTPINNING=" << STARTF_PREVENTPINNING << std::endl;
    std::cout << "STARTF_RUNFULLSCREEN=" << STARTF_RUNFULLSCREEN << std::endl;
    std::cout << "STARTF_TITLEISAPPID=" << STARTF_TITLEISAPPID << std::endl;
    std::cout << "STARTF_TITLEISLINKNAME=" << STARTF_TITLEISLINKNAME << std::endl;
    std::cout << "STARTF_USECOUNTCHARS=" << STARTF_USECOUNTCHARS << std::endl;
    std::cout << "STARTF_USEFILLATTRIBUTE=" << STARTF_USEFILLATTRIBUTE << std::endl;
    std::cout << "STARTF_USEHOTKEY=" << STARTF_USEHOTKEY << std::endl;
    std::cout << "STARTF_USEPOSITION=" << STARTF_USEPOSITION << std::endl;
    std::cout << "STARTF_USESHOWWINDOW=" << STARTF_USESHOWWINDOW << std::endl;
    std::cout << "STARTF_USESIZE=" << STARTF_USESIZE << std::endl;
    std::cout << "STARTF_USESTDHANDLES=" << STARTF_USESTDHANDLES << std::endl;
    std::cout << "STATE_SYSTEM_ALERT_HIGH=" << STATE_SYSTEM_ALERT_HIGH << std::endl;
    std::cout << "STATE_SYSTEM_ALERT_LOW=" << STATE_SYSTEM_ALERT_LOW << std::endl;
    std::cout << "STATE_SYSTEM_ALERT_MEDIUM=" << STATE_SYSTEM_ALERT_MEDIUM << std::endl;
    std::cout << "STATE_SYSTEM_ANIMATED=" << STATE_SYSTEM_ANIMATED << std::endl;
    std::cout << "STATE_SYSTEM_BUSY=" << STATE_SYSTEM_BUSY << std::endl;
    std::cout << "STATE_SYSTEM_CHECKED=" << STATE_SYSTEM_CHECKED << std::endl;
    std::cout << "STATE_SYSTEM_COLLAPSED=" << STATE_SYSTEM_COLLAPSED << std::endl;
    std::cout << "STATE_SYSTEM_DEFAULT=" << STATE_SYSTEM_DEFAULT << std::endl;
    std::cout << "STATE_SYSTEM_EXPANDED=" << STATE_SYSTEM_EXPANDED << std::endl;
    std::cout << "STATE_SYSTEM_EXTSELECTABLE=" << STATE_SYSTEM_EXTSELECTABLE << std::endl;
    std::cout << "STATE_SYSTEM_FLOATING=" << STATE_SYSTEM_FLOATING << std::endl;
    std::cout << "STATE_SYSTEM_FOCUSABLE=" << STATE_SYSTEM_FOCUSABLE << std::endl;
    std::cout << "STATE_SYSTEM_FOCUSED=" << STATE_SYSTEM_FOCUSED << std::endl;
    std::cout << "STATE_SYSTEM_HOTTRACKED=" << STATE_SYSTEM_HOTTRACKED << std::endl;
    std::cout << "STATE_SYSTEM_INDETERMINATE=" << STATE_SYSTEM_INDETERMINATE << std::endl;
    std::cout << "STATE_SYSTEM_INVISIBLE=" << STATE_SYSTEM_INVISIBLE << std::endl;
    std::cout << "STATE_SYSTEM_LINKED=" << STATE_SYSTEM_LINKED << std::endl;
    std::cout << "STATE_SYSTEM_MARQUEED=" << STATE_SYSTEM_MARQUEED << std::endl;
    std::cout << "STATE_SYSTEM_MIXED=" << STATE_SYSTEM_MIXED << std::endl;
    std::cout << "STATE_SYSTEM_MOVEABLE=" << STATE_SYSTEM_MOVEABLE << std::endl;
    std::cout << "STATE_SYSTEM_MULTISELECTABLE=" << STATE_SYSTEM_MULTISELECTABLE << std::endl;
    std::cout << "STATE_SYSTEM_OFFSCREEN=" << STATE_SYSTEM_OFFSCREEN << std::endl;
    std::cout << "STATE_SYSTEM_PRESSED=" << STATE_SYSTEM_PRESSED << std::endl;
    std::cout << "STATE_SYSTEM_PROTECTED=" << STATE_SYSTEM_PROTECTED << std::endl;
    std::cout << "STATE_SYSTEM_READONLY=" << STATE_SYSTEM_READONLY << std::endl;
    std::cout << "STATE_SYSTEM_SELECTABLE=" << STATE_SYSTEM_SELECTABLE << std::endl;
    std::cout << "STATE_SYSTEM_SELECTED=" << STATE_SYSTEM_SELECTED << std::endl;
    std::cout << "STATE_SYSTEM_SELFVOICING=" << STATE_SYSTEM_SELFVOICING << std::endl;
    std::cout << "STATE_SYSTEM_SIZEABLE=" << STATE_SYSTEM_SIZEABLE << std::endl;
    std::cout << "STATE_SYSTEM_TRAVERSED=" << STATE_SYSTEM_TRAVERSED << std::endl;
    std::cout << "STATE_SYSTEM_UNAVAILABLE=" << STATE_SYSTEM_UNAVAILABLE << std::endl;
    std::cout << "STATE_SYSTEM_VALID=" << STATE_SYSTEM_VALID << std::endl;
    std::cout << "STATUS_SEVERITY_ERROR=" << STATUS_SEVERITY_ERROR << std::endl;
    std::cout << "STATUS_SEVERITY_INFORMATIONAL=" << STATUS_SEVERITY_INFORMATIONAL << std::endl;
    std::cout << "STATUS_SEVERITY_WARNING=" << STATUS_SEVERITY_WARNING << std::endl;
    std::cout << "STDAPICALLTYPE=" << STDAPICALLTYPE << std::endl;
    std::cout << "STDMETHODCALLTYPE=" << STDMETHODCALLTYPE << std::endl;
    std::cout << "STDOLE2_LCID=" << STDOLE2_LCID << std::endl;
    std::cout << "STDOLE2_MAJORVERNUM=" << STDOLE2_MAJORVERNUM << std::endl;
    std::cout << "STDOLE2_MINORVERNUM=" << STDOLE2_MINORVERNUM << std::endl;
    std::cout << "STDOLE_LCID=" << STDOLE_LCID << std::endl;
    std::cout << "STDOLE_MAJORVERNUM=" << STDOLE_MAJORVERNUM << std::endl;
    std::cout << "STDOLE_MINORVERNUM=" << STDOLE_MINORVERNUM << std::endl;
    std::cout << "STGFMT_ANY=" << STGFMT_ANY << std::endl;
    std::cout << "STGFMT_DOCFILE=" << STGFMT_DOCFILE << std::endl;
    std::cout << "STGFMT_DOCUMENT=" << STGFMT_DOCUMENT << std::endl;
    std::cout << "STGFMT_FILE=" << STGFMT_FILE << std::endl;
    std::cout << "STGFMT_NATIVE=" << STGFMT_NATIVE << std::endl;
    std::cout << "STGFMT_STORAGE=" << STGFMT_STORAGE << std::endl;
    std::cout << "STGOPTIONS_VERSION=" << STGOPTIONS_VERSION << std::endl;
    std::cout << "STILL_ACTIVE=" << STILL_ACTIVE << std::endl;
    std::cout << "STM_GETICON=" << STM_GETICON << std::endl;
    std::cout << "STM_GETIMAGE=" << STM_GETIMAGE << std::endl;
    std::cout << "STM_MSGMAX=" << STM_MSGMAX << std::endl;
    std::cout << "STM_SETICON=" << STM_SETICON << std::endl;
    std::cout << "STM_SETIMAGE=" << STM_SETIMAGE << std::endl;
    std::cout << "STN_CLICKED=" << STN_CLICKED << std::endl;
    std::cout << "STN_DBLCLK=" << STN_DBLCLK << std::endl;
    std::cout << "STN_DISABLE=" << STN_DISABLE << std::endl;
    std::cout << "STN_ENABLE=" << STN_ENABLE << std::endl;
    std::cout << "STOCK_LAST=" << STOCK_LAST << std::endl;
    std::cout << "STORAGE_INFO_FLAGS_ALIGNED_DEVICE=" << STORAGE_INFO_FLAGS_ALIGNED_DEVICE << std::endl;
    std::cout << "STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE=" << STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE << std::endl;
    std::cout << "STREAM_CLEAR_ENCRYPTION=" << STREAM_CLEAR_ENCRYPTION << std::endl;
    std::cout << "STREAM_CONTAINS_PROPERTIES=" << STREAM_CONTAINS_PROPERTIES << std::endl;
    std::cout << "STREAM_CONTAINS_SECURITY=" << STREAM_CONTAINS_SECURITY << std::endl;
    std::cout << "STREAM_MAX=" << STREAM_MAX << std::endl;
    std::cout << "STREAM_MODIFIED_WHEN_READ=" << STREAM_MODIFIED_WHEN_READ << std::endl;
    std::cout << "STREAM_NORMAL_ATTRIBUTE=" << STREAM_NORMAL_ATTRIBUTE << std::endl;
    std::cout << "STREAM_SET_ENCRYPTION=" << STREAM_SET_ENCRYPTION << std::endl;
    std::cout << "STREAM_SPARSE_ATTRIBUTE=" << STREAM_SPARSE_ATTRIBUTE << std::endl;
    std::cout << "STRETCHBLT=" << STRETCHBLT << std::endl;
    std::cout << "STRETCH_ANDSCANS=" << STRETCH_ANDSCANS << std::endl;
    std::cout << "STRETCH_DELETESCANS=" << STRETCH_DELETESCANS << std::endl;
    std::cout << "STRETCH_HALFTONE=" << STRETCH_HALFTONE << std::endl;
    std::cout << "STRETCH_ORSCANS=" << STRETCH_ORSCANS << std::endl;
    std::cout << "STRICT=" << STRICT << std::endl;
    std::cout << "STYLE_DESCRIPTION_SIZE=" << STYLE_DESCRIPTION_SIZE << std::endl;
    std::cout << "ST_ADVISE=" << ST_ADVISE << std::endl;
    std::cout << "ST_BLOCKED=" << ST_BLOCKED << std::endl;
    std::cout << "ST_BLOCKNEXT=" << ST_BLOCKNEXT << std::endl;
    std::cout << "ST_CLIENT=" << ST_CLIENT << std::endl;
    std::cout << "ST_CONNECTED=" << ST_CONNECTED << std::endl;
    std::cout << "ST_INLIST=" << ST_INLIST << std::endl;
    std::cout << "ST_ISLOCAL=" << ST_ISLOCAL << std::endl;
    std::cout << "ST_ISSELF=" << ST_ISSELF << std::endl;
    std::cout << "ST_TERMINATED=" << ST_TERMINATED << std::endl;
    std::cout << "SUBLANG_AFRIKAANS_SOUTH_AFRICA=" << SUBLANG_AFRIKAANS_SOUTH_AFRICA << std::endl;
    std::cout << "SUBLANG_ALBANIAN_ALBANIA=" << SUBLANG_ALBANIAN_ALBANIA << std::endl;
    std::cout << "SUBLANG_ALSATIAN_FRANCE=" << SUBLANG_ALSATIAN_FRANCE << std::endl;
    std::cout << "SUBLANG_AMHARIC_ETHIOPIA=" << SUBLANG_AMHARIC_ETHIOPIA << std::endl;
    std::cout << "SUBLANG_ARABIC_ALGERIA=" << SUBLANG_ARABIC_ALGERIA << std::endl;
    std::cout << "SUBLANG_ARABIC_EGYPT=" << SUBLANG_ARABIC_EGYPT << std::endl;
    std::cout << "SUBLANG_ARABIC_IRAQ=" << SUBLANG_ARABIC_IRAQ << std::endl;
    std::cout << "SUBLANG_ARABIC_LIBYA=" << SUBLANG_ARABIC_LIBYA << std::endl;
    std::cout << "SUBLANG_ARABIC_MOROCCO=" << SUBLANG_ARABIC_MOROCCO << std::endl;
    std::cout << "SUBLANG_ARABIC_OMAN=" << SUBLANG_ARABIC_OMAN << std::endl;
    std::cout << "SUBLANG_ARABIC_QATAR=" << SUBLANG_ARABIC_QATAR << std::endl;
    std::cout << "SUBLANG_ARABIC_SAUDI_ARABIA=" << SUBLANG_ARABIC_SAUDI_ARABIA << std::endl;
    std::cout << "SUBLANG_ARABIC_TUNISIA=" << SUBLANG_ARABIC_TUNISIA << std::endl;
    std::cout << "SUBLANG_ARABIC_YEMEN=" << SUBLANG_ARABIC_YEMEN << std::endl;
    std::cout << "SUBLANG_ARMENIAN_ARMENIA=" << SUBLANG_ARMENIAN_ARMENIA << std::endl;
    std::cout << "SUBLANG_ASSAMESE_INDIA=" << SUBLANG_ASSAMESE_INDIA << std::endl;
    std::cout << "SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC=" << SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC << std::endl;
    std::cout << "SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN=" << SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN << std::endl;
    std::cout << "SUBLANG_AZERI_CYRILLIC=" << SUBLANG_AZERI_CYRILLIC << std::endl;
    std::cout << "SUBLANG_AZERI_LATIN=" << SUBLANG_AZERI_LATIN << std::endl;
    std::cout << "SUBLANG_BANGLA_BANGLADESH=" << SUBLANG_BANGLA_BANGLADESH << std::endl;
    std::cout << "SUBLANG_BANGLA_INDIA=" << SUBLANG_BANGLA_INDIA << std::endl;
    std::cout << "SUBLANG_BASHKIR_RUSSIA=" << SUBLANG_BASHKIR_RUSSIA << std::endl;
    std::cout << "SUBLANG_BASQUE_BASQUE=" << SUBLANG_BASQUE_BASQUE << std::endl;
    std::cout << "SUBLANG_BELARUSIAN_BELARUS=" << SUBLANG_BELARUSIAN_BELARUS << std::endl;
    std::cout << "SUBLANG_BENGALI_BANGLADESH=" << SUBLANG_BENGALI_BANGLADESH << std::endl;
    std::cout << "SUBLANG_BENGALI_INDIA=" << SUBLANG_BENGALI_INDIA << std::endl;
    std::cout << "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC=" << SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC << std::endl;
    std::cout << "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN=" << SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN << std::endl;
    std::cout << "SUBLANG_BRETON_FRANCE=" << SUBLANG_BRETON_FRANCE << std::endl;
    std::cout << "SUBLANG_BULGARIAN_BULGARIA=" << SUBLANG_BULGARIAN_BULGARIA << std::endl;
    std::cout << "SUBLANG_CATALAN_CATALAN=" << SUBLANG_CATALAN_CATALAN << std::endl;
    std::cout << "SUBLANG_CENTRAL_KURDISH_IRAQ=" << SUBLANG_CENTRAL_KURDISH_IRAQ << std::endl;
    std::cout << "SUBLANG_CHEROKEE_CHEROKEE=" << SUBLANG_CHEROKEE_CHEROKEE << std::endl;
    std::cout << "SUBLANG_CHINESE_HONGKONG=" << SUBLANG_CHINESE_HONGKONG << std::endl;
    std::cout << "SUBLANG_CHINESE_MACAU=" << SUBLANG_CHINESE_MACAU << std::endl;
    std::cout << "SUBLANG_CHINESE_SIMPLIFIED=" << SUBLANG_CHINESE_SIMPLIFIED << std::endl;
    std::cout << "SUBLANG_CHINESE_SINGAPORE=" << SUBLANG_CHINESE_SINGAPORE << std::endl;
    std::cout << "SUBLANG_CHINESE_TRADITIONAL=" << SUBLANG_CHINESE_TRADITIONAL << std::endl;
    std::cout << "SUBLANG_CORSICAN_FRANCE=" << SUBLANG_CORSICAN_FRANCE << std::endl;
    std::cout << "SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN=" << SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN << std::endl;
    std::cout << "SUBLANG_CROATIAN_CROATIA=" << SUBLANG_CROATIAN_CROATIA << std::endl;
    std::cout << "SUBLANG_CUSTOM_DEFAULT=" << SUBLANG_CUSTOM_DEFAULT << std::endl;
    std::cout << "SUBLANG_CUSTOM_UNSPECIFIED=" << SUBLANG_CUSTOM_UNSPECIFIED << std::endl;
    std::cout << "SUBLANG_CZECH_CZECH_REPUBLIC=" << SUBLANG_CZECH_CZECH_REPUBLIC << std::endl;
    std::cout << "SUBLANG_DANISH_DENMARK=" << SUBLANG_DANISH_DENMARK << std::endl;
    std::cout << "SUBLANG_DARI_AFGHANISTAN=" << SUBLANG_DARI_AFGHANISTAN << std::endl;
    std::cout << "SUBLANG_DEFAULT=" << SUBLANG_DEFAULT << std::endl;
    std::cout << "SUBLANG_DIVEHI_MALDIVES=" << SUBLANG_DIVEHI_MALDIVES << std::endl;
    std::cout << "SUBLANG_DUTCH=" << SUBLANG_DUTCH << std::endl;
    std::cout << "SUBLANG_DUTCH_BELGIAN=" << SUBLANG_DUTCH_BELGIAN << std::endl;
    std::cout << "SUBLANG_ENGLISH_AUS=" << SUBLANG_ENGLISH_AUS << std::endl;
    std::cout << "SUBLANG_ENGLISH_CAN=" << SUBLANG_ENGLISH_CAN << std::endl;
    std::cout << "SUBLANG_ENGLISH_CARIBBEAN=" << SUBLANG_ENGLISH_CARIBBEAN << std::endl;
    std::cout << "SUBLANG_ENGLISH_EIRE=" << SUBLANG_ENGLISH_EIRE << std::endl;
    std::cout << "SUBLANG_ENGLISH_INDIA=" << SUBLANG_ENGLISH_INDIA << std::endl;
    std::cout << "SUBLANG_ENGLISH_IRELAND=" << SUBLANG_ENGLISH_IRELAND << std::endl;
    std::cout << "SUBLANG_ENGLISH_JAMAICA=" << SUBLANG_ENGLISH_JAMAICA << std::endl;
    std::cout << "SUBLANG_ENGLISH_MALAYSIA=" << SUBLANG_ENGLISH_MALAYSIA << std::endl;
    std::cout << "SUBLANG_ENGLISH_NZ=" << SUBLANG_ENGLISH_NZ << std::endl;
    std::cout << "SUBLANG_ENGLISH_SINGAPORE=" << SUBLANG_ENGLISH_SINGAPORE << std::endl;
    std::cout << "SUBLANG_ENGLISH_SOUTH_AFRICA=" << SUBLANG_ENGLISH_SOUTH_AFRICA << std::endl;
    std::cout << "SUBLANG_ENGLISH_UK=" << SUBLANG_ENGLISH_UK << std::endl;
    std::cout << "SUBLANG_ENGLISH_US=" << SUBLANG_ENGLISH_US << std::endl;
    std::cout << "SUBLANG_ESTONIAN_ESTONIA=" << SUBLANG_ESTONIAN_ESTONIA << std::endl;
    std::cout << "SUBLANG_FAEROESE_FAROE_ISLANDS=" << SUBLANG_FAEROESE_FAROE_ISLANDS << std::endl;
    std::cout << "SUBLANG_FILIPINO_PHILIPPINES=" << SUBLANG_FILIPINO_PHILIPPINES << std::endl;
    std::cout << "SUBLANG_FINNISH_FINLAND=" << SUBLANG_FINNISH_FINLAND << std::endl;
    std::cout << "SUBLANG_FRENCH=" << SUBLANG_FRENCH << std::endl;
    std::cout << "SUBLANG_FRENCH_BELGIAN=" << SUBLANG_FRENCH_BELGIAN << std::endl;
    std::cout << "SUBLANG_FRENCH_CANADIAN=" << SUBLANG_FRENCH_CANADIAN << std::endl;
    std::cout << "SUBLANG_FRENCH_LUXEMBOURG=" << SUBLANG_FRENCH_LUXEMBOURG << std::endl;
    std::cout << "SUBLANG_FRENCH_MONACO=" << SUBLANG_FRENCH_MONACO << std::endl;
    std::cout << "SUBLANG_FRENCH_SWISS=" << SUBLANG_FRENCH_SWISS << std::endl;
    std::cout << "SUBLANG_FRISIAN_NETHERLANDS=" << SUBLANG_FRISIAN_NETHERLANDS << std::endl;
    std::cout << "SUBLANG_FULAH_SENEGAL=" << SUBLANG_FULAH_SENEGAL << std::endl;
    std::cout << "SUBLANG_GALICIAN_GALICIAN=" << SUBLANG_GALICIAN_GALICIAN << std::endl;
    std::cout << "SUBLANG_GEORGIAN_GEORGIA=" << SUBLANG_GEORGIAN_GEORGIA << std::endl;
    std::cout << "SUBLANG_GERMAN=" << SUBLANG_GERMAN << std::endl;
    std::cout << "SUBLANG_GERMAN_AUSTRIAN=" << SUBLANG_GERMAN_AUSTRIAN << std::endl;
    std::cout << "SUBLANG_GERMAN_LIECHTENSTEIN=" << SUBLANG_GERMAN_LIECHTENSTEIN << std::endl;
    std::cout << "SUBLANG_GERMAN_LUXEMBOURG=" << SUBLANG_GERMAN_LUXEMBOURG << std::endl;
    std::cout << "SUBLANG_GERMAN_SWISS=" << SUBLANG_GERMAN_SWISS << std::endl;
    std::cout << "SUBLANG_GREEK_GREECE=" << SUBLANG_GREEK_GREECE << std::endl;
    std::cout << "SUBLANG_GREENLANDIC_GREENLAND=" << SUBLANG_GREENLANDIC_GREENLAND << std::endl;
    std::cout << "SUBLANG_GUJARATI_INDIA=" << SUBLANG_GUJARATI_INDIA << std::endl;
    std::cout << "SUBLANG_HAUSA_NIGERIA=" << SUBLANG_HAUSA_NIGERIA << std::endl;
    std::cout << "SUBLANG_HAUSA_NIGERIA_LATIN=" << SUBLANG_HAUSA_NIGERIA_LATIN << std::endl;
    std::cout << "SUBLANG_HAWAIIAN_US=" << SUBLANG_HAWAIIAN_US << std::endl;
    std::cout << "SUBLANG_HEBREW_ISRAEL=" << SUBLANG_HEBREW_ISRAEL << std::endl;
    std::cout << "SUBLANG_HINDI_INDIA=" << SUBLANG_HINDI_INDIA << std::endl;
    std::cout << "SUBLANG_HUNGARIAN_HUNGARY=" << SUBLANG_HUNGARIAN_HUNGARY << std::endl;
    std::cout << "SUBLANG_ICELANDIC_ICELAND=" << SUBLANG_ICELANDIC_ICELAND << std::endl;
    std::cout << "SUBLANG_IGBO_NIGERIA=" << SUBLANG_IGBO_NIGERIA << std::endl;
    std::cout << "SUBLANG_INDONESIAN_INDONESIA=" << SUBLANG_INDONESIAN_INDONESIA << std::endl;
    std::cout << "SUBLANG_INUKTITUT_CANADA=" << SUBLANG_INUKTITUT_CANADA << std::endl;
    std::cout << "SUBLANG_INUKTITUT_CANADA_LATIN=" << SUBLANG_INUKTITUT_CANADA_LATIN << std::endl;
    std::cout << "SUBLANG_IRISH_IRELAND=" << SUBLANG_IRISH_IRELAND << std::endl;
    std::cout << "SUBLANG_ITALIAN=" << SUBLANG_ITALIAN << std::endl;
    std::cout << "SUBLANG_ITALIAN_SWISS=" << SUBLANG_ITALIAN_SWISS << std::endl;
    std::cout << "SUBLANG_JAPANESE_JAPAN=" << SUBLANG_JAPANESE_JAPAN << std::endl;
    std::cout << "SUBLANG_KANNADA_INDIA=" << SUBLANG_KANNADA_INDIA << std::endl;
    std::cout << "SUBLANG_KASHMIRI_INDIA=" << SUBLANG_KASHMIRI_INDIA << std::endl;
    std::cout << "SUBLANG_KASHMIRI_SASIA=" << SUBLANG_KASHMIRI_SASIA << std::endl;
    std::cout << "SUBLANG_KAZAK_KAZAKHSTAN=" << SUBLANG_KAZAK_KAZAKHSTAN << std::endl;
    std::cout << "SUBLANG_KHMER_CAMBODIA=" << SUBLANG_KHMER_CAMBODIA << std::endl;
    std::cout << "SUBLANG_KICHE_GUATEMALA=" << SUBLANG_KICHE_GUATEMALA << std::endl;
    std::cout << "SUBLANG_KINYARWANDA_RWANDA=" << SUBLANG_KINYARWANDA_RWANDA << std::endl;
    std::cout << "SUBLANG_KONKANI_INDIA=" << SUBLANG_KONKANI_INDIA << std::endl;
    std::cout << "SUBLANG_KOREAN=" << SUBLANG_KOREAN << std::endl;
    std::cout << "SUBLANG_KYRGYZ_KYRGYZSTAN=" << SUBLANG_KYRGYZ_KYRGYZSTAN << std::endl;
    std::cout << "SUBLANG_LAO_LAO=" << SUBLANG_LAO_LAO << std::endl;
    std::cout << "SUBLANG_LAO_LAO_PDR=" << SUBLANG_LAO_LAO_PDR << std::endl;
    std::cout << "SUBLANG_LATVIAN_LATVIA=" << SUBLANG_LATVIAN_LATVIA << std::endl;
    std::cout << "SUBLANG_LITHUANIAN=" << SUBLANG_LITHUANIAN << std::endl;
    std::cout << "SUBLANG_LITHUANIAN_LITHUANIA=" << SUBLANG_LITHUANIAN_LITHUANIA << std::endl;
    std::cout << "SUBLANG_LOWER_SORBIAN_GERMANY=" << SUBLANG_LOWER_SORBIAN_GERMANY << std::endl;
    std::cout << "SUBLANG_LUXEMBOURGISH_LUXEMBOURG=" << SUBLANG_LUXEMBOURGISH_LUXEMBOURG << std::endl;
    std::cout << "SUBLANG_MACEDONIAN_MACEDONIA=" << SUBLANG_MACEDONIAN_MACEDONIA << std::endl;
    std::cout << "SUBLANG_MALAYALAM_INDIA=" << SUBLANG_MALAYALAM_INDIA << std::endl;
    std::cout << "SUBLANG_MALAY_BRUNEI_DARUSSALAM=" << SUBLANG_MALAY_BRUNEI_DARUSSALAM << std::endl;
    std::cout << "SUBLANG_MALAY_MALAYSIA=" << SUBLANG_MALAY_MALAYSIA << std::endl;
    std::cout << "SUBLANG_MALTESE_MALTA=" << SUBLANG_MALTESE_MALTA << std::endl;
    std::cout << "SUBLANG_MAORI_NEW_ZEALAND=" << SUBLANG_MAORI_NEW_ZEALAND << std::endl;
    std::cout << "SUBLANG_MAPUDUNGUN_CHILE=" << SUBLANG_MAPUDUNGUN_CHILE << std::endl;
    std::cout << "SUBLANG_MARATHI_INDIA=" << SUBLANG_MARATHI_INDIA << std::endl;
    std::cout << "SUBLANG_MOHAWK_MOHAWK=" << SUBLANG_MOHAWK_MOHAWK << std::endl;
    std::cout << "SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA=" << SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA << std::endl;
    std::cout << "SUBLANG_MONGOLIAN_PRC=" << SUBLANG_MONGOLIAN_PRC << std::endl;
    std::cout << "SUBLANG_NEPALI_INDIA=" << SUBLANG_NEPALI_INDIA << std::endl;
    std::cout << "SUBLANG_NEPALI_NEPAL=" << SUBLANG_NEPALI_NEPAL << std::endl;
    std::cout << "SUBLANG_NEUTRAL=" << SUBLANG_NEUTRAL << std::endl;
    std::cout << "SUBLANG_NORWEGIAN_BOKMAL=" << SUBLANG_NORWEGIAN_BOKMAL << std::endl;
    std::cout << "SUBLANG_NORWEGIAN_NYNORSK=" << SUBLANG_NORWEGIAN_NYNORSK << std::endl;
    std::cout << "SUBLANG_OCCITAN_FRANCE=" << SUBLANG_OCCITAN_FRANCE << std::endl;
    std::cout << "SUBLANG_ORIYA_INDIA=" << SUBLANG_ORIYA_INDIA << std::endl;
    std::cout << "SUBLANG_PASHTO_AFGHANISTAN=" << SUBLANG_PASHTO_AFGHANISTAN << std::endl;
    std::cout << "SUBLANG_PERSIAN_IRAN=" << SUBLANG_PERSIAN_IRAN << std::endl;
    std::cout << "SUBLANG_POLISH_POLAND=" << SUBLANG_POLISH_POLAND << std::endl;
    std::cout << "SUBLANG_PORTUGUESE=" << SUBLANG_PORTUGUESE << std::endl;
    std::cout << "SUBLANG_PORTUGUESE_BRAZILIAN=" << SUBLANG_PORTUGUESE_BRAZILIAN << std::endl;
    std::cout << "SUBLANG_PORTUGUESE_PORTUGAL=" << SUBLANG_PORTUGUESE_PORTUGAL << std::endl;
    std::cout << "SUBLANG_PULAR_SENEGAL=" << SUBLANG_PULAR_SENEGAL << std::endl;
    std::cout << "SUBLANG_PUNJABI_INDIA=" << SUBLANG_PUNJABI_INDIA << std::endl;
    std::cout << "SUBLANG_PUNJABI_PAKISTAN=" << SUBLANG_PUNJABI_PAKISTAN << std::endl;
    std::cout << "SUBLANG_QUECHUA_BOLIVIA=" << SUBLANG_QUECHUA_BOLIVIA << std::endl;
    std::cout << "SUBLANG_QUECHUA_ECUADOR=" << SUBLANG_QUECHUA_ECUADOR << std::endl;
    std::cout << "SUBLANG_QUECHUA_PERU=" << SUBLANG_QUECHUA_PERU << std::endl;
    std::cout << "SUBLANG_ROMANIAN_ROMANIA=" << SUBLANG_ROMANIAN_ROMANIA << std::endl;
    std::cout << "SUBLANG_ROMANSH_SWITZERLAND=" << SUBLANG_ROMANSH_SWITZERLAND << std::endl;
    std::cout << "SUBLANG_RUSSIAN_RUSSIA=" << SUBLANG_RUSSIAN_RUSSIA << std::endl;
    std::cout << "SUBLANG_SAKHA_RUSSIA=" << SUBLANG_SAKHA_RUSSIA << std::endl;
    std::cout << "SUBLANG_SAMI_INARI_FINLAND=" << SUBLANG_SAMI_INARI_FINLAND << std::endl;
    std::cout << "SUBLANG_SAMI_LULE_NORWAY=" << SUBLANG_SAMI_LULE_NORWAY << std::endl;
    std::cout << "SUBLANG_SAMI_LULE_SWEDEN=" << SUBLANG_SAMI_LULE_SWEDEN << std::endl;
    std::cout << "SUBLANG_SAMI_NORTHERN_FINLAND=" << SUBLANG_SAMI_NORTHERN_FINLAND << std::endl;
    std::cout << "SUBLANG_SAMI_NORTHERN_NORWAY=" << SUBLANG_SAMI_NORTHERN_NORWAY << std::endl;
    std::cout << "SUBLANG_SAMI_NORTHERN_SWEDEN=" << SUBLANG_SAMI_NORTHERN_SWEDEN << std::endl;
    std::cout << "SUBLANG_SAMI_SKOLT_FINLAND=" << SUBLANG_SAMI_SKOLT_FINLAND << std::endl;
    std::cout << "SUBLANG_SAMI_SOUTHERN_NORWAY=" << SUBLANG_SAMI_SOUTHERN_NORWAY << std::endl;
    std::cout << "SUBLANG_SAMI_SOUTHERN_SWEDEN=" << SUBLANG_SAMI_SOUTHERN_SWEDEN << std::endl;
    std::cout << "SUBLANG_SANSKRIT_INDIA=" << SUBLANG_SANSKRIT_INDIA << std::endl;
    std::cout << "SUBLANG_SCOTTISH_GAELIC=" << SUBLANG_SCOTTISH_GAELIC << std::endl;
    std::cout << "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC=" << SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC << std::endl;
    std::cout << "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN=" << SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN << std::endl;
    std::cout << "SUBLANG_SERBIAN_CYRILLIC=" << SUBLANG_SERBIAN_CYRILLIC << std::endl;
    std::cout << "SUBLANG_SERBIAN_LATIN=" << SUBLANG_SERBIAN_LATIN << std::endl;
    std::cout << "SUBLANG_SERBIAN_SERBIA_LATIN=" << SUBLANG_SERBIAN_SERBIA_LATIN << std::endl;
    std::cout << "SUBLANG_SINDHI_AFGHANISTAN=" << SUBLANG_SINDHI_AFGHANISTAN << std::endl;
    std::cout << "SUBLANG_SINDHI_INDIA=" << SUBLANG_SINDHI_INDIA << std::endl;
    std::cout << "SUBLANG_SINDHI_PAKISTAN=" << SUBLANG_SINDHI_PAKISTAN << std::endl;
    std::cout << "SUBLANG_SINHALESE_SRI_LANKA=" << SUBLANG_SINHALESE_SRI_LANKA << std::endl;
    std::cout << "SUBLANG_SLOVAK_SLOVAKIA=" << SUBLANG_SLOVAK_SLOVAKIA << std::endl;
    std::cout << "SUBLANG_SLOVENIAN_SLOVENIA=" << SUBLANG_SLOVENIAN_SLOVENIA << std::endl;
    std::cout << "SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA=" << SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA << std::endl;
    std::cout << "SUBLANG_SPANISH=" << SUBLANG_SPANISH << std::endl;
    std::cout << "SUBLANG_SPANISH_BOLIVIA=" << SUBLANG_SPANISH_BOLIVIA << std::endl;
    std::cout << "SUBLANG_SPANISH_COLOMBIA=" << SUBLANG_SPANISH_COLOMBIA << std::endl;
    std::cout << "SUBLANG_SPANISH_COSTA_RICA=" << SUBLANG_SPANISH_COSTA_RICA << std::endl;
    std::cout << "SUBLANG_SPANISH_DOMINICAN_REPUBLIC=" << SUBLANG_SPANISH_DOMINICAN_REPUBLIC << std::endl;
    std::cout << "SUBLANG_SPANISH_EL_SALVADOR=" << SUBLANG_SPANISH_EL_SALVADOR << std::endl;
    std::cout << "SUBLANG_SPANISH_GUATEMALA=" << SUBLANG_SPANISH_GUATEMALA << std::endl;
    std::cout << "SUBLANG_SPANISH_HONDURAS=" << SUBLANG_SPANISH_HONDURAS << std::endl;
    std::cout << "SUBLANG_SPANISH_MEXICAN=" << SUBLANG_SPANISH_MEXICAN << std::endl;
    std::cout << "SUBLANG_SPANISH_MODERN=" << SUBLANG_SPANISH_MODERN << std::endl;
    std::cout << "SUBLANG_SPANISH_NICARAGUA=" << SUBLANG_SPANISH_NICARAGUA << std::endl;
    std::cout << "SUBLANG_SPANISH_PANAMA=" << SUBLANG_SPANISH_PANAMA << std::endl;
    std::cout << "SUBLANG_SPANISH_PUERTO_RICO=" << SUBLANG_SPANISH_PUERTO_RICO << std::endl;
    std::cout << "SUBLANG_SPANISH_US=" << SUBLANG_SPANISH_US << std::endl;
    std::cout << "SUBLANG_SPANISH_VENEZUELA=" << SUBLANG_SPANISH_VENEZUELA << std::endl;
    std::cout << "SUBLANG_SWAHILI_KENYA=" << SUBLANG_SWAHILI_KENYA << std::endl;
    std::cout << "SUBLANG_SWEDISH=" << SUBLANG_SWEDISH << std::endl;
    std::cout << "SUBLANG_SWEDISH_FINLAND=" << SUBLANG_SWEDISH_FINLAND << std::endl;
    std::cout << "SUBLANG_SWEDISH_SWEDEN=" << SUBLANG_SWEDISH_SWEDEN << std::endl;
    std::cout << "SUBLANG_SYRIAC=" << SUBLANG_SYRIAC << std::endl;
    std::cout << "SUBLANG_SYRIAC_SYRIA=" << SUBLANG_SYRIAC_SYRIA << std::endl;
    std::cout << "SUBLANG_SYS_DEFAULT=" << SUBLANG_SYS_DEFAULT << std::endl;
    std::cout << "SUBLANG_TAJIK_TAJIKISTAN=" << SUBLANG_TAJIK_TAJIKISTAN << std::endl;
    std::cout << "SUBLANG_TAMAZIGHT_ALGERIA_LATIN=" << SUBLANG_TAMAZIGHT_ALGERIA_LATIN << std::endl;
    std::cout << "SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH=" << SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH << std::endl;
    std::cout << "SUBLANG_TAMIL_INDIA=" << SUBLANG_TAMIL_INDIA << std::endl;
    std::cout << "SUBLANG_TAMIL_SRI_LANKA=" << SUBLANG_TAMIL_SRI_LANKA << std::endl;
    std::cout << "SUBLANG_TATAR_RUSSIA=" << SUBLANG_TATAR_RUSSIA << std::endl;
    std::cout << "SUBLANG_TELUGU_INDIA=" << SUBLANG_TELUGU_INDIA << std::endl;
    std::cout << "SUBLANG_THAI_THAILAND=" << SUBLANG_THAI_THAILAND << std::endl;
    std::cout << "SUBLANG_TIBETAN_BHUTAN=" << SUBLANG_TIBETAN_BHUTAN << std::endl;
    std::cout << "SUBLANG_TIBETAN_PRC=" << SUBLANG_TIBETAN_PRC << std::endl;
    std::cout << "SUBLANG_TIGRIGNA_ERITREA=" << SUBLANG_TIGRIGNA_ERITREA << std::endl;
    std::cout << "SUBLANG_TIGRINYA_ERITREA=" << SUBLANG_TIGRINYA_ERITREA << std::endl;
    std::cout << "SUBLANG_TIGRINYA_ETHIOPIA=" << SUBLANG_TIGRINYA_ETHIOPIA << std::endl;
    std::cout << "SUBLANG_TSWANA_BOTSWANA=" << SUBLANG_TSWANA_BOTSWANA << std::endl;
    std::cout << "SUBLANG_TSWANA_SOUTH_AFRICA=" << SUBLANG_TSWANA_SOUTH_AFRICA << std::endl;
    std::cout << "SUBLANG_TURKISH_TURKEY=" << SUBLANG_TURKISH_TURKEY << std::endl;
    std::cout << "SUBLANG_TURKMEN_TURKMENISTAN=" << SUBLANG_TURKMEN_TURKMENISTAN << std::endl;
    std::cout << "SUBLANG_UIGHUR_PRC=" << SUBLANG_UIGHUR_PRC << std::endl;
    std::cout << "SUBLANG_UI_CUSTOM_DEFAULT=" << SUBLANG_UI_CUSTOM_DEFAULT << std::endl;
    std::cout << "SUBLANG_UKRAINIAN_UKRAINE=" << SUBLANG_UKRAINIAN_UKRAINE << std::endl;
    std::cout << "SUBLANG_UPPER_SORBIAN_GERMANY=" << SUBLANG_UPPER_SORBIAN_GERMANY << std::endl;
    std::cout << "SUBLANG_URDU_INDIA=" << SUBLANG_URDU_INDIA << std::endl;
    std::cout << "SUBLANG_URDU_PAKISTAN=" << SUBLANG_URDU_PAKISTAN << std::endl;
    std::cout << "SUBLANG_UZBEK_CYRILLIC=" << SUBLANG_UZBEK_CYRILLIC << std::endl;
    std::cout << "SUBLANG_UZBEK_LATIN=" << SUBLANG_UZBEK_LATIN << std::endl;
    std::cout << "SUBLANG_VALENCIAN_VALENCIA=" << SUBLANG_VALENCIAN_VALENCIA << std::endl;
    std::cout << "SUBLANG_VIETNAMESE_VIETNAM=" << SUBLANG_VIETNAMESE_VIETNAM << std::endl;
    std::cout << "SUBLANG_WELSH_UNITED_KINGDOM=" << SUBLANG_WELSH_UNITED_KINGDOM << std::endl;
    std::cout << "SUBLANG_WOLOF_SENEGAL=" << SUBLANG_WOLOF_SENEGAL << std::endl;
    std::cout << "SUBLANG_XHOSA_SOUTH_AFRICA=" << SUBLANG_XHOSA_SOUTH_AFRICA << std::endl;
    std::cout << "SUBLANG_YAKUT_RUSSIA=" << SUBLANG_YAKUT_RUSSIA << std::endl;
    std::cout << "SUBLANG_YI_PRC=" << SUBLANG_YI_PRC << std::endl;
    std::cout << "SUBLANG_YORUBA_NIGERIA=" << SUBLANG_YORUBA_NIGERIA << std::endl;
    std::cout << "SUBLANG_ZULU_SOUTH_AFRICA=" << SUBLANG_ZULU_SOUTH_AFRICA << std::endl;
    std::cout << "SUBVERSION_MASK=" << SUBVERSION_MASK << std::endl;
    std::cout << "SUCCESSFUL_ACCESS_ACE_FLAG=" << SUCCESSFUL_ACCESS_ACE_FLAG << std::endl;
    std::cout << "SUPPORT_LANG_NUMBER=" << SUPPORT_LANG_NUMBER << std::endl;
    std::cout << "SWP_ASYNCWINDOWPOS=" << SWP_ASYNCWINDOWPOS << std::endl;
    std::cout << "SWP_DEFERERASE=" << SWP_DEFERERASE << std::endl;
    std::cout << "SWP_DRAWFRAME=" << SWP_DRAWFRAME << std::endl;
    std::cout << "SWP_FRAMECHANGED=" << SWP_FRAMECHANGED << std::endl;
    std::cout << "SWP_HIDEWINDOW=" << SWP_HIDEWINDOW << std::endl;
    std::cout << "SWP_NOACTIVATE=" << SWP_NOACTIVATE << std::endl;
    std::cout << "SWP_NOCOPYBITS=" << SWP_NOCOPYBITS << std::endl;
    std::cout << "SWP_NOMOVE=" << SWP_NOMOVE << std::endl;
    std::cout << "SWP_NOOWNERZORDER=" << SWP_NOOWNERZORDER << std::endl;
    std::cout << "SWP_NOREDRAW=" << SWP_NOREDRAW << std::endl;
    std::cout << "SWP_NOREPOSITION=" << SWP_NOREPOSITION << std::endl;
    std::cout << "SWP_NOSENDCHANGING=" << SWP_NOSENDCHANGING << std::endl;
    std::cout << "SWP_NOSIZE=" << SWP_NOSIZE << std::endl;
    std::cout << "SWP_NOZORDER=" << SWP_NOZORDER << std::endl;
    std::cout << "SWP_SHOWWINDOW=" << SWP_SHOWWINDOW << std::endl;
    std::cout << "SW_ERASE=" << SW_ERASE << std::endl;
    std::cout << "SW_FORCEMINIMIZE=" << SW_FORCEMINIMIZE << std::endl;
    std::cout << "SW_HIDE=" << SW_HIDE << std::endl;
    std::cout << "SW_INVALIDATE=" << SW_INVALIDATE << std::endl;
    std::cout << "SW_MAX=" << SW_MAX << std::endl;
    std::cout << "SW_MAXIMIZE=" << SW_MAXIMIZE << std::endl;
    std::cout << "SW_MINIMIZE=" << SW_MINIMIZE << std::endl;
    std::cout << "SW_NORMAL=" << SW_NORMAL << std::endl;
    std::cout << "SW_OTHERUNZOOM=" << SW_OTHERUNZOOM << std::endl;
    std::cout << "SW_OTHERZOOM=" << SW_OTHERZOOM << std::endl;
    std::cout << "SW_PARENTCLOSING=" << SW_PARENTCLOSING << std::endl;
    std::cout << "SW_PARENTOPENING=" << SW_PARENTOPENING << std::endl;
    std::cout << "SW_RESTORE=" << SW_RESTORE << std::endl;
    std::cout << "SW_SCROLLCHILDREN=" << SW_SCROLLCHILDREN << std::endl;
    std::cout << "SW_SHOW=" << SW_SHOW << std::endl;
    std::cout << "SW_SHOWDEFAULT=" << SW_SHOWDEFAULT << std::endl;
    std::cout << "SW_SHOWMAXIMIZED=" << SW_SHOWMAXIMIZED << std::endl;
    std::cout << "SW_SHOWMINIMIZED=" << SW_SHOWMINIMIZED << std::endl;
    std::cout << "SW_SHOWMINNOACTIVE=" << SW_SHOWMINNOACTIVE << std::endl;
    std::cout << "SW_SHOWNA=" << SW_SHOWNA << std::endl;
    std::cout << "SW_SHOWNOACTIVATE=" << SW_SHOWNOACTIVATE << std::endl;
    std::cout << "SW_SHOWNORMAL=" << SW_SHOWNORMAL << std::endl;
    std::cout << "SW_SMOOTHSCROLL=" << SW_SMOOTHSCROLL << std::endl;
    std::cout << "SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE=" << SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE << std::endl;
    std::cout << "SYMBOLIC_LINK_FLAG_DIRECTORY=" << SYMBOLIC_LINK_FLAG_DIRECTORY << std::endl;
    std::cout << "SYMBOL_CHARSET=" << SYMBOL_CHARSET << std::endl;
    std::cout << "SYMBOL_FONTTYPE=" << SYMBOL_FONTTYPE << std::endl;
    std::cout << "SYMLINK_FLAG_RELATIVE=" << SYMLINK_FLAG_RELATIVE << std::endl;
    std::cout << "SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY=" << SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY << std::endl;
    std::cout << "SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE=" << SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE << std::endl;
    std::cout << "SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY=" << SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY << std::endl;
    std::cout << "SYSPAL_ERROR=" << SYSPAL_ERROR << std::endl;
    std::cout << "SYSPAL_NOSTATIC=" << SYSPAL_NOSTATIC << std::endl;
    std::cout << "SYSPAL_NOSTATIC256=" << SYSPAL_NOSTATIC256 << std::endl;
    std::cout << "SYSPAL_STATIC=" << SYSPAL_STATIC << std::endl;
    std::cout << "SYSRGN=" << SYSRGN << std::endl;
    std::cout << "SYSTEM_ALARM_ACE_TYPE=" << SYSTEM_ALARM_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_ALARM_CALLBACK_ACE_TYPE=" << SYSTEM_ALARM_CALLBACK_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE=" << SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_ALARM_OBJECT_ACE_TYPE=" << SYSTEM_ALARM_OBJECT_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_AUDIT_ACE_TYPE=" << SYSTEM_AUDIT_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_AUDIT_CALLBACK_ACE_TYPE=" << SYSTEM_AUDIT_CALLBACK_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE=" << SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_AUDIT_OBJECT_ACE_TYPE=" << SYSTEM_AUDIT_OBJECT_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_CACHE_ALIGNMENT_SIZE=" << SYSTEM_CACHE_ALIGNMENT_SIZE << std::endl;
    std::cout << "SYSTEM_FIXED_FONT=" << SYSTEM_FIXED_FONT << std::endl;
    std::cout << "SYSTEM_FONT=" << SYSTEM_FONT << std::endl;
    std::cout << "SYSTEM_MANDATORY_LABEL_ACE_TYPE=" << SYSTEM_MANDATORY_LABEL_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP=" << SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP << std::endl;
    std::cout << "SYSTEM_MANDATORY_LABEL_NO_READ_UP=" << SYSTEM_MANDATORY_LABEL_NO_READ_UP << std::endl;
    std::cout << "SYSTEM_MANDATORY_LABEL_NO_WRITE_UP=" << SYSTEM_MANDATORY_LABEL_NO_WRITE_UP << std::endl;
    std::cout << "SYSTEM_MANDATORY_LABEL_VALID_MASK=" << SYSTEM_MANDATORY_LABEL_VALID_MASK << std::endl;
    std::cout << "SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE=" << SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE << std::endl;
    std::cout << "SYSTEM_SCOPED_POLICY_ID_ACE_TYPE=" << SYSTEM_SCOPED_POLICY_ID_ACE_TYPE << std::endl;
    std::cout << "S_ALLTHRESHOLD=" << S_ALLTHRESHOLD << std::endl;
    std::cout << "S_LEGATO=" << S_LEGATO << std::endl;
    std::cout << "S_NORMAL=" << S_NORMAL << std::endl;
    std::cout << "S_PERIOD1024=" << S_PERIOD1024 << std::endl;
    std::cout << "S_PERIOD2048=" << S_PERIOD2048 << std::endl;
    std::cout << "S_PERIOD512=" << S_PERIOD512 << std::endl;
    std::cout << "S_PERIODVOICE=" << S_PERIODVOICE << std::endl;
    std::cout << "S_QUEUEEMPTY=" << S_QUEUEEMPTY << std::endl;
    std::cout << "S_SERBDNT=" << S_SERBDNT << std::endl;
    std::cout << "S_SERDCC=" << S_SERDCC << std::endl;
    std::cout << "S_SERDDR=" << S_SERDDR << std::endl;
    std::cout << "S_SERDFQ=" << S_SERDFQ << std::endl;
    std::cout << "S_SERDLN=" << S_SERDLN << std::endl;
    std::cout << "S_SERDMD=" << S_SERDMD << std::endl;
    std::cout << "S_SERDPT=" << S_SERDPT << std::endl;
    std::cout << "S_SERDSH=" << S_SERDSH << std::endl;
    std::cout << "S_SERDSR=" << S_SERDSR << std::endl;
    std::cout << "S_SERDST=" << S_SERDST << std::endl;
    std::cout << "S_SERDTP=" << S_SERDTP << std::endl;
    std::cout << "S_SERDVL=" << S_SERDVL << std::endl;
    std::cout << "S_SERDVNA=" << S_SERDVNA << std::endl;
    std::cout << "S_SERMACT=" << S_SERMACT << std::endl;
    std::cout << "S_SEROFM=" << S_SEROFM << std::endl;
    std::cout << "S_SERQFUL=" << S_SERQFUL << std::endl;
    std::cout << "S_STACCATO=" << S_STACCATO << std::endl;
    std::cout << "S_THRESHOLD=" << S_THRESHOLD << std::endl;
    std::cout << "S_WHITE1024=" << S_WHITE1024 << std::endl;
    std::cout << "S_WHITE2048=" << S_WHITE2048 << std::endl;
    std::cout << "S_WHITE512=" << S_WHITE512 << std::endl;
    std::cout << "S_WHITEVOICE=" << S_WHITEVOICE << std::endl;
    std::cout << "TAPE_DRIVE_ABSOLUTE_BLK=" << TAPE_DRIVE_ABSOLUTE_BLK << std::endl;
    std::cout << "TAPE_DRIVE_ABS_BLK_IMMED=" << TAPE_DRIVE_ABS_BLK_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_CLEAN_REQUESTS=" << TAPE_DRIVE_CLEAN_REQUESTS << std::endl;
    std::cout << "TAPE_DRIVE_COMPRESSION=" << TAPE_DRIVE_COMPRESSION << std::endl;
    std::cout << "TAPE_DRIVE_ECC=" << TAPE_DRIVE_ECC << std::endl;
    std::cout << "TAPE_DRIVE_EJECT_MEDIA=" << TAPE_DRIVE_EJECT_MEDIA << std::endl;
    std::cout << "TAPE_DRIVE_END_OF_DATA=" << TAPE_DRIVE_END_OF_DATA << std::endl;
    std::cout << "TAPE_DRIVE_EOT_WZ_SIZE=" << TAPE_DRIVE_EOT_WZ_SIZE << std::endl;
    std::cout << "TAPE_DRIVE_ERASE_BOP_ONLY=" << TAPE_DRIVE_ERASE_BOP_ONLY << std::endl;
    std::cout << "TAPE_DRIVE_ERASE_IMMEDIATE=" << TAPE_DRIVE_ERASE_IMMEDIATE << std::endl;
    std::cout << "TAPE_DRIVE_ERASE_LONG=" << TAPE_DRIVE_ERASE_LONG << std::endl;
    std::cout << "TAPE_DRIVE_ERASE_SHORT=" << TAPE_DRIVE_ERASE_SHORT << std::endl;
    std::cout << "TAPE_DRIVE_FILEMARKS=" << TAPE_DRIVE_FILEMARKS << std::endl;
    std::cout << "TAPE_DRIVE_FIXED=" << TAPE_DRIVE_FIXED << std::endl;
    std::cout << "TAPE_DRIVE_FIXED_BLOCK=" << TAPE_DRIVE_FIXED_BLOCK << std::endl;
    std::cout << "TAPE_DRIVE_FORMAT=" << TAPE_DRIVE_FORMAT << std::endl;
    std::cout << "TAPE_DRIVE_FORMAT_IMMEDIATE=" << TAPE_DRIVE_FORMAT_IMMEDIATE << std::endl;
    std::cout << "TAPE_DRIVE_GET_ABSOLUTE_BLK=" << TAPE_DRIVE_GET_ABSOLUTE_BLK << std::endl;
    std::cout << "TAPE_DRIVE_GET_LOGICAL_BLK=" << TAPE_DRIVE_GET_LOGICAL_BLK << std::endl;
    std::cout << "TAPE_DRIVE_HIGH_FEATURES=" << TAPE_DRIVE_HIGH_FEATURES << std::endl;
    std::cout << "TAPE_DRIVE_INITIATOR=" << TAPE_DRIVE_INITIATOR << std::endl;
    std::cout << "TAPE_DRIVE_LOAD_UNLD_IMMED=" << TAPE_DRIVE_LOAD_UNLD_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_LOAD_UNLOAD=" << TAPE_DRIVE_LOAD_UNLOAD << std::endl;
    std::cout << "TAPE_DRIVE_LOCK_UNLK_IMMED=" << TAPE_DRIVE_LOCK_UNLK_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_LOCK_UNLOCK=" << TAPE_DRIVE_LOCK_UNLOCK << std::endl;
    std::cout << "TAPE_DRIVE_LOGICAL_BLK=" << TAPE_DRIVE_LOGICAL_BLK << std::endl;
    std::cout << "TAPE_DRIVE_LOG_BLK_IMMED=" << TAPE_DRIVE_LOG_BLK_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_PADDING=" << TAPE_DRIVE_PADDING << std::endl;
    std::cout << "TAPE_DRIVE_RELATIVE_BLKS=" << TAPE_DRIVE_RELATIVE_BLKS << std::endl;
    std::cout << "TAPE_DRIVE_REPORT_SMKS=" << TAPE_DRIVE_REPORT_SMKS << std::endl;
    std::cout << "TAPE_DRIVE_RESERVED_BIT=" << TAPE_DRIVE_RESERVED_BIT << std::endl;
    std::cout << "TAPE_DRIVE_REVERSE_POSITION=" << TAPE_DRIVE_REVERSE_POSITION << std::endl;
    std::cout << "TAPE_DRIVE_REWIND_IMMEDIATE=" << TAPE_DRIVE_REWIND_IMMEDIATE << std::endl;
    std::cout << "TAPE_DRIVE_SELECT=" << TAPE_DRIVE_SELECT << std::endl;
    std::cout << "TAPE_DRIVE_SEQUENTIAL_FMKS=" << TAPE_DRIVE_SEQUENTIAL_FMKS << std::endl;
    std::cout << "TAPE_DRIVE_SEQUENTIAL_SMKS=" << TAPE_DRIVE_SEQUENTIAL_SMKS << std::endl;
    std::cout << "TAPE_DRIVE_SETMARKS=" << TAPE_DRIVE_SETMARKS << std::endl;
    std::cout << "TAPE_DRIVE_SET_BLOCK_SIZE=" << TAPE_DRIVE_SET_BLOCK_SIZE << std::endl;
    std::cout << "TAPE_DRIVE_SET_CMP_BOP_ONLY=" << TAPE_DRIVE_SET_CMP_BOP_ONLY << std::endl;
    std::cout << "TAPE_DRIVE_SET_COMPRESSION=" << TAPE_DRIVE_SET_COMPRESSION << std::endl;
    std::cout << "TAPE_DRIVE_SET_ECC=" << TAPE_DRIVE_SET_ECC << std::endl;
    std::cout << "TAPE_DRIVE_SET_EOT_WZ_SIZE=" << TAPE_DRIVE_SET_EOT_WZ_SIZE << std::endl;
    std::cout << "TAPE_DRIVE_SET_PADDING=" << TAPE_DRIVE_SET_PADDING << std::endl;
    std::cout << "TAPE_DRIVE_SET_REPORT_SMKS=" << TAPE_DRIVE_SET_REPORT_SMKS << std::endl;
    std::cout << "TAPE_DRIVE_SPACE_IMMEDIATE=" << TAPE_DRIVE_SPACE_IMMEDIATE << std::endl;
    std::cout << "TAPE_DRIVE_TAPE_CAPACITY=" << TAPE_DRIVE_TAPE_CAPACITY << std::endl;
    std::cout << "TAPE_DRIVE_TAPE_REMAINING=" << TAPE_DRIVE_TAPE_REMAINING << std::endl;
    std::cout << "TAPE_DRIVE_TENSION=" << TAPE_DRIVE_TENSION << std::endl;
    std::cout << "TAPE_DRIVE_TENSION_IMMED=" << TAPE_DRIVE_TENSION_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_VARIABLE_BLOCK=" << TAPE_DRIVE_VARIABLE_BLOCK << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_FILEMARKS=" << TAPE_DRIVE_WRITE_FILEMARKS << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_LONG_FMKS=" << TAPE_DRIVE_WRITE_LONG_FMKS << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_MARK_IMMED=" << TAPE_DRIVE_WRITE_MARK_IMMED << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_PROTECT=" << TAPE_DRIVE_WRITE_PROTECT << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_SETMARKS=" << TAPE_DRIVE_WRITE_SETMARKS << std::endl;
    std::cout << "TAPE_DRIVE_WRITE_SHORT_FMKS=" << TAPE_DRIVE_WRITE_SHORT_FMKS << std::endl;
    std::cout << "TARGET_IS_NT351_OR_WIN95_OR_LATER=" << TARGET_IS_NT351_OR_WIN95_OR_LATER << std::endl;
    std::cout << "TARGET_IS_NT40_OR_LATER=" << TARGET_IS_NT40_OR_LATER << std::endl;
    std::cout << "TARGET_IS_NT50_OR_LATER=" << TARGET_IS_NT50_OR_LATER << std::endl;
    std::cout << "TARGET_IS_NT51_OR_LATER=" << TARGET_IS_NT51_OR_LATER << std::endl;
    std::cout << "TARGET_IS_NT60_OR_LATER=" << TARGET_IS_NT60_OR_LATER << std::endl;
    std::cout << "TARGET_IS_NT61_OR_LATER=" << TARGET_IS_NT61_OR_LATER << std::endl;
    std::cout << "TA_BASELINE=" << TA_BASELINE << std::endl;
    std::cout << "TA_BOTTOM=" << TA_BOTTOM << std::endl;
    std::cout << "TA_CENTER=" << TA_CENTER << std::endl;
    std::cout << "TA_LEFT=" << TA_LEFT << std::endl;
    std::cout << "TA_MASK=" << TA_MASK << std::endl;
    std::cout << "TA_NOUPDATECP=" << TA_NOUPDATECP << std::endl;
    std::cout << "TA_RIGHT=" << TA_RIGHT << std::endl;
    std::cout << "TA_RTLREADING=" << TA_RTLREADING << std::endl;
    std::cout << "TA_TOP=" << TA_TOP << std::endl;
    std::cout << "TA_UPDATECP=" << TA_UPDATECP << std::endl;
    std::cout << "TBSTYLE_ALTDRAG=" << TBSTYLE_ALTDRAG << std::endl;
    std::cout << "TBSTYLE_AUTOSIZE=" << TBSTYLE_AUTOSIZE << std::endl;
    std::cout << "TBSTYLE_BUTTON=" << TBSTYLE_BUTTON << std::endl;
    std::cout << "TBSTYLE_CHECK=" << TBSTYLE_CHECK << std::endl;
    std::cout << "TBSTYLE_CHECKGROUP=" << TBSTYLE_CHECKGROUP << std::endl;
    std::cout << "TBSTYLE_CUSTOMERASE=" << TBSTYLE_CUSTOMERASE << std::endl;
    std::cout << "TBSTYLE_DROPDOWN=" << TBSTYLE_DROPDOWN << std::endl;
    std::cout << "TBSTYLE_FLAT=" << TBSTYLE_FLAT << std::endl;
    std::cout << "TBSTYLE_GROUP=" << TBSTYLE_GROUP << std::endl;
    std::cout << "TBSTYLE_LIST=" << TBSTYLE_LIST << std::endl;
    std::cout << "TBSTYLE_NOPREFIX=" << TBSTYLE_NOPREFIX << std::endl;
    std::cout << "TBSTYLE_REGISTERDROP=" << TBSTYLE_REGISTERDROP << std::endl;
    std::cout << "TBSTYLE_SEP=" << TBSTYLE_SEP << std::endl;
    std::cout << "TBSTYLE_TOOLTIPS=" << TBSTYLE_TOOLTIPS << std::endl;
    std::cout << "TBSTYLE_TRANSPARENT=" << TBSTYLE_TRANSPARENT << std::endl;
    std::cout << "TBSTYLE_WRAPABLE=" << TBSTYLE_WRAPABLE << std::endl;
    std::cout << "TBS_AUTOTICKS=" << TBS_AUTOTICKS << std::endl;
    std::cout << "TBS_BOTH=" << TBS_BOTH << std::endl;
    std::cout << "TBS_BOTTOM=" << TBS_BOTTOM << std::endl;
    std::cout << "TBS_DOWNISLEFT=" << TBS_DOWNISLEFT << std::endl;
    std::cout << "TBS_ENABLESELRANGE=" << TBS_ENABLESELRANGE << std::endl;
    std::cout << "TBS_FIXEDLENGTH=" << TBS_FIXEDLENGTH << std::endl;
    std::cout << "TBS_HORZ=" << TBS_HORZ << std::endl;
    std::cout << "TBS_LEFT=" << TBS_LEFT << std::endl;
    std::cout << "TBS_NOTHUMB=" << TBS_NOTHUMB << std::endl;
    std::cout << "TBS_NOTICKS=" << TBS_NOTICKS << std::endl;
    std::cout << "TBS_NOTIFYBEFOREMOVE=" << TBS_NOTIFYBEFOREMOVE << std::endl;
    std::cout << "TBS_REVERSED=" << TBS_REVERSED << std::endl;
    std::cout << "TBS_RIGHT=" << TBS_RIGHT << std::endl;
    std::cout << "TBS_TOOLTIPS=" << TBS_TOOLTIPS << std::endl;
    std::cout << "TBS_TOP=" << TBS_TOP << std::endl;
    std::cout << "TBS_TRANSPARENTBKGND=" << TBS_TRANSPARENTBKGND << std::endl;
    std::cout << "TBS_VERT=" << TBS_VERT << std::endl;
    std::cout << "TCI_SRCCHARSET=" << TCI_SRCCHARSET << std::endl;
    std::cout << "TCI_SRCCODEPAGE=" << TCI_SRCCODEPAGE << std::endl;
    std::cout << "TCI_SRCFONTSIG=" << TCI_SRCFONTSIG << std::endl;
    std::cout << "TCI_SRCLOCALE=" << TCI_SRCLOCALE << std::endl;
    std::cout << "TCP_BSDURGENT=" << TCP_BSDURGENT << std::endl;
    std::cout << "TCP_NODELAY=" << TCP_NODELAY << std::endl;
    std::cout << "TCS_BOTTOM=" << TCS_BOTTOM << std::endl;
    std::cout << "TCS_BUTTONS=" << TCS_BUTTONS << std::endl;
    std::cout << "TCS_FIXEDWIDTH=" << TCS_FIXEDWIDTH << std::endl;
    std::cout << "TCS_FLATBUTTONS=" << TCS_FLATBUTTONS << std::endl;
    std::cout << "TCS_FOCUSNEVER=" << TCS_FOCUSNEVER << std::endl;
    std::cout << "TCS_FOCUSONBUTTONDOWN=" << TCS_FOCUSONBUTTONDOWN << std::endl;
    std::cout << "TCS_FORCEICONLEFT=" << TCS_FORCEICONLEFT << std::endl;
    std::cout << "TCS_FORCELABELLEFT=" << TCS_FORCELABELLEFT << std::endl;
    std::cout << "TCS_HOTTRACK=" << TCS_HOTTRACK << std::endl;
    std::cout << "TCS_MULTILINE=" << TCS_MULTILINE << std::endl;
    std::cout << "TCS_MULTISELECT=" << TCS_MULTISELECT << std::endl;
    std::cout << "TCS_OWNERDRAWFIXED=" << TCS_OWNERDRAWFIXED << std::endl;
    std::cout << "TCS_RAGGEDRIGHT=" << TCS_RAGGEDRIGHT << std::endl;
    std::cout << "TCS_RIGHT=" << TCS_RIGHT << std::endl;
    std::cout << "TCS_RIGHTJUSTIFY=" << TCS_RIGHTJUSTIFY << std::endl;
    std::cout << "TCS_SCROLLOPPOSITE=" << TCS_SCROLLOPPOSITE << std::endl;
    std::cout << "TCS_SINGLELINE=" << TCS_SINGLELINE << std::endl;
    std::cout << "TCS_TABS=" << TCS_TABS << std::endl;
    std::cout << "TCS_TOOLTIPS=" << TCS_TOOLTIPS << std::endl;
    std::cout << "TCS_VERTICAL=" << TCS_VERTICAL << std::endl;
    std::cout << "TC_CP_STROKE=" << TC_CP_STROKE << std::endl;
    std::cout << "TC_CR_90=" << TC_CR_90 << std::endl;
    std::cout << "TC_CR_ANY=" << TC_CR_ANY << std::endl;
    std::cout << "TC_EA_DOUBLE=" << TC_EA_DOUBLE << std::endl;
    std::cout << "TC_GP_TRAP=" << TC_GP_TRAP << std::endl;
    std::cout << "TC_HARDERR=" << TC_HARDERR << std::endl;
    std::cout << "TC_IA_ABLE=" << TC_IA_ABLE << std::endl;
    std::cout << "TC_NORMAL=" << TC_NORMAL << std::endl;
    std::cout << "TC_OP_CHARACTER=" << TC_OP_CHARACTER << std::endl;
    std::cout << "TC_OP_STROKE=" << TC_OP_STROKE << std::endl;
    std::cout << "TC_RA_ABLE=" << TC_RA_ABLE << std::endl;
    std::cout << "TC_RESERVED=" << TC_RESERVED << std::endl;
    std::cout << "TC_SA_CONTIN=" << TC_SA_CONTIN << std::endl;
    std::cout << "TC_SA_DOUBLE=" << TC_SA_DOUBLE << std::endl;
    std::cout << "TC_SA_INTEGER=" << TC_SA_INTEGER << std::endl;
    std::cout << "TC_SCROLLBLT=" << TC_SCROLLBLT << std::endl;
    std::cout << "TC_SF_X_YINDEP=" << TC_SF_X_YINDEP << std::endl;
    std::cout << "TC_SIGNAL=" << TC_SIGNAL << std::endl;
    std::cout << "TC_SO_ABLE=" << TC_SO_ABLE << std::endl;
    std::cout << "TC_UA_ABLE=" << TC_UA_ABLE << std::endl;
    std::cout << "TC_VA_ABLE=" << TC_VA_ABLE << std::endl;
    std::cout << "TECHNOLOGY=" << TECHNOLOGY << std::endl;
    std::cout << "TEXTCAPS=" << TEXTCAPS << std::endl;
    std::cout << "TF_DISCONNECT=" << TF_DISCONNECT << std::endl;
    std::cout << "TF_REUSE_SOCKET=" << TF_REUSE_SOCKET << std::endl;
    std::cout << "TF_WRITE_BEHIND=" << TF_WRITE_BEHIND << std::endl;
    std::cout << "THAI_CHARSET=" << THAI_CHARSET << std::endl;
    std::cout << "THREAD_BASE_PRIORITY_IDLE=" << THREAD_BASE_PRIORITY_IDLE << std::endl;
    std::cout << "THREAD_BASE_PRIORITY_LOWRT=" << THREAD_BASE_PRIORITY_LOWRT << std::endl;
    std::cout << "THREAD_BASE_PRIORITY_MAX=" << THREAD_BASE_PRIORITY_MAX << std::endl;
    std::cout << "THREAD_BASE_PRIORITY_MIN=" << THREAD_BASE_PRIORITY_MIN << std::endl;
    std::cout << "THREAD_DIRECT_IMPERSONATION=" << THREAD_DIRECT_IMPERSONATION << std::endl;
    std::cout << "THREAD_GET_CONTEXT=" << THREAD_GET_CONTEXT << std::endl;
    std::cout << "THREAD_IMPERSONATE=" << THREAD_IMPERSONATE << std::endl;
    std::cout << "THREAD_MODE_BACKGROUND_BEGIN=" << THREAD_MODE_BACKGROUND_BEGIN << std::endl;
    std::cout << "THREAD_MODE_BACKGROUND_END=" << THREAD_MODE_BACKGROUND_END << std::endl;
    std::cout << "THREAD_PRIORITY_ABOVE_NORMAL=" << THREAD_PRIORITY_ABOVE_NORMAL << std::endl;
    std::cout << "THREAD_PRIORITY_BELOW_NORMAL=" << THREAD_PRIORITY_BELOW_NORMAL << std::endl;
    std::cout << "THREAD_PRIORITY_HIGHEST=" << THREAD_PRIORITY_HIGHEST << std::endl;
    std::cout << "THREAD_PRIORITY_IDLE=" << THREAD_PRIORITY_IDLE << std::endl;
    std::cout << "THREAD_PRIORITY_LOWEST=" << THREAD_PRIORITY_LOWEST << std::endl;
    std::cout << "THREAD_PRIORITY_NORMAL=" << THREAD_PRIORITY_NORMAL << std::endl;
    std::cout << "THREAD_PRIORITY_TIME_CRITICAL=" << THREAD_PRIORITY_TIME_CRITICAL << std::endl;
    std::cout << "THREAD_PROFILING_FLAG_DISPATCH=" << THREAD_PROFILING_FLAG_DISPATCH << std::endl;
    std::cout << "THREAD_QUERY_INFORMATION=" << THREAD_QUERY_INFORMATION << std::endl;
    std::cout << "THREAD_QUERY_LIMITED_INFORMATION=" << THREAD_QUERY_LIMITED_INFORMATION << std::endl;
    std::cout << "THREAD_SET_CONTEXT=" << THREAD_SET_CONTEXT << std::endl;
    std::cout << "THREAD_SET_INFORMATION=" << THREAD_SET_INFORMATION << std::endl;
    std::cout << "THREAD_SET_LIMITED_INFORMATION=" << THREAD_SET_LIMITED_INFORMATION << std::endl;
    std::cout << "THREAD_SET_THREAD_TOKEN=" << THREAD_SET_THREAD_TOKEN << std::endl;
    std::cout << "THREAD_SUSPEND_RESUME=" << THREAD_SUSPEND_RESUME << std::endl;
    std::cout << "THREAD_TERMINATE=" << THREAD_TERMINATE << std::endl;
    std::cout << "TIMEOUT_ASYNC=" << TIMEOUT_ASYNC << std::endl;
    std::cout << "TIMERR_BASE=" << TIMERR_BASE << std::endl;
    std::cout << "TIMERR_NOCANDO=" << TIMERR_NOCANDO << std::endl;
    std::cout << "TIMERR_NOERROR=" << TIMERR_NOERROR << std::endl;
    std::cout << "TIMERR_STRUCT=" << TIMERR_STRUCT << std::endl;
    std::cout << "TIMERV_COALESCING_MIN=" << TIMERV_COALESCING_MIN << std::endl;
    std::cout << "TIMERV_DEFAULT_COALESCING=" << TIMERV_DEFAULT_COALESCING << std::endl;
    std::cout << "TIMER_ALL_ACCESS=" << TIMER_ALL_ACCESS << std::endl;
    std::cout << "TIMER_MODIFY_STATE=" << TIMER_MODIFY_STATE << std::endl;
    std::cout << "TIMER_QUERY_STATE=" << TIMER_QUERY_STATE << std::endl;
    std::cout << "TIMESTAMP_DONT_HASH_DATA=" << TIMESTAMP_DONT_HASH_DATA << std::endl;
    std::cout << "TIMESTAMP_FAILURE_BAD_ALG=" << TIMESTAMP_FAILURE_BAD_ALG << std::endl;
    std::cout << "TIMESTAMP_FAILURE_BAD_FORMAT=" << TIMESTAMP_FAILURE_BAD_FORMAT << std::endl;
    std::cout << "TIMESTAMP_FAILURE_BAD_REQUEST=" << TIMESTAMP_FAILURE_BAD_REQUEST << std::endl;
    std::cout << "TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED=" << TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED << std::endl;
    std::cout << "TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE=" << TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE << std::endl;
    std::cout << "TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED=" << TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED << std::endl;
    std::cout << "TIMESTAMP_FAILURE_SYSTEM_FAILURE=" << TIMESTAMP_FAILURE_SYSTEM_FAILURE << std::endl;
    std::cout << "TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE=" << TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE << std::endl;
    std::cout << "TIMESTAMP_INFO=" << TIMESTAMP_INFO << std::endl;
    std::cout << "TIMESTAMP_NO_AUTH_RETRIEVAL=" << TIMESTAMP_NO_AUTH_RETRIEVAL << std::endl;
    std::cout << "TIMESTAMP_REQUEST=" << TIMESTAMP_REQUEST << std::endl;
    std::cout << "TIMESTAMP_RESPONSE=" << TIMESTAMP_RESPONSE << std::endl;
    std::cout << "TIMESTAMP_STATUS_GRANTED=" << TIMESTAMP_STATUS_GRANTED << std::endl;
    std::cout << "TIMESTAMP_STATUS_GRANTED_WITH_MODS=" << TIMESTAMP_STATUS_GRANTED_WITH_MODS << std::endl;
    std::cout << "TIMESTAMP_STATUS_REJECTED=" << TIMESTAMP_STATUS_REJECTED << std::endl;
    std::cout << "TIMESTAMP_STATUS_REVOCATION_WARNING=" << TIMESTAMP_STATUS_REVOCATION_WARNING << std::endl;
    std::cout << "TIMESTAMP_STATUS_REVOKED=" << TIMESTAMP_STATUS_REVOKED << std::endl;
    std::cout << "TIMESTAMP_STATUS_WAITING=" << TIMESTAMP_STATUS_WAITING << std::endl;
    std::cout << "TIMESTAMP_VERIFY_CONTEXT_SIGNATURE=" << TIMESTAMP_VERIFY_CONTEXT_SIGNATURE << std::endl;
    std::cout << "TIMESTAMP_VERSION=" << TIMESTAMP_VERSION << std::endl;
    std::cout << "TIME_BYTES=" << TIME_BYTES << std::endl;
    std::cout << "TIME_CALLBACK_EVENT_PULSE=" << TIME_CALLBACK_EVENT_PULSE << std::endl;
    std::cout << "TIME_CALLBACK_EVENT_SET=" << TIME_CALLBACK_EVENT_SET << std::endl;
    std::cout << "TIME_CALLBACK_FUNCTION=" << TIME_CALLBACK_FUNCTION << std::endl;
    std::cout << "TIME_FORCE24HOURFORMAT=" << TIME_FORCE24HOURFORMAT << std::endl;
    std::cout << "TIME_KILL_SYNCHRONOUS=" << TIME_KILL_SYNCHRONOUS << std::endl;
    std::cout << "TIME_MIDI=" << TIME_MIDI << std::endl;
    std::cout << "TIME_MS=" << TIME_MS << std::endl;
    std::cout << "TIME_NOMINUTESORSECONDS=" << TIME_NOMINUTESORSECONDS << std::endl;
    std::cout << "TIME_NOSECONDS=" << TIME_NOSECONDS << std::endl;
    std::cout << "TIME_NOTIMEMARKER=" << TIME_NOTIMEMARKER << std::endl;
    std::cout << "TIME_ONESHOT=" << TIME_ONESHOT << std::endl;
    std::cout << "TIME_PERIODIC=" << TIME_PERIODIC << std::endl;
    std::cout << "TIME_SAMPLES=" << TIME_SAMPLES << std::endl;
    std::cout << "TIME_SMPTE=" << TIME_SMPTE << std::endl;
    std::cout << "TIME_TICKS=" << TIME_TICKS << std::endl;
    std::cout << "TIME_VALID_OID_FLUSH_CRL=" << TIME_VALID_OID_FLUSH_CRL << std::endl;
    std::cout << "TIME_VALID_OID_FLUSH_CRL_FROM_CERT=" << TIME_VALID_OID_FLUSH_CRL_FROM_CERT << std::endl;
    std::cout << "TIME_VALID_OID_FLUSH_CTL=" << TIME_VALID_OID_FLUSH_CTL << std::endl;
    std::cout << "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT=" << TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT << std::endl;
    std::cout << "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL=" << TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL << std::endl;
    std::cout << "TIME_VALID_OID_GET_CRL=" << TIME_VALID_OID_GET_CRL << std::endl;
    std::cout << "TIME_VALID_OID_GET_CRL_FROM_CERT=" << TIME_VALID_OID_GET_CRL_FROM_CERT << std::endl;
    std::cout << "TIME_VALID_OID_GET_CTL=" << TIME_VALID_OID_GET_CTL << std::endl;
    std::cout << "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT=" << TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT << std::endl;
    std::cout << "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL=" << TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL << std::endl;
    std::cout << "TIME_ZONE_ID_DAYLIGHT=" << TIME_ZONE_ID_DAYLIGHT << std::endl;
    std::cout << "TIME_ZONE_ID_STANDARD=" << TIME_ZONE_ID_STANDARD << std::endl;
    std::cout << "TIME_ZONE_ID_UNKNOWN=" << TIME_ZONE_ID_UNKNOWN << std::endl;
    std::cout << "TKF_AVAILABLE=" << TKF_AVAILABLE << std::endl;
    std::cout << "TKF_CONFIRMHOTKEY=" << TKF_CONFIRMHOTKEY << std::endl;
    std::cout << "TKF_HOTKEYACTIVE=" << TKF_HOTKEYACTIVE << std::endl;
    std::cout << "TKF_HOTKEYSOUND=" << TKF_HOTKEYSOUND << std::endl;
    std::cout << "TKF_INDICATOR=" << TKF_INDICATOR << std::endl;
    std::cout << "TKF_TOGGLEKEYSON=" << TKF_TOGGLEKEYSON << std::endl;
    std::cout << "TLS_MINIMUM_AVAILABLE=" << TLS_MINIMUM_AVAILABLE << std::endl;
    std::cout << "TME_CANCEL=" << TME_CANCEL << std::endl;
    std::cout << "TME_HOVER=" << TME_HOVER << std::endl;
    std::cout << "TME_LEAVE=" << TME_LEAVE << std::endl;
    std::cout << "TME_NONCLIENT=" << TME_NONCLIENT << std::endl;
    std::cout << "TME_QUERY=" << TME_QUERY << std::endl;
    std::cout << "TMPF_DEVICE=" << TMPF_DEVICE << std::endl;
    std::cout << "TMPF_FIXED_PITCH=" << TMPF_FIXED_PITCH << std::endl;
    std::cout << "TMPF_TRUETYPE=" << TMPF_TRUETYPE << std::endl;
    std::cout << "TMPF_VECTOR=" << TMPF_VECTOR << std::endl;
    std::cout << "TOKEN_ADJUST_DEFAULT=" << TOKEN_ADJUST_DEFAULT << std::endl;
    std::cout << "TOKEN_ADJUST_GROUPS=" << TOKEN_ADJUST_GROUPS << std::endl;
    std::cout << "TOKEN_ADJUST_PRIVILEGES=" << TOKEN_ADJUST_PRIVILEGES << std::endl;
    std::cout << "TOKEN_ADJUST_SESSIONID=" << TOKEN_ADJUST_SESSIONID << std::endl;
    std::cout << "TOKEN_ALL_ACCESS=" << TOKEN_ALL_ACCESS << std::endl;
    std::cout << "TOKEN_ALL_ACCESS_P=" << TOKEN_ALL_ACCESS_P << std::endl;
    std::cout << "TOKEN_ASSIGN_PRIMARY=" << TOKEN_ASSIGN_PRIMARY << std::endl;
    std::cout << "TOKEN_DUPLICATE=" << TOKEN_DUPLICATE << std::endl;
    std::cout << "TOKEN_EXECUTE=" << TOKEN_EXECUTE << std::endl;
    std::cout << "TOKEN_IMPERSONATE=" << TOKEN_IMPERSONATE << std::endl;
    std::cout << "TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN=" << TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN << std::endl;
    std::cout << "TOKEN_MANDATORY_POLICY_NO_WRITE_UP=" << TOKEN_MANDATORY_POLICY_NO_WRITE_UP << std::endl;
    std::cout << "TOKEN_MANDATORY_POLICY_OFF=" << TOKEN_MANDATORY_POLICY_OFF << std::endl;
    std::cout << "TOKEN_MANDATORY_POLICY_VALID_MASK=" << TOKEN_MANDATORY_POLICY_VALID_MASK << std::endl;
    std::cout << "TOKEN_QUERY=" << TOKEN_QUERY << std::endl;
    std::cout << "TOKEN_QUERY_SOURCE=" << TOKEN_QUERY_SOURCE << std::endl;
    std::cout << "TOKEN_READ=" << TOKEN_READ << std::endl;
    std::cout << "TOKEN_SOURCE_LENGTH=" << TOKEN_SOURCE_LENGTH << std::endl;
    std::cout << "TOKEN_WRITE=" << TOKEN_WRITE << std::endl;
    std::cout << "TOUCHEVENTF_DOWN=" << TOUCHEVENTF_DOWN << std::endl;
    std::cout << "TOUCHEVENTF_INRANGE=" << TOUCHEVENTF_INRANGE << std::endl;
    std::cout << "TOUCHEVENTF_MOVE=" << TOUCHEVENTF_MOVE << std::endl;
    std::cout << "TOUCHEVENTF_NOCOALESCE=" << TOUCHEVENTF_NOCOALESCE << std::endl;
    std::cout << "TOUCHEVENTF_PALM=" << TOUCHEVENTF_PALM << std::endl;
    std::cout << "TOUCHEVENTF_PEN=" << TOUCHEVENTF_PEN << std::endl;
    std::cout << "TOUCHEVENTF_PRIMARY=" << TOUCHEVENTF_PRIMARY << std::endl;
    std::cout << "TOUCHEVENTF_UP=" << TOUCHEVENTF_UP << std::endl;
    std::cout << "TOUCHINPUTMASKF_CONTACTAREA=" << TOUCHINPUTMASKF_CONTACTAREA << std::endl;
    std::cout << "TOUCHINPUTMASKF_EXTRAINFO=" << TOUCHINPUTMASKF_EXTRAINFO << std::endl;
    std::cout << "TOUCHINPUTMASKF_TIMEFROMSYSTEM=" << TOUCHINPUTMASKF_TIMEFROMSYSTEM << std::endl;
    std::cout << "TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY=" << TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY << std::endl;
    std::cout << "TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME=" << TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME << std::endl;
    std::cout << "TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP=" << TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP << std::endl;
    std::cout << "TOUCH_FEEDBACK_DEFAULT=" << TOUCH_FEEDBACK_DEFAULT << std::endl;
    std::cout << "TOUCH_FEEDBACK_INDIRECT=" << TOUCH_FEEDBACK_INDIRECT << std::endl;
    std::cout << "TOUCH_FEEDBACK_NONE=" << TOUCH_FEEDBACK_NONE << std::endl;
    std::cout << "TOUCH_FLAG_NONE=" << TOUCH_FLAG_NONE << std::endl;
    std::cout << "TOUCH_HIT_TESTING_CLIENT=" << TOUCH_HIT_TESTING_CLIENT << std::endl;
    std::cout << "TOUCH_HIT_TESTING_DEFAULT=" << TOUCH_HIT_TESTING_DEFAULT << std::endl;
    std::cout << "TOUCH_HIT_TESTING_NONE=" << TOUCH_HIT_TESTING_NONE << std::endl;
    std::cout << "TOUCH_HIT_TESTING_PROXIMITY_CLOSEST=" << TOUCH_HIT_TESTING_PROXIMITY_CLOSEST << std::endl;
    std::cout << "TOUCH_MASK_CONTACTAREA=" << TOUCH_MASK_CONTACTAREA << std::endl;
    std::cout << "TOUCH_MASK_NONE=" << TOUCH_MASK_NONE << std::endl;
    std::cout << "TOUCH_MASK_ORIENTATION=" << TOUCH_MASK_ORIENTATION << std::endl;
    std::cout << "TOUCH_MASK_PRESSURE=" << TOUCH_MASK_PRESSURE << std::endl;
    std::cout << "TRANSACTIONMANAGER_ALL_ACCESS=" << TRANSACTIONMANAGER_ALL_ACCESS << std::endl;
    std::cout << "TRANSACTIONMANAGER_BIND_TRANSACTION=" << TRANSACTIONMANAGER_BIND_TRANSACTION << std::endl;
    std::cout << "TRANSACTIONMANAGER_CREATE_RM=" << TRANSACTIONMANAGER_CREATE_RM << std::endl;
    std::cout << "TRANSACTIONMANAGER_GENERIC_EXECUTE=" << TRANSACTIONMANAGER_GENERIC_EXECUTE << std::endl;
    std::cout << "TRANSACTIONMANAGER_GENERIC_READ=" << TRANSACTIONMANAGER_GENERIC_READ << std::endl;
    std::cout << "TRANSACTIONMANAGER_GENERIC_WRITE=" << TRANSACTIONMANAGER_GENERIC_WRITE << std::endl;
    std::cout << "TRANSACTIONMANAGER_QUERY_INFORMATION=" << TRANSACTIONMANAGER_QUERY_INFORMATION << std::endl;
    std::cout << "TRANSACTIONMANAGER_RECOVER=" << TRANSACTIONMANAGER_RECOVER << std::endl;
    std::cout << "TRANSACTIONMANAGER_RENAME=" << TRANSACTIONMANAGER_RENAME << std::endl;
    std::cout << "TRANSACTIONMANAGER_SET_INFORMATION=" << TRANSACTIONMANAGER_SET_INFORMATION << std::endl;
    std::cout << "TRANSACTION_ALL_ACCESS=" << TRANSACTION_ALL_ACCESS << std::endl;
    std::cout << "TRANSACTION_COMMIT=" << TRANSACTION_COMMIT << std::endl;
    std::cout << "TRANSACTION_DO_NOT_PROMOTE=" << TRANSACTION_DO_NOT_PROMOTE << std::endl;
    std::cout << "TRANSACTION_ENLIST=" << TRANSACTION_ENLIST << std::endl;
    std::cout << "TRANSACTION_GENERIC_EXECUTE=" << TRANSACTION_GENERIC_EXECUTE << std::endl;
    std::cout << "TRANSACTION_GENERIC_READ=" << TRANSACTION_GENERIC_READ << std::endl;
    std::cout << "TRANSACTION_GENERIC_WRITE=" << TRANSACTION_GENERIC_WRITE << std::endl;
    std::cout << "TRANSACTION_MANAGER_COMMIT_DEFAULT=" << TRANSACTION_MANAGER_COMMIT_DEFAULT << std::endl;
    std::cout << "TRANSACTION_MANAGER_COMMIT_LOWEST=" << TRANSACTION_MANAGER_COMMIT_LOWEST << std::endl;
    std::cout << "TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES=" << TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES << std::endl;
    std::cout << "TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME=" << TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME << std::endl;
    std::cout << "TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS=" << TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS << std::endl;
    std::cout << "TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY=" << TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY << std::endl;
    std::cout << "TRANSACTION_MANAGER_VOLATILE=" << TRANSACTION_MANAGER_VOLATILE << std::endl;
    std::cout << "TRANSACTION_MAXIMUM_OPTION=" << TRANSACTION_MAXIMUM_OPTION << std::endl;
    std::cout << "TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED=" << TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED << std::endl;
    std::cout << "TRANSACTION_NOTIFY_COMMIT=" << TRANSACTION_NOTIFY_COMMIT << std::endl;
    std::cout << "TRANSACTION_NOTIFY_COMMIT_COMPLETE=" << TRANSACTION_NOTIFY_COMMIT_COMPLETE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_COMMIT_FINALIZE=" << TRANSACTION_NOTIFY_COMMIT_FINALIZE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_COMMIT_REQUEST=" << TRANSACTION_NOTIFY_COMMIT_REQUEST << std::endl;
    std::cout << "TRANSACTION_NOTIFY_DELEGATE_COMMIT=" << TRANSACTION_NOTIFY_DELEGATE_COMMIT << std::endl;
    std::cout << "TRANSACTION_NOTIFY_ENLIST_MASK=" << TRANSACTION_NOTIFY_ENLIST_MASK << std::endl;
    std::cout << "TRANSACTION_NOTIFY_ENLIST_PREPREPARE=" << TRANSACTION_NOTIFY_ENLIST_PREPREPARE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_INDOUBT=" << TRANSACTION_NOTIFY_INDOUBT << std::endl;
    std::cout << "TRANSACTION_NOTIFY_LAST_RECOVER=" << TRANSACTION_NOTIFY_LAST_RECOVER << std::endl;
    std::cout << "TRANSACTION_NOTIFY_MARSHAL=" << TRANSACTION_NOTIFY_MARSHAL << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PREPARE=" << TRANSACTION_NOTIFY_PREPARE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PREPARE_COMPLETE=" << TRANSACTION_NOTIFY_PREPARE_COMPLETE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PREPREPARE=" << TRANSACTION_NOTIFY_PREPREPARE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PREPREPARE_COMPLETE=" << TRANSACTION_NOTIFY_PREPREPARE_COMPLETE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PROMOTE=" << TRANSACTION_NOTIFY_PROMOTE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PROMOTE_NEW=" << TRANSACTION_NOTIFY_PROMOTE_NEW << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PROPAGATE_PULL=" << TRANSACTION_NOTIFY_PROPAGATE_PULL << std::endl;
    std::cout << "TRANSACTION_NOTIFY_PROPAGATE_PUSH=" << TRANSACTION_NOTIFY_PROPAGATE_PUSH << std::endl;
    std::cout << "TRANSACTION_NOTIFY_RECOVER=" << TRANSACTION_NOTIFY_RECOVER << std::endl;
    std::cout << "TRANSACTION_NOTIFY_RECOVER_QUERY=" << TRANSACTION_NOTIFY_RECOVER_QUERY << std::endl;
    std::cout << "TRANSACTION_NOTIFY_REQUEST_OUTCOME=" << TRANSACTION_NOTIFY_REQUEST_OUTCOME << std::endl;
    std::cout << "TRANSACTION_NOTIFY_RM_DISCONNECTED=" << TRANSACTION_NOTIFY_RM_DISCONNECTED << std::endl;
    std::cout << "TRANSACTION_NOTIFY_ROLLBACK=" << TRANSACTION_NOTIFY_ROLLBACK << std::endl;
    std::cout << "TRANSACTION_NOTIFY_ROLLBACK_COMPLETE=" << TRANSACTION_NOTIFY_ROLLBACK_COMPLETE << std::endl;
    std::cout << "TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT=" << TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT << std::endl;
    std::cout << "TRANSACTION_NOTIFY_TM_ONLINE=" << TRANSACTION_NOTIFY_TM_ONLINE << std::endl;
    std::cout << "TRANSACTION_PROPAGATE=" << TRANSACTION_PROPAGATE << std::endl;
    std::cout << "TRANSACTION_QUERY_INFORMATION=" << TRANSACTION_QUERY_INFORMATION << std::endl;
    std::cout << "TRANSACTION_RESOURCE_MANAGER_RIGHTS=" << TRANSACTION_RESOURCE_MANAGER_RIGHTS << std::endl;
    std::cout << "TRANSACTION_RIGHT_RESERVED1=" << TRANSACTION_RIGHT_RESERVED1 << std::endl;
    std::cout << "TRANSACTION_ROLLBACK=" << TRANSACTION_ROLLBACK << std::endl;
    std::cout << "TRANSACTION_SET_INFORMATION=" << TRANSACTION_SET_INFORMATION << std::endl;
    std::cout << "TRANSFORM_CTM=" << TRANSFORM_CTM << std::endl;
    std::cout << "TRANSPARENT=" << TRANSPARENT << std::endl;
    std::cout << "TRANSPORT_TYPE_CN=" << TRANSPORT_TYPE_CN << std::endl;
    std::cout << "TRANSPORT_TYPE_DG=" << TRANSPORT_TYPE_DG << std::endl;
    std::cout << "TRANSPORT_TYPE_LPC=" << TRANSPORT_TYPE_LPC << std::endl;
    std::cout << "TRANSPORT_TYPE_WMSG=" << TRANSPORT_TYPE_WMSG << std::endl;
    std::cout << "TRUE=" << TRUE << std::endl;
    std::cout << "TRUETYPE_FONTTYPE=" << TRUETYPE_FONTTYPE << std::endl;
    std::cout << "TRUNCATE_EXISTING=" << TRUNCATE_EXISTING << std::endl;
    std::cout << "TRY_AGAIN=" << TRY_AGAIN << std::endl;
    std::cout << "TTS_ALWAYSTIP=" << TTS_ALWAYSTIP << std::endl;
    std::cout << "TTS_BALLOON=" << TTS_BALLOON << std::endl;
    std::cout << "TTS_CLOSE=" << TTS_CLOSE << std::endl;
    std::cout << "TTS_NOANIMATE=" << TTS_NOANIMATE << std::endl;
    std::cout << "TTS_NOFADE=" << TTS_NOFADE << std::endl;
    std::cout << "TTS_NOPREFIX=" << TTS_NOPREFIX << std::endl;
    std::cout << "TTS_USEVISUALSTYLE=" << TTS_USEVISUALSTYLE << std::endl;
    std::cout << "TT_AVAILABLE=" << TT_AVAILABLE << std::endl;
    std::cout << "TT_ENABLED=" << TT_ENABLED << std::endl;
    std::cout << "TT_OPENTYPE_FONTTYPE=" << TT_OPENTYPE_FONTTYPE << std::endl;
    std::cout << "TT_POLYGON_TYPE=" << TT_POLYGON_TYPE << std::endl;
    std::cout << "TT_PRIM_CSPLINE=" << TT_PRIM_CSPLINE << std::endl;
    std::cout << "TT_PRIM_LINE=" << TT_PRIM_LINE << std::endl;
    std::cout << "TT_PRIM_QSPLINE=" << TT_PRIM_QSPLINE << std::endl;
    std::cout << "TURKISH_CHARSET=" << TURKISH_CHARSET << std::endl;
    std::cout << "TVS_CHECKBOXES=" << TVS_CHECKBOXES << std::endl;
    std::cout << "TVS_DISABLEDRAGDROP=" << TVS_DISABLEDRAGDROP << std::endl;
    std::cout << "TVS_EDITLABELS=" << TVS_EDITLABELS << std::endl;
    std::cout << "TVS_EX_AUTOHSCROLL=" << TVS_EX_AUTOHSCROLL << std::endl;
    std::cout << "TVS_EX_DIMMEDCHECKBOXES=" << TVS_EX_DIMMEDCHECKBOXES << std::endl;
    std::cout << "TVS_EX_DOUBLEBUFFER=" << TVS_EX_DOUBLEBUFFER << std::endl;
    std::cout << "TVS_EX_DRAWIMAGEASYNC=" << TVS_EX_DRAWIMAGEASYNC << std::endl;
    std::cout << "TVS_EX_EXCLUSIONCHECKBOXES=" << TVS_EX_EXCLUSIONCHECKBOXES << std::endl;
    std::cout << "TVS_EX_FADEINOUTEXPANDOS=" << TVS_EX_FADEINOUTEXPANDOS << std::endl;
    std::cout << "TVS_EX_MULTISELECT=" << TVS_EX_MULTISELECT << std::endl;
    std::cout << "TVS_EX_NOINDENTSTATE=" << TVS_EX_NOINDENTSTATE << std::endl;
    std::cout << "TVS_EX_NOSINGLECOLLAPSE=" << TVS_EX_NOSINGLECOLLAPSE << std::endl;
    std::cout << "TVS_EX_PARTIALCHECKBOXES=" << TVS_EX_PARTIALCHECKBOXES << std::endl;
    std::cout << "TVS_EX_RICHTOOLTIP=" << TVS_EX_RICHTOOLTIP << std::endl;
    std::cout << "TVS_FULLROWSELECT=" << TVS_FULLROWSELECT << std::endl;
    std::cout << "TVS_HASBUTTONS=" << TVS_HASBUTTONS << std::endl;
    std::cout << "TVS_HASLINES=" << TVS_HASLINES << std::endl;
    std::cout << "TVS_INFOTIP=" << TVS_INFOTIP << std::endl;
    std::cout << "TVS_LINESATROOT=" << TVS_LINESATROOT << std::endl;
    std::cout << "TVS_NOHSCROLL=" << TVS_NOHSCROLL << std::endl;
    std::cout << "TVS_NONEVENHEIGHT=" << TVS_NONEVENHEIGHT << std::endl;
    std::cout << "TVS_NOSCROLL=" << TVS_NOSCROLL << std::endl;
    std::cout << "TVS_NOTOOLTIPS=" << TVS_NOTOOLTIPS << std::endl;
    std::cout << "TVS_RTLREADING=" << TVS_RTLREADING << std::endl;
    std::cout << "TVS_SHOWSELALWAYS=" << TVS_SHOWSELALWAYS << std::endl;
    std::cout << "TVS_SINGLEEXPAND=" << TVS_SINGLEEXPAND << std::endl;
    std::cout << "TVS_TRACKSELECT=" << TVS_TRACKSELECT << std::endl;
    std::cout << "TWF_FINETOUCH=" << TWF_FINETOUCH << std::endl;
    std::cout << "TWF_WANTPALM=" << TWF_WANTPALM << std::endl;
    std::cout << "TWOSTOPBITS=" << TWOSTOPBITS << std::endl;
    std::cout << "TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED=" << TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED << std::endl;
    std::cout << "TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED=" << TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED << std::endl;
    std::cout << "TXFS_LOGGING_MODE_FULL=" << TXFS_LOGGING_MODE_FULL << std::endl;
    std::cout << "TXFS_LOGGING_MODE_SIMPLE=" << TXFS_LOGGING_MODE_SIMPLE << std::endl;
    std::cout << "TXFS_MODIFY_RM_VALID_FLAGS=" << TXFS_MODIFY_RM_VALID_FLAGS << std::endl;
    std::cout << "TXFS_QUERY_RM_INFORMATION_VALID_FLAGS=" << TXFS_QUERY_RM_INFORMATION_VALID_FLAGS << std::endl;
    std::cout << "TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START=" << TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START << std::endl;
    std::cout << "TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE=" << TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE << std::endl;
    std::cout << "TXFS_RM_FLAG_GROW_LOG=" << TXFS_RM_FLAG_GROW_LOG << std::endl;
    std::cout << "TXFS_RM_FLAG_LOGGING_MODE=" << TXFS_RM_FLAG_LOGGING_MODE << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE=" << TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX=" << TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN=" << TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS=" << TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT=" << TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX=" << TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX << std::endl;
    std::cout << "TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN=" << TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN << std::endl;
    std::cout << "TXFS_RM_FLAG_PREFER_AVAILABILITY=" << TXFS_RM_FLAG_PREFER_AVAILABILITY << std::endl;
    std::cout << "TXFS_RM_FLAG_PREFER_CONSISTENCY=" << TXFS_RM_FLAG_PREFER_CONSISTENCY << std::endl;
    std::cout << "TXFS_RM_FLAG_PRESERVE_CHANGES=" << TXFS_RM_FLAG_PRESERVE_CHANGES << std::endl;
    std::cout << "TXFS_RM_FLAG_RENAME_RM=" << TXFS_RM_FLAG_RENAME_RM << std::endl;
    std::cout << "TXFS_RM_FLAG_RESET_RM_AT_NEXT_START=" << TXFS_RM_FLAG_RESET_RM_AT_NEXT_START << std::endl;
    std::cout << "TXFS_RM_FLAG_SHRINK_LOG=" << TXFS_RM_FLAG_SHRINK_LOG << std::endl;
    std::cout << "TXFS_RM_STATE_ACTIVE=" << TXFS_RM_STATE_ACTIVE << std::endl;
    std::cout << "TXFS_RM_STATE_NOT_STARTED=" << TXFS_RM_STATE_NOT_STARTED << std::endl;
    std::cout << "TXFS_RM_STATE_SHUTTING_DOWN=" << TXFS_RM_STATE_SHUTTING_DOWN << std::endl;
    std::cout << "TXFS_RM_STATE_STARTING=" << TXFS_RM_STATE_STARTING << std::endl;
    std::cout << "TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN=" << TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN << std::endl;
    std::cout << "TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK=" << TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK << std::endl;
    std::cout << "TXFS_ROLLFORWARD_REDO_VALID_FLAGS=" << TXFS_ROLLFORWARD_REDO_VALID_FLAGS << std::endl;
    std::cout << "TXFS_SAVEPOINT_CLEAR=" << TXFS_SAVEPOINT_CLEAR << std::endl;
    std::cout << "TXFS_SAVEPOINT_CLEAR_ALL=" << TXFS_SAVEPOINT_CLEAR_ALL << std::endl;
    std::cout << "TXFS_SAVEPOINT_ROLLBACK=" << TXFS_SAVEPOINT_ROLLBACK << std::endl;
    std::cout << "TXFS_SAVEPOINT_SET=" << TXFS_SAVEPOINT_SET << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOGGING_MODE=" << TXFS_START_RM_FLAG_LOGGING_MODE << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE=" << TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX=" << TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN=" << TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE=" << TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS=" << TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT=" << TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX=" << TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX << std::endl;
    std::cout << "TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN=" << TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN << std::endl;
    std::cout << "TXFS_START_RM_FLAG_PREFER_AVAILABILITY=" << TXFS_START_RM_FLAG_PREFER_AVAILABILITY << std::endl;
    std::cout << "TXFS_START_RM_FLAG_PREFER_CONSISTENCY=" << TXFS_START_RM_FLAG_PREFER_CONSISTENCY << std::endl;
    std::cout << "TXFS_START_RM_FLAG_PRESERVE_CHANGES=" << TXFS_START_RM_FLAG_PRESERVE_CHANGES << std::endl;
    std::cout << "TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT=" << TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT << std::endl;
    std::cout << "TXFS_START_RM_VALID_FLAGS=" << TXFS_START_RM_VALID_FLAGS << std::endl;
    std::cout << "TXFS_TRANSACTED_VERSION_NONTRANSACTED=" << TXFS_TRANSACTED_VERSION_NONTRANSACTED << std::endl;
    std::cout << "TXFS_TRANSACTED_VERSION_UNCOMMITTED=" << TXFS_TRANSACTED_VERSION_UNCOMMITTED << std::endl;
    std::cout << "TXFS_TRANSACTION_STATE_ACTIVE=" << TXFS_TRANSACTION_STATE_ACTIVE << std::endl;
    std::cout << "TXFS_TRANSACTION_STATE_NONE=" << TXFS_TRANSACTION_STATE_NONE << std::endl;
    std::cout << "TXFS_TRANSACTION_STATE_NOTACTIVE=" << TXFS_TRANSACTION_STATE_NOTACTIVE << std::endl;
    std::cout << "TXFS_TRANSACTION_STATE_PREPARED=" << TXFS_TRANSACTION_STATE_PREPARED << std::endl;
    std::cout << "TYPE1_FONTTYPE=" << TYPE1_FONTTYPE << std::endl;
    std::cout << "TZNAME_MAX=" << TZNAME_MAX << std::endl;
    std::cout << "UAS_EXACTLEGACY=" << UAS_EXACTLEGACY << std::endl;
    std::cout << "UCLEANUI=" << UCLEANUI << std::endl;
    std::cout << "UDIRTYUI=" << UDIRTYUI << std::endl;
    std::cout << "UDS_ALIGNLEFT=" << UDS_ALIGNLEFT << std::endl;
    std::cout << "UDS_ALIGNRIGHT=" << UDS_ALIGNRIGHT << std::endl;
    std::cout << "UDS_ARROWKEYS=" << UDS_ARROWKEYS << std::endl;
    std::cout << "UDS_AUTOBUDDY=" << UDS_AUTOBUDDY << std::endl;
    std::cout << "UDS_HORZ=" << UDS_HORZ << std::endl;
    std::cout << "UDS_HOTTRACK=" << UDS_HOTTRACK << std::endl;
    std::cout << "UDS_NOTHOUSANDS=" << UDS_NOTHOUSANDS << std::endl;
    std::cout << "UDS_SETBUDDYINT=" << UDS_SETBUDDYINT << std::endl;
    std::cout << "UDS_WRAP=" << UDS_WRAP << std::endl;
    std::cout << "UISF_ACTIVE=" << UISF_ACTIVE << std::endl;
    std::cout << "UISF_HIDEACCEL=" << UISF_HIDEACCEL << std::endl;
    std::cout << "UISF_HIDEFOCUS=" << UISF_HIDEFOCUS << std::endl;
    std::cout << "UIS_CLEAR=" << UIS_CLEAR << std::endl;
    std::cout << "UIS_INITIALIZE=" << UIS_INITIALIZE << std::endl;
    std::cout << "UIS_SET=" << UIS_SET << std::endl;
    std::cout << "UI_CAP_2700=" << UI_CAP_2700 << std::endl;
    std::cout << "UI_CAP_ROT90=" << UI_CAP_ROT90 << std::endl;
    std::cout << "UI_CAP_ROTANY=" << UI_CAP_ROTANY << std::endl;
    std::cout << "ULW_ALPHA=" << ULW_ALPHA << std::endl;
    std::cout << "ULW_COLORKEY=" << ULW_COLORKEY << std::endl;
    std::cout << "ULW_EX_NORESIZE=" << ULW_EX_NORESIZE << std::endl;
    std::cout << "ULW_OPAQUE=" << ULW_OPAQUE << std::endl;
    std::cout << "UNDEFINE_ALTERNATE=" << UNDEFINE_ALTERNATE << std::endl;
    std::cout << "UNDEFINE_PRIMARY=" << UNDEFINE_PRIMARY << std::endl;
    std::cout << "UNICODE_NOCHAR=" << UNICODE_NOCHAR << std::endl;
    std::cout << "UNICODE_STRING_MAX_CHARS=" << UNICODE_STRING_MAX_CHARS << std::endl;
    std::cout << "UNIQUE_NAME=" << UNIQUE_NAME << std::endl;
    std::cout << "UNIVERSAL_NAME_INFO_LEVEL=" << UNIVERSAL_NAME_INFO_LEVEL << std::endl;
    std::cout << "UNLOAD_DLL_DEBUG_EVENT=" << UNLOAD_DLL_DEBUG_EVENT << std::endl;
    std::cout << "UNLOCK_ELEMENT=" << UNLOCK_ELEMENT << std::endl;
    std::cout << "UNRECOVERED_READS_VALID=" << UNRECOVERED_READS_VALID << std::endl;
    std::cout << "UNRECOVERED_WRITES_VALID=" << UNRECOVERED_WRITES_VALID << std::endl;
    std::cout << "UNWIND_HISTORY_TABLE_GLOBAL=" << UNWIND_HISTORY_TABLE_GLOBAL << std::endl;
    std::cout << "UNWIND_HISTORY_TABLE_LOCAL=" << UNWIND_HISTORY_TABLE_LOCAL << std::endl;
    std::cout << "UNWIND_HISTORY_TABLE_NONE=" << UNWIND_HISTORY_TABLE_NONE << std::endl;
    std::cout << "UNWIND_HISTORY_TABLE_SIZE=" << UNWIND_HISTORY_TABLE_SIZE << std::endl;
    std::cout << "UNW_FLAG_CHAININFO=" << UNW_FLAG_CHAININFO << std::endl;
    std::cout << "UNW_FLAG_EHANDLER=" << UNW_FLAG_EHANDLER << std::endl;
    std::cout << "UNW_FLAG_NHANDLER=" << UNW_FLAG_NHANDLER << std::endl;
    std::cout << "UNW_FLAG_UHANDLER=" << UNW_FLAG_UHANDLER << std::endl;
    std::cout << "UOI_FLAGS=" << UOI_FLAGS << std::endl;
    std::cout << "UOI_HEAPSIZE=" << UOI_HEAPSIZE << std::endl;
    std::cout << "UOI_IO=" << UOI_IO << std::endl;
    std::cout << "UOI_NAME=" << UOI_NAME << std::endl;
    std::cout << "UOI_TIMERPROC_EXCEPTION_SUPPRESSION=" << UOI_TIMERPROC_EXCEPTION_SUPPRESSION << std::endl;
    std::cout << "UOI_TYPE=" << UOI_TYPE << std::endl;
    std::cout << "UOI_USER_SID=" << UOI_USER_SID << std::endl;
    std::cout << "UPDFCACHE_IFBLANK=" << UPDFCACHE_IFBLANK << std::endl;
    std::cout << "UPDFCACHE_IFBLANKORONSAVECACHE=" << UPDFCACHE_IFBLANKORONSAVECACHE << std::endl;
    std::cout << "UPDFCACHE_NODATACACHE=" << UPDFCACHE_NODATACACHE << std::endl;
    std::cout << "UPDFCACHE_NORMALCACHE=" << UPDFCACHE_NORMALCACHE << std::endl;
    std::cout << "UPDFCACHE_ONLYIFBLANK=" << UPDFCACHE_ONLYIFBLANK << std::endl;
    std::cout << "UPDFCACHE_ONSAVECACHE=" << UPDFCACHE_ONSAVECACHE << std::endl;
    std::cout << "UPDFCACHE_ONSTOPCACHE=" << UPDFCACHE_ONSTOPCACHE << std::endl;
    std::cout << "URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY=" << URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY << std::endl;
    std::cout << "URLACTION_ACTIVEX_CURR_MAX=" << URLACTION_ACTIVEX_CURR_MAX << std::endl;
    std::cout << "URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION=" << URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION << std::endl;
    std::cout << "URLACTION_ACTIVEX_MIN=" << URLACTION_ACTIVEX_MIN << std::endl;
    std::cout << "URLACTION_ACTIVEX_NO_WEBOC_SCRIPT=" << URLACTION_ACTIVEX_NO_WEBOC_SCRIPT << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY=" << URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST=" << URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY=" << URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_OPTIN=" << URLACTION_ACTIVEX_OVERRIDE_OPTIN << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION=" << URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION << std::endl;
    std::cout << "URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY=" << URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY << std::endl;
    std::cout << "URLACTION_ACTIVEX_RUN=" << URLACTION_ACTIVEX_RUN << std::endl;
    std::cout << "URLACTION_ACTIVEX_SCRIPTLET_RUN=" << URLACTION_ACTIVEX_SCRIPTLET_RUN << std::endl;
    std::cout << "URLACTION_ACTIVEX_TREATASUNTRUSTED=" << URLACTION_ACTIVEX_TREATASUNTRUSTED << std::endl;
    std::cout << "URLACTION_ALLOW_ACTIVEX_FILTERING=" << URLACTION_ALLOW_ACTIVEX_FILTERING << std::endl;
    std::cout << "URLACTION_ALLOW_APEVALUATION=" << URLACTION_ALLOW_APEVALUATION << std::endl;
    std::cout << "URLACTION_ALLOW_AUDIO_VIDEO=" << URLACTION_ALLOW_AUDIO_VIDEO << std::endl;
    std::cout << "URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS=" << URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS << std::endl;
    std::cout << "URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST=" << URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST << std::endl;
    std::cout << "URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS=" << URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS << std::endl;
    std::cout << "URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW=" << URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW << std::endl;
    std::cout << "URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS=" << URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS << std::endl;
    std::cout << "URLACTION_ALLOW_RESTRICTEDPROTOCOLS=" << URLACTION_ALLOW_RESTRICTEDPROTOCOLS << std::endl;
    std::cout << "URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING=" << URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING << std::endl;
    std::cout << "URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE=" << URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE << std::endl;
    std::cout << "URLACTION_ALLOW_XHR_EVALUATION=" << URLACTION_ALLOW_XHR_EVALUATION << std::endl;
    std::cout << "URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION=" << URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION << std::endl;
    std::cout << "URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT=" << URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT << std::endl;
    std::cout << "URLACTION_AUTHENTICATE_CLIENT=" << URLACTION_AUTHENTICATE_CLIENT << std::endl;
    std::cout << "URLACTION_AUTOMATIC_ACTIVEX_UI=" << URLACTION_AUTOMATIC_ACTIVEX_UI << std::endl;
    std::cout << "URLACTION_AUTOMATIC_DOWNLOAD_UI=" << URLACTION_AUTOMATIC_DOWNLOAD_UI << std::endl;
    std::cout << "URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN=" << URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN << std::endl;
    std::cout << "URLACTION_BEHAVIOR_MIN=" << URLACTION_BEHAVIOR_MIN << std::endl;
    std::cout << "URLACTION_BEHAVIOR_RUN=" << URLACTION_BEHAVIOR_RUN << std::endl;
    std::cout << "URLACTION_CHANNEL_SOFTDIST_MIN=" << URLACTION_CHANNEL_SOFTDIST_MIN << std::endl;
    std::cout << "URLACTION_CHANNEL_SOFTDIST_PERMISSIONS=" << URLACTION_CHANNEL_SOFTDIST_PERMISSIONS << std::endl;
    std::cout << "URLACTION_CLIENT_CERT_PROMPT=" << URLACTION_CLIENT_CERT_PROMPT << std::endl;
    std::cout << "URLACTION_COOKIES=" << URLACTION_COOKIES << std::endl;
    std::cout << "URLACTION_COOKIES_ENABLED=" << URLACTION_COOKIES_ENABLED << std::endl;
    std::cout << "URLACTION_COOKIES_SESSION=" << URLACTION_COOKIES_SESSION << std::endl;
    std::cout << "URLACTION_COOKIES_SESSION_THIRD_PARTY=" << URLACTION_COOKIES_SESSION_THIRD_PARTY << std::endl;
    std::cout << "URLACTION_COOKIES_THIRD_PARTY=" << URLACTION_COOKIES_THIRD_PARTY << std::endl;
    std::cout << "URLACTION_CREDENTIALS_USE=" << URLACTION_CREDENTIALS_USE << std::endl;
    std::cout << "URLACTION_CROSS_DOMAIN_DATA=" << URLACTION_CROSS_DOMAIN_DATA << std::endl;
    std::cout << "URLACTION_DOTNET_USERCONTROLS=" << URLACTION_DOTNET_USERCONTROLS << std::endl;
    std::cout << "URLACTION_DOWNLOAD_CURR_MAX=" << URLACTION_DOWNLOAD_CURR_MAX << std::endl;
    std::cout << "URLACTION_DOWNLOAD_MAX=" << URLACTION_DOWNLOAD_MAX << std::endl;
    std::cout << "URLACTION_DOWNLOAD_MIN=" << URLACTION_DOWNLOAD_MIN << std::endl;
    std::cout << "URLACTION_DOWNLOAD_SIGNED_ACTIVEX=" << URLACTION_DOWNLOAD_SIGNED_ACTIVEX << std::endl;
    std::cout << "URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX=" << URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX << std::endl;
    std::cout << "URLACTION_FEATURE_BLOCK_INPUT_PROMPTS=" << URLACTION_FEATURE_BLOCK_INPUT_PROMPTS << std::endl;
    std::cout << "URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE=" << URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE << std::endl;
    std::cout << "URLACTION_FEATURE_DATA_BINDING=" << URLACTION_FEATURE_DATA_BINDING << std::endl;
    std::cout << "URLACTION_FEATURE_FORCE_ADDR_AND_STATUS=" << URLACTION_FEATURE_FORCE_ADDR_AND_STATUS << std::endl;
    std::cout << "URLACTION_FEATURE_MIME_SNIFFING=" << URLACTION_FEATURE_MIME_SNIFFING << std::endl;
    std::cout << "URLACTION_FEATURE_MIN=" << URLACTION_FEATURE_MIN << std::endl;
    std::cout << "URLACTION_FEATURE_SCRIPT_STATUS_BAR=" << URLACTION_FEATURE_SCRIPT_STATUS_BAR << std::endl;
    std::cout << "URLACTION_FEATURE_WINDOW_RESTRICTIONS=" << URLACTION_FEATURE_WINDOW_RESTRICTIONS << std::endl;
    std::cout << "URLACTION_FEATURE_ZONE_ELEVATION=" << URLACTION_FEATURE_ZONE_ELEVATION << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS=" << URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK=" << URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER=" << URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_INDEXEDDB=" << URLACTION_HTML_ALLOW_INDEXEDDB << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML=" << URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML << std::endl;
    std::cout << "URLACTION_HTML_ALLOW_WINDOW_CLOSE=" << URLACTION_HTML_ALLOW_WINDOW_CLOSE << std::endl;
    std::cout << "URLACTION_HTML_FONT_DOWNLOAD=" << URLACTION_HTML_FONT_DOWNLOAD << std::endl;
    std::cout << "URLACTION_HTML_INCLUDE_FILE_PATH=" << URLACTION_HTML_INCLUDE_FILE_PATH << std::endl;
    std::cout << "URLACTION_HTML_JAVA_RUN=" << URLACTION_HTML_JAVA_RUN << std::endl;
    std::cout << "URLACTION_HTML_META_REFRESH=" << URLACTION_HTML_META_REFRESH << std::endl;
    std::cout << "URLACTION_HTML_MIN=" << URLACTION_HTML_MIN << std::endl;
    std::cout << "URLACTION_HTML_MIXED_CONTENT=" << URLACTION_HTML_MIXED_CONTENT << std::endl;
    std::cout << "URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE=" << URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE << std::endl;
    std::cout << "URLACTION_HTML_SUBFRAME_NAVIGATE=" << URLACTION_HTML_SUBFRAME_NAVIGATE << std::endl;
    std::cout << "URLACTION_HTML_SUBMIT_FORMS=" << URLACTION_HTML_SUBMIT_FORMS << std::endl;
    std::cout << "URLACTION_HTML_SUBMIT_FORMS_FROM=" << URLACTION_HTML_SUBMIT_FORMS_FROM << std::endl;
    std::cout << "URLACTION_HTML_SUBMIT_FORMS_TO=" << URLACTION_HTML_SUBMIT_FORMS_TO << std::endl;
    std::cout << "URLACTION_HTML_USERDATA_SAVE=" << URLACTION_HTML_USERDATA_SAVE << std::endl;
    std::cout << "URLACTION_INFODELIVERY_CURR_MAX=" << URLACTION_INFODELIVERY_CURR_MAX << std::endl;
    std::cout << "URLACTION_INFODELIVERY_MIN=" << URLACTION_INFODELIVERY_MIN << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_ADDING_CHANNELS=" << URLACTION_INFODELIVERY_NO_ADDING_CHANNELS << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS=" << URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING=" << URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_EDITING_CHANNELS=" << URLACTION_INFODELIVERY_NO_EDITING_CHANNELS << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS=" << URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS=" << URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS << std::endl;
    std::cout << "URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS=" << URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS << std::endl;
    std::cout << "URLACTION_INPRIVATE_BLOCKING=" << URLACTION_INPRIVATE_BLOCKING << std::endl;
    std::cout << "URLACTION_JAVA_CURR_MAX=" << URLACTION_JAVA_CURR_MAX << std::endl;
    std::cout << "URLACTION_JAVA_MIN=" << URLACTION_JAVA_MIN << std::endl;
    std::cout << "URLACTION_JAVA_PERMISSIONS=" << URLACTION_JAVA_PERMISSIONS << std::endl;
    std::cout << "URLACTION_LOOSE_XAML=" << URLACTION_LOOSE_XAML << std::endl;
    std::cout << "URLACTION_LOWRIGHTS=" << URLACTION_LOWRIGHTS << std::endl;
    std::cout << "URLACTION_MIN=" << URLACTION_MIN << std::endl;
    std::cout << "URLACTION_NETWORK_CURR_MAX=" << URLACTION_NETWORK_CURR_MAX << std::endl;
    std::cout << "URLACTION_NETWORK_MIN=" << URLACTION_NETWORK_MIN << std::endl;
    std::cout << "URLACTION_PLUGGABLE_PROTOCOL_XHR=" << URLACTION_PLUGGABLE_PROTOCOL_XHR << std::endl;
    std::cout << "URLACTION_SCRIPT_CURR_MAX=" << URLACTION_SCRIPT_CURR_MAX << std::endl;
    std::cout << "URLACTION_SCRIPT_JAVA_USE=" << URLACTION_SCRIPT_JAVA_USE << std::endl;
    std::cout << "URLACTION_SCRIPT_MIN=" << URLACTION_SCRIPT_MIN << std::endl;
    std::cout << "URLACTION_SCRIPT_NAVIGATE=" << URLACTION_SCRIPT_NAVIGATE << std::endl;
    std::cout << "URLACTION_SCRIPT_OVERRIDE_SAFETY=" << URLACTION_SCRIPT_OVERRIDE_SAFETY << std::endl;
    std::cout << "URLACTION_SCRIPT_PASTE=" << URLACTION_SCRIPT_PASTE << std::endl;
    std::cout << "URLACTION_SCRIPT_RUN=" << URLACTION_SCRIPT_RUN << std::endl;
    std::cout << "URLACTION_SCRIPT_SAFE_ACTIVEX=" << URLACTION_SCRIPT_SAFE_ACTIVEX << std::endl;
    std::cout << "URLACTION_SCRIPT_XSSFILTER=" << URLACTION_SCRIPT_XSSFILTER << std::endl;
    std::cout << "URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE=" << URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE << std::endl;
    std::cout << "URLACTION_SHELL_CURR_MAX=" << URLACTION_SHELL_CURR_MAX << std::endl;
    std::cout << "URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY=" << URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY << std::endl;
    std::cout << "URLACTION_SHELL_EXECUTE_HIGHRISK=" << URLACTION_SHELL_EXECUTE_HIGHRISK << std::endl;
    std::cout << "URLACTION_SHELL_EXECUTE_LOWRISK=" << URLACTION_SHELL_EXECUTE_LOWRISK << std::endl;
    std::cout << "URLACTION_SHELL_EXECUTE_MODRISK=" << URLACTION_SHELL_EXECUTE_MODRISK << std::endl;
    std::cout << "URLACTION_SHELL_EXTENSIONSECURITY=" << URLACTION_SHELL_EXTENSIONSECURITY << std::endl;
    std::cout << "URLACTION_SHELL_FILE_DOWNLOAD=" << URLACTION_SHELL_FILE_DOWNLOAD << std::endl;
    std::cout << "URLACTION_SHELL_INSTALL_DTITEMS=" << URLACTION_SHELL_INSTALL_DTITEMS << std::endl;
    std::cout << "URLACTION_SHELL_MIN=" << URLACTION_SHELL_MIN << std::endl;
    std::cout << "URLACTION_SHELL_MOVE_OR_COPY=" << URLACTION_SHELL_MOVE_OR_COPY << std::endl;
    std::cout << "URLACTION_SHELL_POPUPMGR=" << URLACTION_SHELL_POPUPMGR << std::endl;
    std::cout << "URLACTION_SHELL_PREVIEW=" << URLACTION_SHELL_PREVIEW << std::endl;
    std::cout << "URLACTION_SHELL_REMOTEQUERY=" << URLACTION_SHELL_REMOTEQUERY << std::endl;
    std::cout << "URLACTION_SHELL_RTF_OBJECTS_LOAD=" << URLACTION_SHELL_RTF_OBJECTS_LOAD << std::endl;
    std::cout << "URLACTION_SHELL_SECURE_DRAGSOURCE=" << URLACTION_SHELL_SECURE_DRAGSOURCE << std::endl;
    std::cout << "URLACTION_SHELL_SHARE=" << URLACTION_SHELL_SHARE << std::endl;
    std::cout << "URLACTION_SHELL_SHELLEXECUTE=" << URLACTION_SHELL_SHELLEXECUTE << std::endl;
    std::cout << "URLACTION_SHELL_VERB=" << URLACTION_SHELL_VERB << std::endl;
    std::cout << "URLACTION_SHELL_WEBVIEW_VERB=" << URLACTION_SHELL_WEBVIEW_VERB << std::endl;
    std::cout << "URLACTION_WINDOWS_BROWSER_APPLICATIONS=" << URLACTION_WINDOWS_BROWSER_APPLICATIONS << std::endl;
    std::cout << "URLACTION_WINFX_SETUP=" << URLACTION_WINFX_SETUP << std::endl;
    std::cout << "URLACTION_XPS_DOCUMENTS=" << URLACTION_XPS_DOCUMENTS << std::endl;
    std::cout << "URLMON_OPTION_URL_ENCODING=" << URLMON_OPTION_URL_ENCODING << std::endl;
    std::cout << "URLMON_OPTION_USERAGENT=" << URLMON_OPTION_USERAGENT << std::endl;
    std::cout << "URLMON_OPTION_USERAGENT_REFRESH=" << URLMON_OPTION_USERAGENT_REFRESH << std::endl;
    std::cout << "URLMON_OPTION_USE_BINDSTRINGCREDS=" << URLMON_OPTION_USE_BINDSTRINGCREDS << std::endl;
    std::cout << "URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS=" << URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS << std::endl;
    std::cout << "URLOSTRM_GETNEWESTVERSION=" << URLOSTRM_GETNEWESTVERSION << std::endl;
    std::cout << "URLOSTRM_USECACHEDCOPY=" << URLOSTRM_USECACHEDCOPY << std::endl;
    std::cout << "URLOSTRM_USECACHEDCOPY_ONLY=" << URLOSTRM_USECACHEDCOPY_ONLY << std::endl;
    std::cout << "URLPOLICY_ACTIVEX_CHECK_LIST=" << URLPOLICY_ACTIVEX_CHECK_LIST << std::endl;
    std::cout << "URLPOLICY_ALLOW=" << URLPOLICY_ALLOW << std::endl;
    std::cout << "URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE=" << URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE << std::endl;
    std::cout << "URLPOLICY_AUTHENTICATE_CLEARTEXT_OK=" << URLPOLICY_AUTHENTICATE_CLEARTEXT_OK << std::endl;
    std::cout << "URLPOLICY_AUTHENTICATE_MUTUAL_ONLY=" << URLPOLICY_AUTHENTICATE_MUTUAL_ONLY << std::endl;
    std::cout << "URLPOLICY_BEHAVIOR_CHECK_LIST=" << URLPOLICY_BEHAVIOR_CHECK_LIST << std::endl;
    std::cout << "URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL=" << URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL << std::endl;
    std::cout << "URLPOLICY_CHANNEL_SOFTDIST_PRECACHE=" << URLPOLICY_CHANNEL_SOFTDIST_PRECACHE << std::endl;
    std::cout << "URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT=" << URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT << std::endl;
    std::cout << "URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY=" << URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY << std::endl;
    std::cout << "URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT=" << URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT << std::endl;
    std::cout << "URLPOLICY_CREDENTIALS_MUST_PROMPT_USER=" << URLPOLICY_CREDENTIALS_MUST_PROMPT_USER << std::endl;
    std::cout << "URLPOLICY_CREDENTIALS_SILENT_LOGON_OK=" << URLPOLICY_CREDENTIALS_SILENT_LOGON_OK << std::endl;
    std::cout << "URLPOLICY_DISALLOW=" << URLPOLICY_DISALLOW << std::endl;
    std::cout << "URLPOLICY_DONTCHECKDLGBOX=" << URLPOLICY_DONTCHECKDLGBOX << std::endl;
    std::cout << "URLPOLICY_JAVA_CUSTOM=" << URLPOLICY_JAVA_CUSTOM << std::endl;
    std::cout << "URLPOLICY_JAVA_HIGH=" << URLPOLICY_JAVA_HIGH << std::endl;
    std::cout << "URLPOLICY_JAVA_LOW=" << URLPOLICY_JAVA_LOW << std::endl;
    std::cout << "URLPOLICY_JAVA_MEDIUM=" << URLPOLICY_JAVA_MEDIUM << std::endl;
    std::cout << "URLPOLICY_JAVA_PROHIBIT=" << URLPOLICY_JAVA_PROHIBIT << std::endl;
    std::cout << "URLPOLICY_LOG_ON_ALLOW=" << URLPOLICY_LOG_ON_ALLOW << std::endl;
    std::cout << "URLPOLICY_LOG_ON_DISALLOW=" << URLPOLICY_LOG_ON_DISALLOW << std::endl;
    std::cout << "URLPOLICY_NOTIFY_ON_ALLOW=" << URLPOLICY_NOTIFY_ON_ALLOW << std::endl;
    std::cout << "URLPOLICY_NOTIFY_ON_DISALLOW=" << URLPOLICY_NOTIFY_ON_DISALLOW << std::endl;
    std::cout << "URLPOLICY_QUERY=" << URLPOLICY_QUERY << std::endl;
    std::cout << "URLZONE_ESC_FLAG=" << URLZONE_ESC_FLAG << std::endl;
    std::cout << "URL_MK_LEGACY=" << URL_MK_LEGACY << std::endl;
    std::cout << "URL_MK_NO_CANONICALIZE=" << URL_MK_NO_CANONICALIZE << std::endl;
    std::cout << "URL_MK_UNIFORM=" << URL_MK_UNIFORM << std::endl;
    std::cout << "URL_OID_CERTIFICATE_CRL_DIST_POINT=" << URL_OID_CERTIFICATE_CRL_DIST_POINT << std::endl;
    std::cout << "URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP=" << URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP << std::endl;
    std::cout << "URL_OID_CERTIFICATE_FRESHEST_CRL=" << URL_OID_CERTIFICATE_FRESHEST_CRL << std::endl;
    std::cout << "URL_OID_CERTIFICATE_ISSUER=" << URL_OID_CERTIFICATE_ISSUER << std::endl;
    std::cout << "URL_OID_CERTIFICATE_OCSP=" << URL_OID_CERTIFICATE_OCSP << std::endl;
    std::cout << "URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT=" << URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT << std::endl;
    std::cout << "URL_OID_CERTIFICATE_ONLY_OCSP=" << URL_OID_CERTIFICATE_ONLY_OCSP << std::endl;
    std::cout << "URL_OID_CRL_FRESHEST_CRL=" << URL_OID_CRL_FRESHEST_CRL << std::endl;
    std::cout << "URL_OID_CRL_ISSUER=" << URL_OID_CRL_ISSUER << std::endl;
    std::cout << "URL_OID_CROSS_CERT_DIST_POINT=" << URL_OID_CROSS_CERT_DIST_POINT << std::endl;
    std::cout << "URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS=" << URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS << std::endl;
    std::cout << "URL_OID_CTL_ISSUER=" << URL_OID_CTL_ISSUER << std::endl;
    std::cout << "URL_OID_CTL_NEXT_UPDATE=" << URL_OID_CTL_NEXT_UPDATE << std::endl;
    std::cout << "USAGE_MATCH_TYPE_AND=" << USAGE_MATCH_TYPE_AND << std::endl;
    std::cout << "USAGE_MATCH_TYPE_OR=" << USAGE_MATCH_TYPE_OR << std::endl;
    std::cout << "USER_CALL_IS_ASYNC=" << USER_CALL_IS_ASYNC << std::endl;
    std::cout << "USER_CALL_NEW_CORRELATION_DESC=" << USER_CALL_NEW_CORRELATION_DESC << std::endl;
    std::cout << "USER_DEFAULT_SCREEN_DPI=" << USER_DEFAULT_SCREEN_DPI << std::endl;
    std::cout << "USER_MARSHAL_FC_BYTE=" << USER_MARSHAL_FC_BYTE << std::endl;
    std::cout << "USER_MARSHAL_FC_CHAR=" << USER_MARSHAL_FC_CHAR << std::endl;
    std::cout << "USER_MARSHAL_FC_DOUBLE=" << USER_MARSHAL_FC_DOUBLE << std::endl;
    std::cout << "USER_MARSHAL_FC_FLOAT=" << USER_MARSHAL_FC_FLOAT << std::endl;
    std::cout << "USER_MARSHAL_FC_HYPER=" << USER_MARSHAL_FC_HYPER << std::endl;
    std::cout << "USER_MARSHAL_FC_LONG=" << USER_MARSHAL_FC_LONG << std::endl;
    std::cout << "USER_MARSHAL_FC_SHORT=" << USER_MARSHAL_FC_SHORT << std::endl;
    std::cout << "USER_MARSHAL_FC_SMALL=" << USER_MARSHAL_FC_SMALL << std::endl;
    std::cout << "USER_MARSHAL_FC_ULONG=" << USER_MARSHAL_FC_ULONG << std::endl;
    std::cout << "USER_MARSHAL_FC_USHORT=" << USER_MARSHAL_FC_USHORT << std::endl;
    std::cout << "USER_MARSHAL_FC_USMALL=" << USER_MARSHAL_FC_USMALL << std::endl;
    std::cout << "USER_MARSHAL_FC_WCHAR=" << USER_MARSHAL_FC_WCHAR << std::endl;
    std::cout << "USER_TIMER_MAXIMUM=" << USER_TIMER_MAXIMUM << std::endl;
    std::cout << "USER_TIMER_MINIMUM=" << USER_TIMER_MINIMUM << std::endl;
    std::cout << "USE___UUIDOF=" << USE___UUIDOF << std::endl;
    std::cout << "USN_DELETE_FLAG_DELETE=" << USN_DELETE_FLAG_DELETE << std::endl;
    std::cout << "USN_DELETE_FLAG_NOTIFY=" << USN_DELETE_FLAG_NOTIFY << std::endl;
    std::cout << "USN_DELETE_VALID_FLAGS=" << USN_DELETE_VALID_FLAGS << std::endl;
    std::cout << "USN_PAGE_SIZE=" << USN_PAGE_SIZE << std::endl;
    std::cout << "USN_REASON_BASIC_INFO_CHANGE=" << USN_REASON_BASIC_INFO_CHANGE << std::endl;
    std::cout << "USN_REASON_CLOSE=" << USN_REASON_CLOSE << std::endl;
    std::cout << "USN_REASON_COMPRESSION_CHANGE=" << USN_REASON_COMPRESSION_CHANGE << std::endl;
    std::cout << "USN_REASON_DATA_EXTEND=" << USN_REASON_DATA_EXTEND << std::endl;
    std::cout << "USN_REASON_DATA_OVERWRITE=" << USN_REASON_DATA_OVERWRITE << std::endl;
    std::cout << "USN_REASON_DATA_TRUNCATION=" << USN_REASON_DATA_TRUNCATION << std::endl;
    std::cout << "USN_REASON_EA_CHANGE=" << USN_REASON_EA_CHANGE << std::endl;
    std::cout << "USN_REASON_ENCRYPTION_CHANGE=" << USN_REASON_ENCRYPTION_CHANGE << std::endl;
    std::cout << "USN_REASON_FILE_CREATE=" << USN_REASON_FILE_CREATE << std::endl;
    std::cout << "USN_REASON_FILE_DELETE=" << USN_REASON_FILE_DELETE << std::endl;
    std::cout << "USN_REASON_HARD_LINK_CHANGE=" << USN_REASON_HARD_LINK_CHANGE << std::endl;
    std::cout << "USN_REASON_INDEXABLE_CHANGE=" << USN_REASON_INDEXABLE_CHANGE << std::endl;
    std::cout << "USN_REASON_NAMED_DATA_EXTEND=" << USN_REASON_NAMED_DATA_EXTEND << std::endl;
    std::cout << "USN_REASON_NAMED_DATA_OVERWRITE=" << USN_REASON_NAMED_DATA_OVERWRITE << std::endl;
    std::cout << "USN_REASON_NAMED_DATA_TRUNCATION=" << USN_REASON_NAMED_DATA_TRUNCATION << std::endl;
    std::cout << "USN_REASON_OBJECT_ID_CHANGE=" << USN_REASON_OBJECT_ID_CHANGE << std::endl;
    std::cout << "USN_REASON_RENAME_NEW_NAME=" << USN_REASON_RENAME_NEW_NAME << std::endl;
    std::cout << "USN_REASON_RENAME_OLD_NAME=" << USN_REASON_RENAME_OLD_NAME << std::endl;
    std::cout << "USN_REASON_REPARSE_POINT_CHANGE=" << USN_REASON_REPARSE_POINT_CHANGE << std::endl;
    std::cout << "USN_REASON_SECURITY_CHANGE=" << USN_REASON_SECURITY_CHANGE << std::endl;
    std::cout << "USN_REASON_STREAM_CHANGE=" << USN_REASON_STREAM_CHANGE << std::endl;
    std::cout << "USN_SOURCE_AUXILIARY_DATA=" << USN_SOURCE_AUXILIARY_DATA << std::endl;
    std::cout << "USN_SOURCE_DATA_MANAGEMENT=" << USN_SOURCE_DATA_MANAGEMENT << std::endl;
    std::cout << "USN_SOURCE_REPLICATION_MANAGEMENT=" << USN_SOURCE_REPLICATION_MANAGEMENT << std::endl;
    std::cout << "VALID_INHERIT_FLAGS=" << VALID_INHERIT_FLAGS << std::endl;
    std::cout << "VALID_NTFT=" << VALID_NTFT << std::endl;
    std::cout << "VALID_SYMBOLIC_LINK_FLAGS=" << VALID_SYMBOLIC_LINK_FLAGS << std::endl;
    std::cout << "VARCMP_EQ=" << VARCMP_EQ << std::endl;
    std::cout << "VARCMP_GT=" << VARCMP_GT << std::endl;
    std::cout << "VARCMP_LT=" << VARCMP_LT << std::endl;
    std::cout << "VARCMP_NULL=" << VARCMP_NULL << std::endl;
    std::cout << "VARIABLE_PITCH=" << VARIABLE_PITCH << std::endl;
    std::cout << "VARIANT_ALPHABOOL=" << VARIANT_ALPHABOOL << std::endl;
    std::cout << "VARIANT_CALENDAR_GREGORIAN=" << VARIANT_CALENDAR_GREGORIAN << std::endl;
    std::cout << "VARIANT_CALENDAR_HIJRI=" << VARIANT_CALENDAR_HIJRI << std::endl;
    std::cout << "VARIANT_CALENDAR_THAI=" << VARIANT_CALENDAR_THAI << std::endl;
    std::cout << "VARIANT_LOCALBOOL=" << VARIANT_LOCALBOOL << std::endl;
    std::cout << "VARIANT_NOUSEROVERRIDE=" << VARIANT_NOUSEROVERRIDE << std::endl;
    std::cout << "VARIANT_NOVALUEPROP=" << VARIANT_NOVALUEPROP << std::endl;
    std::cout << "VARIANT_USE_NLS=" << VARIANT_USE_NLS << std::endl;
    std::cout << "VENDOR_ID_LENGTH=" << VENDOR_ID_LENGTH << std::endl;
    std::cout << "VERTRES=" << VERTRES << std::endl;
    std::cout << "VERTSIZE=" << VERTSIZE << std::endl;
    std::cout << "VER_AND=" << VER_AND << std::endl;
    std::cout << "VER_BUILDNUMBER=" << VER_BUILDNUMBER << std::endl;
    std::cout << "VER_CONDITION_MASK=" << VER_CONDITION_MASK << std::endl;
    std::cout << "VER_EQUAL=" << VER_EQUAL << std::endl;
    std::cout << "VER_GREATER=" << VER_GREATER << std::endl;
    std::cout << "VER_GREATER_EQUAL=" << VER_GREATER_EQUAL << std::endl;
    std::cout << "VER_LESS=" << VER_LESS << std::endl;
    std::cout << "VER_LESS_EQUAL=" << VER_LESS_EQUAL << std::endl;
    std::cout << "VER_MAJORVERSION=" << VER_MAJORVERSION << std::endl;
    std::cout << "VER_MINORVERSION=" << VER_MINORVERSION << std::endl;
    std::cout << "VER_NT_DOMAIN_CONTROLLER=" << VER_NT_DOMAIN_CONTROLLER << std::endl;
    std::cout << "VER_NT_SERVER=" << VER_NT_SERVER << std::endl;
    std::cout << "VER_NT_WORKSTATION=" << VER_NT_WORKSTATION << std::endl;
    std::cout << "VER_NUM_BITS_PER_CONDITION_MASK=" << VER_NUM_BITS_PER_CONDITION_MASK << std::endl;
    std::cout << "VER_OR=" << VER_OR << std::endl;
    std::cout << "VER_PLATFORMID=" << VER_PLATFORMID << std::endl;
    std::cout << "VER_PLATFORM_WIN32_NT=" << VER_PLATFORM_WIN32_NT << std::endl;
    std::cout << "VER_PLATFORM_WIN32_WINDOWS=" << VER_PLATFORM_WIN32_WINDOWS << std::endl;
    std::cout << "VER_PRODUCT_TYPE=" << VER_PRODUCT_TYPE << std::endl;
    std::cout << "VER_SERVER_NT=" << VER_SERVER_NT << std::endl;
    std::cout << "VER_SERVICEPACKMAJOR=" << VER_SERVICEPACKMAJOR << std::endl;
    std::cout << "VER_SERVICEPACKMINOR=" << VER_SERVICEPACKMINOR << std::endl;
    std::cout << "VER_SUITENAME=" << VER_SUITENAME << std::endl;
    std::cout << "VER_SUITE_BACKOFFICE=" << VER_SUITE_BACKOFFICE << std::endl;
    std::cout << "VER_SUITE_BLADE=" << VER_SUITE_BLADE << std::endl;
    std::cout << "VER_SUITE_COMMUNICATIONS=" << VER_SUITE_COMMUNICATIONS << std::endl;
    std::cout << "VER_SUITE_COMPUTE_SERVER=" << VER_SUITE_COMPUTE_SERVER << std::endl;
    std::cout << "VER_SUITE_DATACENTER=" << VER_SUITE_DATACENTER << std::endl;
    std::cout << "VER_SUITE_EMBEDDEDNT=" << VER_SUITE_EMBEDDEDNT << std::endl;
    std::cout << "VER_SUITE_EMBEDDED_RESTRICTED=" << VER_SUITE_EMBEDDED_RESTRICTED << std::endl;
    std::cout << "VER_SUITE_ENTERPRISE=" << VER_SUITE_ENTERPRISE << std::endl;
    std::cout << "VER_SUITE_PERSONAL=" << VER_SUITE_PERSONAL << std::endl;
    std::cout << "VER_SUITE_SECURITY_APPLIANCE=" << VER_SUITE_SECURITY_APPLIANCE << std::endl;
    std::cout << "VER_SUITE_SINGLEUSERTS=" << VER_SUITE_SINGLEUSERTS << std::endl;
    std::cout << "VER_SUITE_SMALLBUSINESS=" << VER_SUITE_SMALLBUSINESS << std::endl;
    std::cout << "VER_SUITE_SMALLBUSINESS_RESTRICTED=" << VER_SUITE_SMALLBUSINESS_RESTRICTED << std::endl;
    std::cout << "VER_SUITE_STORAGE_SERVER=" << VER_SUITE_STORAGE_SERVER << std::endl;
    std::cout << "VER_SUITE_TERMINAL=" << VER_SUITE_TERMINAL << std::endl;
    std::cout << "VER_SUITE_WH_SERVER=" << VER_SUITE_WH_SERVER << std::endl;
    std::cout << "VER_WORKSTATION_NT=" << VER_WORKSTATION_NT << std::endl;
    std::cout << "VFFF_ISSHAREDFILE=" << VFFF_ISSHAREDFILE << std::endl;
    std::cout << "VFF_BUFFTOOSMALL=" << VFF_BUFFTOOSMALL << std::endl;
    std::cout << "VFF_CURNEDEST=" << VFF_CURNEDEST << std::endl;
    std::cout << "VFF_FILEINUSE=" << VFF_FILEINUSE << std::endl;
    std::cout << "VIETNAMESE_CHARSET=" << VIETNAMESE_CHARSET << std::endl;
    std::cout << "VIFF_DONTDELETEOLD=" << VIFF_DONTDELETEOLD << std::endl;
    std::cout << "VIFF_FORCEINSTALL=" << VIFF_FORCEINSTALL << std::endl;
    std::cout << "VIRTUAL_STORAGE_TYPE_DEVICE_ISO=" << VIRTUAL_STORAGE_TYPE_DEVICE_ISO << std::endl;
    std::cout << "VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN=" << VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN << std::endl;
    std::cout << "VIRTUAL_STORAGE_TYPE_DEVICE_VHD=" << VIRTUAL_STORAGE_TYPE_DEVICE_VHD << std::endl;
    std::cout << "VIRTUAL_STORAGE_TYPE_DEVICE_VHDX=" << VIRTUAL_STORAGE_TYPE_DEVICE_VHDX << std::endl;
    std::cout << "VK_ACCEPT=" << VK_ACCEPT << std::endl;
    std::cout << "VK_ADD=" << VK_ADD << std::endl;
    std::cout << "VK_APPS=" << VK_APPS << std::endl;
    std::cout << "VK_ATTN=" << VK_ATTN << std::endl;
    std::cout << "VK_BACK=" << VK_BACK << std::endl;
    std::cout << "VK_BROWSER_BACK=" << VK_BROWSER_BACK << std::endl;
    std::cout << "VK_BROWSER_FAVORITES=" << VK_BROWSER_FAVORITES << std::endl;
    std::cout << "VK_BROWSER_FORWARD=" << VK_BROWSER_FORWARD << std::endl;
    std::cout << "VK_BROWSER_HOME=" << VK_BROWSER_HOME << std::endl;
    std::cout << "VK_BROWSER_REFRESH=" << VK_BROWSER_REFRESH << std::endl;
    std::cout << "VK_BROWSER_SEARCH=" << VK_BROWSER_SEARCH << std::endl;
    std::cout << "VK_BROWSER_STOP=" << VK_BROWSER_STOP << std::endl;
    std::cout << "VK_CANCEL=" << VK_CANCEL << std::endl;
    std::cout << "VK_CAPITAL=" << VK_CAPITAL << std::endl;
    std::cout << "VK_CLEAR=" << VK_CLEAR << std::endl;
    std::cout << "VK_CONTROL=" << VK_CONTROL << std::endl;
    std::cout << "VK_CONVERT=" << VK_CONVERT << std::endl;
    std::cout << "VK_CRSEL=" << VK_CRSEL << std::endl;
    std::cout << "VK_DECIMAL=" << VK_DECIMAL << std::endl;
    std::cout << "VK_DELETE=" << VK_DELETE << std::endl;
    std::cout << "VK_DIVIDE=" << VK_DIVIDE << std::endl;
    std::cout << "VK_DOWN=" << VK_DOWN << std::endl;
    std::cout << "VK_END=" << VK_END << std::endl;
    std::cout << "VK_EREOF=" << VK_EREOF << std::endl;
    std::cout << "VK_ESCAPE=" << VK_ESCAPE << std::endl;
    std::cout << "VK_EXECUTE=" << VK_EXECUTE << std::endl;
    std::cout << "VK_EXSEL=" << VK_EXSEL << std::endl;
    std::cout << "VK_F1=" << VK_F1 << std::endl;
    std::cout << "VK_F10=" << VK_F10 << std::endl;
    std::cout << "VK_F11=" << VK_F11 << std::endl;
    std::cout << "VK_F12=" << VK_F12 << std::endl;
    std::cout << "VK_F13=" << VK_F13 << std::endl;
    std::cout << "VK_F14=" << VK_F14 << std::endl;
    std::cout << "VK_F15=" << VK_F15 << std::endl;
    std::cout << "VK_F16=" << VK_F16 << std::endl;
    std::cout << "VK_F17=" << VK_F17 << std::endl;
    std::cout << "VK_F18=" << VK_F18 << std::endl;
    std::cout << "VK_F19=" << VK_F19 << std::endl;
    std::cout << "VK_F2=" << VK_F2 << std::endl;
    std::cout << "VK_F20=" << VK_F20 << std::endl;
    std::cout << "VK_F21=" << VK_F21 << std::endl;
    std::cout << "VK_F22=" << VK_F22 << std::endl;
    std::cout << "VK_F23=" << VK_F23 << std::endl;
    std::cout << "VK_F24=" << VK_F24 << std::endl;
    std::cout << "VK_F3=" << VK_F3 << std::endl;
    std::cout << "VK_F4=" << VK_F4 << std::endl;
    std::cout << "VK_F5=" << VK_F5 << std::endl;
    std::cout << "VK_F6=" << VK_F6 << std::endl;
    std::cout << "VK_F7=" << VK_F7 << std::endl;
    std::cout << "VK_F8=" << VK_F8 << std::endl;
    std::cout << "VK_F9=" << VK_F9 << std::endl;
    std::cout << "VK_FINAL=" << VK_FINAL << std::endl;
    std::cout << "VK_GAMEPAD_A=" << VK_GAMEPAD_A << std::endl;
    std::cout << "VK_GAMEPAD_B=" << VK_GAMEPAD_B << std::endl;
    std::cout << "VK_GAMEPAD_DPAD_DOWN=" << VK_GAMEPAD_DPAD_DOWN << std::endl;
    std::cout << "VK_GAMEPAD_DPAD_LEFT=" << VK_GAMEPAD_DPAD_LEFT << std::endl;
    std::cout << "VK_GAMEPAD_DPAD_RIGHT=" << VK_GAMEPAD_DPAD_RIGHT << std::endl;
    std::cout << "VK_GAMEPAD_DPAD_UP=" << VK_GAMEPAD_DPAD_UP << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_SHOULDER=" << VK_GAMEPAD_LEFT_SHOULDER << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON=" << VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_THUMBSTICK_DOWN=" << VK_GAMEPAD_LEFT_THUMBSTICK_DOWN << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_THUMBSTICK_LEFT=" << VK_GAMEPAD_LEFT_THUMBSTICK_LEFT << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT=" << VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_THUMBSTICK_UP=" << VK_GAMEPAD_LEFT_THUMBSTICK_UP << std::endl;
    std::cout << "VK_GAMEPAD_LEFT_TRIGGER=" << VK_GAMEPAD_LEFT_TRIGGER << std::endl;
    std::cout << "VK_GAMEPAD_MENU=" << VK_GAMEPAD_MENU << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_SHOULDER=" << VK_GAMEPAD_RIGHT_SHOULDER << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON=" << VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN=" << VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT=" << VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT=" << VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_THUMBSTICK_UP=" << VK_GAMEPAD_RIGHT_THUMBSTICK_UP << std::endl;
    std::cout << "VK_GAMEPAD_RIGHT_TRIGGER=" << VK_GAMEPAD_RIGHT_TRIGGER << std::endl;
    std::cout << "VK_GAMEPAD_VIEW=" << VK_GAMEPAD_VIEW << std::endl;
    std::cout << "VK_GAMEPAD_X=" << VK_GAMEPAD_X << std::endl;
    std::cout << "VK_GAMEPAD_Y=" << VK_GAMEPAD_Y << std::endl;
    std::cout << "VK_HANGEUL=" << VK_HANGEUL << std::endl;
    std::cout << "VK_HANGUL=" << VK_HANGUL << std::endl;
    std::cout << "VK_HANJA=" << VK_HANJA << std::endl;
    std::cout << "VK_HELP=" << VK_HELP << std::endl;
    std::cout << "VK_HOME=" << VK_HOME << std::endl;
    std::cout << "VK_ICO_00=" << VK_ICO_00 << std::endl;
    std::cout << "VK_ICO_CLEAR=" << VK_ICO_CLEAR << std::endl;
    std::cout << "VK_ICO_HELP=" << VK_ICO_HELP << std::endl;
    std::cout << "VK_IME_OFF=" << VK_IME_OFF << std::endl;
    std::cout << "VK_IME_ON=" << VK_IME_ON << std::endl;
    std::cout << "VK_INSERT=" << VK_INSERT << std::endl;
    std::cout << "VK_JUNJA=" << VK_JUNJA << std::endl;
    std::cout << "VK_KANA=" << VK_KANA << std::endl;
    std::cout << "VK_KANJI=" << VK_KANJI << std::endl;
    std::cout << "VK_LAUNCH_APP1=" << VK_LAUNCH_APP1 << std::endl;
    std::cout << "VK_LAUNCH_APP2=" << VK_LAUNCH_APP2 << std::endl;
    std::cout << "VK_LAUNCH_MAIL=" << VK_LAUNCH_MAIL << std::endl;
    std::cout << "VK_LAUNCH_MEDIA_SELECT=" << VK_LAUNCH_MEDIA_SELECT << std::endl;
    std::cout << "VK_LBUTTON=" << VK_LBUTTON << std::endl;
    std::cout << "VK_LCONTROL=" << VK_LCONTROL << std::endl;
    std::cout << "VK_LEFT=" << VK_LEFT << std::endl;
    std::cout << "VK_LMENU=" << VK_LMENU << std::endl;
    std::cout << "VK_LSHIFT=" << VK_LSHIFT << std::endl;
    std::cout << "VK_LWIN=" << VK_LWIN << std::endl;
    std::cout << "VK_MBUTTON=" << VK_MBUTTON << std::endl;
    std::cout << "VK_MEDIA_NEXT_TRACK=" << VK_MEDIA_NEXT_TRACK << std::endl;
    std::cout << "VK_MEDIA_PLAY_PAUSE=" << VK_MEDIA_PLAY_PAUSE << std::endl;
    std::cout << "VK_MEDIA_PREV_TRACK=" << VK_MEDIA_PREV_TRACK << std::endl;
    std::cout << "VK_MEDIA_STOP=" << VK_MEDIA_STOP << std::endl;
    std::cout << "VK_MENU=" << VK_MENU << std::endl;
    std::cout << "VK_MODECHANGE=" << VK_MODECHANGE << std::endl;
    std::cout << "VK_MULTIPLY=" << VK_MULTIPLY << std::endl;
    std::cout << "VK_NAVIGATION_ACCEPT=" << VK_NAVIGATION_ACCEPT << std::endl;
    std::cout << "VK_NAVIGATION_CANCEL=" << VK_NAVIGATION_CANCEL << std::endl;
    std::cout << "VK_NAVIGATION_DOWN=" << VK_NAVIGATION_DOWN << std::endl;
    std::cout << "VK_NAVIGATION_LEFT=" << VK_NAVIGATION_LEFT << std::endl;
    std::cout << "VK_NAVIGATION_MENU=" << VK_NAVIGATION_MENU << std::endl;
    std::cout << "VK_NAVIGATION_RIGHT=" << VK_NAVIGATION_RIGHT << std::endl;
    std::cout << "VK_NAVIGATION_UP=" << VK_NAVIGATION_UP << std::endl;
    std::cout << "VK_NAVIGATION_VIEW=" << VK_NAVIGATION_VIEW << std::endl;
    std::cout << "VK_NEXT=" << VK_NEXT << std::endl;
    std::cout << "VK_NONAME=" << VK_NONAME << std::endl;
    std::cout << "VK_NONCONVERT=" << VK_NONCONVERT << std::endl;
    std::cout << "VK_NUMLOCK=" << VK_NUMLOCK << std::endl;
    std::cout << "VK_NUMPAD0=" << VK_NUMPAD0 << std::endl;
    std::cout << "VK_NUMPAD1=" << VK_NUMPAD1 << std::endl;
    std::cout << "VK_NUMPAD2=" << VK_NUMPAD2 << std::endl;
    std::cout << "VK_NUMPAD3=" << VK_NUMPAD3 << std::endl;
    std::cout << "VK_NUMPAD4=" << VK_NUMPAD4 << std::endl;
    std::cout << "VK_NUMPAD5=" << VK_NUMPAD5 << std::endl;
    std::cout << "VK_NUMPAD6=" << VK_NUMPAD6 << std::endl;
    std::cout << "VK_NUMPAD7=" << VK_NUMPAD7 << std::endl;
    std::cout << "VK_NUMPAD8=" << VK_NUMPAD8 << std::endl;
    std::cout << "VK_NUMPAD9=" << VK_NUMPAD9 << std::endl;
    std::cout << "VK_OEM_1=" << VK_OEM_1 << std::endl;
    std::cout << "VK_OEM_102=" << VK_OEM_102 << std::endl;
    std::cout << "VK_OEM_2=" << VK_OEM_2 << std::endl;
    std::cout << "VK_OEM_3=" << VK_OEM_3 << std::endl;
    std::cout << "VK_OEM_4=" << VK_OEM_4 << std::endl;
    std::cout << "VK_OEM_5=" << VK_OEM_5 << std::endl;
    std::cout << "VK_OEM_6=" << VK_OEM_6 << std::endl;
    std::cout << "VK_OEM_7=" << VK_OEM_7 << std::endl;
    std::cout << "VK_OEM_8=" << VK_OEM_8 << std::endl;
    std::cout << "VK_OEM_ATTN=" << VK_OEM_ATTN << std::endl;
    std::cout << "VK_OEM_AUTO=" << VK_OEM_AUTO << std::endl;
    std::cout << "VK_OEM_AX=" << VK_OEM_AX << std::endl;
    std::cout << "VK_OEM_BACKTAB=" << VK_OEM_BACKTAB << std::endl;
    std::cout << "VK_OEM_CLEAR=" << VK_OEM_CLEAR << std::endl;
    std::cout << "VK_OEM_COMMA=" << VK_OEM_COMMA << std::endl;
    std::cout << "VK_OEM_COPY=" << VK_OEM_COPY << std::endl;
    std::cout << "VK_OEM_CUSEL=" << VK_OEM_CUSEL << std::endl;
    std::cout << "VK_OEM_ENLW=" << VK_OEM_ENLW << std::endl;
    std::cout << "VK_OEM_FINISH=" << VK_OEM_FINISH << std::endl;
    std::cout << "VK_OEM_FJ_JISHO=" << VK_OEM_FJ_JISHO << std::endl;
    std::cout << "VK_OEM_FJ_LOYA=" << VK_OEM_FJ_LOYA << std::endl;
    std::cout << "VK_OEM_FJ_MASSHOU=" << VK_OEM_FJ_MASSHOU << std::endl;
    std::cout << "VK_OEM_FJ_ROYA=" << VK_OEM_FJ_ROYA << std::endl;
    std::cout << "VK_OEM_FJ_TOUROKU=" << VK_OEM_FJ_TOUROKU << std::endl;
    std::cout << "VK_OEM_JUMP=" << VK_OEM_JUMP << std::endl;
    std::cout << "VK_OEM_MINUS=" << VK_OEM_MINUS << std::endl;
    std::cout << "VK_OEM_NEC_EQUAL=" << VK_OEM_NEC_EQUAL << std::endl;
    std::cout << "VK_OEM_PA1=" << VK_OEM_PA1 << std::endl;
    std::cout << "VK_OEM_PA2=" << VK_OEM_PA2 << std::endl;
    std::cout << "VK_OEM_PA3=" << VK_OEM_PA3 << std::endl;
    std::cout << "VK_OEM_PERIOD=" << VK_OEM_PERIOD << std::endl;
    std::cout << "VK_OEM_PLUS=" << VK_OEM_PLUS << std::endl;
    std::cout << "VK_OEM_RESET=" << VK_OEM_RESET << std::endl;
    std::cout << "VK_OEM_WSCTRL=" << VK_OEM_WSCTRL << std::endl;
    std::cout << "VK_PA1=" << VK_PA1 << std::endl;
    std::cout << "VK_PACKET=" << VK_PACKET << std::endl;
    std::cout << "VK_PAUSE=" << VK_PAUSE << std::endl;
    std::cout << "VK_PLAY=" << VK_PLAY << std::endl;
    std::cout << "VK_PRINT=" << VK_PRINT << std::endl;
    std::cout << "VK_PRIOR=" << VK_PRIOR << std::endl;
    std::cout << "VK_PROCESSKEY=" << VK_PROCESSKEY << std::endl;
    std::cout << "VK_RBUTTON=" << VK_RBUTTON << std::endl;
    std::cout << "VK_RCONTROL=" << VK_RCONTROL << std::endl;
    std::cout << "VK_RETURN=" << VK_RETURN << std::endl;
    std::cout << "VK_RIGHT=" << VK_RIGHT << std::endl;
    std::cout << "VK_RMENU=" << VK_RMENU << std::endl;
    std::cout << "VK_RSHIFT=" << VK_RSHIFT << std::endl;
    std::cout << "VK_RWIN=" << VK_RWIN << std::endl;
    std::cout << "VK_SCROLL=" << VK_SCROLL << std::endl;
    std::cout << "VK_SELECT=" << VK_SELECT << std::endl;
    std::cout << "VK_SEPARATOR=" << VK_SEPARATOR << std::endl;
    std::cout << "VK_SHIFT=" << VK_SHIFT << std::endl;
    std::cout << "VK_SLEEP=" << VK_SLEEP << std::endl;
    std::cout << "VK_SNAPSHOT=" << VK_SNAPSHOT << std::endl;
    std::cout << "VK_SPACE=" << VK_SPACE << std::endl;
    std::cout << "VK_SUBTRACT=" << VK_SUBTRACT << std::endl;
    std::cout << "VK_TAB=" << VK_TAB << std::endl;
    std::cout << "VK_UP=" << VK_UP << std::endl;
    std::cout << "VK_VOLUME_DOWN=" << VK_VOLUME_DOWN << std::endl;
    std::cout << "VK_VOLUME_MUTE=" << VK_VOLUME_MUTE << std::endl;
    std::cout << "VK_VOLUME_UP=" << VK_VOLUME_UP << std::endl;
    std::cout << "VK_XBUTTON1=" << VK_XBUTTON1 << std::endl;
    std::cout << "VK_XBUTTON2=" << VK_XBUTTON2 << std::endl;
    std::cout << "VK_ZOOM=" << VK_ZOOM << std::endl;
    std::cout << "VOLUME_IS_DIRTY=" << VOLUME_IS_DIRTY << std::endl;
    std::cout << "VOLUME_NAME_DOS=" << VOLUME_NAME_DOS << std::endl;
    std::cout << "VOLUME_NAME_GUID=" << VOLUME_NAME_GUID << std::endl;
    std::cout << "VOLUME_NAME_NONE=" << VOLUME_NAME_NONE << std::endl;
    std::cout << "VOLUME_NAME_NT=" << VOLUME_NAME_NT << std::endl;
    std::cout << "VOLUME_UPGRADE_SCHEDULED=" << VOLUME_UPGRADE_SCHEDULED << std::endl;
    std::cout << "VP_COMMAND_GET=" << VP_COMMAND_GET << std::endl;
    std::cout << "VP_COMMAND_SET=" << VP_COMMAND_SET << std::endl;
    std::cout << "VP_CP_CMD_ACTIVATE=" << VP_CP_CMD_ACTIVATE << std::endl;
    std::cout << "VP_CP_CMD_CHANGE=" << VP_CP_CMD_CHANGE << std::endl;
    std::cout << "VP_CP_CMD_DEACTIVATE=" << VP_CP_CMD_DEACTIVATE << std::endl;
    std::cout << "VP_CP_TYPE_APS_TRIGGER=" << VP_CP_TYPE_APS_TRIGGER << std::endl;
    std::cout << "VP_CP_TYPE_MACROVISION=" << VP_CP_TYPE_MACROVISION << std::endl;
    std::cout << "VP_FLAGS_BRIGHTNESS=" << VP_FLAGS_BRIGHTNESS << std::endl;
    std::cout << "VP_FLAGS_CONTRAST=" << VP_FLAGS_CONTRAST << std::endl;
    std::cout << "VP_FLAGS_COPYPROTECT=" << VP_FLAGS_COPYPROTECT << std::endl;
    std::cout << "VP_FLAGS_FLICKER=" << VP_FLAGS_FLICKER << std::endl;
    std::cout << "VP_FLAGS_MAX_UNSCALED=" << VP_FLAGS_MAX_UNSCALED << std::endl;
    std::cout << "VP_FLAGS_OVERSCAN=" << VP_FLAGS_OVERSCAN << std::endl;
    std::cout << "VP_FLAGS_POSITION=" << VP_FLAGS_POSITION << std::endl;
    std::cout << "VP_FLAGS_TV_MODE=" << VP_FLAGS_TV_MODE << std::endl;
    std::cout << "VP_FLAGS_TV_STANDARD=" << VP_FLAGS_TV_STANDARD << std::endl;
    std::cout << "VP_MODE_TV_PLAYBACK=" << VP_MODE_TV_PLAYBACK << std::endl;
    std::cout << "VP_MODE_WIN_GRAPHICS=" << VP_MODE_WIN_GRAPHICS << std::endl;
    std::cout << "VP_TV_STANDARD_NTSC_433=" << VP_TV_STANDARD_NTSC_433 << std::endl;
    std::cout << "VP_TV_STANDARD_NTSC_M=" << VP_TV_STANDARD_NTSC_M << std::endl;
    std::cout << "VP_TV_STANDARD_NTSC_M_J=" << VP_TV_STANDARD_NTSC_M_J << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_60=" << VP_TV_STANDARD_PAL_60 << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_B=" << VP_TV_STANDARD_PAL_B << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_D=" << VP_TV_STANDARD_PAL_D << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_G=" << VP_TV_STANDARD_PAL_G << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_H=" << VP_TV_STANDARD_PAL_H << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_I=" << VP_TV_STANDARD_PAL_I << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_M=" << VP_TV_STANDARD_PAL_M << std::endl;
    std::cout << "VP_TV_STANDARD_PAL_N=" << VP_TV_STANDARD_PAL_N << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_B=" << VP_TV_STANDARD_SECAM_B << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_D=" << VP_TV_STANDARD_SECAM_D << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_G=" << VP_TV_STANDARD_SECAM_G << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_H=" << VP_TV_STANDARD_SECAM_H << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_K=" << VP_TV_STANDARD_SECAM_K << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_K1=" << VP_TV_STANDARD_SECAM_K1 << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_L=" << VP_TV_STANDARD_SECAM_L << std::endl;
    std::cout << "VP_TV_STANDARD_SECAM_L1=" << VP_TV_STANDARD_SECAM_L1 << std::endl;
    std::cout << "VP_TV_STANDARD_WIN_VGA=" << VP_TV_STANDARD_WIN_VGA << std::endl;
    std::cout << "VREFRESH=" << VREFRESH << std::endl;
    std::cout << "VRL_CLASS_CONSISTENCY=" << VRL_CLASS_CONSISTENCY << std::endl;
    std::cout << "VRL_CUSTOM_CLASS_BEGIN=" << VRL_CUSTOM_CLASS_BEGIN << std::endl;
    std::cout << "VRL_ENABLE_KERNEL_BREAKS=" << VRL_ENABLE_KERNEL_BREAKS << std::endl;
    std::cout << "VRL_PREDEFINED_CLASS_BEGIN=" << VRL_PREDEFINED_CLASS_BEGIN << std::endl;
    std::cout << "VS_ALLOW_LATIN=" << VS_ALLOW_LATIN << std::endl;
    std::cout << "VS_USER_DEFINED=" << VS_USER_DEFINED << std::endl;
    std::cout << "VS_VERSION_INFO=" << VS_VERSION_INFO << std::endl;
    std::cout << "VTA_BASELINE=" << VTA_BASELINE << std::endl;
    std::cout << "VTA_BOTTOM=" << VTA_BOTTOM << std::endl;
    std::cout << "VTA_CENTER=" << VTA_CENTER << std::endl;
    std::cout << "VTA_LEFT=" << VTA_LEFT << std::endl;
    std::cout << "VTA_RIGHT=" << VTA_RIGHT << std::endl;
    std::cout << "VTA_TOP=" << VTA_TOP << std::endl;
    std::cout << "VTDATEGRE_MAX=" << VTDATEGRE_MAX << std::endl;
    std::cout << "VTDATEGRE_MIN=" << VTDATEGRE_MIN << std::endl;
    std::cout << "WAIT_ABANDONED=" << WAIT_ABANDONED << std::endl;
    std::cout << "WAIT_ABANDONED_0=" << WAIT_ABANDONED_0 << std::endl;
    std::cout << "WAIT_IO_COMPLETION=" << WAIT_IO_COMPLETION << std::endl;
    std::cout << "WAIT_OBJECT_0=" << WAIT_OBJECT_0 << std::endl;
    std::cout << "WAVECAPS_LRVOLUME=" << WAVECAPS_LRVOLUME << std::endl;
    std::cout << "WAVECAPS_PITCH=" << WAVECAPS_PITCH << std::endl;
    std::cout << "WAVECAPS_PLAYBACKRATE=" << WAVECAPS_PLAYBACKRATE << std::endl;
    std::cout << "WAVECAPS_SAMPLEACCURATE=" << WAVECAPS_SAMPLEACCURATE << std::endl;
    std::cout << "WAVECAPS_SYNC=" << WAVECAPS_SYNC << std::endl;
    std::cout << "WAVECAPS_VOLUME=" << WAVECAPS_VOLUME << std::endl;
    std::cout << "WAVERR_BADFORMAT=" << WAVERR_BADFORMAT << std::endl;
    std::cout << "WAVERR_BASE=" << WAVERR_BASE << std::endl;
    std::cout << "WAVERR_LASTERROR=" << WAVERR_LASTERROR << std::endl;
    std::cout << "WAVERR_STILLPLAYING=" << WAVERR_STILLPLAYING << std::endl;
    std::cout << "WAVERR_SYNC=" << WAVERR_SYNC << std::endl;
    std::cout << "WAVERR_UNPREPARED=" << WAVERR_UNPREPARED << std::endl;
    std::cout << "WAVE_ALLOWSYNC=" << WAVE_ALLOWSYNC << std::endl;
    std::cout << "WAVE_FORMAT_1M08=" << WAVE_FORMAT_1M08 << std::endl;
    std::cout << "WAVE_FORMAT_1M16=" << WAVE_FORMAT_1M16 << std::endl;
    std::cout << "WAVE_FORMAT_1S08=" << WAVE_FORMAT_1S08 << std::endl;
    std::cout << "WAVE_FORMAT_1S16=" << WAVE_FORMAT_1S16 << std::endl;
    std::cout << "WAVE_FORMAT_2M08=" << WAVE_FORMAT_2M08 << std::endl;
    std::cout << "WAVE_FORMAT_2M16=" << WAVE_FORMAT_2M16 << std::endl;
    std::cout << "WAVE_FORMAT_2S08=" << WAVE_FORMAT_2S08 << std::endl;
    std::cout << "WAVE_FORMAT_2S16=" << WAVE_FORMAT_2S16 << std::endl;
    std::cout << "WAVE_FORMAT_44M08=" << WAVE_FORMAT_44M08 << std::endl;
    std::cout << "WAVE_FORMAT_44M16=" << WAVE_FORMAT_44M16 << std::endl;
    std::cout << "WAVE_FORMAT_44S08=" << WAVE_FORMAT_44S08 << std::endl;
    std::cout << "WAVE_FORMAT_44S16=" << WAVE_FORMAT_44S16 << std::endl;
    std::cout << "WAVE_FORMAT_48M08=" << WAVE_FORMAT_48M08 << std::endl;
    std::cout << "WAVE_FORMAT_48M16=" << WAVE_FORMAT_48M16 << std::endl;
    std::cout << "WAVE_FORMAT_48S08=" << WAVE_FORMAT_48S08 << std::endl;
    std::cout << "WAVE_FORMAT_48S16=" << WAVE_FORMAT_48S16 << std::endl;
    std::cout << "WAVE_FORMAT_4M08=" << WAVE_FORMAT_4M08 << std::endl;
    std::cout << "WAVE_FORMAT_4M16=" << WAVE_FORMAT_4M16 << std::endl;
    std::cout << "WAVE_FORMAT_4S08=" << WAVE_FORMAT_4S08 << std::endl;
    std::cout << "WAVE_FORMAT_4S16=" << WAVE_FORMAT_4S16 << std::endl;
    std::cout << "WAVE_FORMAT_96M08=" << WAVE_FORMAT_96M08 << std::endl;
    std::cout << "WAVE_FORMAT_96M16=" << WAVE_FORMAT_96M16 << std::endl;
    std::cout << "WAVE_FORMAT_96S08=" << WAVE_FORMAT_96S08 << std::endl;
    std::cout << "WAVE_FORMAT_96S16=" << WAVE_FORMAT_96S16 << std::endl;
    std::cout << "WAVE_FORMAT_DIRECT=" << WAVE_FORMAT_DIRECT << std::endl;
    std::cout << "WAVE_FORMAT_DIRECT_QUERY=" << WAVE_FORMAT_DIRECT_QUERY << std::endl;
    std::cout << "WAVE_FORMAT_PCM=" << WAVE_FORMAT_PCM << std::endl;
    std::cout << "WAVE_FORMAT_QUERY=" << WAVE_FORMAT_QUERY << std::endl;
    std::cout << "WAVE_INVALIDFORMAT=" << WAVE_INVALIDFORMAT << std::endl;
    std::cout << "WAVE_MAPPED=" << WAVE_MAPPED << std::endl;
    std::cout << "WA_ACTIVE=" << WA_ACTIVE << std::endl;
    std::cout << "WA_CLICKACTIVE=" << WA_CLICKACTIVE << std::endl;
    std::cout << "WA_INACTIVE=" << WA_INACTIVE << std::endl;
    std::cout << "WB_ISDELIMITER=" << WB_ISDELIMITER << std::endl;
    std::cout << "WB_LEFT=" << WB_LEFT << std::endl;
    std::cout << "WB_RIGHT=" << WB_RIGHT << std::endl;
    std::cout << "WC_COMPOSITECHECK=" << WC_COMPOSITECHECK << std::endl;
    std::cout << "WC_DEFAULTCHAR=" << WC_DEFAULTCHAR << std::endl;
    std::cout << "WC_DISCARDNS=" << WC_DISCARDNS << std::endl;
    std::cout << "WC_ERR_INVALID_CHARS=" << WC_ERR_INVALID_CHARS << std::endl;
    std::cout << "WC_NO_BEST_FIT_CHARS=" << WC_NO_BEST_FIT_CHARS << std::endl;
    std::cout << "WC_SEPCHARS=" << WC_SEPCHARS << std::endl;
    std::cout << "WDA_EXCLUDEFROMCAPTURE=" << WDA_EXCLUDEFROMCAPTURE << std::endl;
    std::cout << "WDA_MONITOR=" << WDA_MONITOR << std::endl;
    std::cout << "WDA_NONE=" << WDA_NONE << std::endl;
    std::cout << "WDK_NTDDI_VERSION=" << WDK_NTDDI_VERSION << std::endl;
    std::cout << "WDT_INPROC64_CALL=" << WDT_INPROC64_CALL << std::endl;
    std::cout << "WDT_INPROC_CALL=" << WDT_INPROC_CALL << std::endl;
    std::cout << "WDT_REMOTE_CALL=" << WDT_REMOTE_CALL << std::endl;
    std::cout << "WGL_FONT_LINES=" << WGL_FONT_LINES << std::endl;
    std::cout << "WGL_FONT_POLYGONS=" << WGL_FONT_POLYGONS << std::endl;
    std::cout << "WGL_SWAPMULTIPLE_MAX=" << WGL_SWAPMULTIPLE_MAX << std::endl;
    std::cout << "WGL_SWAP_MAIN_PLANE=" << WGL_SWAP_MAIN_PLANE << std::endl;
    std::cout << "WGL_SWAP_OVERLAY1=" << WGL_SWAP_OVERLAY1 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY10=" << WGL_SWAP_OVERLAY10 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY11=" << WGL_SWAP_OVERLAY11 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY12=" << WGL_SWAP_OVERLAY12 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY13=" << WGL_SWAP_OVERLAY13 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY14=" << WGL_SWAP_OVERLAY14 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY15=" << WGL_SWAP_OVERLAY15 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY2=" << WGL_SWAP_OVERLAY2 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY3=" << WGL_SWAP_OVERLAY3 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY4=" << WGL_SWAP_OVERLAY4 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY5=" << WGL_SWAP_OVERLAY5 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY6=" << WGL_SWAP_OVERLAY6 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY7=" << WGL_SWAP_OVERLAY7 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY8=" << WGL_SWAP_OVERLAY8 << std::endl;
    std::cout << "WGL_SWAP_OVERLAY9=" << WGL_SWAP_OVERLAY9 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY1=" << WGL_SWAP_UNDERLAY1 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY10=" << WGL_SWAP_UNDERLAY10 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY11=" << WGL_SWAP_UNDERLAY11 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY12=" << WGL_SWAP_UNDERLAY12 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY13=" << WGL_SWAP_UNDERLAY13 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY14=" << WGL_SWAP_UNDERLAY14 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY15=" << WGL_SWAP_UNDERLAY15 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY2=" << WGL_SWAP_UNDERLAY2 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY3=" << WGL_SWAP_UNDERLAY3 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY4=" << WGL_SWAP_UNDERLAY4 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY5=" << WGL_SWAP_UNDERLAY5 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY6=" << WGL_SWAP_UNDERLAY6 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY7=" << WGL_SWAP_UNDERLAY7 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY8=" << WGL_SWAP_UNDERLAY8 << std::endl;
    std::cout << "WGL_SWAP_UNDERLAY9=" << WGL_SWAP_UNDERLAY9 << std::endl;
    std::cout << "WHDR_BEGINLOOP=" << WHDR_BEGINLOOP << std::endl;
    std::cout << "WHDR_DONE=" << WHDR_DONE << std::endl;
    std::cout << "WHDR_ENDLOOP=" << WHDR_ENDLOOP << std::endl;
    std::cout << "WHDR_INQUEUE=" << WHDR_INQUEUE << std::endl;
    std::cout << "WHDR_PREPARED=" << WHDR_PREPARED << std::endl;
    std::cout << "WHEEL_DELTA=" << WHEEL_DELTA << std::endl;
    std::cout << "WHITEONBLACK=" << WHITEONBLACK << std::endl;
    std::cout << "WHITE_BRUSH=" << WHITE_BRUSH << std::endl;
    std::cout << "WHITE_PEN=" << WHITE_PEN << std::endl;
    std::cout << "WH_CALLWNDPROC=" << WH_CALLWNDPROC << std::endl;
    std::cout << "WH_CALLWNDPROCRET=" << WH_CALLWNDPROCRET << std::endl;
    std::cout << "WH_CBT=" << WH_CBT << std::endl;
    std::cout << "WH_DEBUG=" << WH_DEBUG << std::endl;
    std::cout << "WH_FOREGROUNDIDLE=" << WH_FOREGROUNDIDLE << std::endl;
    std::cout << "WH_GETMESSAGE=" << WH_GETMESSAGE << std::endl;
    std::cout << "WH_HARDWARE=" << WH_HARDWARE << std::endl;
    std::cout << "WH_JOURNALPLAYBACK=" << WH_JOURNALPLAYBACK << std::endl;
    std::cout << "WH_JOURNALRECORD=" << WH_JOURNALRECORD << std::endl;
    std::cout << "WH_KEYBOARD=" << WH_KEYBOARD << std::endl;
    std::cout << "WH_KEYBOARD_LL=" << WH_KEYBOARD_LL << std::endl;
    std::cout << "WH_MAX=" << WH_MAX << std::endl;
    std::cout << "WH_MAXHOOK=" << WH_MAXHOOK << std::endl;
    std::cout << "WH_MIN=" << WH_MIN << std::endl;
    std::cout << "WH_MINHOOK=" << WH_MINHOOK << std::endl;
    std::cout << "WH_MOUSE=" << WH_MOUSE << std::endl;
    std::cout << "WH_MOUSE_LL=" << WH_MOUSE_LL << std::endl;
    std::cout << "WH_MSGFILTER=" << WH_MSGFILTER << std::endl;
    std::cout << "WH_SHELL=" << WH_SHELL << std::endl;
    std::cout << "WH_SYSMSGFILTER=" << WH_SYSMSGFILTER << std::endl;
    std::cout << "WIM_CLOSE=" << WIM_CLOSE << std::endl;
    std::cout << "WIM_DATA=" << WIM_DATA << std::endl;
    std::cout << "WIM_OPEN=" << WIM_OPEN << std::endl;
    std::cout << "WIN31_CLASS=" << WIN31_CLASS << std::endl;
    std::cout << "WIN32=" << WIN32 << std::endl;
    std::cout << "WINAPI_FAMILY=" << WINAPI_FAMILY << std::endl;
    std::cout << "WINAPI_FAMILY_APP=" << WINAPI_FAMILY_APP << std::endl;
    std::cout << "WINAPI_FAMILY_DESKTOP_APP=" << WINAPI_FAMILY_DESKTOP_APP << std::endl;
    std::cout << "WINAPI_INLINE=" << WINAPI_INLINE << std::endl;
    std::cout << "WINAPI_PARTITION_APP=" << WINAPI_PARTITION_APP << std::endl;
    std::cout << "WINAPI_PARTITION_DESKTOP=" << WINAPI_PARTITION_DESKTOP << std::endl;
    std::cout << "WINCRYPT32API=" << WINCRYPT32API << std::endl;
    std::cout << "WINCRYPT32STRINGAPI=" << WINCRYPT32STRINGAPI << std::endl;
    std::cout << "WINDING=" << WINDING << std::endl;
    std::cout << "WINDOW_BUFFER_SIZE_EVENT=" << WINDOW_BUFFER_SIZE_EVENT << std::endl;
    std::cout << "WINEVENT_INCONTEXT=" << WINEVENT_INCONTEXT << std::endl;
    std::cout << "WINEVENT_OUTOFCONTEXT=" << WINEVENT_OUTOFCONTEXT << std::endl;
    std::cout << "WINEVENT_SKIPOWNPROCESS=" << WINEVENT_SKIPOWNPROCESS << std::endl;
    std::cout << "WINEVENT_SKIPOWNTHREAD=" << WINEVENT_SKIPOWNTHREAD << std::endl;
    std::cout << "WININETINFO_OPTION_LOCK_HANDLE=" << WININETINFO_OPTION_LOCK_HANDLE << std::endl;
    std::cout << "WINOLEAPI=" << WINOLEAPI << std::endl;
    std::cout << "WINOLEAUTAPI=" << WINOLEAUTAPI << std::endl;
    std::cout << "WINPATHCCHAPI=" << WINPATHCCHAPI << std::endl;
    std::cout << "WINPERF_LOG_DEBUG=" << WINPERF_LOG_DEBUG << std::endl;
    std::cout << "WINPERF_LOG_NONE=" << WINPERF_LOG_NONE << std::endl;
    std::cout << "WINPERF_LOG_USER=" << WINPERF_LOG_USER << std::endl;
    std::cout << "WINPERF_LOG_VERBOSE=" << WINPERF_LOG_VERBOSE << std::endl;
    std::cout << "WINVER=" << WINVER << std::endl;
    std::cout << "WIZ_BODYCX=" << WIZ_BODYCX << std::endl;
    std::cout << "WIZ_BODYX=" << WIZ_BODYX << std::endl;
    std::cout << "WIZ_CXBMP=" << WIZ_CXBMP << std::endl;
    std::cout << "WIZ_CXDLG=" << WIZ_CXDLG << std::endl;
    std::cout << "WIZ_CYDLG=" << WIZ_CYDLG << std::endl;
    std::cout << "WMSZ_BOTTOM=" << WMSZ_BOTTOM << std::endl;
    std::cout << "WMSZ_BOTTOMLEFT=" << WMSZ_BOTTOMLEFT << std::endl;
    std::cout << "WMSZ_BOTTOMRIGHT=" << WMSZ_BOTTOMRIGHT << std::endl;
    std::cout << "WMSZ_LEFT=" << WMSZ_LEFT << std::endl;
    std::cout << "WMSZ_RIGHT=" << WMSZ_RIGHT << std::endl;
    std::cout << "WMSZ_TOP=" << WMSZ_TOP << std::endl;
    std::cout << "WMSZ_TOPLEFT=" << WMSZ_TOPLEFT << std::endl;
    std::cout << "WMSZ_TOPRIGHT=" << WMSZ_TOPRIGHT << std::endl;
    std::cout << "WM_ACTIVATE=" << WM_ACTIVATE << std::endl;
    std::cout << "WM_ACTIVATEAPP=" << WM_ACTIVATEAPP << std::endl;
    std::cout << "WM_AFXFIRST=" << WM_AFXFIRST << std::endl;
    std::cout << "WM_AFXLAST=" << WM_AFXLAST << std::endl;
    std::cout << "WM_APP=" << WM_APP << std::endl;
    std::cout << "WM_APPCOMMAND=" << WM_APPCOMMAND << std::endl;
    std::cout << "WM_ASKCBFORMATNAME=" << WM_ASKCBFORMATNAME << std::endl;
    std::cout << "WM_CANCELJOURNAL=" << WM_CANCELJOURNAL << std::endl;
    std::cout << "WM_CANCELMODE=" << WM_CANCELMODE << std::endl;
    std::cout << "WM_CAPTURECHANGED=" << WM_CAPTURECHANGED << std::endl;
    std::cout << "WM_CHANGECBCHAIN=" << WM_CHANGECBCHAIN << std::endl;
    std::cout << "WM_CHANGEUISTATE=" << WM_CHANGEUISTATE << std::endl;
    std::cout << "WM_CHAR=" << WM_CHAR << std::endl;
    std::cout << "WM_CHARTOITEM=" << WM_CHARTOITEM << std::endl;
    std::cout << "WM_CHILDACTIVATE=" << WM_CHILDACTIVATE << std::endl;
    std::cout << "WM_CHOOSEFONT_GETLOGFONT=" << WM_CHOOSEFONT_GETLOGFONT << std::endl;
    std::cout << "WM_CHOOSEFONT_SETFLAGS=" << WM_CHOOSEFONT_SETFLAGS << std::endl;
    std::cout << "WM_CHOOSEFONT_SETLOGFONT=" << WM_CHOOSEFONT_SETLOGFONT << std::endl;
    std::cout << "WM_CLEAR=" << WM_CLEAR << std::endl;
    std::cout << "WM_CLOSE=" << WM_CLOSE << std::endl;
    std::cout << "WM_COMMAND=" << WM_COMMAND << std::endl;
    std::cout << "WM_COMMNOTIFY=" << WM_COMMNOTIFY << std::endl;
    std::cout << "WM_COMPACTING=" << WM_COMPACTING << std::endl;
    std::cout << "WM_COMPAREITEM=" << WM_COMPAREITEM << std::endl;
    std::cout << "WM_CONTEXTMENU=" << WM_CONTEXTMENU << std::endl;
    std::cout << "WM_COPY=" << WM_COPY << std::endl;
    std::cout << "WM_COPYDATA=" << WM_COPYDATA << std::endl;
    std::cout << "WM_CREATE=" << WM_CREATE << std::endl;
    std::cout << "WM_CTLCOLORBTN=" << WM_CTLCOLORBTN << std::endl;
    std::cout << "WM_CTLCOLORDLG=" << WM_CTLCOLORDLG << std::endl;
    std::cout << "WM_CTLCOLOREDIT=" << WM_CTLCOLOREDIT << std::endl;
    std::cout << "WM_CTLCOLORLISTBOX=" << WM_CTLCOLORLISTBOX << std::endl;
    std::cout << "WM_CTLCOLORMSGBOX=" << WM_CTLCOLORMSGBOX << std::endl;
    std::cout << "WM_CTLCOLORSCROLLBAR=" << WM_CTLCOLORSCROLLBAR << std::endl;
    std::cout << "WM_CTLCOLORSTATIC=" << WM_CTLCOLORSTATIC << std::endl;
    std::cout << "WM_CUT=" << WM_CUT << std::endl;
    std::cout << "WM_DDE_ACK=" << WM_DDE_ACK << std::endl;
    std::cout << "WM_DDE_ADVISE=" << WM_DDE_ADVISE << std::endl;
    std::cout << "WM_DDE_DATA=" << WM_DDE_DATA << std::endl;
    std::cout << "WM_DDE_EXECUTE=" << WM_DDE_EXECUTE << std::endl;
    std::cout << "WM_DDE_FIRST=" << WM_DDE_FIRST << std::endl;
    std::cout << "WM_DDE_INITIATE=" << WM_DDE_INITIATE << std::endl;
    std::cout << "WM_DDE_LAST=" << WM_DDE_LAST << std::endl;
    std::cout << "WM_DDE_POKE=" << WM_DDE_POKE << std::endl;
    std::cout << "WM_DDE_REQUEST=" << WM_DDE_REQUEST << std::endl;
    std::cout << "WM_DDE_TERMINATE=" << WM_DDE_TERMINATE << std::endl;
    std::cout << "WM_DDE_UNADVISE=" << WM_DDE_UNADVISE << std::endl;
    std::cout << "WM_DEADCHAR=" << WM_DEADCHAR << std::endl;
    std::cout << "WM_DELETEITEM=" << WM_DELETEITEM << std::endl;
    std::cout << "WM_DESTROY=" << WM_DESTROY << std::endl;
    std::cout << "WM_DESTROYCLIPBOARD=" << WM_DESTROYCLIPBOARD << std::endl;
    std::cout << "WM_DEVICECHANGE=" << WM_DEVICECHANGE << std::endl;
    std::cout << "WM_DEVMODECHANGE=" << WM_DEVMODECHANGE << std::endl;
    std::cout << "WM_DISPLAYCHANGE=" << WM_DISPLAYCHANGE << std::endl;
    std::cout << "WM_DRAWCLIPBOARD=" << WM_DRAWCLIPBOARD << std::endl;
    std::cout << "WM_DRAWITEM=" << WM_DRAWITEM << std::endl;
    std::cout << "WM_DROPFILES=" << WM_DROPFILES << std::endl;
    std::cout << "WM_DWMCOLORIZATIONCOLORCHANGED=" << WM_DWMCOLORIZATIONCOLORCHANGED << std::endl;
    std::cout << "WM_DWMSENDICONICLIVEPREVIEWBITMAP=" << WM_DWMSENDICONICLIVEPREVIEWBITMAP << std::endl;
    std::cout << "WM_DWMSENDICONICTHUMBNAIL=" << WM_DWMSENDICONICTHUMBNAIL << std::endl;
    std::cout << "WM_DWMWINDOWMAXIMIZEDCHANGE=" << WM_DWMWINDOWMAXIMIZEDCHANGE << std::endl;
    std::cout << "WM_ENABLE=" << WM_ENABLE << std::endl;
    std::cout << "WM_ENDSESSION=" << WM_ENDSESSION << std::endl;
    std::cout << "WM_ENTERIDLE=" << WM_ENTERIDLE << std::endl;
    std::cout << "WM_ENTERMENULOOP=" << WM_ENTERMENULOOP << std::endl;
    std::cout << "WM_ENTERSIZEMOVE=" << WM_ENTERSIZEMOVE << std::endl;
    std::cout << "WM_ERASEBKGND=" << WM_ERASEBKGND << std::endl;
    std::cout << "WM_EXITMENULOOP=" << WM_EXITMENULOOP << std::endl;
    std::cout << "WM_EXITSIZEMOVE=" << WM_EXITSIZEMOVE << std::endl;
    std::cout << "WM_FONTCHANGE=" << WM_FONTCHANGE << std::endl;
    std::cout << "WM_GESTURE=" << WM_GESTURE << std::endl;
    std::cout << "WM_GESTURENOTIFY=" << WM_GESTURENOTIFY << std::endl;
    std::cout << "WM_GETDLGCODE=" << WM_GETDLGCODE << std::endl;
    std::cout << "WM_GETFONT=" << WM_GETFONT << std::endl;
    std::cout << "WM_GETHOTKEY=" << WM_GETHOTKEY << std::endl;
    std::cout << "WM_GETICON=" << WM_GETICON << std::endl;
    std::cout << "WM_GETMINMAXINFO=" << WM_GETMINMAXINFO << std::endl;
    std::cout << "WM_GETOBJECT=" << WM_GETOBJECT << std::endl;
    std::cout << "WM_GETTEXT=" << WM_GETTEXT << std::endl;
    std::cout << "WM_GETTEXTLENGTH=" << WM_GETTEXTLENGTH << std::endl;
    std::cout << "WM_HANDHELDFIRST=" << WM_HANDHELDFIRST << std::endl;
    std::cout << "WM_HANDHELDLAST=" << WM_HANDHELDLAST << std::endl;
    std::cout << "WM_HELP=" << WM_HELP << std::endl;
    std::cout << "WM_HOTKEY=" << WM_HOTKEY << std::endl;
    std::cout << "WM_HSCROLL=" << WM_HSCROLL << std::endl;
    std::cout << "WM_HSCROLLCLIPBOARD=" << WM_HSCROLLCLIPBOARD << std::endl;
    std::cout << "WM_ICONERASEBKGND=" << WM_ICONERASEBKGND << std::endl;
    std::cout << "WM_IME_CHAR=" << WM_IME_CHAR << std::endl;
    std::cout << "WM_IME_COMPOSITION=" << WM_IME_COMPOSITION << std::endl;
    std::cout << "WM_IME_COMPOSITIONFULL=" << WM_IME_COMPOSITIONFULL << std::endl;
    std::cout << "WM_IME_CONTROL=" << WM_IME_CONTROL << std::endl;
    std::cout << "WM_IME_ENDCOMPOSITION=" << WM_IME_ENDCOMPOSITION << std::endl;
    std::cout << "WM_IME_KEYDOWN=" << WM_IME_KEYDOWN << std::endl;
    std::cout << "WM_IME_KEYLAST=" << WM_IME_KEYLAST << std::endl;
    std::cout << "WM_IME_KEYUP=" << WM_IME_KEYUP << std::endl;
    std::cout << "WM_IME_NOTIFY=" << WM_IME_NOTIFY << std::endl;
    std::cout << "WM_IME_REQUEST=" << WM_IME_REQUEST << std::endl;
    std::cout << "WM_IME_SELECT=" << WM_IME_SELECT << std::endl;
    std::cout << "WM_IME_SETCONTEXT=" << WM_IME_SETCONTEXT << std::endl;
    std::cout << "WM_IME_STARTCOMPOSITION=" << WM_IME_STARTCOMPOSITION << std::endl;
    std::cout << "WM_INITDIALOG=" << WM_INITDIALOG << std::endl;
    std::cout << "WM_INITMENU=" << WM_INITMENU << std::endl;
    std::cout << "WM_INITMENUPOPUP=" << WM_INITMENUPOPUP << std::endl;
    std::cout << "WM_INPUT=" << WM_INPUT << std::endl;
    std::cout << "WM_INPUTLANGCHANGE=" << WM_INPUTLANGCHANGE << std::endl;
    std::cout << "WM_INPUTLANGCHANGEREQUEST=" << WM_INPUTLANGCHANGEREQUEST << std::endl;
    std::cout << "WM_KEYDOWN=" << WM_KEYDOWN << std::endl;
    std::cout << "WM_KEYFIRST=" << WM_KEYFIRST << std::endl;
    std::cout << "WM_KEYLAST=" << WM_KEYLAST << std::endl;
    std::cout << "WM_KEYUP=" << WM_KEYUP << std::endl;
    std::cout << "WM_KILLFOCUS=" << WM_KILLFOCUS << std::endl;
    std::cout << "WM_LBUTTONDBLCLK=" << WM_LBUTTONDBLCLK << std::endl;
    std::cout << "WM_LBUTTONDOWN=" << WM_LBUTTONDOWN << std::endl;
    std::cout << "WM_LBUTTONUP=" << WM_LBUTTONUP << std::endl;
    std::cout << "WM_MBUTTONDBLCLK=" << WM_MBUTTONDBLCLK << std::endl;
    std::cout << "WM_MBUTTONDOWN=" << WM_MBUTTONDOWN << std::endl;
    std::cout << "WM_MBUTTONUP=" << WM_MBUTTONUP << std::endl;
    std::cout << "WM_MDIACTIVATE=" << WM_MDIACTIVATE << std::endl;
    std::cout << "WM_MDICASCADE=" << WM_MDICASCADE << std::endl;
    std::cout << "WM_MDICREATE=" << WM_MDICREATE << std::endl;
    std::cout << "WM_MDIDESTROY=" << WM_MDIDESTROY << std::endl;
    std::cout << "WM_MDIGETACTIVE=" << WM_MDIGETACTIVE << std::endl;
    std::cout << "WM_MDIICONARRANGE=" << WM_MDIICONARRANGE << std::endl;
    std::cout << "WM_MDIMAXIMIZE=" << WM_MDIMAXIMIZE << std::endl;
    std::cout << "WM_MDINEXT=" << WM_MDINEXT << std::endl;
    std::cout << "WM_MDIREFRESHMENU=" << WM_MDIREFRESHMENU << std::endl;
    std::cout << "WM_MDIRESTORE=" << WM_MDIRESTORE << std::endl;
    std::cout << "WM_MDISETMENU=" << WM_MDISETMENU << std::endl;
    std::cout << "WM_MDITILE=" << WM_MDITILE << std::endl;
    std::cout << "WM_MEASUREITEM=" << WM_MEASUREITEM << std::endl;
    std::cout << "WM_MENUCHAR=" << WM_MENUCHAR << std::endl;
    std::cout << "WM_MENUCOMMAND=" << WM_MENUCOMMAND << std::endl;
    std::cout << "WM_MENUDRAG=" << WM_MENUDRAG << std::endl;
    std::cout << "WM_MENUGETOBJECT=" << WM_MENUGETOBJECT << std::endl;
    std::cout << "WM_MENURBUTTONUP=" << WM_MENURBUTTONUP << std::endl;
    std::cout << "WM_MENUSELECT=" << WM_MENUSELECT << std::endl;
    std::cout << "WM_MOUSEACTIVATE=" << WM_MOUSEACTIVATE << std::endl;
    std::cout << "WM_MOUSEFIRST=" << WM_MOUSEFIRST << std::endl;
    std::cout << "WM_MOUSEHOVER=" << WM_MOUSEHOVER << std::endl;
    std::cout << "WM_MOUSELAST=" << WM_MOUSELAST << std::endl;
    std::cout << "WM_MOUSELEAVE=" << WM_MOUSELEAVE << std::endl;
    std::cout << "WM_MOUSEMOVE=" << WM_MOUSEMOVE << std::endl;
    std::cout << "WM_MOUSEWHEEL=" << WM_MOUSEWHEEL << std::endl;
    std::cout << "WM_MOVE=" << WM_MOVE << std::endl;
    std::cout << "WM_MOVING=" << WM_MOVING << std::endl;
    std::cout << "WM_NCACTIVATE=" << WM_NCACTIVATE << std::endl;
    std::cout << "WM_NCCALCSIZE=" << WM_NCCALCSIZE << std::endl;
    std::cout << "WM_NCCREATE=" << WM_NCCREATE << std::endl;
    std::cout << "WM_NCDESTROY=" << WM_NCDESTROY << std::endl;
    std::cout << "WM_NCHITTEST=" << WM_NCHITTEST << std::endl;
    std::cout << "WM_NCLBUTTONDBLCLK=" << WM_NCLBUTTONDBLCLK << std::endl;
    std::cout << "WM_NCLBUTTONDOWN=" << WM_NCLBUTTONDOWN << std::endl;
    std::cout << "WM_NCLBUTTONUP=" << WM_NCLBUTTONUP << std::endl;
    std::cout << "WM_NCMBUTTONDBLCLK=" << WM_NCMBUTTONDBLCLK << std::endl;
    std::cout << "WM_NCMBUTTONDOWN=" << WM_NCMBUTTONDOWN << std::endl;
    std::cout << "WM_NCMBUTTONUP=" << WM_NCMBUTTONUP << std::endl;
    std::cout << "WM_NCMOUSEHOVER=" << WM_NCMOUSEHOVER << std::endl;
    std::cout << "WM_NCMOUSELEAVE=" << WM_NCMOUSELEAVE << std::endl;
    std::cout << "WM_NCMOUSEMOVE=" << WM_NCMOUSEMOVE << std::endl;
    std::cout << "WM_NCPAINT=" << WM_NCPAINT << std::endl;
    std::cout << "WM_NCPOINTERDOWN=" << WM_NCPOINTERDOWN << std::endl;
    std::cout << "WM_NCPOINTERUP=" << WM_NCPOINTERUP << std::endl;
    std::cout << "WM_NCPOINTERUPDATE=" << WM_NCPOINTERUPDATE << std::endl;
    std::cout << "WM_NCRBUTTONDBLCLK=" << WM_NCRBUTTONDBLCLK << std::endl;
    std::cout << "WM_NCRBUTTONDOWN=" << WM_NCRBUTTONDOWN << std::endl;
    std::cout << "WM_NCRBUTTONUP=" << WM_NCRBUTTONUP << std::endl;
    std::cout << "WM_NCXBUTTONDBLCLK=" << WM_NCXBUTTONDBLCLK << std::endl;
    std::cout << "WM_NCXBUTTONDOWN=" << WM_NCXBUTTONDOWN << std::endl;
    std::cout << "WM_NCXBUTTONUP=" << WM_NCXBUTTONUP << std::endl;
    std::cout << "WM_NEXTDLGCTL=" << WM_NEXTDLGCTL << std::endl;
    std::cout << "WM_NEXTMENU=" << WM_NEXTMENU << std::endl;
    std::cout << "WM_NOTIFY=" << WM_NOTIFY << std::endl;
    std::cout << "WM_NOTIFYFORMAT=" << WM_NOTIFYFORMAT << std::endl;
    std::cout << "WM_NULL=" << WM_NULL << std::endl;
    std::cout << "WM_PAINT=" << WM_PAINT << std::endl;
    std::cout << "WM_PAINTCLIPBOARD=" << WM_PAINTCLIPBOARD << std::endl;
    std::cout << "WM_PAINTICON=" << WM_PAINTICON << std::endl;
    std::cout << "WM_PALETTECHANGED=" << WM_PALETTECHANGED << std::endl;
    std::cout << "WM_PALETTEISCHANGING=" << WM_PALETTEISCHANGING << std::endl;
    std::cout << "WM_PARENTNOTIFY=" << WM_PARENTNOTIFY << std::endl;
    std::cout << "WM_PASTE=" << WM_PASTE << std::endl;
    std::cout << "WM_PENWINFIRST=" << WM_PENWINFIRST << std::endl;
    std::cout << "WM_PENWINLAST=" << WM_PENWINLAST << std::endl;
    std::cout << "WM_POINTERDEVICECHANGE=" << WM_POINTERDEVICECHANGE << std::endl;
    std::cout << "WM_POINTERDEVICEINRANGE=" << WM_POINTERDEVICEINRANGE << std::endl;
    std::cout << "WM_POINTERDOWN=" << WM_POINTERDOWN << std::endl;
    std::cout << "WM_POINTERENTER=" << WM_POINTERENTER << std::endl;
    std::cout << "WM_POINTERROUTEDAWAY=" << WM_POINTERROUTEDAWAY << std::endl;
    std::cout << "WM_POINTERROUTEDRELEASED=" << WM_POINTERROUTEDRELEASED << std::endl;
    std::cout << "WM_POINTERROUTEDTO=" << WM_POINTERROUTEDTO << std::endl;
    std::cout << "WM_POINTERUP=" << WM_POINTERUP << std::endl;
    std::cout << "WM_POINTERUPDATE=" << WM_POINTERUPDATE << std::endl;
    std::cout << "WM_POWER=" << WM_POWER << std::endl;
    std::cout << "WM_POWERBROADCAST=" << WM_POWERBROADCAST << std::endl;
    std::cout << "WM_PRINT=" << WM_PRINT << std::endl;
    std::cout << "WM_PRINTCLIENT=" << WM_PRINTCLIENT << std::endl;
    std::cout << "WM_PSD_ENVSTAMPRECT=" << WM_PSD_ENVSTAMPRECT << std::endl;
    std::cout << "WM_PSD_FULLPAGERECT=" << WM_PSD_FULLPAGERECT << std::endl;
    std::cout << "WM_PSD_GREEKTEXTRECT=" << WM_PSD_GREEKTEXTRECT << std::endl;
    std::cout << "WM_PSD_MARGINRECT=" << WM_PSD_MARGINRECT << std::endl;
    std::cout << "WM_PSD_MINMARGINRECT=" << WM_PSD_MINMARGINRECT << std::endl;
    std::cout << "WM_PSD_PAGESETUPDLG=" << WM_PSD_PAGESETUPDLG << std::endl;
    std::cout << "WM_PSD_YAFULLPAGERECT=" << WM_PSD_YAFULLPAGERECT << std::endl;
    std::cout << "WM_QUERYDRAGICON=" << WM_QUERYDRAGICON << std::endl;
    std::cout << "WM_QUERYENDSESSION=" << WM_QUERYENDSESSION << std::endl;
    std::cout << "WM_QUERYNEWPALETTE=" << WM_QUERYNEWPALETTE << std::endl;
    std::cout << "WM_QUERYOPEN=" << WM_QUERYOPEN << std::endl;
    std::cout << "WM_QUERYUISTATE=" << WM_QUERYUISTATE << std::endl;
    std::cout << "WM_QUEUESYNC=" << WM_QUEUESYNC << std::endl;
    std::cout << "WM_QUIT=" << WM_QUIT << std::endl;
    std::cout << "WM_RBUTTONDBLCLK=" << WM_RBUTTONDBLCLK << std::endl;
    std::cout << "WM_RBUTTONDOWN=" << WM_RBUTTONDOWN << std::endl;
    std::cout << "WM_RBUTTONUP=" << WM_RBUTTONUP << std::endl;
    std::cout << "WM_RENDERALLFORMATS=" << WM_RENDERALLFORMATS << std::endl;
    std::cout << "WM_RENDERFORMAT=" << WM_RENDERFORMAT << std::endl;
    std::cout << "WM_SETCURSOR=" << WM_SETCURSOR << std::endl;
    std::cout << "WM_SETFOCUS=" << WM_SETFOCUS << std::endl;
    std::cout << "WM_SETFONT=" << WM_SETFONT << std::endl;
    std::cout << "WM_SETHOTKEY=" << WM_SETHOTKEY << std::endl;
    std::cout << "WM_SETICON=" << WM_SETICON << std::endl;
    std::cout << "WM_SETREDRAW=" << WM_SETREDRAW << std::endl;
    std::cout << "WM_SETTEXT=" << WM_SETTEXT << std::endl;
    std::cout << "WM_SETTINGCHANGE=" << WM_SETTINGCHANGE << std::endl;
    std::cout << "WM_SHOWWINDOW=" << WM_SHOWWINDOW << std::endl;
    std::cout << "WM_SIZE=" << WM_SIZE << std::endl;
    std::cout << "WM_SIZECLIPBOARD=" << WM_SIZECLIPBOARD << std::endl;
    std::cout << "WM_SIZING=" << WM_SIZING << std::endl;
    std::cout << "WM_SPOOLERSTATUS=" << WM_SPOOLERSTATUS << std::endl;
    std::cout << "WM_STYLECHANGED=" << WM_STYLECHANGED << std::endl;
    std::cout << "WM_STYLECHANGING=" << WM_STYLECHANGING << std::endl;
    std::cout << "WM_SYNCPAINT=" << WM_SYNCPAINT << std::endl;
    std::cout << "WM_SYSCHAR=" << WM_SYSCHAR << std::endl;
    std::cout << "WM_SYSCOLORCHANGE=" << WM_SYSCOLORCHANGE << std::endl;
    std::cout << "WM_SYSCOMMAND=" << WM_SYSCOMMAND << std::endl;
    std::cout << "WM_SYSDEADCHAR=" << WM_SYSDEADCHAR << std::endl;
    std::cout << "WM_SYSKEYDOWN=" << WM_SYSKEYDOWN << std::endl;
    std::cout << "WM_SYSKEYUP=" << WM_SYSKEYUP << std::endl;
    std::cout << "WM_TCARD=" << WM_TCARD << std::endl;
    std::cout << "WM_THEMECHANGED=" << WM_THEMECHANGED << std::endl;
    std::cout << "WM_TIMECHANGE=" << WM_TIMECHANGE << std::endl;
    std::cout << "WM_TIMER=" << WM_TIMER << std::endl;
    std::cout << "WM_TOUCH=" << WM_TOUCH << std::endl;
    std::cout << "WM_UNDO=" << WM_UNDO << std::endl;
    std::cout << "WM_UNICHAR=" << WM_UNICHAR << std::endl;
    std::cout << "WM_UNINITMENUPOPUP=" << WM_UNINITMENUPOPUP << std::endl;
    std::cout << "WM_UPDATEUISTATE=" << WM_UPDATEUISTATE << std::endl;
    std::cout << "WM_USER=" << WM_USER << std::endl;
    std::cout << "WM_USERCHANGED=" << WM_USERCHANGED << std::endl;
    std::cout << "WM_VKEYTOITEM=" << WM_VKEYTOITEM << std::endl;
    std::cout << "WM_VSCROLL=" << WM_VSCROLL << std::endl;
    std::cout << "WM_VSCROLLCLIPBOARD=" << WM_VSCROLLCLIPBOARD << std::endl;
    std::cout << "WM_WINDOWPOSCHANGED=" << WM_WINDOWPOSCHANGED << std::endl;
    std::cout << "WM_WINDOWPOSCHANGING=" << WM_WINDOWPOSCHANGING << std::endl;
    std::cout << "WM_WININICHANGE=" << WM_WININICHANGE << std::endl;
    std::cout << "WM_WTSSESSION_CHANGE=" << WM_WTSSESSION_CHANGE << std::endl;
    std::cout << "WM_XBUTTONDBLCLK=" << WM_XBUTTONDBLCLK << std::endl;
    std::cout << "WM_XBUTTONDOWN=" << WM_XBUTTONDOWN << std::endl;
    std::cout << "WM_XBUTTONUP=" << WM_XBUTTONUP << std::endl;
    std::cout << "WNCON_DYNAMIC=" << WNCON_DYNAMIC << std::endl;
    std::cout << "WNCON_FORNETCARD=" << WNCON_FORNETCARD << std::endl;
    std::cout << "WNCON_NOTROUTED=" << WNCON_NOTROUTED << std::endl;
    std::cout << "WNCON_SLOWLINK=" << WNCON_SLOWLINK << std::endl;
    std::cout << "WNFMT_ABBREVIATED=" << WNFMT_ABBREVIATED << std::endl;
    std::cout << "WNFMT_CONNECTION=" << WNFMT_CONNECTION << std::endl;
    std::cout << "WNFMT_INENUM=" << WNFMT_INENUM << std::endl;
    std::cout << "WNFMT_MULTILINE=" << WNFMT_MULTILINE << std::endl;
    std::cout << "WNNC_NET_10NET=" << WNNC_NET_10NET << std::endl;
    std::cout << "WNNC_NET_3IN1=" << WNNC_NET_3IN1 << std::endl;
    std::cout << "WNNC_NET_9TILES=" << WNNC_NET_9TILES << std::endl;
    std::cout << "WNNC_NET_APPLETALK=" << WNNC_NET_APPLETALK << std::endl;
    std::cout << "WNNC_NET_BMC=" << WNNC_NET_BMC << std::endl;
    std::cout << "WNNC_NET_BWNFS=" << WNNC_NET_BWNFS << std::endl;
    std::cout << "WNNC_NET_CLEARCASE=" << WNNC_NET_CLEARCASE << std::endl;
    std::cout << "WNNC_NET_COGENT=" << WNNC_NET_COGENT << std::endl;
    std::cout << "WNNC_NET_CSC=" << WNNC_NET_CSC << std::endl;
    std::cout << "WNNC_NET_DCE=" << WNNC_NET_DCE << std::endl;
    std::cout << "WNNC_NET_DECORB=" << WNNC_NET_DECORB << std::endl;
    std::cout << "WNNC_NET_DISTINCT=" << WNNC_NET_DISTINCT << std::endl;
    std::cout << "WNNC_NET_EXTENDNET=" << WNNC_NET_EXTENDNET << std::endl;
    std::cout << "WNNC_NET_FARALLON=" << WNNC_NET_FARALLON << std::endl;
    std::cout << "WNNC_NET_FJ_REDIR=" << WNNC_NET_FJ_REDIR << std::endl;
    std::cout << "WNNC_NET_FRONTIER=" << WNNC_NET_FRONTIER << std::endl;
    std::cout << "WNNC_NET_GOOGLE=" << WNNC_NET_GOOGLE << std::endl;
    std::cout << "WNNC_NET_HOB_NFS=" << WNNC_NET_HOB_NFS << std::endl;
    std::cout << "WNNC_NET_IBMAL=" << WNNC_NET_IBMAL << std::endl;
    std::cout << "WNNC_NET_INTERGRAPH=" << WNNC_NET_INTERGRAPH << std::endl;
    std::cout << "WNNC_NET_LANMAN=" << WNNC_NET_LANMAN << std::endl;
    std::cout << "WNNC_NET_LANSTEP=" << WNNC_NET_LANSTEP << std::endl;
    std::cout << "WNNC_NET_LOCK=" << WNNC_NET_LOCK << std::endl;
    std::cout << "WNNC_NET_LOCUS=" << WNNC_NET_LOCUS << std::endl;
    std::cout << "WNNC_NET_MASFAX=" << WNNC_NET_MASFAX << std::endl;
    std::cout << "WNNC_NET_MFILES=" << WNNC_NET_MFILES << std::endl;
    std::cout << "WNNC_NET_MSNET=" << WNNC_NET_MSNET << std::endl;
    std::cout << "WNNC_NET_MS_NFS=" << WNNC_NET_MS_NFS << std::endl;
    std::cout << "WNNC_NET_NDFS=" << WNNC_NET_NDFS << std::endl;
    std::cout << "WNNC_NET_NETWARE=" << WNNC_NET_NETWARE << std::endl;
    std::cout << "WNNC_NET_OBJECT_DIRE=" << WNNC_NET_OBJECT_DIRE << std::endl;
    std::cout << "WNNC_NET_OPENAFS=" << WNNC_NET_OPENAFS << std::endl;
    std::cout << "WNNC_NET_PROTSTOR=" << WNNC_NET_PROTSTOR << std::endl;
    std::cout << "WNNC_NET_QUINCY=" << WNNC_NET_QUINCY << std::endl;
    std::cout << "WNNC_NET_RDR2SAMPLE=" << WNNC_NET_RDR2SAMPLE << std::endl;
    std::cout << "WNNC_NET_RSFX=" << WNNC_NET_RSFX << std::endl;
    std::cout << "WNNC_NET_SHIVA=" << WNNC_NET_SHIVA << std::endl;
    std::cout << "WNNC_NET_SMB=" << WNNC_NET_SMB << std::endl;
    std::cout << "WNNC_NET_SRT=" << WNNC_NET_SRT << std::endl;
    std::cout << "WNNC_NET_SUN_PC_NFS=" << WNNC_NET_SUN_PC_NFS << std::endl;
    std::cout << "WNNC_NET_SYMFONET=" << WNNC_NET_SYMFONET << std::endl;
    std::cout << "WNNC_NET_TERMSRV=" << WNNC_NET_TERMSRV << std::endl;
    std::cout << "WNNC_NET_TWINS=" << WNNC_NET_TWINS << std::endl;
    std::cout << "WNNC_NET_VINES=" << WNNC_NET_VINES << std::endl;
    std::cout << "WOM_CLOSE=" << WOM_CLOSE << std::endl;
    std::cout << "WOM_DONE=" << WOM_DONE << std::endl;
    std::cout << "WOM_OPEN=" << WOM_OPEN << std::endl;
    std::cout << "WOW64_CONTEXT_EXCEPTION_ACTIVE=" << WOW64_CONTEXT_EXCEPTION_ACTIVE << std::endl;
    std::cout << "WOW64_CONTEXT_EXCEPTION_REPORTING=" << WOW64_CONTEXT_EXCEPTION_REPORTING << std::endl;
    std::cout << "WOW64_CONTEXT_EXCEPTION_REQUEST=" << WOW64_CONTEXT_EXCEPTION_REQUEST << std::endl;
    std::cout << "WOW64_CONTEXT_SERVICE_ACTIVE=" << WOW64_CONTEXT_SERVICE_ACTIVE << std::endl;
    std::cout << "WOW64_MAXIMUM_SUPPORTED_EXTENSION=" << WOW64_MAXIMUM_SUPPORTED_EXTENSION << std::endl;
    std::cout << "WOW64_SIZE_OF_80387_REGISTERS=" << WOW64_SIZE_OF_80387_REGISTERS << std::endl;
    std::cout << "WPF_ASYNCWINDOWPLACEMENT=" << WPF_ASYNCWINDOWPLACEMENT << std::endl;
    std::cout << "WPF_RESTORETOMAXIMIZED=" << WPF_RESTORETOMAXIMIZED << std::endl;
    std::cout << "WPF_SETMINPOSITION=" << WPF_SETMINPOSITION << std::endl;
    std::cout << "WRITE_COMPRESSION_INFO_VALID=" << WRITE_COMPRESSION_INFO_VALID << std::endl;
    std::cout << "WRITE_RESTRICTED=" << WRITE_RESTRICTED << std::endl;
    std::cout << "WRITE_WATCH_FLAG_RESET=" << WRITE_WATCH_FLAG_RESET << std::endl;
    std::cout << "WSAAPI=" << WSAAPI << std::endl;
    std::cout << "WSABASEERR=" << WSABASEERR << std::endl;
    std::cout << "WSADESCRIPTION_LEN=" << WSADESCRIPTION_LEN << std::endl;
    std::cout << "WSAEACCES=" << WSAEACCES << std::endl;
    std::cout << "WSAEADDRINUSE=" << WSAEADDRINUSE << std::endl;
    std::cout << "WSAEADDRNOTAVAIL=" << WSAEADDRNOTAVAIL << std::endl;
    std::cout << "WSAEAFNOSUPPORT=" << WSAEAFNOSUPPORT << std::endl;
    std::cout << "WSAEALREADY=" << WSAEALREADY << std::endl;
    std::cout << "WSAEBADF=" << WSAEBADF << std::endl;
    std::cout << "WSAECANCELLED=" << WSAECANCELLED << std::endl;
    std::cout << "WSAECONNABORTED=" << WSAECONNABORTED << std::endl;
    std::cout << "WSAECONNREFUSED=" << WSAECONNREFUSED << std::endl;
    std::cout << "WSAECONNRESET=" << WSAECONNRESET << std::endl;
    std::cout << "WSAEDESTADDRREQ=" << WSAEDESTADDRREQ << std::endl;
    std::cout << "WSAEDISCON=" << WSAEDISCON << std::endl;
    std::cout << "WSAEDQUOT=" << WSAEDQUOT << std::endl;
    std::cout << "WSAEFAULT=" << WSAEFAULT << std::endl;
    std::cout << "WSAEHOSTDOWN=" << WSAEHOSTDOWN << std::endl;
    std::cout << "WSAEHOSTUNREACH=" << WSAEHOSTUNREACH << std::endl;
    std::cout << "WSAEINPROGRESS=" << WSAEINPROGRESS << std::endl;
    std::cout << "WSAEINTR=" << WSAEINTR << std::endl;
    std::cout << "WSAEINVAL=" << WSAEINVAL << std::endl;
    std::cout << "WSAEINVALIDPROCTABLE=" << WSAEINVALIDPROCTABLE << std::endl;
    std::cout << "WSAEINVALIDPROVIDER=" << WSAEINVALIDPROVIDER << std::endl;
    std::cout << "WSAEISCONN=" << WSAEISCONN << std::endl;
    std::cout << "WSAELOOP=" << WSAELOOP << std::endl;
    std::cout << "WSAEMFILE=" << WSAEMFILE << std::endl;
    std::cout << "WSAEMSGSIZE=" << WSAEMSGSIZE << std::endl;
    std::cout << "WSAENAMETOOLONG=" << WSAENAMETOOLONG << std::endl;
    std::cout << "WSAENETDOWN=" << WSAENETDOWN << std::endl;
    std::cout << "WSAENETRESET=" << WSAENETRESET << std::endl;
    std::cout << "WSAENETUNREACH=" << WSAENETUNREACH << std::endl;
    std::cout << "WSAENOBUFS=" << WSAENOBUFS << std::endl;
    std::cout << "WSAENOMORE=" << WSAENOMORE << std::endl;
    std::cout << "WSAENOPROTOOPT=" << WSAENOPROTOOPT << std::endl;
    std::cout << "WSAENOTCONN=" << WSAENOTCONN << std::endl;
    std::cout << "WSAENOTEMPTY=" << WSAENOTEMPTY << std::endl;
    std::cout << "WSAENOTSOCK=" << WSAENOTSOCK << std::endl;
    std::cout << "WSAEOPNOTSUPP=" << WSAEOPNOTSUPP << std::endl;
    std::cout << "WSAEPFNOSUPPORT=" << WSAEPFNOSUPPORT << std::endl;
    std::cout << "WSAEPROCLIM=" << WSAEPROCLIM << std::endl;
    std::cout << "WSAEPROTONOSUPPORT=" << WSAEPROTONOSUPPORT << std::endl;
    std::cout << "WSAEPROTOTYPE=" << WSAEPROTOTYPE << std::endl;
    std::cout << "WSAEPROVIDERFAILEDINIT=" << WSAEPROVIDERFAILEDINIT << std::endl;
    std::cout << "WSAEREFUSED=" << WSAEREFUSED << std::endl;
    std::cout << "WSAEREMOTE=" << WSAEREMOTE << std::endl;
    std::cout << "WSAESHUTDOWN=" << WSAESHUTDOWN << std::endl;
    std::cout << "WSAESOCKTNOSUPPORT=" << WSAESOCKTNOSUPPORT << std::endl;
    std::cout << "WSAESTALE=" << WSAESTALE << std::endl;
    std::cout << "WSAETIMEDOUT=" << WSAETIMEDOUT << std::endl;
    std::cout << "WSAETOOMANYREFS=" << WSAETOOMANYREFS << std::endl;
    std::cout << "WSAEUSERS=" << WSAEUSERS << std::endl;
    std::cout << "WSAEWOULDBLOCK=" << WSAEWOULDBLOCK << std::endl;
    std::cout << "WSAHOST_NOT_FOUND=" << WSAHOST_NOT_FOUND << std::endl;
    std::cout << "WSANOTINITIALISED=" << WSANOTINITIALISED << std::endl;
    std::cout << "WSANO_ADDRESS=" << WSANO_ADDRESS << std::endl;
    std::cout << "WSANO_DATA=" << WSANO_DATA << std::endl;
    std::cout << "WSANO_RECOVERY=" << WSANO_RECOVERY << std::endl;
    std::cout << "WSASERVICE_NOT_FOUND=" << WSASERVICE_NOT_FOUND << std::endl;
    std::cout << "WSASYSCALLFAILURE=" << WSASYSCALLFAILURE << std::endl;
    std::cout << "WSASYSNOTREADY=" << WSASYSNOTREADY << std::endl;
    std::cout << "WSASYS_STATUS_LEN=" << WSASYS_STATUS_LEN << std::endl;
    std::cout << "WSATRY_AGAIN=" << WSATRY_AGAIN << std::endl;
    std::cout << "WSATYPE_NOT_FOUND=" << WSATYPE_NOT_FOUND << std::endl;
    std::cout << "WSAVERNOTSUPPORTED=" << WSAVERNOTSUPPORTED << std::endl;
    std::cout << "WSA_E_CANCELLED=" << WSA_E_CANCELLED << std::endl;
    std::cout << "WSA_E_NO_MORE=" << WSA_E_NO_MORE << std::endl;
    std::cout << "WSA_QOS_ADMISSION_FAILURE=" << WSA_QOS_ADMISSION_FAILURE << std::endl;
    std::cout << "WSA_QOS_BAD_OBJECT=" << WSA_QOS_BAD_OBJECT << std::endl;
    std::cout << "WSA_QOS_BAD_STYLE=" << WSA_QOS_BAD_STYLE << std::endl;
    std::cout << "WSA_QOS_EFILTERCOUNT=" << WSA_QOS_EFILTERCOUNT << std::endl;
    std::cout << "WSA_QOS_EFILTERSTYLE=" << WSA_QOS_EFILTERSTYLE << std::endl;
    std::cout << "WSA_QOS_EFILTERTYPE=" << WSA_QOS_EFILTERTYPE << std::endl;
    std::cout << "WSA_QOS_EFLOWCOUNT=" << WSA_QOS_EFLOWCOUNT << std::endl;
    std::cout << "WSA_QOS_EFLOWDESC=" << WSA_QOS_EFLOWDESC << std::endl;
    std::cout << "WSA_QOS_EFLOWSPEC=" << WSA_QOS_EFLOWSPEC << std::endl;
    std::cout << "WSA_QOS_EOBJLENGTH=" << WSA_QOS_EOBJLENGTH << std::endl;
    std::cout << "WSA_QOS_EPOLICYOBJ=" << WSA_QOS_EPOLICYOBJ << std::endl;
    std::cout << "WSA_QOS_EPROVSPECBUF=" << WSA_QOS_EPROVSPECBUF << std::endl;
    std::cout << "WSA_QOS_EPSFILTERSPEC=" << WSA_QOS_EPSFILTERSPEC << std::endl;
    std::cout << "WSA_QOS_EPSFLOWSPEC=" << WSA_QOS_EPSFLOWSPEC << std::endl;
    std::cout << "WSA_QOS_ESDMODEOBJ=" << WSA_QOS_ESDMODEOBJ << std::endl;
    std::cout << "WSA_QOS_ESERVICETYPE=" << WSA_QOS_ESERVICETYPE << std::endl;
    std::cout << "WSA_QOS_ESHAPERATEOBJ=" << WSA_QOS_ESHAPERATEOBJ << std::endl;
    std::cout << "WSA_QOS_EUNKNOWNPSOBJ=" << WSA_QOS_EUNKNOWNPSOBJ << std::endl;
    std::cout << "WSA_QOS_EUNKOWNPSOBJ=" << WSA_QOS_EUNKOWNPSOBJ << std::endl;
    std::cout << "WSA_QOS_GENERIC_ERROR=" << WSA_QOS_GENERIC_ERROR << std::endl;
    std::cout << "WSA_QOS_NO_RECEIVERS=" << WSA_QOS_NO_RECEIVERS << std::endl;
    std::cout << "WSA_QOS_NO_SENDERS=" << WSA_QOS_NO_SENDERS << std::endl;
    std::cout << "WSA_QOS_POLICY_FAILURE=" << WSA_QOS_POLICY_FAILURE << std::endl;
    std::cout << "WSA_QOS_RECEIVERS=" << WSA_QOS_RECEIVERS << std::endl;
    std::cout << "WSA_QOS_REQUEST_CONFIRMED=" << WSA_QOS_REQUEST_CONFIRMED << std::endl;
    std::cout << "WSA_QOS_RESERVED_PETYPE=" << WSA_QOS_RESERVED_PETYPE << std::endl;
    std::cout << "WSA_QOS_SENDERS=" << WSA_QOS_SENDERS << std::endl;
    std::cout << "WSA_QOS_TRAFFIC_CTRL_ERROR=" << WSA_QOS_TRAFFIC_CTRL_ERROR << std::endl;
    std::cout << "WS_ACTIVECAPTION=" << WS_ACTIVECAPTION << std::endl;
    std::cout << "WS_CHILDWINDOW=" << WS_CHILDWINDOW << std::endl;
    std::cout << "WS_EX_LAYERED=" << WS_EX_LAYERED << std::endl;
    std::cout << "WS_EX_OVERLAPPEDWINDOW=" << WS_EX_OVERLAPPEDWINDOW << std::endl;
    std::cout << "WS_EX_PALETTEWINDOW=" << WS_EX_PALETTEWINDOW << std::endl;
    std::cout << "WS_ICONIC=" << WS_ICONIC << std::endl;
    std::cout << "WS_OVERLAPPEDWINDOW=" << WS_OVERLAPPEDWINDOW << std::endl;
    std::cout << "WS_POPUPWINDOW=" << WS_POPUPWINDOW << std::endl;
    std::cout << "WS_SIZEBOX=" << WS_SIZEBOX << std::endl;
    std::cout << "WS_TILED=" << WS_TILED << std::endl;
    std::cout << "WS_TILEDWINDOW=" << WS_TILEDWINDOW << std::endl;
    std::cout << "WTS_CONSOLE_CONNECT=" << WTS_CONSOLE_CONNECT << std::endl;
    std::cout << "WTS_CONSOLE_DISCONNECT=" << WTS_CONSOLE_DISCONNECT << std::endl;
    std::cout << "WTS_REMOTE_CONNECT=" << WTS_REMOTE_CONNECT << std::endl;
    std::cout << "WTS_REMOTE_DISCONNECT=" << WTS_REMOTE_DISCONNECT << std::endl;
    std::cout << "WTS_SESSION_LOCK=" << WTS_SESSION_LOCK << std::endl;
    std::cout << "WTS_SESSION_LOGOFF=" << WTS_SESSION_LOGOFF << std::endl;
    std::cout << "WTS_SESSION_LOGON=" << WTS_SESSION_LOGON << std::endl;
    std::cout << "WTS_SESSION_REMOTE_CONTROL=" << WTS_SESSION_REMOTE_CONTROL << std::endl;
    std::cout << "WTS_SESSION_UNLOCK=" << WTS_SESSION_UNLOCK << std::endl;
    std::cout << "WT_EXECUTEDEFAULT=" << WT_EXECUTEDEFAULT << std::endl;
    std::cout << "WT_EXECUTEDELETEWAIT=" << WT_EXECUTEDELETEWAIT << std::endl;
    std::cout << "WT_EXECUTEINIOTHREAD=" << WT_EXECUTEINIOTHREAD << std::endl;
    std::cout << "WT_EXECUTEINLONGTHREAD=" << WT_EXECUTEINLONGTHREAD << std::endl;
    std::cout << "WT_EXECUTEINPERSISTENTIOTHREAD=" << WT_EXECUTEINPERSISTENTIOTHREAD << std::endl;
    std::cout << "WT_EXECUTEINPERSISTENTTHREAD=" << WT_EXECUTEINPERSISTENTTHREAD << std::endl;
    std::cout << "WT_EXECUTEINTIMERTHREAD=" << WT_EXECUTEINTIMERTHREAD << std::endl;
    std::cout << "WT_EXECUTEINUITHREAD=" << WT_EXECUTEINUITHREAD << std::endl;
    std::cout << "WT_EXECUTEINWAITTHREAD=" << WT_EXECUTEINWAITTHREAD << std::endl;
    std::cout << "WT_EXECUTELONGFUNCTION=" << WT_EXECUTELONGFUNCTION << std::endl;
    std::cout << "WT_EXECUTEONLYONCE=" << WT_EXECUTEONLYONCE << std::endl;
    std::cout << "WT_TRANSFER_IMPERSONATION=" << WT_TRANSFER_IMPERSONATION << std::endl;
    std::cout << "WVR_ALIGNBOTTOM=" << WVR_ALIGNBOTTOM << std::endl;
    std::cout << "WVR_ALIGNLEFT=" << WVR_ALIGNLEFT << std::endl;
    std::cout << "WVR_ALIGNRIGHT=" << WVR_ALIGNRIGHT << std::endl;
    std::cout << "WVR_ALIGNTOP=" << WVR_ALIGNTOP << std::endl;
    std::cout << "WVR_HREDRAW=" << WVR_HREDRAW << std::endl;
    std::cout << "WVR_REDRAW=" << WVR_REDRAW << std::endl;
    std::cout << "WVR_VALIDRECTS=" << WVR_VALIDRECTS << std::endl;
    std::cout << "WVR_VREDRAW=" << WVR_VREDRAW << std::endl;
    std::cout << "X3_BTYPE_QP_INST_VAL_POS_X=" << X3_BTYPE_QP_INST_VAL_POS_X << std::endl;
    std::cout << "X3_BTYPE_QP_INST_WORD_POS_X=" << X3_BTYPE_QP_INST_WORD_POS_X << std::endl;
    std::cout << "X3_BTYPE_QP_INST_WORD_X=" << X3_BTYPE_QP_INST_WORD_X << std::endl;
    std::cout << "X3_BTYPE_QP_SIZE_X=" << X3_BTYPE_QP_SIZE_X << std::endl;
    std::cout << "X3_D_WH_INST_WORD_POS_X=" << X3_D_WH_INST_WORD_POS_X << std::endl;
    std::cout << "X3_D_WH_INST_WORD_X=" << X3_D_WH_INST_WORD_X << std::endl;
    std::cout << "X3_D_WH_SIGN_VAL_POS_X=" << X3_D_WH_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_D_WH_SIZE_X=" << X3_D_WH_SIZE_X << std::endl;
    std::cout << "X3_EMPTY_INST_VAL_POS_X=" << X3_EMPTY_INST_VAL_POS_X << std::endl;
    std::cout << "X3_EMPTY_INST_WORD_POS_X=" << X3_EMPTY_INST_WORD_POS_X << std::endl;
    std::cout << "X3_EMPTY_INST_WORD_X=" << X3_EMPTY_INST_WORD_X << std::endl;
    std::cout << "X3_EMPTY_SIZE_X=" << X3_EMPTY_SIZE_X << std::endl;
    std::cout << "X3_IMM20_INST_WORD_POS_X=" << X3_IMM20_INST_WORD_POS_X << std::endl;
    std::cout << "X3_IMM20_INST_WORD_X=" << X3_IMM20_INST_WORD_X << std::endl;
    std::cout << "X3_IMM20_SIGN_VAL_POS_X=" << X3_IMM20_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_IMM20_SIZE_X=" << X3_IMM20_SIZE_X << std::endl;
    std::cout << "X3_IMM39_1_INST_WORD_POS_X=" << X3_IMM39_1_INST_WORD_POS_X << std::endl;
    std::cout << "X3_IMM39_1_INST_WORD_X=" << X3_IMM39_1_INST_WORD_X << std::endl;
    std::cout << "X3_IMM39_1_SIGN_VAL_POS_X=" << X3_IMM39_1_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_IMM39_1_SIZE_X=" << X3_IMM39_1_SIZE_X << std::endl;
    std::cout << "X3_IMM39_2_INST_WORD_POS_X=" << X3_IMM39_2_INST_WORD_POS_X << std::endl;
    std::cout << "X3_IMM39_2_INST_WORD_X=" << X3_IMM39_2_INST_WORD_X << std::endl;
    std::cout << "X3_IMM39_2_SIGN_VAL_POS_X=" << X3_IMM39_2_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_IMM39_2_SIZE_X=" << X3_IMM39_2_SIZE_X << std::endl;
    std::cout << "X3_I_INST_WORD_POS_X=" << X3_I_INST_WORD_POS_X << std::endl;
    std::cout << "X3_I_INST_WORD_X=" << X3_I_INST_WORD_X << std::endl;
    std::cout << "X3_I_SIGN_VAL_POS_X=" << X3_I_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_I_SIZE_X=" << X3_I_SIZE_X << std::endl;
    std::cout << "X3_OPCODE_INST_WORD_POS_X=" << X3_OPCODE_INST_WORD_POS_X << std::endl;
    std::cout << "X3_OPCODE_INST_WORD_X=" << X3_OPCODE_INST_WORD_X << std::endl;
    std::cout << "X3_OPCODE_SIGN_VAL_POS_X=" << X3_OPCODE_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_OPCODE_SIZE_X=" << X3_OPCODE_SIZE_X << std::endl;
    std::cout << "X3_P_INST_WORD_POS_X=" << X3_P_INST_WORD_POS_X << std::endl;
    std::cout << "X3_P_INST_WORD_X=" << X3_P_INST_WORD_X << std::endl;
    std::cout << "X3_P_SIGN_VAL_POS_X=" << X3_P_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_P_SIZE_X=" << X3_P_SIZE_X << std::endl;
    std::cout << "X3_TMPLT_INST_WORD_POS_X=" << X3_TMPLT_INST_WORD_POS_X << std::endl;
    std::cout << "X3_TMPLT_INST_WORD_X=" << X3_TMPLT_INST_WORD_X << std::endl;
    std::cout << "X3_TMPLT_SIGN_VAL_POS_X=" << X3_TMPLT_SIGN_VAL_POS_X << std::endl;
    std::cout << "X3_TMPLT_SIZE_X=" << X3_TMPLT_SIZE_X << std::endl;
    std::cout << "X509_ALGORITHM_IDENTIFIER=" << X509_ALGORITHM_IDENTIFIER << std::endl;
    std::cout << "X509_ALTERNATE_NAME=" << X509_ALTERNATE_NAME << std::endl;
    std::cout << "X509_ANY_STRING=" << X509_ANY_STRING << std::endl;
    std::cout << "X509_ASN_ENCODING=" << X509_ASN_ENCODING << std::endl;
    std::cout << "X509_AUTHORITY_INFO_ACCESS=" << X509_AUTHORITY_INFO_ACCESS << std::endl;
    std::cout << "X509_AUTHORITY_KEY_ID=" << X509_AUTHORITY_KEY_ID << std::endl;
    std::cout << "X509_AUTHORITY_KEY_ID2=" << X509_AUTHORITY_KEY_ID2 << std::endl;
    std::cout << "X509_BASIC_CONSTRAINTS=" << X509_BASIC_CONSTRAINTS << std::endl;
    std::cout << "X509_BASIC_CONSTRAINTS2=" << X509_BASIC_CONSTRAINTS2 << std::endl;
    std::cout << "X509_BIOMETRIC_EXT=" << X509_BIOMETRIC_EXT << std::endl;
    std::cout << "X509_BITS=" << X509_BITS << std::endl;
    std::cout << "X509_BITS_WITHOUT_TRAILING_ZEROES=" << X509_BITS_WITHOUT_TRAILING_ZEROES << std::endl;
    std::cout << "X509_CERT=" << X509_CERT << std::endl;
    std::cout << "X509_CERTIFICATE_TEMPLATE=" << X509_CERTIFICATE_TEMPLATE << std::endl;
    std::cout << "X509_CERT_BUNDLE=" << X509_CERT_BUNDLE << std::endl;
    std::cout << "X509_CERT_CRL_TO_BE_SIGNED=" << X509_CERT_CRL_TO_BE_SIGNED << std::endl;
    std::cout << "X509_CERT_PAIR=" << X509_CERT_PAIR << std::endl;
    std::cout << "X509_CERT_POLICIES=" << X509_CERT_POLICIES << std::endl;
    std::cout << "X509_CERT_REQUEST_TO_BE_SIGNED=" << X509_CERT_REQUEST_TO_BE_SIGNED << std::endl;
    std::cout << "X509_CERT_TO_BE_SIGNED=" << X509_CERT_TO_BE_SIGNED << std::endl;
    std::cout << "X509_CHOICE_OF_TIME=" << X509_CHOICE_OF_TIME << std::endl;
    std::cout << "X509_CRL_DIST_POINTS=" << X509_CRL_DIST_POINTS << std::endl;
    std::cout << "X509_CRL_REASON_CODE=" << X509_CRL_REASON_CODE << std::endl;
    std::cout << "X509_CROSS_CERT_DIST_POINTS=" << X509_CROSS_CERT_DIST_POINTS << std::endl;
    std::cout << "X509_DH_PARAMETERS=" << X509_DH_PARAMETERS << std::endl;
    std::cout << "X509_DH_PUBLICKEY=" << X509_DH_PUBLICKEY << std::endl;
    std::cout << "X509_DSS_PARAMETERS=" << X509_DSS_PARAMETERS << std::endl;
    std::cout << "X509_DSS_PUBLICKEY=" << X509_DSS_PUBLICKEY << std::endl;
    std::cout << "X509_DSS_SIGNATURE=" << X509_DSS_SIGNATURE << std::endl;
    std::cout << "X509_ECC_PARAMETERS=" << X509_ECC_PARAMETERS << std::endl;
    std::cout << "X509_ECC_PRIVATE_KEY=" << X509_ECC_PRIVATE_KEY << std::endl;
    std::cout << "X509_ECC_SIGNATURE=" << X509_ECC_SIGNATURE << std::endl;
    std::cout << "X509_ENHANCED_KEY_USAGE=" << X509_ENHANCED_KEY_USAGE << std::endl;
    std::cout << "X509_ENUMERATED=" << X509_ENUMERATED << std::endl;
    std::cout << "X509_EXTENSIONS=" << X509_EXTENSIONS << std::endl;
    std::cout << "X509_INTEGER=" << X509_INTEGER << std::endl;
    std::cout << "X509_ISSUING_DIST_POINT=" << X509_ISSUING_DIST_POINT << std::endl;
    std::cout << "X509_KEYGEN_REQUEST_TO_BE_SIGNED=" << X509_KEYGEN_REQUEST_TO_BE_SIGNED << std::endl;
    std::cout << "X509_KEY_ATTRIBUTES=" << X509_KEY_ATTRIBUTES << std::endl;
    std::cout << "X509_KEY_USAGE=" << X509_KEY_USAGE << std::endl;
    std::cout << "X509_KEY_USAGE_RESTRICTION=" << X509_KEY_USAGE_RESTRICTION << std::endl;
    std::cout << "X509_LOGOTYPE_EXT=" << X509_LOGOTYPE_EXT << std::endl;
    std::cout << "X509_MULTI_BYTE_INTEGER=" << X509_MULTI_BYTE_INTEGER << std::endl;
    std::cout << "X509_MULTI_BYTE_UINT=" << X509_MULTI_BYTE_UINT << std::endl;
    std::cout << "X509_NAME=" << X509_NAME << std::endl;
    std::cout << "X509_NAME_CONSTRAINTS=" << X509_NAME_CONSTRAINTS << std::endl;
    std::cout << "X509_NAME_VALUE=" << X509_NAME_VALUE << std::endl;
    std::cout << "X509_NDR_ENCODING=" << X509_NDR_ENCODING << std::endl;
    std::cout << "X509_OBJECT_IDENTIFIER=" << X509_OBJECT_IDENTIFIER << std::endl;
    std::cout << "X509_OCTET_STRING=" << X509_OCTET_STRING << std::endl;
    std::cout << "X509_PKIX_POLICY_QUALIFIER_USERNOTICE=" << X509_PKIX_POLICY_QUALIFIER_USERNOTICE << std::endl;
    std::cout << "X509_POLICY_CONSTRAINTS=" << X509_POLICY_CONSTRAINTS << std::endl;
    std::cout << "X509_POLICY_MAPPINGS=" << X509_POLICY_MAPPINGS << std::endl;
    std::cout << "X509_PUBLIC_KEY_INFO=" << X509_PUBLIC_KEY_INFO << std::endl;
    std::cout << "X509_QC_STATEMENTS_EXT=" << X509_QC_STATEMENTS_EXT << std::endl;
    std::cout << "X509_SEQUENCE_OF_ANY=" << X509_SEQUENCE_OF_ANY << std::endl;
    std::cout << "X509_SUBJECT_DIR_ATTRS=" << X509_SUBJECT_DIR_ATTRS << std::endl;
    std::cout << "X509_SUBJECT_INFO_ACCESS=" << X509_SUBJECT_INFO_ACCESS << std::endl;
    std::cout << "X509_UNICODE_ANY_STRING=" << X509_UNICODE_ANY_STRING << std::endl;
    std::cout << "X509_UNICODE_NAME=" << X509_UNICODE_NAME << std::endl;
    std::cout << "X509_UNICODE_NAME_VALUE=" << X509_UNICODE_NAME_VALUE << std::endl;
    std::cout << "X942_DH_PARAMETERS=" << X942_DH_PARAMETERS << std::endl;
    std::cout << "X942_OTHER_INFO=" << X942_OTHER_INFO << std::endl;
    std::cout << "XACT_E_FIRST=" << XACT_E_FIRST << std::endl;
    std::cout << "XACT_E_LAST=" << XACT_E_LAST << std::endl;
    std::cout << "XACT_S_FIRST=" << XACT_S_FIRST << std::endl;
    std::cout << "XACT_S_LAST=" << XACT_S_LAST << std::endl;
    std::cout << "XBUTTON1=" << XBUTTON1 << std::endl;
    std::cout << "XBUTTON2=" << XBUTTON2 << std::endl;
    std::cout << "XCLASS_BOOL=" << XCLASS_BOOL << std::endl;
    std::cout << "XCLASS_DATA=" << XCLASS_DATA << std::endl;
    std::cout << "XCLASS_FLAGS=" << XCLASS_FLAGS << std::endl;
    std::cout << "XCLASS_MASK=" << XCLASS_MASK << std::endl;
    std::cout << "XCLASS_NOTIFICATION=" << XCLASS_NOTIFICATION << std::endl;
    std::cout << "XSTATE_AVX=" << XSTATE_AVX << std::endl;
    std::cout << "XSTATE_GSSE=" << XSTATE_GSSE << std::endl;
    std::cout << "XSTATE_LEGACY_FLOATING_POINT=" << XSTATE_LEGACY_FLOATING_POINT << std::endl;
    std::cout << "XSTATE_LEGACY_SSE=" << XSTATE_LEGACY_SSE << std::endl;
    std::cout << "XSTATE_MASK_AVX=" << XSTATE_MASK_AVX << std::endl;
    std::cout << "XSTATE_MASK_LEGACY=" << XSTATE_MASK_LEGACY << std::endl;
    std::cout << "XST_ADVACKRCVD=" << XST_ADVACKRCVD << std::endl;
    std::cout << "XST_ADVDATAACKRCVD=" << XST_ADVDATAACKRCVD << std::endl;
    std::cout << "XST_ADVDATASENT=" << XST_ADVDATASENT << std::endl;
    std::cout << "XST_ADVSENT=" << XST_ADVSENT << std::endl;
    std::cout << "XST_CONNECTED=" << XST_CONNECTED << std::endl;
    std::cout << "XST_DATARCVD=" << XST_DATARCVD << std::endl;
    std::cout << "XST_EXECACKRCVD=" << XST_EXECACKRCVD << std::endl;
    std::cout << "XST_EXECSENT=" << XST_EXECSENT << std::endl;
    std::cout << "XST_INCOMPLETE=" << XST_INCOMPLETE << std::endl;
    std::cout << "XST_INIT1=" << XST_INIT1 << std::endl;
    std::cout << "XST_INIT2=" << XST_INIT2 << std::endl;
    std::cout << "XST_NULL=" << XST_NULL << std::endl;
    std::cout << "XST_POKEACKRCVD=" << XST_POKEACKRCVD << std::endl;
    std::cout << "XST_POKESENT=" << XST_POKESENT << std::endl;
    std::cout << "XST_REQSENT=" << XST_REQSENT << std::endl;
    std::cout << "XST_UNADVACKRCVD=" << XST_UNADVACKRCVD << std::endl;
    std::cout << "XST_UNADVSENT=" << XST_UNADVSENT << std::endl;
    std::cout << "XTYPF_ACKREQ=" << XTYPF_ACKREQ << std::endl;
    std::cout << "XTYPF_NOBLOCK=" << XTYPF_NOBLOCK << std::endl;
    std::cout << "XTYPF_NODATA=" << XTYPF_NODATA << std::endl;
    std::cout << "XTYP_ADVDATA=" << XTYP_ADVDATA << std::endl;
    std::cout << "XTYP_ADVREQ=" << XTYP_ADVREQ << std::endl;
    std::cout << "XTYP_ADVSTART=" << XTYP_ADVSTART << std::endl;
    std::cout << "XTYP_ADVSTOP=" << XTYP_ADVSTOP << std::endl;
    std::cout << "XTYP_CONNECT=" << XTYP_CONNECT << std::endl;
    std::cout << "XTYP_CONNECT_CONFIRM=" << XTYP_CONNECT_CONFIRM << std::endl;
    std::cout << "XTYP_DISCONNECT=" << XTYP_DISCONNECT << std::endl;
    std::cout << "XTYP_ERROR=" << XTYP_ERROR << std::endl;
    std::cout << "XTYP_EXECUTE=" << XTYP_EXECUTE << std::endl;
    std::cout << "XTYP_MASK=" << XTYP_MASK << std::endl;
    std::cout << "XTYP_MONITOR=" << XTYP_MONITOR << std::endl;
    std::cout << "XTYP_POKE=" << XTYP_POKE << std::endl;
    std::cout << "XTYP_REGISTER=" << XTYP_REGISTER << std::endl;
    std::cout << "XTYP_REQUEST=" << XTYP_REQUEST << std::endl;
    std::cout << "XTYP_SHIFT=" << XTYP_SHIFT << std::endl;
    std::cout << "XTYP_UNREGISTER=" << XTYP_UNREGISTER << std::endl;
    std::cout << "XTYP_WILDCONNECT=" << XTYP_WILDCONNECT << std::endl;
    std::cout << "XTYP_XACT_COMPLETE=" << XTYP_XACT_COMPLETE << std::endl;
    std::cout << "ZERO_PADDING=" << ZERO_PADDING << std::endl;
    std::cout << "_ALLOCA_S_HEAP_MARKER=" << _ALLOCA_S_HEAP_MARKER << std::endl;
    std::cout << "_ALLOCA_S_MARKER_SIZE=" << _ALLOCA_S_MARKER_SIZE << std::endl;
    std::cout << "_ALLOCA_S_STACK_MARKER=" << _ALLOCA_S_STACK_MARKER << std::endl;
    std::cout << "_ALLOCA_S_THRESHOLD=" << _ALLOCA_S_THRESHOLD << std::endl;
    std::cout << "_ALPHA=" << _ALPHA << std::endl;
    std::cout << "_ARGMAX=" << _ARGMAX << std::endl;
    std::cout << "_BLANK=" << _BLANK << std::endl;
    std::cout << "_BSD_RUNE_T_DEFINED_=" << _BSD_RUNE_T_DEFINED_ << std::endl;
    std::cout << "_BSD_SIZE_T_DEFINED_=" << _BSD_SIZE_T_DEFINED_ << std::endl;
    std::cout << "_CALL_REPORTFAULT=" << _CALL_REPORTFAULT << std::endl;
    std::cout << "_CONTROL=" << _CONTROL << std::endl;
    std::cout << "_CRT_PACKING=" << _CRT_PACKING << std::endl;
    std::cout << "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES=" << _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES << std::endl;
    std::cout << "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY=" << _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY << std::endl;
    std::cout << "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=" << _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES << std::endl;
    std::cout << "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=" << _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT << std::endl;
    std::cout << "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY=" << _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY << std::endl;
    std::cout << "_CRT_SWAB_DEFINED=" << _CRT_SWAB_DEFINED << std::endl;
    std::cout << "_CVTBUFSIZE=" << _CVTBUFSIZE << std::endl;
    std::cout << "_DIGIT=" << _DIGIT << std::endl;
    std::cout << "_FORCENAMELESSUNION=" << _FORCENAMELESSUNION << std::endl;
    std::cout << "_FREEENTRY=" << _FREEENTRY << std::endl;
    std::cout << "_HEAPBADBEGIN=" << _HEAPBADBEGIN << std::endl;
    std::cout << "_HEAPBADNODE=" << _HEAPBADNODE << std::endl;
    std::cout << "_HEAPBADPTR=" << _HEAPBADPTR << std::endl;
    std::cout << "_HEAPEMPTY=" << _HEAPEMPTY << std::endl;
    std::cout << "_HEAPEND=" << _HEAPEND << std::endl;
    std::cout << "_HEAPOK=" << _HEAPOK << std::endl;
    std::cout << "_HEAP_CALLOC=" << _HEAP_CALLOC << std::endl;
    std::cout << "_HEAP_EXPAND=" << _HEAP_EXPAND << std::endl;
    std::cout << "_HEAP_FREE=" << _HEAP_FREE << std::endl;
    std::cout << "_HEAP_MALLOC=" << _HEAP_MALLOC << std::endl;
    std::cout << "_HEAP_MAXREQ=" << _HEAP_MAXREQ << std::endl;
    std::cout << "_HEAP_MSIZE=" << _HEAP_MSIZE << std::endl;
    std::cout << "_HEAP_REALLOC=" << _HEAP_REALLOC << std::endl;
    std::cout << "_HEX=" << _HEX << std::endl;
    std::cout << "_I16_MAX=" << _I16_MAX << std::endl;
    std::cout << "_I16_MIN=" << _I16_MIN << std::endl;
    std::cout << "_I32_MAX=" << _I32_MAX << std::endl;
    std::cout << "_I32_MIN=" << _I32_MIN << std::endl;
    std::cout << "_I8_MAX=" << _I8_MAX << std::endl;
    std::cout << "_I8_MIN=" << _I8_MIN << std::endl;
    std::cout << "_LEADBYTE=" << _LEADBYTE << std::endl;
    std::cout << "_LOWER=" << _LOWER << std::endl;
    std::cout << "_MAX_DIR=" << _MAX_DIR << std::endl;
    std::cout << "_MAX_DRIVE=" << _MAX_DRIVE << std::endl;
    std::cout << "_MAX_ENV=" << _MAX_ENV << std::endl;
    std::cout << "_MAX_EXT=" << _MAX_EXT << std::endl;
    std::cout << "_MAX_FNAME=" << _MAX_FNAME << std::endl;
    std::cout << "_MAX_PATH=" << _MAX_PATH << std::endl;
    std::cout << "_MAX_WAIT_MALLOC_CRT=" << _MAX_WAIT_MALLOC_CRT << std::endl;
    std::cout << "_NLSCMPERROR=" << _NLSCMPERROR << std::endl;
    std::cout << "_OUT_TO_DEFAULT=" << _OUT_TO_DEFAULT << std::endl;
    std::cout << "_OUT_TO_MSGBOX=" << _OUT_TO_MSGBOX << std::endl;
    std::cout << "_OUT_TO_STDERR=" << _OUT_TO_STDERR << std::endl;
    std::cout << "_POSIX_ARG_MAX=" << _POSIX_ARG_MAX << std::endl;
    std::cout << "_POSIX_CHILD_MAX=" << _POSIX_CHILD_MAX << std::endl;
    std::cout << "_POSIX_LINK_MAX=" << _POSIX_LINK_MAX << std::endl;
    std::cout << "_POSIX_MAX_CANON=" << _POSIX_MAX_CANON << std::endl;
    std::cout << "_POSIX_MAX_INPUT=" << _POSIX_MAX_INPUT << std::endl;
    std::cout << "_POSIX_NAME_MAX=" << _POSIX_NAME_MAX << std::endl;
    std::cout << "_POSIX_NGROUPS_MAX=" << _POSIX_NGROUPS_MAX << std::endl;
    std::cout << "_POSIX_OPEN_MAX=" << _POSIX_OPEN_MAX << std::endl;
    std::cout << "_POSIX_PATH_MAX=" << _POSIX_PATH_MAX << std::endl;
    std::cout << "_POSIX_PIPE_BUF=" << _POSIX_PIPE_BUF << std::endl;
    std::cout << "_POSIX_SSIZE_MAX=" << _POSIX_SSIZE_MAX << std::endl;
    std::cout << "_POSIX_STREAM_MAX=" << _POSIX_STREAM_MAX << std::endl;
    std::cout << "_POSIX_TZNAME_MAX=" << _POSIX_TZNAME_MAX << std::endl;
    std::cout << "_PUNCT=" << _PUNCT << std::endl;
    std::cout << "_REPORT_ERRMODE=" << _REPORT_ERRMODE << std::endl;
    std::cout << "_RTL_RUN_ONCE_DEF=" << _RTL_RUN_ONCE_DEF << std::endl;
    std::cout << "_SECURECRT_FILL_BUFFER_PATTERN=" << _SECURECRT_FILL_BUFFER_PATTERN << std::endl;
    std::cout << "_SIZE_T_DECLARED=" << _SIZE_T_DECLARED << std::endl;
    std::cout << "_SPACE=" << _SPACE << std::endl;
    std::cout << "_STRALIGN_USE_SECURE_CRT=" << _STRALIGN_USE_SECURE_CRT << std::endl;
    std::cout << "_UPPER=" << _UPPER << std::endl;
    std::cout << "_USEDENTRY=" << _USEDENTRY << std::endl;
    std::cout << "_VA_ALIGN=" << _VA_ALIGN << std::endl;
    std::cout << "_VA_STRUCT_ALIGN=" << _VA_STRUCT_ALIGN << std::endl;
    std::cout << "_WIN32_IE=" << _WIN32_IE << std::endl;
    std::cout << "_WIN32_IE_IE110=" << _WIN32_IE_IE110 << std::endl;
    std::cout << "_WIN32_IE_IE20=" << _WIN32_IE_IE20 << std::endl;
    std::cout << "_WIN32_IE_IE30=" << _WIN32_IE_IE30 << std::endl;
    std::cout << "_WIN32_IE_IE302=" << _WIN32_IE_IE302 << std::endl;
    std::cout << "_WIN32_IE_IE40=" << _WIN32_IE_IE40 << std::endl;
    std::cout << "_WIN32_IE_IE401=" << _WIN32_IE_IE401 << std::endl;
    std::cout << "_WIN32_IE_IE50=" << _WIN32_IE_IE50 << std::endl;
    std::cout << "_WIN32_IE_IE501=" << _WIN32_IE_IE501 << std::endl;
    std::cout << "_WIN32_IE_IE55=" << _WIN32_IE_IE55 << std::endl;
    std::cout << "_WIN32_IE_IE60=" << _WIN32_IE_IE60 << std::endl;
    std::cout << "_WIN32_IE_IE60SP1=" << _WIN32_IE_IE60SP1 << std::endl;
    std::cout << "_WIN32_IE_IE60SP2=" << _WIN32_IE_IE60SP2 << std::endl;
    std::cout << "_WIN32_IE_IE70=" << _WIN32_IE_IE70 << std::endl;
    std::cout << "_WIN32_IE_IE80=" << _WIN32_IE_IE80 << std::endl;
    std::cout << "_WIN32_IE_IE90=" << _WIN32_IE_IE90 << std::endl;
    std::cout << "_WIN32_IE_LONGHORN=" << _WIN32_IE_LONGHORN << std::endl;
    std::cout << "_WIN32_IE_NT4=" << _WIN32_IE_NT4 << std::endl;
    std::cout << "_WIN32_IE_NT4SP1=" << _WIN32_IE_NT4SP1 << std::endl;
    std::cout << "_WIN32_IE_NT4SP2=" << _WIN32_IE_NT4SP2 << std::endl;
    std::cout << "_WIN32_IE_NT4SP3=" << _WIN32_IE_NT4SP3 << std::endl;
    std::cout << "_WIN32_IE_NT4SP4=" << _WIN32_IE_NT4SP4 << std::endl;
    std::cout << "_WIN32_IE_NT4SP5=" << _WIN32_IE_NT4SP5 << std::endl;
    std::cout << "_WIN32_IE_NT4SP6=" << _WIN32_IE_NT4SP6 << std::endl;
    std::cout << "_WIN32_IE_WIN10=" << _WIN32_IE_WIN10 << std::endl;
    std::cout << "_WIN32_IE_WIN2K=" << _WIN32_IE_WIN2K << std::endl;
    std::cout << "_WIN32_IE_WIN2KSP1=" << _WIN32_IE_WIN2KSP1 << std::endl;
    std::cout << "_WIN32_IE_WIN2KSP2=" << _WIN32_IE_WIN2KSP2 << std::endl;
    std::cout << "_WIN32_IE_WIN2KSP3=" << _WIN32_IE_WIN2KSP3 << std::endl;
    std::cout << "_WIN32_IE_WIN2KSP4=" << _WIN32_IE_WIN2KSP4 << std::endl;
    std::cout << "_WIN32_IE_WIN6=" << _WIN32_IE_WIN6 << std::endl;
    std::cout << "_WIN32_IE_WIN7=" << _WIN32_IE_WIN7 << std::endl;
    std::cout << "_WIN32_IE_WIN98=" << _WIN32_IE_WIN98 << std::endl;
    std::cout << "_WIN32_IE_WIN98SE=" << _WIN32_IE_WIN98SE << std::endl;
    std::cout << "_WIN32_IE_WINME=" << _WIN32_IE_WINME << std::endl;
    std::cout << "_WIN32_IE_WINTHRESHOLD=" << _WIN32_IE_WINTHRESHOLD << std::endl;
    std::cout << "_WIN32_IE_WS03=" << _WIN32_IE_WS03 << std::endl;
    std::cout << "_WIN32_IE_WS03SP1=" << _WIN32_IE_WS03SP1 << std::endl;
    std::cout << "_WIN32_IE_XP=" << _WIN32_IE_XP << std::endl;
    std::cout << "_WIN32_IE_XPSP1=" << _WIN32_IE_XPSP1 << std::endl;
    std::cout << "_WIN32_IE_XPSP2=" << _WIN32_IE_XPSP2 << std::endl;
    std::cout << "_WIN32_WINDOWS=" << _WIN32_WINDOWS << std::endl;
    std::cout << "_WIN32_WINNT=" << _WIN32_WINNT << std::endl;
    std::cout << "_WIN32_WINNT_LONGHORN=" << _WIN32_WINNT_LONGHORN << std::endl;
    std::cout << "_WIN32_WINNT_NT4=" << _WIN32_WINNT_NT4 << std::endl;
    std::cout << "_WIN32_WINNT_VISTA=" << _WIN32_WINNT_VISTA << std::endl;
    std::cout << "_WIN32_WINNT_WIN10=" << _WIN32_WINNT_WIN10 << std::endl;
    std::cout << "_WIN32_WINNT_WIN2K=" << _WIN32_WINNT_WIN2K << std::endl;
    std::cout << "_WIN32_WINNT_WIN6=" << _WIN32_WINNT_WIN6 << std::endl;
    std::cout << "_WIN32_WINNT_WIN7=" << _WIN32_WINNT_WIN7 << std::endl;
    std::cout << "_WIN32_WINNT_WIN8=" << _WIN32_WINNT_WIN8 << std::endl;
    std::cout << "_WIN32_WINNT_WINBLUE=" << _WIN32_WINNT_WINBLUE << std::endl;
    std::cout << "_WIN32_WINNT_WINTHRESHOLD=" << _WIN32_WINNT_WINTHRESHOLD << std::endl;
    std::cout << "_WIN32_WINNT_WINXP=" << _WIN32_WINNT_WINXP << std::endl;
    std::cout << "_WIN32_WINNT_WS03=" << _WIN32_WINNT_WS03 << std::endl;
    std::cout << "_WIN32_WINNT_WS08=" << _WIN32_WINNT_WS08 << std::endl;
    std::cout << "_WRITE_ABORT_MSG=" << _WRITE_ABORT_MSG << std::endl;
    std::cout << "__CRT__NO_INLINE=" << __CRT__NO_INLINE << std::endl;
    std::cout << "__GOT_SECURE_LIB__=" << __GOT_SECURE_LIB__ << std::endl;
    std::cout << "__INTRINSIC_GROUP_WINBASE=" << __INTRINSIC_GROUP_WINBASE << std::endl;
    std::cout << "__INTRINSIC_GROUP_WINNT=" << __INTRINSIC_GROUP_WINNT << std::endl;
    std::cout << "__IN__WINERROR_=" << __IN__WINERROR_ << std::endl;
    std::cout << "__MINGW32_MAJOR_VERSION=" << __MINGW32_MAJOR_VERSION << std::endl;
    std::cout << "__MINGW32_MINOR_VERSION=" << __MINGW32_MINOR_VERSION << std::endl;
    std::cout << "__MINGW64_VERSION_BUGFIX=" << __MINGW64_VERSION_BUGFIX << std::endl;
    std::cout << "__MINGW64_VERSION_MAJOR=" << __MINGW64_VERSION_MAJOR << std::endl;
    std::cout << "__MINGW64_VERSION_MINOR=" << __MINGW64_VERSION_MINOR << std::endl;
    std::cout << "__MINGW64_VERSION_RC=" << __MINGW64_VERSION_RC << std::endl;
    std::cout << "__MINGW_DEBUGBREAK_IMPL=" << __MINGW_DEBUGBREAK_IMPL << std::endl;
    std::cout << "__MINGW_HAVE_ANSI_C99_PRINTF=" << __MINGW_HAVE_ANSI_C99_PRINTF << std::endl;
    std::cout << "__MINGW_HAVE_ANSI_C99_SCANF=" << __MINGW_HAVE_ANSI_C99_SCANF << std::endl;
    std::cout << "__MINGW_HAVE_WIDE_C99_PRINTF=" << __MINGW_HAVE_WIDE_C99_PRINTF << std::endl;
    std::cout << "__MINGW_HAVE_WIDE_C99_SCANF=" << __MINGW_HAVE_WIDE_C99_SCANF << std::endl;
    std::cout << "__MSWSOCK_WS1_SHARED=" << __MSWSOCK_WS1_SHARED << std::endl;
    std::cout << "__REQUIRED_RPCNDR_H_VERSION__=" << __REQUIRED_RPCNDR_H_VERSION__ << std::endl;
    std::cout << "__RPCNDR_H_VERSION__=" << __RPCNDR_H_VERSION__ << std::endl;
    std::cout << "__SIZEOF_INT128__=" << __SIZEOF_INT128__ << std::endl;
    std::cout << "__SIZE_T__=" << __SIZE_T__ << std::endl;
    std::cout << "__STDC_WANT_SECURE_LIB__=" << __STDC_WANT_SECURE_LIB__ << std::endl;
    std::cout << "__USE_MINGW_ANSI_STDIO=" << __USE_MINGW_ANSI_STDIO << std::endl;
    std::cout << "__USE_MINGW_STRTOX=" << __USE_MINGW_STRTOX << std::endl;
    std::cout << "__WCHAR_T__=" << __WCHAR_T__ << std::endl;
    std::cout << "__WINSOCK_WS1_SHARED=" << __WINSOCK_WS1_SHARED << std::endl;

    return 0;
}